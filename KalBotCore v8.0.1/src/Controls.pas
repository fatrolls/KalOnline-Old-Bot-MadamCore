//***************************************
//IDR home page: http://kpnc.org/idr32/en
//Decompiled by IDR v.01.04.2017
//***************************************
unit Controls;

interface

uses
  SysUtils, Classes, Controls, Graphics, Menus, Dialogs;

type
  TAlign = (alNone, alTop, alBottom, alLeft, alRight, alClient, alCustom);
  TDragObject = class(TObject)
  public
    FDragTarget:Pointer;//f4
    FDragHandle:HWND;//f8
    FDragPos:TPoint;//fC
    FDragTargetPos:TPoint;//f14
    FDropped:Boolean;//f1C
    FMouseDeltaX:Double;//f20
    f24:dword;//f24
    FMouseDeltaY:Double;//f28
    f2C:dword;//f2C
    FCancelling:Boolean;//f30
    procedure AfterConstruction; virtual;//004C7900
    procedure BeforeDestruction; virtual;//004C78E4
    //procedure v0(?:?; ?:?); virtual;//v0//004C769C
    //function v4(?:?; ?:?):?; virtual;//v4//004C7830
    //function v8:?; virtual;//v8//004C7818
    //procedure vC(?:?); virtual;//vC//004C7708
    //procedure v10(?:?); virtual;//v10//004C7600
    //procedure v14(?:?); virtual;//v14//004C76B4
    procedure v18; virtual;//v18//004C7860
    //function v1C:?; virtual;//v1C//004C786C
    procedure v20; virtual;//v20//004C7884
  end;
  TDragObjectEx = class(TDragObject)
  public
    procedure BeforeDestruction; virtual;//004C791C
  end;
  TBaseDragControlObject = class(TDragObject)
  public
    .....................................FControl:TControl;//f38
    //procedure v0(?:?; ?:?; ?:?; ?:?); virtual;//v0//004C79D8
    //procedure v10(?:?); virtual;//v10//004C796C
    //procedure v24(?:?; ?:?; ?:?); virtual;//v24//004C79A8
    constructor Create; virtual;//v28//004C7928
  end;
  TDragControlObject = class(TBaseDragControlObject)
  public
    //function v4(?:?; ?:?):?; virtual;//v4//004C7A20
    //function v8:?; virtual;//v8//004C7A58
    procedure v18; virtual;//v18//004C7A78
    procedure v20; virtual;//v20//004C7AA4
  end;
  TDragControlObjectEx = class(TDragControlObject)
  public
    procedure BeforeDestruction; virtual;//004C7AD0
  end;
  TDragDockObject = class(TBaseDragControlObject)
  public
    FBrush:TBrush;//f40
    FDockRect:TRect;//f44
    FDropAlign:TAlign;//f54
    FDropOnControl:TControl;//f58
    FEraseDockRect:TRect;//f5C
    FFloating:Boolean;//f6C
    destructor Destroy; virtual;//004C7B50
    //function v4(?:?; ?:?):?; virtual;//v4//004C7D6C
    //procedure v10(?:?); virtual;//v10//004C7B8C
    //procedure v24(?:?; ?:?; ?:?); virtual;//v24//004C7C14
    constructor Create; virtual;//v28//004C7ADC
    //procedure v2C(?:?); virtual;//v2C//004C7C7C
    procedure v30; virtual;//v30//004C7D2C
    procedure v34; virtual;//v34//004C7D4C
    //function v38:?; virtual;//v38//004C7D8C
  end;
  TDragDockObjectEx = class(TDragDockObject)
  public
    procedure BeforeDestruction; virtual;//004C7DA4
  end;
  TControlCanvas = class(TCanvas)
  public
    FControl:TControl;//f58
    FDeviceContext:HDC;//f5C
    FWindowHandle:HWND;//f60
    destructor Destroy; virtual;//004C91EC
    procedure v14; virtual;//v14//004C9228
    procedure FreeHandle;//004C92D4
  end;
  TControlActionLink = class(TActionLink)
  public
    .................FClient:TControl;//f18
    //procedure v0(?:?); virtual;//v0//004C957C
    //function v8:?; virtual;//v8//004C9808
    //procedure v10(?:?; ?:?); virtual;//v10//004C98F8
    //function v20:?; virtual;//v20//004C96A4
    //function v28:?; virtual;//v28//004C9728
    //function v34:?; virtual;//v34//004C9928
    //function v38:?; virtual;//v38//004C9774
    //function v44:?; virtual;//v44//004C97C0
    //procedure v4C(?:?); virtual;//v4C//004C9844
    //procedure v54(?:?); virtual;//v54//004C9870
    //procedure v5C(?:?); virtual;//v5C//004C99D8
    //procedure v60(?:?); virtual;//v60//004C99AC
    //procedure v64(?:?); virtual;//v64//004C9A04
    //procedure v68(?:?); virtual;//v68//004C989C
    //procedure v74(?:?); virtual;//v74//004C98CC
    //function v78(?:?):?; virtual;//v78//004C95A0
  end;
  TMouseButton = (mbLeft, mbRight, mbMiddle);
  TDragMode = (dmManual, dmAutomatic);
  TDragState = (dsDragEnter, dsDragLeave, dsDragMove);
  TDragKind = (dkDrag, dkDock);
  TAnchorKind = (akLeft, akTop, akRight, akBottom);
  TAnchors = set of TAnchorKind;
  TSizeConstraints = class(TPersistent)
  public
    FControl:TControl;//f4
    MaxHeight:TConstraintSize;//f8
    MaxWidth:TConstraintSize;//fC
    MinHeight:TConstraintSize;//f10
    MinWidth:TConstraintSize;//f14
    FOnChange:TNotifyEvent;//f18
    f1A:word;//f1A
    f1C:TControl;//f1C
    //procedure v0(?:?); virtual;//v0//004C93D0
    procedure vC; virtual;//vC//004C9558
    constructor Create; virtual;//v10//004C9380
    procedure SetMaxHeight(Value:TConstraintSize; ?:Integer);//004C9438
  end;
  TMouseEvent = procedure(Sender:TObject; Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer) of object;;
  TMouseMoveEvent = procedure(Sender:TObject; Shift:TShiftState; X:Integer; Y:Integer) of object;;
  TKeyEvent = procedure(Sender:TObject; var Key:Word; Shift:TShiftState) of object;;
  TKeyPressEvent = procedure(Sender:TObject; var Key:Char) of object;;
  TDragOverEvent = procedure(Sender:TObject; Source:TObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean) of object;;
  TDragDropEvent = procedure(Sender:TObject; Source:TObject; X:Integer; Y:Integer) of object;;
  TStartDragEvent = procedure(Sender:TObject; var DragObject:TDragObject) of object;;
  TEndDragEvent = procedure(Sender:TObject; Target:TObject; X:Integer; Y:Integer) of object;;
  TDockDropEvent = procedure(Sender:TObject; Source:TDragDockObject; X:Integer; Y:Integer) of object;;
  TDockOverEvent = procedure(Sender:TObject; Source:TDragDockObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean) of object;;
  TUnDockEvent = procedure(Sender:TObject; Client:TControl; NewTarget:TWinControl; var Allow:Boolean) of object;;
  TStartDockEvent = procedure(Sender:TObject; var DragObject:TDragDockObject) of object;;
  TGetSiteInfoEvent = procedure(Sender:TObject; DockClient:TControl; var InfluenceRect:TRect; MousePos:TPoint; var CanDock:Boolean) of object;;
  TCanResizeEvent = procedure(Sender:TObject; var NewWidth:Integer; var NewHeight:Integer; var Resize:Boolean) of object;;
  TConstrainedResizeEvent = procedure(Sender:TObject; var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer) of object;;
  TMouseWheelEvent = procedure(Sender:TObject; Shift:TShiftState; WheelDelta:Integer; MousePos:TPoint; var Handled:Boolean) of object;;
  TMouseWheelUpDownEvent = procedure(Sender:TObject; Shift:TShiftState; MousePos:TPoint; var Handled:Boolean) of object;;
  TContextPopupEvent = procedure(Sender:TObject; MousePos:TPoint; var Handled:Boolean) of object;;
  TControl = class(TComponent)
  public
    FParent:TWinControl;//f30
    FWindowProc:TWndMethod;//f38
    f3C:TControl;//f3C
    Left:Integer;//f40
    Top:Integer;//f44
    Width:Integer;//f48
    Height:Integer;//f4C
    FControlStyle:TControlStyle;//f50
    f51:byte;//f51
    f52:byte;//f52
    FControlState:TControlState;//f54
    f55:byte;//f55
    FDesktopFont:Boolean;//f56
    FVisible:Boolean;//f57
    FEnabled:Boolean;//f58
    FParentFont:Boolean;//f59
    FParentColor:Boolean;//f5A
    FAlign:TAlign;//f5B
    FAutoSize:Boolean;//f5C
    FDragMode:TDragMode;//f5D
    FIsControl:Boolean;//f5E
    FBiDiMode:TBiDiMode;//f5F
    FParentBiDiMode:Boolean;//f60
    FAnchors:TAnchors;//f61
    FAnchorMove:Boolean;//f62
    FText:PChar;//f64
    FFont:TFont;//f68
    FActionLink:TControlActionLink;//f6C
    FColor:TColor;//f70
    FConstraints:TSizeConstraints;//f74
    Cursor:TCursor;//f78
    FDragCursor:TCursor;//f7A
    FPopupMenu:TPopupMenu;//f7C
    Hint:String;//f80
    FFontHeight:Integer;//f84
    FAnchorRules:TPoint;//f88
    FOriginalParentSize:TPoint;//f90
    FScalingFlags:TScalingFlags;//f98
    FShowHint:Boolean;//f99
    FParentShowHint:Boolean;//f9A
    FDragKind:TDragKind;//f9B
    FDockOrientation:TDockOrientation;//f9C
    FHostDockSite:TWinControl;//fA0
    FWheelAccumulator:Integer;//fA4
    FUndockWidth:Integer;//fA8
    FUndockHeight:Integer;//fAC
    FLRDockWidth:Integer;//fB0
    FTBDockHeight:Integer;//fB4
    FFloatingDockSiteClass:TWinControlClass;//fB8
    FOnCanResize:TCanResizeEvent;//fC0
    fC2:word;//fC2
    fC4:dword;//fC4
    FOnConstrainedResize:TConstrainedResizeEvent;//fC8
    fCA:word;//fCA
    fCC:dword;//fCC
    FOnMouseDown:TMouseEvent;//fD0
    fD2:word;//fD2
    fD4:dword;//fD4
    FOnMouseMove:TMouseMoveEvent;//fD8
    fDA:word;//fDA
    fDC:dword;//fDC
    FOnMouseUp:TMouseEvent;//fE0
    fE2:word;//fE2
    fE4:dword;//fE4
    FOnDragDrop:TDragDropEvent;//fE8
    fEA:word;//fEA
    fEC:dword;//fEC
    FOnDragOver:TDragOverEvent;//fF0
    fF2:word;//fF2
    fF4:dword;//fF4
    FOnResize:TNotifyEvent;//fF8
    fFA:word;//fFA
    fFC:dword;//fFC
    FOnStartDock:TStartDockEvent;//f100
    f102:word;//f102
    f104:dword;//f104
    FOnEndDock:TEndDragEvent;//f108
    f10A:word;//f10A
    f10C:dword;//f10C
    FOnStartDrag:TStartDragEvent;//f110
    f112:word;//f112
    f114:dword;//f114
    FOnEndDrag:TEndDragEvent;//f118
    f11A:word;//f11A
    f11C:dword;//f11C
    FOnClick:TNotifyEvent;//f120
    f122:word;//f122
    f124:TMessageForm;//f124
    FOnDblClick:TNotifyEvent;//f128
    f12A:word;//f12A
    f12C:dword;//f12C
    FOnContextPopup:TContextPopupEvent;//f130
    f132:word;//f132
    f134:dword;//f134
    FOnMouseWheel:TMouseWheelEvent;//f138
    f13A:word;//f13A
    f13C:dword;//f13C
    FOnMouseWheelDown:TMouseWheelUpDownEvent;//f140
    f142:word;//f142
    f144:dword;//f144
    FOnMouseWheelUp:TMouseWheelUpDownEvent;//f148
    f14A:word;//f14A
    f14C:dword;//f14C
    HelpType:THelpType;//f150
    HelpKeyword:String;//f154
    HelpContext:THelpContext;//f158
    procedure DefaultHandler(var Message:void ); virtual;//004CCB10
    destructor Destroy; virtual;//004C9B58
    //procedure v0(?:?); virtual;//v0//004CDCD8
    procedure DefineProperties(Filer:TFiler); virtual;//v4//004CCC5C
    procedure Loaded; virtual;//vC//004CDC98
    procedure Notification(AComponent:TComponent; Operation:TOperation); virtual;//v10//004C9FD4
    //procedure v14(?:?); virtual;//v14//004C9F28
    //procedure v18(?:?); virtual;//v18//004CAC68
    constructor v2C; virtual;//v2C//004C9A30
    //function v30(?:?; ?:?):?; virtual;//v30//004CC500
    //function v34(?:?; ?:?):?; virtual;//v34//004CC4E4
    //procedure v38(?:?; ?:?; ?:?; ?:?); virtual;//v38//004CC5FC
    function GetAction:TBasicAction; virtual;//v3C//004C9D90
    //procedure v40(?:?); virtual;//v40//004CA81C
    //procedure v44(?:?); virtual;//v44//004CA73C
    //function v48(?:?):?; virtual;//v48//004CB4F8
    //function v4C:?; virtual;//v4C//004C9C40
    function GetEnabled:Boolean; virtual;//v50//004C9C58
    //function v54:?; virtual;//v54//004CDEBC
    //function v58:?; virtual;//v58//004CDF00
    procedure SetAutoSize(Value:Boolean); virtual;//v5C//004CAC30
    procedure SetDragMode(Value:TDragMode); virtual;//v60//004C9EBC
    procedure SetEnabled(Value:Boolean); virtual;//v64//004CAE3C
    //procedure v68(?:?); virtual;//v68//004CAD7C
    procedure SetParentBiDiMode(Value:Boolean); virtual;//v6C//004CB2F0
    procedure SetBiDiMode(Value:TBiDiMode); virtual;//v70//004CB048
    //procedure v74(?:?); virtual;//v74//004CC928
    procedure v78; virtual;//v78//004CDFD8
    procedure v7C; virtual;//v7C//004CB6E8
    procedure v80; virtual;//v80//004CB7F8
    //procedure v84(?:?; ?:?; ?:?; ?:?); virtual;//v84//004CA110
    procedure v88; virtual;//v88//004CB7BC
    //procedure WMCancelMode(?:?); message WM_CANCELMODE;//004CD388
    //procedure WMWindowPosChangedMsg(?:?); message WM_WINDOWPOSCHANGED;//004CD3E0
    //procedure WMContextMenu(?:?); message WM_CONTEXTMENU;//004CE034
    //procedure WMNCLButtonDown(?:?); message WM_NCLBUTTONDOWN;//004CCEB4
    //procedure WMMouseMove(?:?); message WM_MOUSEMOVE;//004CD118
    //procedure WMLButtonDown(?:?); message WM_LBUTTONDOWN;//004CCE50
    //procedure WMLButtonUp(?:?); message WM_LBUTTONUP;//004CD244
    //procedure WMLButtonDblClk(?:?); message WM_LBUTTONDBLCLK;//004CCEDC
    //procedure WMRButtonDown(?:?); message WM_RBUTTONDOWN;//004CD004
    //procedure WMRButtonUp(?:?); message WM_RBUTTONUP;//004CD2CC
    //procedure WMRButtonDblClk(?:?); message WM_RBUTTONDBLCLK;//004CD038
    //procedure WMMButtonDown(?:?); message WM_MBUTTONDOWN;//004CD06C
    //procedure WMMButtonUp(?:?); message WM_MBUTTONUP;//004CD2F4
    //procedure WMMButtonDblClk(?:?); message WM_MBUTTONDBLCLK;//004CD0A0
    //procedure WMMouseWheel(?:?); message WM_MOUSEWHEEL;//004CD31C
    //procedure CMParentFontChanged(?:?); message CM_PARENTFONTCHANGED;//004CD704
    //procedure CMParentColorChanged(?:?); message CM_PARENTCOLORCHANGED;//004CD590
    //procedure CMHitTest(?:?); message CM_HITTEST;//004CD788
    //procedure CMVisibleChanged(?:?); message CM_VISIBLECHANGED;//004CD504
    //procedure CMEnabledChanged(?:?); message CM_ENABLEDCHANGED;//004CD548
    //procedure CMColorChanged(?:?); message CM_COLORCHANGED;//004CD578
    //procedure CMFontChanged(?:?); message CM_FONTCHANGED;//004CD560
    //procedure CMMouseEnter(?:?); message CM_MOUSEENTER;//004CD7A4
    //procedure CMMouseLeave(?:?); message CM_MOUSELEAVE;//004CD7D4
    //procedure CMDesignHitTest(?:?); message CM_DESIGNHITTEST;//004CD804
    //procedure CMParentShowHintChanged(?:?); message CM_PARENTSHOWHINTCHANGED;//004CD6C8
    //procedure CMHintShow(?:?); message CM_HINTSHOW;//004CDFF8
    //procedure CMSysFontChanged(?:?); message CM_SYSFONTCHANGED;//004CD750
    //procedure CMFloat(?:?); message CM_FLOAT;//004CD97C
    //procedure CMBiDiModeChanged(?:?); message CM_BIDIMODECHANGED;//004CD69C
    //procedure CMParentBiDiModeChanged(?:?); message CM_PARENTBIDIMODECHANGED;//004CD5DC
    //procedure CMMouseWheel(?:?); message CM_MOUSEWHEEL;//004CD618
    procedure sub_004CB93C; dynamic;//004CB93C
    //procedure sub_004CB70C(?:?); dynamic;//004CB70C
    procedure sub_004CB8F8; dynamic;//004CB8F8
    //procedure sub_004CBB18(?:?; ?:?; ?:?); dynamic;//004CBB18
    //procedure sub_004CA46C(?:?; ?:?); dynamic;//004CA46C
    procedure sub_004CC91C; dynamic;//004CC91C
    //procedure sub_004CB4B4(?:?); dynamic;//004CB4B4
    procedure sub_004C9EFC; dynamic;//004C9EFC
    procedure sub_004C9ED8; dynamic;//004C9ED8
    //procedure sub_004C9CFC(?:?); dynamic;//004C9CFC
    //procedure sub_004CBBD4(?:?); dynamic;//004CBBD4
    //procedure sub_004CD1B0(?:?; ?:?; ?:?; ?:?); dynamic;//004CD1B0
    //procedure sub_004CD0D4(?:?; ?:?; ?:?); dynamic;//004CD0D4
    //procedure sub_004CCD68(?:?; ?:?; ?:?; ?:?); dynamic;//004CCD68
    procedure sub_004CCF44; dynamic;//004CCF44
    procedure sub_004C9C74; dynamic;//004C9C74
    //procedure sub_004CDDE8(?:?); dynamic;//004CDDE8
    procedure sub_004CDB48; dynamic;//004CDB48
    //procedure sub_004CC0A8(?:?); dynamic;//004CC0A8
    //procedure sub_004CC084(?:?); dynamic;//004CC084
    //procedure sub_004CBB5C(?:?); dynamic;//004CBB5C
    //procedure sub_004CBB90(?:?; ?:?; ?:?); dynamic;//004CBB90
    //procedure sub_004CBAC0(?:?; ?:?; ?:?; ?:?; ?:?); dynamic;//004CBAC0
    procedure sub_004CBA98; dynamic;//004CBA98
    //procedure sub_004CBEE4(?:?; ?:?); dynamic;//004CBEE4
    //procedure sub_004CBE94(?:?; ?:?); dynamic;//004CBE94
    //procedure sub_004CBD9C(?:?; ?:?; ?:?); dynamic;//004CBD9C
    //procedure sub_004CBD68(?:?); dynamic;//004CBD68
    //procedure sub_004CA5A8(?:?; ?:?); dynamic;//004CA5A8
    //procedure sub_004CBD24(?:?; ?:?; ?:?); dynamic;//004CBD24
    //procedure sub_004CE180(?:?; ?:?); dynamic;//004CE180
    //procedure sub_004CBCFC(?:?; ?:?); dynamic;//004CBCFC
    //procedure sub_004CBF34(?:?; ?:?); dynamic;//004CBF34
    procedure sub_004CCD3C; dynamic;//004CCD3C
    //procedure sub_004CC67C(?:?); dynamic;//004CC67C
    procedure sub_004CCCAC; dynamic;//004CCCAC
    //procedure sub_004CAA18(?:?; ?:?); dynamic;//004CAA18
    procedure sub_004CB99C; dynamic;//004CB99C
    procedure sub_004CDF1C; dynamic;//004CDF1C
    //procedure sub_004CD9E4(?:?; ?:?); dynamic;//004CD9E4
    procedure sub_004834C8; dynamic;//004C9C8C
    procedure sub_00483570; dynamic;//004C9CA8
    //procedure sub_00483588(?:?); dynamic;//004C9CC4
    procedure SetWidth(Value:Integer);//004CA3EC
    procedure SetHeight(Value:Integer);//004CA42C
    procedure SetHelpContext(Value:THelpContext);//004CA618
    procedure SetHelpKeyword(Value:String);//004CA648
    function GetClientWidth:Integer;//004CA774
    function GetClientHeight:Integer;//004CA7C8
    function ClientToScreen(const Point:TPoint):TPoint;//004CA8C0
    function ScreenToClient(const Point:TPoint):TPoint;//004CA8FC
    procedure SetVisible(Value:Boolean);//004CADE8
    function GetText:TCaption;//004CAF9C
    procedure SetText(const Value:TCaption);//004CAFDC
    function GetMouseCapture:Boolean;//004CB374
    procedure Refresh;//004CB7E0
    procedure ReadIsControl(Reader:TReader);//004CCBDC
    procedure WriteIsControl(Writer:TWriter);//004CCBFC
    function IsStoredHint(Value:String):Boolean;//004CDBC8
    function IsStoredHelpKeyword(Value:String):Boolean;//004CDBFC
  end;
  TWinControlActionLink = class(TControlActionLink)
  public
    ...........................FClient:TWinControl;//f20
    //procedure v0(?:?); virtual;//v0//004CE324
    //function v30:?; virtual;//v30//004CE354
    //procedure v5C(?:?); virtual;//v5C//004CE370
  end;
  TImeMode = (imDisable, imClose, imOpen, imDontCare, imSAlpha, imAlpha, imHira, imSKata, imKata, imChinese, imSHanguel, imHanguel);
  TBevelCut = (bvNone, bvLowered, bvRaised, bvSpace);
  TBevelEdge = (beLeft, beTop, beRight, beBottom);
  TBevelEdges = set of TBevelEdge;
  TBevelKind = (bkNone, bkTile, bkSoft, bkFlat);
  TWinControl = class(TControl)
  public
    FAlignLevel:Word;//f160
    FBevelEdges:TBevelEdges;//f162
    FBevelInner:TBevelCut;//f163
    FBevelOuter:TBevelCut;//f164
    FBevelKind:TBevelKind;//f165
    FBevelWidth:TBevelWidth;//f168
    FBorderWidth:TBorderWidth;//f16C
    FBrush:TBrush;//f170
    FDefWndProc:Pointer;//f174
    FDockClients:TList;//f178
    FDockManager:IDockManager;//f17C
    FHandle:HWND;//f180
    FImeMode:TImeMode;//f184
    FImeName:TImeName;//f188
    FObjectInstance:Pointer;//f18C
    FParentWindow:HWND;//f190
    FTabList:TList;//f194
    FControls:TList;//f198
    FWinControls:TList;//f19C
    FTabOrder:Integer;//f1A0
    FTabStop:Boolean;//f1A4
    FCtl3D:Boolean;//f1A5
    FShowing:Boolean;//f1A6
    FUseDockManager:Boolean;//f1A7
    FDockSite:Boolean;//f1A8
    FParentCtl3D:Boolean;//f1A9
    FOnDockDrop:TDockDropEvent;//f1B0
    f1B2:word;//f1B2
    f1B4:dword;//f1B4
    FOnDockOver:TDockOverEvent;//f1B8
    f1BA:word;//f1BA
    f1BC:dword;//f1BC
    FOnEnter:TNotifyEvent;//f1C0
    f1C2:word;//f1C2
    f1C4:dword;//f1C4
    FOnExit:TNotifyEvent;//f1C8
    f1CA:word;//f1CA
    f1CC:dword;//f1CC
    FOnGetSiteInfo:TGetSiteInfoEvent;//f1D0
    f1D2:word;//f1D2
    f1D4:dword;//f1D4
    FOnKeyDown:TKeyEvent;//f1D8
    f1DC:TMessageForm;//f1DC
    FOnKeyPress:TKeyPressEvent;//f1E0
    FOnKeyUp:TKeyEvent;//f1E8
    f1EA:word;//f1EA
    f1EC:dword;//f1EC
    FOnUnDock:TUnDockEvent;//f1F0
    f1F2:word;//f1F2
    f1F4:dword;//f1F4
    FDoubleBuffered:Boolean;//f1F8
    FInImeComposition:Boolean;//f1F9
    FDesignSize:TPoint;//f1FA
    procedure DefaultHandler(var Message:void ); virtual;//004D0840
    destructor Destroy; virtual;//004CE508
    //procedure v0(?:?); virtual;//v0//004D474C
    procedure DefineProperties(Filer:TFiler); virtual;//v4//004CFE28
    //procedure v14(?:?); virtual;//v14//004CE718
    constructor Create(AOwner:TComponent); virtual;//v2C//004CE38C
    //function v30(?:?; ?:?):?; virtual;//v30//004D4174
    //function v34(?:?; ?:?):?; virtual;//v34//004D478C
    //procedure v38(?:?; ?:?; ?:?; ?:?); virtual;//v38//004D469C
    //procedure v40(?:?); virtual;//v40//004D39E8
    //procedure v44(?:?); virtual;//v44//004D3A1C
    //function v48(?:?):?; virtual;//v48//004D35D8
    //procedure v74(?:?); virtual;//v74//004D06A8
    procedure v7C; virtual;//v7C//004D3648
    procedure v80; virtual;//v80//004D3748
    procedure SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer); virtual;//v84//004D307C
    procedure v88; virtual;//v88//004D3720
    //procedure v8C(?:?); virtual;//v8C//004CE790
    procedure AlignControls(AControl:TControl; var Rect:TRect); virtual;//v90//004CEEB8
    procedure v94; virtual;//v94//004CFFC4
    //procedure v98(?:?); virtual;//v98//004CF814
    //procedure v9C(?:?); virtual;//v9C//004CFBB8
    procedure CreateWnd; virtual;//vA0//004CF9A0
    //function vA4(?:?; ?:?):?; virtual;//vA4//004D0084
    //procedure vA8(?:?; ?:?; ?:?); virtual;//vA8//004D00A0
    procedure DestroyWindowHandle; virtual;//vAC//004CFEF4
    procedure vB0; virtual;//vB0//004CFE84
    //procedure vB4(?:?); virtual;//vB4//004D38EC
    //procedure vB8(?:?); virtual;//vB8//004D0B7C
    procedure SetParentBackground(Value:Boolean); virtual;//vBC//004D4FD0
    //procedure vC0(?:?); virtual;//vC0//004D33A8
    procedure vC4; virtual;//vC4//004D3808
    //procedure WMDestroy(?:?); message WM_DESTROY;//004D25B8
    //procedure WMMove(?:?); message WM_MOVE;//004D161C
    procedure WMSize(var Message:TWMSize); message WM_SIZE;//004D15D8
    //procedure WMSetFocus(?:?); message WM_SETFOCUS;//004D177C
    //procedure WMKillFocus(?:?); message WM_KILLFOCUS;//004D17A0
    procedure WMPaint(var Message:TWMPaint); message WM_PAINT;//004D103C
    //procedure WMEraseBkgnd(?:?); message WM_ERASEBKGND;//004D13DC
    //procedure WMSysColorChange(?:?); message WM_SYSCOLORCHANGE;//004D1220
    //procedure WMSettingChange(?:?); message WM_SETTINGCHANGE;//004D1248
    //procedure WMFontChange(?:?); message WM_FONTCHANGE;//004D1274
    //procedure WMTimeChange(?:?); message WM_TIMECHANGE;//004D1298
    //procedure WMSetCursor(?:?); message WM_SETCURSOR;//004D1640
    //procedure WMDrawItem(?:?); message WM_DRAWITEM;//004D137C
    //procedure WMMeasureItem(?:?); message WM_MEASUREITEM;//004D13AC
    //procedure WMDeleteItem(?:?); message WM_DELETEITEM;//004D134C
    //procedure WMVKeyToItem(?:?); message WM_VKEYTOITEM;//004D2588
    //procedure WMCharToItem(?:?); message WM_CHARTOITEM;//004D2514
    //procedure WMCompareItem(?:?); message WM_COMPAREITEM;//004D131C
    //procedure WMWindowPosChangingMsg(?:?); message WM_WINDOWPOSCHANGING;//004D1568
    //procedure WMWindowPosChangedMsg(?:?); message WM_WINDOWPOSCHANGED;//004D1480
    //procedure WMNotify(?:?); message WM_NOTIFY;//004D11F0
    //procedure WMContextMenu(?:?); message WM_CONTEXTMENU;//004D4E64
    //procedure WMNCDestroy(?:?); message WM_NCDESTROY;//004D2604
    //procedure WMNCCalcSize(?:?); message WM_NCCALCSIZE;//004D4AC0
    //procedure WMNCHitTest(?:?); message WM_NCHITTEST;//004D2634
    //procedure WMNCPaint(?:?); message WM_NCPAINT;//004D4BA4
    //procedure WMKeyDown(?:?); message WM_KEYDOWN;//004D211C
    //procedure WMKeyUp(?:?); message WM_KEYUP;//004D2258
    //procedure WMChar(?:?); message WM_CHAR;//004D236C
    //procedure WMSysKeyDown(?:?); message WM_SYSKEYDOWN;//004D2158
    //procedure WMSysKeyUp(?:?); message WM_SYSKEYUP;//004D2284
    //procedure sub_004D17C4(?:?); dynamic;//004D17C4
    //procedure sub_004D17EC(?:?); dynamic;//004D17EC
    //procedure WMCommand(?:?); message WM_COMMAND;//004D11C0
    //procedure WMSysCommand(?:?); message WM_SYSCOMMAND;//004D2460
    //procedure WMHScroll(?:?); message WM_HSCROLL;//004D12BC
    //procedure WMVScroll(?:?); message WM_VSCROLL;//004D12EC
    //procedure WMParentNotify(?:?); message WM_PARENTNOTIFY;//004D2544
    //procedure WMQueryNewPalette(?:?); message WM_QUERYNEWPALETTE;//004D26DC
    //procedure WMPaletteChanged(?:?); message WM_PALETTECHANGED;//004D2710
    //procedure sub_004D4F60(?:?); dynamic;//004D4F60
    //procedure CMDialogKey(?:?); message CM_DIALOGKEY;//004D28CC
    //procedure CMDialogChar(?:?); message CM_DIALOGCHAR;//004D28E8
    //procedure CMFocusChenged(?:?); message CM_FOCUSCHANGED;//004D2904
    //procedure CMVisibleChanged(?:?); message CM_VISIBLECHANGED;//004D2920
    //procedure CMEnabledChanged(?:?); message CM_ENABLEDCHANGED;//004D29A4
    //procedure CMColorChanged(?:?); message CM_COLORCHANGED;//004D2A04
    //procedure CMFontChanged(?:?); message CM_FONTCHANGED;//004D2A40
    //procedure CMCursorChanged(?:?); message CM_CURSORCHANGED;//004D2A90
    //procedure CMCtl3DChanged(?:?); message CM_CTL3DCHANGED;//004D2B30
    //procedure CMParentCtl3DChanged(?:?); message CM_PARENTCTL3DCHANGED;//004D2B88
    //procedure CMShowingChanged(?:?); message CM_SHOWINGCHANGED;//004D2968
    //procedure CMEnter(?:?); message CM_ENTER;//004D27A8
    procedure CMExit(var Message:TWMNoParams); message CM_EXIT;//004D2828
    //procedure CMDesignHitTest(?:?); message CM_DESIGNHITTEST;//004D2848
    //procedure CMShowHintChanged(?:?); message CM_SHOWHINTCHANGED;//004D273C
    //procedure CMSysColorChange(?:?); message CM_SYSCOLORCHANGE;//004D2BE0
    //procedure CMWinIniChange(?:?); message CM_WININICHANGE;//004D2BFC
    //procedure CMFontChange(?:?); message CM_FONTCHANGE;//004D2C18
    //procedure CMTimeChange(?:?); message CM_TIMECHANGE;//004D2C34
    //procedure CMControlLIstChange(?:?); message CM_CONTROLLISTCHANGE;//004D2CCC
    //procedure CMChildKey(?:?); message CM_CHILDKEY;//004D28A0
    //procedure CMDrag(?:?); message CM_DRAG;//004D2C50
    //procedure CMRecreateWnd(?:?); message CM_RECREATEWND;//004D0158
    //procedure CMInvalidate(?:?); message CM_INVALIDATE;//004D3664
    //procedure CMSysFontChanged(?:?); message CM_SYSFONTCHANGED;//004D2CF8
    //procedure CMChanged(?:?); message CM_CHANGED;//004D2874
    //procedure CMDockClient(?:?); message CM_DOCKCLIENT;//004D1E90
    //procedure CMUndockClient(?:?); message CM_UNDOCKCLIENT;//004D1F8C
    //procedure CMFloat(?:?); message CM_FLOAT;//004D1FD0
    //procedure CMBorderChanged(?:?); message CM_BORDERCHANGED;//004D2ADC
    procedure CMBiDiModeChanged(var Message:TMessage); message CM_BIDIMODECHANGED;//004D2764
    //procedure sub_004D2DD4(?:?); dynamic;//004D2DD4
    //procedure sub_004D2EEC(?:?); dynamic;//004D2EEC
    //procedure sub_004D2F50(?:?); dynamic;//004D2F50
    //procedure sub_004D2FB4(?:?); dynamic;//004D2FB4
    //procedure sub_004D3030(?:?); dynamic;//004D3030
    //procedure sub_004D3E94(?:?); dynamic;//004D3E94
    procedure sub_004D3858; dynamic;//004D3858
    //procedure sub_004CF1A4(?:?); dynamic;//004CF1A4
    //procedure sub_004D1A50(?:?; ?:?; ?:?); dynamic;//004D1A50
    procedure sub_004D37A8; dynamic;//004D37A8
    //procedure sub_004D1BB4(?:?; ?:?); dynamic;//004D1BB4
    procedure KeyPress(var Key:Char); dynamic;//004D22B0
    //procedure sub_004D2194(?:?; ?:?); dynamic;//004D2194
    procedure KeyDown(var Key:Word; Shift:TShiftState); dynamic;//004D2058
    //procedure sub_004D1C58(?:?; ?:?; ?:?; ?:?); dynamic;//004D1C58
    //procedure sub_004D1B44(?:?; ?:?); dynamic;//004D1B44
    //procedure sub_004D19E8(?:?); dynamic;//004D19E8
    procedure sub_004CF0B0; dynamic;//004CF0B0
    procedure sub_004D1A24; dynamic;//004D1A24
    procedure sub_004D19F8; dynamic;//004D19F8
    //procedure sub_004D1AB4(?:?; ?:?; ?:?; ?:?; ?:?); dynamic;//004D1AB4
    //procedure sub_004D1B00(?:?; ?:?; ?:?; ?:?; ?:?); dynamic;//004D1B00
    //procedure sub_004D19C8(?:?; ?:?); dynamic;//004D19C8
    //procedure sub_004D1D24(?:?); dynamic;//004D1D24
    procedure sub_004D1D18; dynamic;//004D1D18
    //procedure sub_004CB4B4(?:?); dynamic;//004D3534
    //procedure sub_004C9CFC(?:?); dynamic;//004D2670
    procedure sub_004CDB48; dynamic;//004D4734
    //procedure sub_004CAA18(?:?; ?:?); dynamic;//004D31E0
    procedure sub_004CDF1C; dynamic;//004D3A40
    //procedure sub_004CD9E4(?:?; ?:?); dynamic;//004D46E0
    //procedure sub_0048355C(?:?; ?:?); dynamic;//004D4124
    //procedure sub_004834DC(?:?; ?:?); dynamic;//004D40D0
    procedure DisableAlign;//004CF054
    procedure EnableAlign;//004CF068
    procedure ReadDesignSize(Reader:TReader);//004CFC24
    procedure WriteDesignSize(Writer:TWriter);//004CFC70
    procedure RecreateWnd;//004D0130
    procedure PaintHandler(var Message:TWMPaint);//004D0A10
    function GetHandle:HWND;//004D38C8
    function HandleAllocated:Boolean;//004D3D98
  end;
  TGraphicControl = class(TControl)
  public
    ............................................................................................................................................................................................................................................FCanvas:TCanvas;//f160
    destructor Destroy; virtual;//004D5098
    constructor Create(AOwner:TComponent); virtual;//v2C//004D5028
    procedure v8C; virtual;//v8C//004D5198
    //procedure WMPaint(?:?); message WM_PAINT;//004D50E8
  end;
  TCustomControl = class(TWinControl)
  public
    ................................FCanvas:TCanvas;//f208
    destructor Destroy; virtual;//004D5D40
    constructor Create(AOwner:TComponent); virtual;//v2C//004D5CD0
    //procedure vB8(?:?); virtual;//vB8//004D5DB0
    procedure vC8; virtual;//vC8//004D5E5C
    procedure WMPaint(Message:TWMPaint); message WM_PAINT;//004D5D80
  end;
  THintWindow = class(TCustomControl)
  public
    FActivating:Boolean;//f210
    FLastActive:Cardinal;//f214
    constructor Create(AOwner:TComponent); virtual;//v2C//004D51A4
    //procedure v98(?:?); virtual;//v98//004D5228
    procedure vC8; virtual;//vC8//004D5328
    //procedure vCC(?:?); virtual;//vCC//004D57E8
    //procedure vD0(?:?; ?:?); virtual;//vD0//004D5534
    //procedure vD4(?:?; ?:?); virtual;//vD4//004D574C
    //procedure vD8(?:?; ?:?; ?:?); virtual;//vD8//004D5780
    //function vDC(?:?):?; virtual;//vDC//004D53D8
    //procedure WMNCHitTest(?:?); message WM_NCHITTEST;//004D52A8
    //procedure WMNCPaint(?:?); message WM_NCPAINT;//004D52C4
    //procedure sub_004D585C(?:?); dynamic;//004D585C
    //procedure CMTextChanged(?:?); message CM_TEXTCHANGED;//004D5480
  end;
  TDragImageList = class(TCustomImageList)
  public
    FDragCursor:TCursor;//f68
    FDragging:Boolean;//f6A
    FDragHandle:HWND;//f6C
    FDragHotspot:TPoint;//f70
    FDragIndex:Integer;//f78
    procedure v34; virtual;//v34//004D58E4
    //procedure v40(?:?); virtual;//v40//004D5A80
  end;
  TImageList = class(TDragImageList)
  end;
  TDockZone = class(TObject)
  public
    FChildControl:TControl;//f4
    FChildZones:TDockZone;//f8
    FNextSibling:TDockZone;//fC
    FOrientation:TDockOrientation;//f10
    FParentZone:TDockZone;//f14
    FPrevSibling:TDockZone;//f18
    FTree:TDockTree;//f1C
    FZoneLimit:Integer;//f20
    FOldSize:Integer;//f24
    constructor Create;//004D5EE4
  end;
  TDockTree = class(TInterfacedObject)
  public
    FBorderWidth:Integer;//fC
    FBrush:TBrush;//f10
    FDockSite:TWinControl;//f14
    FGrabberSize:Integer;//f18
    FGrabbersOnTop:Boolean;//f1C
    FOldRect:TRect;//f1D
    FOldWndProc:TWndMethod;//f30
    f34:TControl;//f34
    FReplacementZone:TDockZone;//f38
    FScaleBy:Double;//f40
    f44:dword;//f44
    FShiftScaleOrient:TDockOrientation;//f48
    FShiftBy:Integer;//f4C
    FSizePos:TPoint;//f50
    FSizingDC:HDC;//f58
    FSizingWnd:HWND;//f5C
    FSizingZone:TDockZone;//f60
    FTopZone:TDockZone;//f64
    FTopXYLimit:Integer;//f68
    FUpdateCount:Integer;//f6C
    FVersion:Integer;//f70
    destructor Destroy; virtual;//004D6974
    //procedure v0(?:?; ?:?); virtual;//v0//004D69E8
    //function v4(?:?; ?:?):?; virtual;//v4//004D6BFC
    //procedure v8(?:?; ?:?; ?:?); virtual;//v8//004D6C3C
    //procedure vC(?:?); virtual;//vC//004D7680
    //procedure v10(?:?; ?:?; ?:?); virtual;//v10//004D79CC
    //procedure v14(?:?; ?:?; ?:?; ?:?); virtual;//v14//004D7C70
    //procedure v18(?:?); virtual;//v18//004D7EEC
    //procedure v1C(?:?); virtual;//v1C//004D8590
    //procedure v20(?:?); virtual;//v20//004D82DC
    constructor v24; virtual;//v24//004D6800
    //procedure v28(?:?); virtual;//v28//004D7AE0
  end;
  TMouse = class(TObject)
  public
    FDragImmediate:Boolean;//f4
    FDragThreshold:Integer;//f8
    FMousePresent:Boolean;//fC
    FNativeWheelSupport:Boolean;//fD
    FScrollLines:Integer;//f10
    FScrollLinesMessage:UINT;//f14
    FWheelHwnd:HWND;//f18
    FWheelMessage:UINT;//f1C
    FWheelPresent:Boolean;//f20
    FWheelSupportMessage:UINT;//f24
  end;
  TCustomListControl = class(TWinControl)
  public
    procedure vC8; virtual; abstract;//vC8//00402C24
    procedure vCC; virtual; abstract;//vCC//00402C24
    procedure vD0; virtual; abstract;//vD0//00402C24
    procedure vD4; virtual; abstract;//vD4//00402C24
    procedure Clear; virtual; abstract;//vD8//00402C24
    procedure vDC; virtual; abstract;//vDC//00402C24
    procedure vE0; virtual; abstract;//vE0//00402C24
    procedure vE4; virtual; abstract;//vE4//00402C24
    //procedure vE8(?:?); virtual;//vE8//004D9D68
    procedure vEC; virtual; abstract;//vEC//00402C24
  end;
  TCustomMultiSelectListControl = class(TCustomListControl)
  public
    ........................FMultiSelect:Boolean;//f208
  end;
  TSiteList = class(TList)
  public
    procedure v8; virtual;//v8//004C7528
  end;
    procedure sub_004C6E58(?:TAlignment);//004C6E58
    //function sub_004C6E80(?:?; ?:?; ?:?; ?:?):?;//004C6E80
    //function sub_004C6F34(?:?):?;//004C6F34
    //function sub_004C6F7C(?:HWND):?;//004C6F7C
    //function sub_004C6FEC(?:?; ?:?; ?:?):?;//004C6FEC
    //function sub_004C71D4(?:?; ?:?):?;//004C71D4
    //function sub_004C71FC(?:?; ?:?):?;//004C71FC
    //procedure sub_004C7224(?:?; ?:?);//004C7224
    //procedure sub_004C7278(?:?; ?:?);//004C7278
    //procedure sub_004C72CC(?:?; ?:?);//004C72CC
    //function sub_004C7334:?;//004C7334
    procedure sub_004C7370(?:TCustomComboBoxEx);//004C7370
    //function sub_004C7430(?:?; ?:HWND; ?:?):?;//004C7430
    //function sub_004C7484(?:?):?;//004C7484
    //procedure sub_004C74C4(?:?; ?:Pointer);//004C74C4
    procedure sub_004C7528;//004C7528
    //function sub_004C7570(?:?):?;//004C7570
    //procedure sub_004C7600(?:?);//004C7600
    //function sub_004C7670(?:?):?;//004C7670
    //procedure sub_004C769C(?:?; ?:?);//004C769C
    //procedure sub_004C76B4(?:?);//004C76B4
    //procedure sub_004C76E8(?:?; ?:?);//004C76E8
    //procedure sub_004C7708(?:?);//004C7708
    //function sub_004C7818:?;//004C7818
    //function sub_004C7830(?:?; ?:?):?;//004C7830
    procedure sub_004C7860;//004C7860
    //function sub_004C786C:?;//004C786C
    procedure sub_004C7884;//004C7884
    procedure BeforeDestruction;//004C78E4
    procedure AfterConstruction;//004C7900
    procedure BeforeDestruction;//004C791C
    constructor Create;//004C7928
    //procedure sub_004C796C(?:?);//004C796C
    //procedure sub_004C79A8(?:?; ?:?; ?:?);//004C79A8
    //procedure sub_004C79D8(?:?; ?:?; ?:?; ?:?);//004C79D8
    //function sub_004C7A20(?:?; ?:?):?;//004C7A20
    //function sub_004C7A58:?;//004C7A58
    procedure sub_004C7A78;//004C7A78
    procedure sub_004C7AA4;//004C7AA4
    procedure BeforeDestruction;//004C7AD0
    constructor Create;//004C7ADC
    destructor Destroy;//004C7B50
    //procedure sub_004C7B8C(?:?);//004C7B8C
    //procedure sub_004C7C14(?:?; ?:?; ?:?);//004C7C14
    //function sub_004C7C44(?:?; ?:?):?;//004C7C44
    //procedure sub_004C7C7C(?:?);//004C7C7C
    procedure sub_004C7D2C;//004C7D2C
    procedure sub_004C7D4C;//004C7D4C
    //function sub_004C7D6C(?:?; ?:?):?;//004C7D6C
    //function sub_004C7D8C:?;//004C7D8C
    procedure BeforeDestruction;//004C7DA4
    //function sub_004C7E44(?:?; ?:?):?;//004C7E44
    //function sub_004C8008(?:?):?;//004C8008
    //function sub_004C8054(?:?; ?:?):?;//004C8054
    //procedure sub_004C81B8(?:TPanel; ?:?);//004C81B8
    //function sub_004C8228(?:?; ?:?; ?:?; ?:?; ?:?):?;//004C8228
    //function sub_004C8290(?:HWND):?;//004C8290
    //function sub_004C8308(?:?):?;//004C8308
    //function sub_004C834C(?:?; ?:?; ?:?; ?:?):?;//004C834C
    //function sub_004C83B8(?:?):?;//004C83B8
    //function sub_004C8408:?;//004C8408
    //procedure sub_004C84D8(?:?);//004C84D8
    //procedure sub_004C8808(?:TDragDockObjectEx; ?:?; ?:?);//004C8808
    //procedure sub_004C89B0(?:TControl; ?:?; ?:?);//004C89B0
    //function sub_004C8B94(?:?):?;//004C8B94
    procedure DragDone(Drop:Boolean);//004C8C14
    procedure CancelDrag;//004C8F10
    //function sub_004C8F28(?:?):?;//004C8F28
    //function sub_004C8F78(?:?; ?:?):?;//004C8F78
    //procedure sub_004C8FD4(?:?; ?:?);//004C8FD4
    //procedure sub_004C900C(?:?; ?:?);//004C900C
    procedure MoveWindowOrg(DC:HDC; DX:Integer; DY:Integer);//004C9048
    procedure FreeDeviceContext;//004C9084
    procedure FreeDeviceContexts;//004C9140
    destructor Destroy;//004C91EC
    procedure sub_004C9228;//004C9228
    procedure sub_004C931C(?:TCanvas; ?:TWinControl);//004C931C
    procedure sub_004C9348(?:TCanvas);//004C9348
    constructor Create;//004C9380
    //procedure sub_004C93D0(?:?);//004C93D0
    procedure sub_004C9558;//004C9558
    //procedure sub_004C957C(?:?);//004C957C
    //function sub_004C95A0(?:?):?;//004C95A0
    //function sub_004C96A4:?;//004C96A4
    //function sub_004C9728:?;//004C9728
    //function sub_004C9774:?;//004C9774
    //function sub_004C97C0:?;//004C97C0
    //function sub_004C9808:?;//004C9808
    //procedure sub_004C9844(?:?);//004C9844
    //procedure sub_004C9870(?:?);//004C9870
    //procedure sub_004C989C(?:?);//004C989C
    //procedure sub_004C98CC(?:?);//004C98CC
    //procedure sub_004C98F8(?:?; ?:?);//004C98F8
    //function sub_004C9928:?;//004C9928
    //procedure sub_004C99AC(?:?);//004C99AC
    //procedure sub_004C99D8(?:?);//004C99D8
    //procedure sub_004C9A04(?:?);//004C9A04
    constructor sub_004C9A30;//004C9A30
    destructor Destroy;//004C9B58
    //function sub_004C9C40:?;//004C9C40
    function GetEnabled:Boolean;//004C9C58
    procedure sub_004C9C74;//004C9C74
    procedure sub_004834C8;//004C9C8C
    procedure sub_00483570;//004C9CA8
    //procedure sub_00483588(?:?);//004C9CC4
    //procedure sub_004C9CFC(?:?);//004C9CFC
    function GetAction:TBasicAction;//004C9D90
    procedure SetAnchors(Value:TAnchors);//004C9DBC
    procedure SetAction(Value:TBasicAction);//004C9DE8
    function IsStoredAnchors(Value:TAnchors):Boolean;//004C9E94
    procedure SetDragMode(Value:TDragMode);//004C9EBC
    procedure sub_004C9ED8;//004C9ED8
    procedure sub_004C9EFC;//004C9EFC
    //procedure sub_004C9F28(?:?);//004C9F28
    procedure Notification(AComponent:TComponent; Operation:TOperation);//004C9FD4
    procedure SetAlign(Value:TAlign);//004CA02C
    //procedure sub_004CA110(?:?; ?:?; ?:?; ?:?);//004CA110
    procedure sub_004CA1E0(?:TControl);//004CA1E0
    procedure SetLeft(Value:Integer);//004CA36C
    procedure SetTop(Value:Integer);//004CA3AC
    //procedure sub_004CA46C(?:?; ?:?);//004CA46C
    //procedure sub_004CA5A8(?:?; ?:?);//004CA5A8
    //procedure sub_004CA67C(?:?; ?:TCustomActionDockBar);//004CA67C
    procedure sub_004CA6AC(?:TControl; ?:TPoint);//004CA6AC
    //procedure sub_004CA6F8(?:TControl; ?:?);//004CA6F8
    //procedure sub_004CA73C(?:?);//004CA73C
    procedure sub_004CA798(?:TCustomForm; ?:Integer);//004CA798
    procedure sub_004CA7EC(?:TCustomForm; ?:Integer);//004CA7EC
    //procedure sub_004CA81C(?:?);//004CA81C
    procedure sub_004CA938(?:TControl; ?:TControl);//004CA938
    //procedure sub_004CA980(?:TControl; ?:?; ?:?; ?:?);//004CA980
    procedure sub_004CA9F8(?:TWinControl);//004CA9F8
    //procedure sub_004CAA18(?:?; ?:?);//004CAA18
    procedure SetAutoSize(Value:Boolean);//004CAC30
    //procedure sub_004CAC68(?:?);//004CAC68
    //procedure sub_004CAD24(?:?; ?:?);//004CAD24
    //procedure sub_004CAD7C(?:?);//004CAD7C
    procedure SetEnabled(Value:Boolean);//004CAE3C
    //function sub_004CAE74(?:TControl):?;//004CAE74
    //function sub_004CAE98(?:TWinControl; ?:PChar; ?:?):?;//004CAE98
    //function sub_004CAEC8(?:?):?;//004CAEC8
    //function sub_004CAEFC(?:?):?;//004CAEFC
    procedure SetPopupMenu(Value:TPopupMenu);//004CAF30
    procedure sub_004CAF68(?:TWinControl; ?:PChar);//004CAF68
    procedure SetBiDiMode(Value:TBiDiMode);//004CB048
    //procedure sub_004CB084(?:?; ?:?);//004CB084
    procedure SetFont(Value:TFont);//004CB0E8
    function IsStoredFont(Value:TFont):Boolean;//004CB108
    function IsStoredShowHint(Value:Boolean):Boolean;//004CB134
    function IsStoredBiDiMode(Value:TBiDiMode):Boolean;//004CB154
    procedure SetParentFont(Value:Boolean);//004CB170
    procedure SetShowHint(Value:Boolean);//004CB1B8
    procedure SetParentShowHint(Value:Boolean);//004CB200
    procedure SetColor(Value:TColor);//004CB250
    function IsStoredColor(Value:TColor):Boolean;//004CB28C
    procedure SetParentColor(Value:Boolean);//004CB2A8
    procedure SetParentBiDiMode(Value:Boolean);//004CB2F0
    procedure SetCursor(Value:TCursor);//004CB338
    //procedure sub_004CB390(?:TControl; ?:?);//004CB390
    procedure sub_004CB3C4(?:TWinControl);//004CB3C4
    //procedure sub_004CB3E0(?:TControl; ?:?);//004CB3E0
    //procedure sub_004CB4B4(?:?);//004CB4B4
    //function sub_004CB4F8(?:?):?;//004CB4F8
    //function sub_004CB5C0(?:?):?;//004CB5C0
    //procedure sub_004CB65C(?:TControl; ?:?; ?:?);//004CB65C
    procedure sub_004CB6E8;//004CB6E8
    //procedure sub_004CB70C(?:?);//004CB70C
    procedure sub_004CB768(?:TWinControl);//004CB768
    //procedure sub_004CB77C(?:?);//004CB77C
    procedure sub_004CB7BC;//004CB7BC
    procedure sub_004CB7F8;//004CB7F8
    procedure sub_004CB8F8;//004CB8F8
    //function sub_004CB90C(?:TControl):?;//004CB90C
    procedure sub_004CB93C;//004CB93C
    //function sub_004CB96C(?:?):?;//004CB96C
    procedure sub_004CB99C;//004CB99C
    //procedure sub_004CB9C0(?:TControl; ?:?; ?:?);//004CB9C0
    procedure sub_004CBA98;//004CBA98
    //function sub_004CBAA4(?:TWinControl):?;//004CBAA4
    //procedure sub_004CBAC0(?:?; ?:?; ?:?; ?:?; ?:?);//004CBAC0
    //procedure sub_004CBB18(?:?; ?:?; ?:?);//004CBB18
    //procedure sub_004CBB5C(?:?);//004CBB5C
    //procedure sub_004CBB90(?:?; ?:?; ?:?);//004CBB90
    //procedure sub_004CBBD4(?:?);//004CBBD4
    //procedure sub_004CBCFC(?:?; ?:?);//004CBCFC
    //procedure sub_004CBD24(?:?; ?:?; ?:?);//004CBD24
    //procedure sub_004CBD68(?:?);//004CBD68
    //procedure sub_004CBD9C(?:?; ?:?; ?:?);//004CBD9C
    //procedure sub_004CBE94(?:?; ?:?);//004CBE94
    //procedure sub_004CBEE4(?:?; ?:?);//004CBEE4
    //procedure sub_004CBF34(?:?; ?:?);//004CBF34
    //procedure sub_004CC084(?:?);//004CC084
    //procedure sub_004CC0A8(?:?);//004CC0A8
    //procedure sub_004CC0CC(?:?; ?:?);//004CC0CC
    //function sub_004CC1DC(?:?; ?:TWinControl; ?:?; ?:?):?;//004CC1DC
    //function sub_004CC414(?:?; ?:TPoint):?;//004CC414
    //procedure sub_004CC4C4(?:?; ?:?);//004CC4C4
    //function sub_004CC4E4(?:?; ?:?):?;//004CC4E4
    //function sub_004CC500(?:?; ?:?):?;//004CC500
    //function sub_004CC548(?:TControl; ?:?; ?:?):?;//004CC548
    //function sub_004CC5BC(?:TControl; ?:?; ?:?):?;//004CC5BC
    //procedure sub_004CC5FC(?:?; ?:?; ?:?; ?:?);//004CC5FC
    //procedure sub_004CC644(?:TControl; ?:?);//004CC644
    //procedure sub_004CC67C(?:?);//004CC67C
    //procedure sub_004CC6D0(?:?; ?:?; ?:?);//004CC6D0
    //function sub_004CC7DC(?:TControl; ?:?; ?:TControl; ?:?):?;//004CC7DC
    procedure sub_004CC828(?:TControl);//004CC828
    //procedure sub_004CC8C8(?:TControl; ?:?);//004CC8C8
    procedure sub_004CC91C;//004CC91C
    //procedure sub_004CC928(?:?);//004CC928
    procedure DefaultHandler(var Message:void );//004CCB10
    function DoWriteIsControl:Boolean;//004CCC1C
    procedure DefineProperties(Filer:TFiler);//004CCC5C
    procedure sub_004CCCAC;//004CCCAC
    procedure sub_004CCD3C;//004CCD3C
    //procedure sub_004CCD68(?:?; ?:?; ?:?; ?:?);//004CCD68
    //procedure sub_004CCDB0(?:TControl; ?:?; ?:?; ?:?);//004CCDB0
    //procedure WMLButtonDown(?:?);//004CCE50
    //procedure WMNCLButtonDown(?:?);//004CCEB4
    //procedure WMLButtonDblClk(?:?);//004CCEDC
    procedure sub_004CCF44;//004CCF44
    //function sub_004CCF60(?:TControl; ?:?; ?:?):?;//004CCF60
    //procedure WMRButtonDown(?:?);//004CD004
    //procedure WMRButtonDblClk(?:?);//004CD038
    //procedure WMMButtonDown(?:?);//004CD06C
    //procedure WMMButtonDblClk(?:?);//004CD0A0
    //procedure sub_004CD0D4(?:?; ?:?; ?:?);//004CD0D4
    //procedure WMMouseMove(?:?);//004CD118
    //procedure sub_004CD1B0(?:?; ?:?; ?:?; ?:?);//004CD1B0
    //procedure sub_004CD1F8(?:TControl; ?:?; ?:?);//004CD1F8
    //procedure WMLButtonUp(?:?);//004CD244
    //procedure WMRButtonUp(?:?);//004CD2CC
    //procedure WMMButtonUp(?:?);//004CD2F4
    //procedure WMMouseWheel(?:?);//004CD31C
    //procedure WMCancelMode(?:?);//004CD388
    //procedure WMWindowPosChangedMsg(?:?);//004CD3E0
    //procedure CMVisibleChanged(?:?);//004CD504
    //procedure CMEnabledChanged(?:?);//004CD548
    //procedure CMFontChanged(?:?);//004CD560
    //procedure CMColorChanged(?:?);//004CD578
    //procedure CMParentColorChanged(?:?);//004CD590
    //procedure CMParentBiDiModeChanged(?:?);//004CD5DC
    //procedure CMMouseWheel(?:?);//004CD618
    //procedure CMBiDiModeChanged(?:?);//004CD69C
    //procedure CMParentShowHintChanged(?:?);//004CD6C8
    //procedure CMParentFontChanged(?:?);//004CD704
    //procedure CMSysFontChanged(?:?);//004CD750
    //procedure CMHitTest(?:?);//004CD788
    //procedure CMMouseEnter(?:?);//004CD7A4
    //procedure CMMouseLeave(?:?);//004CD7D4
    //procedure CMDesignHitTest(?:?);//004CD804
    //function sub_004CD81C(?:TControl; ?:?):?;//004CD81C
    //procedure sub_004CD8AC(?:?);//004CD8AC
    //procedure CMFloat(?:?);//004CD97C
    //procedure sub_004CD9E4(?:?; ?:?);//004CD9E4
    //procedure sub_004CDB18(?:?; ?:?);//004CDB18
    procedure sub_004CDB48;//004CDB48
    function IsStoredCaption(Value:TCaption):Boolean;//004CDB60
    function IsStoredEnabled(Value:Boolean):Boolean;//004CDB94
    function IsStoredVisible(Value:Boolean):Boolean;//004CDC30
    function IsStoredOnClick(Value:TNotifyEvent):Boolean;//004CDC64
    procedure Loaded;//004CDC98
    //procedure sub_004CDCD8(?:?);//004CDCD8
    //function sub_004CDD98(?:Double; ?:?):?;//004CDD98
    //procedure sub_004CDDE8(?:?);//004CDDE8
    //function sub_004CDEBC:?;//004CDEBC
    //function sub_004CDF00:?;//004CDF00
    procedure sub_004CDF1C;//004CDF1C
    //function sub_004CDF58(?:TControl; ?:?):?;//004CDF58
    //function sub_004CDFAC(?:TControl):?;//004CDFAC
    procedure sub_004CDFD8;//004CDFD8
    //procedure CMHintShow(?:?);//004CDFF8
    //procedure WMContextMenu(?:?);//004CE034
    //procedure sub_004CE180(?:?; ?:?);//004CE180
    procedure SetConstraints(Value:TSizeConstraints);//004CE1C4
    //procedure sub_004CE1E4(?:TCustomStatusBar; ?:?; ?:?; ?:?);//004CE1E4
    //procedure sub_004CE324(?:?);//004CE324
    //function sub_004CE354:?;//004CE354
    //procedure sub_004CE370(?:?);//004CE370
    constructor Create(AOwner:TComponent);//004CE38C
    //function sub_004CE4E8(?:TCustomActionBar):?;//004CE4E8
    destructor Destroy;//004CE508
    procedure sub_004CE614(?:TWinControl);//004CE614
    //procedure sub_004CE718(?:?);//004CE718
    //procedure sub_004CE790(?:?);//004CE790
    //function sub_004CE7A0(?:?; ?:?; ?:?; ?:?):?;//004CE7A0
    //procedure sub_004CE868(?:?; ?:?; ?:?; ?:?);//004CE868
    procedure DoAlign(AAlign:TAlign);//004CECB8
    function AlignWork:Boolean;//004CEE54
    procedure AlignControls(AControl:TControl; var Rect:TRect);//004CEEB8
    procedure sub_004CEFBC(?:TWinControl; ?:TControl);//004CEFBC
    procedure sub_004CF09C(?:TWinControl);//004CF09C
    procedure sub_004CF0B0;//004CF0B0
    //procedure sub_004CF1A4(?:?);//004CF1A4
    //function sub_004CF30C(?:TWinControl; ?:?):?;//004CF30C
    //procedure sub_004CF340(?:TControl; ?:?);//004CF340
    //procedure sub_004CF370(?:?; ?:TControl);//004CF370
    procedure sub_004CF3D4(?:TWinControl; ?:TControl);//004CF3D4
    //procedure sub_004CF430(?:?; ?:TControl);//004CF430
    procedure sub_004CF520(?:TWinControl; ?:TControl);//004CF520
    //function sub_004CF5AC(?:TWinControl; ?:?):?;//004CF5AC
    //function sub_004CF618(?:TWinControl):?;//004CF618
    //procedure sub_004CF664(?:TWinControl; ?:?);//004CF664
    //procedure sub_004CF6B8(?:TWinControl; ?:?);//004CF6B8
    //procedure sub_004CF6EC(?:TWinControl; ?:?; ?:?);//004CF6EC
    //procedure sub_004CF794(?:TWinControl; ?:?);//004CF794
    //procedure sub_004CF814(?:?);//004CF814
    procedure CreateWnd;//004CF9A0
    //procedure sub_004CFBB8(?:?);//004CFBB8
    //function sub_004CFCD4(?:?; ?:?):?;//004CFCD4
    function DoWriteDesignSize:Boolean;//004CFD0C
    procedure DefineProperties(Filer:TFiler);//004CFE28
    procedure sub_004CFE84;//004CFE84
    procedure DestroyWindowHandle;//004CFEF4
    //function sub_004CFF58(?:TWinControl; ?:TWinControl):?;//004CFF58
    procedure sub_004CFFC4;//004CFFC4
    //function sub_004D0084(?:?; ?:?):?;//004D0084
    //procedure sub_004D00A0(?:?; ?:?; ?:?);//004D00A0
    procedure sub_004D00C4(?:TControl);//004D00C4
    //procedure CMRecreateWnd(?:?);//004D0158
    procedure sub_004D01AC(?:Pointer);//004D01AC
    procedure sub_004D02BC(?:TWinControl);//004D02BC
    procedure sub_004D0318(?:TWinControl; ?:HWND);//004D0318
    //function sub_004D0454(?:Pointer; ?:?):?;//004D0454
    //function sub_004D052C(?:TWinControl; ?:?; ?:?; ?:?):?;//004D052C
    //function sub_004D05E8(?:TWinControl; ?:?):?;//004D05E8
    //procedure sub_004D06A8(?:?);//004D06A8
    procedure DefaultHandler(var Message:void );//004D0840
    //function sub_004D09BC(?:?; ?:?):?;//004D09BC
    //procedure sub_004D0B7C(?:?);//004D0B7C
    //procedure sub_004D0BB0(?:TWinControl; ?:HDC; ?:?);//004D0BB0
    //procedure sub_004D0E94(?:Pointer; ?:?; ?:?; ?:?);//004D0E94
    procedure WMPaint(var Message:TWMPaint);//004D103C
    //procedure WMCommand(?:?);//004D11C0
    //procedure WMNotify(?:?);//004D11F0
    //procedure WMSysColorChange(?:?);//004D1220
    //procedure WMSettingChange(?:?);//004D1248
    //procedure WMFontChange(?:?);//004D1274
    //procedure WMTimeChange(?:?);//004D1298
    //procedure WMHScroll(?:?);//004D12BC
    //procedure WMVScroll(?:?);//004D12EC
    //procedure WMCompareItem(?:?);//004D131C
    //procedure WMDeleteItem(?:?);//004D134C
    //procedure WMDrawItem(?:?);//004D137C
    //procedure WMMeasureItem(?:?);//004D13AC
    //procedure WMEraseBkgnd(?:?);//004D13DC
    //procedure WMWindowPosChangedMsg(?:?);//004D1480
    //procedure WMWindowPosChangingMsg(?:?);//004D1568
    procedure WMSize(var Message:TWMSize);//004D15D8
    //procedure WMMove(?:?);//004D161C
    //procedure WMSetCursor(?:?);//004D1640
    //procedure WMSetFocus(?:?);//004D177C
    //procedure WMKillFocus(?:?);//004D17A0
    //procedure sub_004D17C4(?:?);//004D17C4
    //procedure sub_004D17EC(?:?);//004D17EC
    procedure sub_004D1814(?:TWinControl);//004D1814
    procedure sub_004D1920(?:TWinControl);//004D1920
    //procedure sub_004D19C8(?:?; ?:?);//004D19C8
    //procedure sub_004D19E8(?:?);//004D19E8
    procedure sub_004D19F8;//004D19F8
    procedure sub_004D1A24;//004D1A24
    //procedure sub_004D1A50(?:?; ?:?; ?:?);//004D1A50
    //procedure sub_004D1AB4(?:?; ?:?; ?:?; ?:?; ?:?);//004D1AB4
    //procedure sub_004D1B00(?:?; ?:?; ?:?; ?:?; ?:?);//004D1B00
    //procedure sub_004D1B44(?:?; ?:?);//004D1B44
    //procedure sub_004D1BB4(?:?; ?:?);//004D1BB4
    //function sub_004D1BE8(?:TWinControl):?;//004D1BE8
    //function sub_004D1C1C(?:TWinControl; ?:?):?;//004D1C1C
    //procedure sub_004D1C58(?:?; ?:?; ?:?; ?:?);//004D1C58
    //function sub_004D1CC8(?:Pointer):?;//004D1CC8
    procedure sub_004D1D18;//004D1D18
    //procedure sub_004D1D24(?:?);//004D1D24
    procedure SetDockSite(Value:Boolean);//004D1DAC
    //procedure CMDockClient(?:?);//004D1E90
    //procedure CMUndockClient(?:?);//004D1F8C
    //procedure CMFloat(?:?);//004D1FD0
    procedure KeyDown(var Key:Word; Shift:TShiftState);//004D2058
    //function sub_004D2094(?:TWinControl; ?:?):?;//004D2094
    //procedure WMKeyDown(?:?);//004D211C
    //procedure WMSysKeyDown(?:?);//004D2158
    //procedure sub_004D2194(?:?; ?:?);//004D2194
    //function sub_004D21D0(?:TWinControl; ?:?):?;//004D21D0
    //procedure WMKeyUp(?:?);//004D2258
    //procedure WMSysKeyUp(?:?);//004D2284
    procedure KeyPress(var Key:Char);//004D22B0
    //function sub_004D22E4(?:TWinControl; ?:?):?;//004D22E4
    //procedure WMChar(?:?);//004D236C
    //function sub_004D2398(?:TWinControl; ?:?):?;//004D2398
    //procedure WMSysCommand(?:?);//004D2460
    //procedure WMCharToItem(?:?);//004D2514
    //procedure WMParentNotify(?:?);//004D2544
    //procedure WMVKeyToItem(?:?);//004D2588
    //procedure WMDestroy(?:?);//004D25B8
    //procedure WMNCDestroy(?:?);//004D2604
    //procedure WMNCHitTest(?:?);//004D2634
    //procedure sub_004C9CFC(?:?);//004D2670
    //procedure WMQueryNewPalette(?:?);//004D26DC
    //procedure WMPaletteChanged(?:?);//004D2710
    //procedure CMShowHintChanged(?:?);//004D273C
    procedure CMBiDiModeChanged(var Message:TMessage);//004D2764
    //procedure CMEnter(?:?);//004D27A8
    procedure CMExit(var Message:TWMNoParams);//004D2828
    //procedure CMDesignHitTest(?:?);//004D2848
    //procedure CMChanged(?:?);//004D2874
    //procedure CMChildKey(?:?);//004D28A0
    //procedure CMDialogKey(?:?);//004D28CC
    //procedure CMDialogChar(?:?);//004D28E8
    //procedure CMFocusChenged(?:?);//004D2904
    //procedure CMVisibleChanged(?:?);//004D2920
    //procedure CMShowingChanged(?:?);//004D2968
    //procedure CMEnabledChanged(?:?);//004D29A4
    //procedure CMColorChanged(?:?);//004D2A04
    //procedure CMFontChanged(?:?);//004D2A40
    //procedure CMCursorChanged(?:?);//004D2A90
    //procedure CMBorderChanged(?:?);//004D2ADC
    //procedure CMCtl3DChanged(?:?);//004D2B30
    //procedure CMParentCtl3DChanged(?:?);//004D2B88
    //procedure CMSysColorChange(?:?);//004D2BE0
    //procedure CMWinIniChange(?:?);//004D2BFC
    //procedure CMFontChange(?:?);//004D2C18
    //procedure CMTimeChange(?:?);//004D2C34
    //procedure CMDrag(?:?);//004D2C50
    //procedure CMControlLIstChange(?:?);//004D2CCC
    //procedure CMSysFontChanged(?:?);//004D2CF8
    //function sub_004D2D20(?:TWinControl; ?:?):?;//004D2D20
    //procedure sub_004D2DD4(?:?);//004D2DD4
    //procedure sub_004D2EEC(?:?);//004D2EEC
    //procedure sub_004D2F50(?:?);//004D2F50
    //procedure sub_004D2FB4(?:?);//004D2FB4
    //procedure sub_004D3030(?:?);//004D3030
    procedure SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer);//004D307C
    //procedure sub_004D3190(?:TWinControl; ?:?; ?:Integer);//004D3190
    //procedure sub_004CAA18(?:?; ?:?);//004D31E0
    //procedure sub_004D32A0(?:TScrollingWinControl; ?:?; ?:?);//004D32A0
    //procedure sub_004D33A8(?:?);//004D33A8
    //procedure sub_004D33D4(?:TWinControl; ?:?);//004D33D4
    //procedure sub_004CB4B4(?:?);//004D3534
    //function sub_004D35D8(?:?):?;//004D35D8
    procedure sub_004D3648;//004D3648
    //procedure CMInvalidate(?:?);//004D3664
    procedure sub_004D3720;//004D3720
    procedure sub_004D3748;//004D3748
    procedure sub_004D3768(?:TWinControl);//004D3768
    procedure sub_004D37A8;//004D37A8
    procedure sub_004D3808;//004D3808
    procedure sub_004D3858;//004D3858
    procedure sub_004D3890(?:TCustomActionPopupMenu);//004D3890
    //procedure sub_004D38EC(?:?);//004D38EC
    //procedure sub_004D39E8(?:?);//004D39E8
    //procedure sub_004D3A1C(?:?);//004D3A1C
    procedure sub_004CDF1C;//004D3A40
    procedure SetBorderWidth(Value:TBorderWidth);//004D3A94
    procedure SetCtl3D(Value:Boolean);//004D3AD0
    function IsStoredCtl3D(Value:Boolean):Boolean;//004D3B18
    procedure SetParentCtl3D(Value:Boolean);//004D3B38
    //function GetTabOrder:?;//004D3B88
    //procedure sub_004D3BC4(?:Pointer; ?:?);//004D3BC4
    procedure SetTabOrder(Value:TTabOrder);//004D3C50
    procedure SetTabStop(Value:Boolean);//004D3C88
    procedure SetUseDockManager(Value:Boolean);//004D3D0C
    procedure sub_004D3DB8(?:TWinControl);//004D3DB8
    //procedure sub_004D3E94(?:?);//004D3E94
    //function sub_004D3F04(?:TCustomGroupBox; ?:?; ?:?; ?:?; ?:?):?;//004D3F04
    //procedure sub_004D4030(?:TWinControl; ?:TWinControl; ?:?; ?:?);//004D4030
    procedure sub_004D4074(?:TCustomGroupBox);//004D4074
    //procedure sub_004834DC(?:?; ?:?);//004D40D0
    //procedure sub_0048355C(?:?; ?:?);//004D4124
    //function sub_004D4174(?:?; ?:?):?;//004D4174
    //procedure sub_004D419C(?:?; ?:?; ?:?; ?:?; ?:?);//004D419C
    //procedure sub_004D4258(?:TWinControl; ?:?; ?:?; ?:?; ?:?);//004D4258
    //procedure sub_004D469C(?:?; ?:?; ?:?; ?:?);//004D469C
    //procedure sub_004CD9E4(?:?; ?:?);//004D46E0
    procedure sub_004CDB48;//004D4734
    //procedure sub_004D474C(?:?);//004D474C
    //function sub_004D478C(?:?; ?:?):?;//004D478C
    //procedure SetBevelInner(Value:TBevelCut; ?:?);//004D4994
    procedure SetBevelEdges(Value:TBevelEdges);//004D4A0C
    procedure SetBevelKind(Value:TBevelKind);//004D4A48
    procedure SetBevelWidth(Value:TBevelWidth);//004D4A84
    //procedure WMNCCalcSize(?:?);//004D4AC0
    //procedure WMNCPaint(?:?);//004D4BA4
    //procedure WMContextMenu(?:?);//004D4E64
    //procedure sub_004D4EE4(?:TWinControl; ?:?);//004D4EE4
    //procedure sub_004D4F60(?:?);//004D4F60
    //function GetParentBackground:?;//004D4FB0
    procedure SetParentBackground(Value:Boolean);//004D4FD0
    constructor Create(AOwner:TComponent);//004D5028
    destructor Destroy;//004D5098
    //procedure WMPaint(?:?);//004D50E8
    procedure sub_004D5198;//004D5198
    constructor Create(AOwner:TComponent);//004D51A4
    //procedure sub_004D5228(?:?);//004D5228
    //procedure WMNCHitTest(?:?);//004D52A8
    //procedure WMNCPaint(?:?);//004D52C4
    procedure sub_004D5328;//004D5328
    //function sub_004D53D8(?:?):?;//004D53D8
    //procedure sub_004D546C(?:?);//004D546C
    //procedure CMTextChanged(?:?);//004D5480
    //procedure sub_004D5534(?:?; ?:?);//004D5534
    //procedure sub_004D574C(?:?; ?:?);//004D574C
    //procedure sub_004D5780(?:?; ?:?; ?:?);//004D5780
    //procedure sub_004D57E8(?:?);//004D57E8
    //procedure sub_004D585C(?:?);//004D585C
    //procedure sub_004D5890(?:?; ?:?; ?:?; ?:?);//004D5890
    procedure sub_004D58E4;//004D58E4
    procedure sub_004D5904(?:TDragImageList);//004D5904
    //function sub_004D59D8(?:TDragImageList; ?:?; ?:?; ?:?):?;//004D59D8
    //procedure sub_004D5A44(?:TDragImageList; ?:?);//004D5A44
    //procedure sub_004D5A80(?:?);//004D5A80
    //function sub_004D5ABC(?:?; ?:HWND; ?:?; ?:?):?;//004D5ABC
    //function sub_004D5B34(?:?; ?:HWND; ?:?; ?:?):?;//004D5B34
    procedure sub_004D5BAC(?:TDragImageList);//004D5BAC
    //function sub_004D5BE0(?:?; ?:?; ?:?):?;//004D5BE0
    //procedure sub_004D5C34(?:?);//004D5C34
    //procedure sub_004D5C54(?:?);//004D5C54
    //function sub_004D5C74(?:TDragImageList):?;//004D5C74
    constructor Create(AOwner:TComponent);//004D5CD0
    destructor Destroy;//004D5D40
    procedure WMPaint(Message:TWMPaint);//004D5D80
    //procedure sub_004D5DB0(?:?);//004D5DB0
    procedure sub_004D5E5C;//004D5E5C
    //function sub_004D5E68(?:?):?;//004D5E68
    //function sub_004D5E9C(?:?):?;//004D5E9C
    //function sub_004D5F28(?:TDockZone):?;//004D5F28
    //function sub_004D5F60(?:?):?;//004D5F60
    //function sub_004D5F9C(?:?):?;//004D5F9C
    //function sub_004D5FF8(?:?):?;//004D5FF8
    //function sub_004D6070(?:TDockZone):?;//004D6070
    //function sub_004D60E8(?:?; ?:?):?;//004D60E8
    //function sub_004D6188(?:TDockZone; ?:?):?;//004D6188
    procedure sub_004D6290(?:TDockZone);//004D6290
    //procedure sub_004D6360(?:?; ?:?);//004D6360
    //function sub_004D63B8(?:TDockZone; ?:?):?;//004D63B8
    //function sub_004D6444(?:?):?;//004D6444
    procedure sub_004D6488(?:TDockZone);//004D6488
    //function sub_004D6618(?:TDockZone):?;//004D6618
    procedure sub_004D6658(?:TDockZone; ?:Integer);//004D6658
    //function sub_004D6674(?:?):?;//004D6674
    procedure sub_004D66A4(?:TDockZone; ?:Integer);//004D66A4
    procedure sub_004D6704(?:TDockZone);//004D6704
    //function sub_004D6788(?:?):?;//004D6788
    //function sub_004D67E0(?:TDockZone):?;//004D67E0
    constructor sub_004D6800;//004D6800
    destructor Destroy;//004D6974
    //procedure sub_004D69E8(?:?; ?:?);//004D69E8
    procedure sub_004D6A18(?:TDockTree);//004D6A18
    procedure sub_004D6A28(?:TDockTree);//004D6A28
    //procedure sub_004D6A54(?:?; ?:?);//004D6A54
    //function sub_004D6ABC(?:TDockTree; ?:?):?;//004D6ABC
    //procedure sub_004D6AF8(?:?; ?:?);//004D6AF8
    procedure sub_004D6B44(?:TDockTree; ?:TDockZone);//004D6B44
    //procedure sub_004D6B70(?:?; ?:?; ?:?);//004D6B70
    //function sub_004D6BFC(?:?; ?:?):?;//004D6BFC
    //procedure sub_004D6C3C(?:?; ?:?; ?:?);//004D6C3C
    //procedure sub_004D6EE8(?:TDockTree; ?:TDockZone; ?:?; ?:?; ?:?);//004D6EE8
    //procedure sub_004D7174(?:TDockTree; ?:TDockZone; ?:?; ?:?);//004D7174
    //procedure sub_004D726C(?:?; ?:?);//004D726C
    //function sub_004D74E4(?:?; ?:?):?;//004D74E4
    //function sub_004D759C(?:TDockTree; ?:?; ?:?):?;//004D759C
    //procedure sub_004D7630(?:?; ?:?);//004D7630
    //procedure sub_004D7680(?:?);//004D7680
    //procedure sub_004D78E0(?:?; ?:?; ?:?);//004D78E0
    //procedure sub_004D7938(?:?; ?:?; ?:?; ?:?; ?:?);//004D7938
    //procedure sub_004D79CC(?:?; ?:?; ?:?);//004D79CC
    //procedure sub_004D7AE0(?:?);//004D7AE0
    //procedure sub_004D7C70(?:?; ?:?; ?:?; ?:?);//004D7C70
    //procedure sub_004D7E14(?:TDockZone; ?:?);//004D7E14
    procedure sub_004D7E58(?:TDockTree; ?:TDockZone);//004D7E58
    //procedure sub_004D7EEC(?:?);//004D7EEC
    procedure sub_004D7F48(?:TDockTree; ?:TDockZone);//004D7F48
    //procedure sub_004D82DC(?:?);//004D82DC
    //procedure sub_004D8444(?:?; ?:?);//004D8444
    //procedure sub_004D84BC(?:TDockZone; ?:?; ?:?);//004D84BC
    //procedure sub_004D8590(?:?);//004D8590
    //procedure sub_004D86F8(?:TDockZone; ?:?);//004D86F8
    //procedure sub_004D8794(?:TDockTree; ?:?);//004D8794
    //procedure sub_004D87CC(?:?; ?:?);//004D87CC
    procedure sub_004D896C(?:TDockTree);//004D896C
    constructor sub_004D94AC;//004D94AC
    //procedure sub_004D95A4(?:?; ?:?);//004D95A4
    //function sub_004D95C4(?:?):?;//004D95C4
    //procedure sub_004D95E0(?:?);//004D95E0
    //procedure sub_004D9604(?:?);//004D9604
    //procedure sub_004D9640(?:?);//004D9640
    //procedure sub_004D96BC(?:?; ?:?);//004D96BC
    procedure sub_004D9744;//004D9744
    //function sub_004D99B0(?:HWND; ?:?):?;//004D99B0
    //procedure sub_004D99E8(?:HWND; ?:?);//004D99E8
    //function sub_004D9AE4(?:?):?;//004D9AE4
    procedure DoneControls;//004D9B10
    procedure InitControls;//004D9B98
    //procedure sub_004D9D68(?:?);//004D9D68

implementation

//004C6E58
procedure sub_004C6E58(?:TAlignment);
begin
{*
 004C6E58    push        ebp
 004C6E59    mov         ebp,esp
 004C6E5B    push        ecx
 004C6E5C    mov         dword ptr [ebp-4],eax
 004C6E5F    mov         eax,dword ptr [ebp-4]
 004C6E62    mov         al,byte ptr [eax]
 004C6E64    sub         al,1
>004C6E66    jb          004C6E6C
>004C6E68    je          004C6E75
>004C6E6A    jmp         004C6E7B
 004C6E6C    mov         eax,dword ptr [ebp-4]
 004C6E6F    mov         byte ptr [eax],1
 004C6E72    pop         ecx
 004C6E73    pop         ebp
 004C6E74    ret
 004C6E75    mov         eax,dword ptr [ebp-4]
 004C6E78    mov         byte ptr [eax],0
 004C6E7B    pop         ecx
 004C6E7C    pop         ebp
 004C6E7D    ret
*}
end;

//004C6E80
{*function sub_004C6E80(?:?; ?:?; ?:?; ?:?):?;
begin
 004C6E80    push        ebp
 004C6E81    mov         ebp,esp
 004C6E83    push        ecx
 004C6E84    mov         eax,[0054167C];0x0 gvar_0054167C
 004C6E89    mov         edx,dword ptr [ebp+8]
 004C6E8C    mov         dword ptr [eax+180],edx
 004C6E92    mov         eax,[0054167C];0x0 gvar_0054167C
 004C6E97    mov         eax,dword ptr [eax+18C]
 004C6E9D    push        eax
 004C6E9E    push        0FC
 004C6EA0    mov         eax,dword ptr [ebp+8]
 004C6EA3    push        eax
 004C6EA4    call        user32.SetWindowLongA
 004C6EA9    push        0F0
 004C6EAB    mov         eax,dword ptr [ebp+8]
 004C6EAE    push        eax
 004C6EAF    call        user32.GetWindowLongA
 004C6EB4    test        eax,40000000
>004C6EB9    je          004C6ED9
 004C6EBB    push        0F4
 004C6EBD    mov         eax,dword ptr [ebp+8]
 004C6EC0    push        eax
 004C6EC1    call        user32.GetWindowLongA
 004C6EC6    test        eax,eax
>004C6EC8    jne         004C6ED9
 004C6ECA    mov         eax,dword ptr [ebp+8]
 004C6ECD    push        eax
 004C6ECE    push        0F4
 004C6ED0    mov         eax,dword ptr [ebp+8]
 004C6ED3    push        eax
 004C6ED4    call        user32.SetWindowLongA
 004C6ED9    mov         eax,[0054167C];0x0 gvar_0054167C
 004C6EDE    push        eax
 004C6EDF    movzx       eax,word ptr ds:[55DDBA];gvar_0055DDBA
 004C6EE6    push        eax
 004C6EE7    mov         eax,dword ptr [ebp+8]
 004C6EEA    push        eax
 004C6EEB    call        user32.SetPropA
 004C6EF0    mov         eax,[0054167C];0x0 gvar_0054167C
 004C6EF5    push        eax
 004C6EF6    movzx       eax,word ptr ds:[55DDB8];gvar_0055DDB8
 004C6EFD    push        eax
 004C6EFE    mov         eax,dword ptr [ebp+8]
 004C6F01    push        eax
 004C6F02    call        user32.SetPropA
 004C6F07    push        dword ptr [ebp+14]
 004C6F0A    push        dword ptr [ebp+10]
 004C6F0D    push        dword ptr [ebp+0C]
 004C6F10    push        dword ptr [ebp+8]
 004C6F13    mov         eax,[0054167C];0x0 gvar_0054167C
 004C6F18    mov         dword ptr ds:[54167C],0;gvar_0054167C
 004C6F22    call        dword ptr [eax+18C]
 004C6F28    mov         dword ptr [ebp-4],eax
 004C6F2B    mov         eax,dword ptr [ebp-4]
 004C6F2E    pop         ecx
 004C6F2F    pop         ebp
 004C6F30    ret         10
end;*}

//004C6F34
{*function sub_004C6F34(?:?):?;
begin
 004C6F34    push        ebp
 004C6F35    mov         ebp,esp
 004C6F37    add         esp,0FFFFFFF4
 004C6F3A    mov         dword ptr [ebp-4],eax
 004C6F3D    lea         eax,[ebp-0C]
 004C6F40    push        eax
 004C6F41    mov         eax,dword ptr [ebp-4]
 004C6F44    push        eax
 004C6F45    call        user32.GetWindowThreadProcessId
 004C6F4A    test        eax,eax
>004C6F4C    je          004C6F70
 004C6F4E    call        kernel32.GetCurrentProcessId
 004C6F53    cmp         eax,dword ptr [ebp-0C]
>004C6F56    jne         004C6F70
 004C6F58    push        0
 004C6F5A    push        0
 004C6F5C    mov         eax,[0055DDC4];gvar_0055DDC4
 004C6F61    push        eax
 004C6F62    mov         eax,dword ptr [ebp-4]
 004C6F65    push        eax
 004C6F66    call        user32.SendMessageA
 004C6F6B    mov         dword ptr [ebp-8],eax
>004C6F6E    jmp         004C6F75
 004C6F70    xor         eax,eax
 004C6F72    mov         dword ptr [ebp-8],eax
 004C6F75    mov         eax,dword ptr [ebp-8]
 004C6F78    mov         esp,ebp
 004C6F7A    pop         ebp
 004C6F7B    ret
end;*}

//004C6F7C
{*function sub_004C6F7C(?:HWND):?;
begin
 004C6F7C    push        ebp
 004C6F7D    mov         ebp,esp
 004C6F7F    add         esp,0FFFFFFF4
 004C6F82    mov         dword ptr [ebp-4],eax
 004C6F85    xor         eax,eax
 004C6F87    mov         dword ptr [ebp-8],eax
 004C6F8A    cmp         dword ptr [ebp-4],0
>004C6F8E    je          004C6FE5
 004C6F90    lea         eax,[ebp-0C]
 004C6F93    push        eax
 004C6F94    mov         eax,dword ptr [ebp-4]
 004C6F97    push        eax
 004C6F98    call        user32.GetWindowThreadProcessId
 004C6F9D    test        eax,eax
>004C6F9F    je          004C6FE5
 004C6FA1    call        kernel32.GetCurrentProcessId
 004C6FA6    cmp         eax,dword ptr [ebp-0C]
>004C6FA9    jne         004C6FE5
 004C6FAB    mov         eax,[0055DDC0];gvar_0055DDC0
 004C6FB0    call        @LStrToPChar
 004C6FB5    push        eax
 004C6FB6    call        kernel32.GlobalFindAtomA
 004C6FBB    cmp         ax,word ptr ds:[55DDBA];gvar_0055DDBA
>004C6FC2    jne         004C6FDA
 004C6FC4    movzx       eax,word ptr ds:[55DDBA];gvar_0055DDBA
 004C6FCB    push        eax
 004C6FCC    mov         eax,dword ptr [ebp-4]
 004C6FCF    push        eax
 004C6FD0    call        user32.GetPropA
 004C6FD5    mov         dword ptr [ebp-8],eax
>004C6FD8    jmp         004C6FE5
 004C6FDA    mov         eax,dword ptr [ebp-4]
 004C6FDD    call        004C6F34
 004C6FE2    mov         dword ptr [ebp-8],eax
 004C6FE5    mov         eax,dword ptr [ebp-8]
 004C6FE8    mov         esp,ebp
 004C6FEA    pop         ebp
 004C6FEB    ret
end;*}

//004C6FEC
{*function sub_004C6FEC(?:?; ?:?; ?:?):?;
begin
 004C6FEC    push        ebp
 004C6FED    mov         ebp,esp
 004C6FEF    add         esp,0FFFFFFF0
 004C6FF2    mov         dword ptr [ebp-0C],ecx
 004C6FF5    mov         dword ptr [ebp-8],edx
 004C6FF8    mov         dword ptr [ebp-4],eax
 004C6FFB    mov         eax,[0055B4C8];^Application:TApplication
 004C7000    mov         eax,dword ptr [eax]
 004C7002    cmp         dword ptr [eax+30],0;TApplication.FHandle:HWND
>004C7006    je          004C7029
 004C7008    mov         eax,dword ptr [ebp-0C]
 004C700B    push        eax
 004C700C    mov         eax,dword ptr [ebp-8]
 004C700F    push        eax
 004C7010    mov         eax,dword ptr [ebp-4]
 004C7013    push        eax
 004C7014    mov         eax,[0055B4C8];^Application:TApplication
 004C7019    mov         eax,dword ptr [eax]
 004C701B    mov         eax,dword ptr [eax+30];TApplication.FHandle:HWND
 004C701E    push        eax
 004C701F    call        user32.SendMessageA
 004C7024    mov         dword ptr [ebp-10],eax
>004C7027    jmp         004C702E
 004C7029    xor         eax,eax
 004C702B    mov         dword ptr [ebp-10],eax
 004C702E    mov         eax,dword ptr [ebp-10]
 004C7031    mov         esp,ebp
 004C7033    pop         ebp
 004C7034    ret
end;*}

//004C71D4
{*function sub_004C71D4(?:?; ?:?):?;
begin
 004C71D4    push        ebp
 004C71D5    mov         ebp,esp
 004C71D7    add         esp,0FFFFFFF4
 004C71DA    mov         dword ptr [ebp-8],edx
 004C71DD    mov         dword ptr [ebp-4],eax
 004C71E0    push        15
 004C71E2    mov         ecx,54168C
 004C71E7    mov         edx,dword ptr [ebp-8]
 004C71EA    mov         eax,dword ptr [ebp-4]
 004C71ED    call        00477F9C
 004C71F2    mov         byte ptr [ebp-9],al
 004C71F5    mov         al,byte ptr [ebp-9]
 004C71F8    mov         esp,ebp
 004C71FA    pop         ebp
 004C71FB    ret
end;*}

//004C71FC
{*function sub_004C71FC(?:?; ?:?):?;
begin
 004C71FC    push        ebp
 004C71FD    mov         ebp,esp
 004C71FF    add         esp,0FFFFFFF4
 004C7202    mov         dword ptr [ebp-8],edx
 004C7205    mov         dword ptr [ebp-4],eax
 004C7208    push        15
 004C720A    mov         ecx,54168C
 004C720F    mov         edx,dword ptr [ebp-8]
 004C7212    mov         eax,dword ptr [ebp-4]
 004C7215    call        00477F3C
 004C721A    mov         byte ptr [ebp-9],al
 004C721D    mov         al,byte ptr [ebp-9]
 004C7220    mov         esp,ebp
 004C7222    pop         ebp
 004C7223    ret
end;*}

//004C7224
{*procedure sub_004C7224(?:?; ?:?);
begin
 004C7224    push        ebp
 004C7225    mov         ebp,esp
 004C7227    add         esp,0FFFFFFF4
 004C722A    mov         dword ptr [ebp-8],edx
 004C722D    mov         dword ptr [ebp-4],eax
 004C7230    mov         edx,dword ptr [ebp-4]
 004C7233    mov         eax,4C7274;'|'
 004C7238    call        0046B9E0
 004C723D    mov         dword ptr [ebp-0C],eax
 004C7240    cmp         dword ptr [ebp-0C],0
>004C7244    jne         004C7253
 004C7246    mov         eax,dword ptr [ebp-8]
 004C7249    mov         edx,dword ptr [ebp-4]
 004C724C    call        @LStrAsg
>004C7251    jmp         004C7268
 004C7253    mov         eax,dword ptr [ebp-8]
 004C7256    push        eax
 004C7257    mov         ecx,dword ptr [ebp-0C]
 004C725A    dec         ecx
 004C725B    mov         edx,1
 004C7260    mov         eax,dword ptr [ebp-4]
 004C7263    call        @LStrCopy
 004C7268    mov         esp,ebp
 004C726A    pop         ebp
 004C726B    ret
end;*}

//004C7278
{*procedure sub_004C7278(?:?; ?:?);
begin
 004C7278    push        ebp
 004C7279    mov         ebp,esp
 004C727B    add         esp,0FFFFFFF4
 004C727E    mov         dword ptr [ebp-8],edx
 004C7281    mov         dword ptr [ebp-4],eax
 004C7284    mov         edx,dword ptr [ebp-4]
 004C7287    mov         eax,4C72C8;'|'
 004C728C    call        0046B9E0
 004C7291    mov         dword ptr [ebp-0C],eax
 004C7294    cmp         dword ptr [ebp-0C],0
>004C7298    jne         004C72A7
 004C729A    mov         eax,dword ptr [ebp-8]
 004C729D    mov         edx,dword ptr [ebp-4]
 004C72A0    call        @LStrAsg
>004C72A5    jmp         004C72BC
 004C72A7    mov         eax,dword ptr [ebp-8]
 004C72AA    push        eax
 004C72AB    mov         edx,dword ptr [ebp-0C]
 004C72AE    inc         edx
 004C72AF    mov         ecx,7FFFFFFF
 004C72B4    mov         eax,dword ptr [ebp-4]
 004C72B7    call        @LStrCopy
 004C72BC    mov         esp,ebp
 004C72BE    pop         ebp
 004C72BF    ret
end;*}

//004C72CC
{*procedure sub_004C72CC(?:?; ?:?);
begin
 004C72CC    push        ebp
 004C72CD    mov         ebp,esp
 004C72CF    add         esp,0FFFFFFF0
 004C72D2    mov         dword ptr [ebp-8],edx
 004C72D5    mov         dword ptr [ebp-4],eax
 004C72D8    lea         eax,[ebp-10]
 004C72DB    push        eax
 004C72DC    mov         eax,dword ptr [ebp-8]
 004C72DF    push        eax
 004C72E0    call        gdi32.GetWindowOrgEx
 004C72E5    push        0
 004C72E7    mov         eax,dword ptr [ebp-0C]
 004C72EA    mov         edx,dword ptr [ebp-4]
 004C72ED    add         eax,dword ptr [edx+44]
 004C72F0    push        eax
 004C72F1    mov         eax,dword ptr [ebp-10]
 004C72F4    mov         edx,dword ptr [ebp-4]
 004C72F7    add         eax,dword ptr [edx+40]
 004C72FA    push        eax
 004C72FB    mov         eax,dword ptr [ebp-8]
 004C72FE    push        eax
 004C72FF    call        gdi32.SetWindowOrgEx
 004C7304    mov         eax,dword ptr [ebp-8]
 004C7307    push        eax
 004C7308    mov         ecx,dword ptr [ebp-8]
 004C730B    mov         edx,14
 004C7310    mov         eax,dword ptr [ebp-4]
 004C7313    mov         eax,dword ptr [eax+30]
 004C7316    call        004CC7DC
 004C731B    push        0
 004C731D    mov         eax,dword ptr [ebp-0C]
 004C7320    push        eax
 004C7321    mov         eax,dword ptr [ebp-10]
 004C7324    push        eax
 004C7325    mov         eax,dword ptr [ebp-8]
 004C7328    push        eax
 004C7329    call        gdi32.SetWindowOrgEx
 004C732E    mov         esp,ebp
 004C7330    pop         ebp
 004C7331    ret
end;*}

//004C7334
{*function sub_004C7334:?;
begin
 004C7334    push        ebp
 004C7335    mov         ebp,esp
 004C7337    push        ecx
 004C7338    call        user32.GetCapture
 004C733D    call        004C6F7C
 004C7342    mov         dword ptr [ebp-4],eax
 004C7345    cmp         dword ptr [ebp-4],0
>004C7349    je          004C7369
 004C734B    cmp         dword ptr ds:[54173C],0;gvar_0054173C
>004C7352    je          004C7369
 004C7354    mov         eax,[0054173C];0x0 gvar_0054173C
 004C7359    mov         eax,dword ptr [eax+30]
 004C735C    cmp         eax,dword ptr [ebp-4]
>004C735F    jne         004C7369
 004C7361    mov         eax,[0054173C];0x0 gvar_0054173C
 004C7366    mov         dword ptr [ebp-4],eax
 004C7369    mov         eax,dword ptr [ebp-4]
 004C736C    pop         ecx
 004C736D    pop         ebp
 004C736E    ret
end;*}

//004C7370
procedure sub_004C7370(?:TCustomComboBoxEx);
begin
{*
 004C7370    push        ebp
 004C7371    mov         ebp,esp
 004C7373    push        ecx
 004C7374    mov         dword ptr [ebp-4],eax
 004C7377    call        user32.ReleaseCapture
 004C737C    xor         eax,eax
 004C737E    mov         [0054173C],eax;gvar_0054173C
 004C7383    cmp         dword ptr [ebp-4],0
>004C7387    je          004C73C3
 004C7389    mov         eax,dword ptr [ebp-4]
 004C738C    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004C7392    call        @IsClass
 004C7397    test        al,al
>004C7399    jne         004C73B5
 004C739B    mov         eax,dword ptr [ebp-4]
 004C739E    cmp         dword ptr [eax+30],0
>004C73A2    je          004C73C3
 004C73A4    mov         eax,dword ptr [ebp-4]
 004C73A7    mov         [0054173C],eax;gvar_0054173C
 004C73AC    mov         eax,dword ptr [ebp-4]
 004C73AF    mov         eax,dword ptr [eax+30]
 004C73B2    mov         dword ptr [ebp-4],eax
 004C73B5    mov         eax,dword ptr [ebp-4]
 004C73B8    call        TWinControl.GetHandle
 004C73BD    push        eax
 004C73BE    call        user32.SetCapture
 004C73C3    pop         ecx
 004C73C4    pop         ebp
 004C73C5    ret
*}
end;

//004C7430
{*function sub_004C7430(?:?; ?:HWND; ?:?):?;
begin
 004C7430    push        ebp
 004C7431    mov         ebp,esp
 004C7433    add         esp,0FFFFFFF0
 004C7436    mov         dword ptr [ebp-0C],ecx
 004C7439    mov         dword ptr [ebp-8],edx
 004C743C    mov         dword ptr [ebp-4],eax
 004C743F    mov         eax,dword ptr [ebp-0C]
 004C7442    xor         edx,edx
 004C7444    mov         dword ptr [eax],edx
 004C7446    mov         byte ptr [ebp-0D],0
>004C744A    jmp         004C746E
 004C744C    mov         edx,dword ptr [ebp-0C]
 004C744F    mov         edx,dword ptr [edx]
 004C7451    mov         eax,dword ptr [ebp-4]
 004C7454    call        TList.Get
 004C7459    mov         eax,dword ptr [eax+4]
 004C745C    cmp         eax,dword ptr [ebp-8]
 004C745F    sete        byte ptr [ebp-0D]
 004C7463    cmp         byte ptr [ebp-0D],0
>004C7467    jne         004C747B
 004C7469    mov         eax,dword ptr [ebp-0C]
 004C746C    inc         dword ptr [eax]
 004C746E    mov         eax,dword ptr [ebp-0C]
 004C7471    mov         eax,dword ptr [eax]
 004C7473    mov         edx,dword ptr [ebp-4]
 004C7476    cmp         eax,dword ptr [edx+8]
>004C7479    jl          004C744C
 004C747B    mov         al,byte ptr [ebp-0D]
 004C747E    mov         esp,ebp
 004C7480    pop         ebp
 004C7481    ret
end;*}

//004C7484
{*function sub_004C7484(?:?):?;
begin
 004C7484    push        ebp
 004C7485    mov         ebp,esp
 004C7487    add         esp,0FFFFFFF8
 004C748A    mov         eax,dword ptr [ebp+8]
 004C748D    mov         eax,dword ptr [eax-4]
 004C7490    call        TWinControl.GetHandle
 004C7495    mov         dword ptr [ebp-8],eax
 004C7498    mov         eax,dword ptr [ebp-8]
 004C749B    mov         dword ptr [ebp-4],eax
 004C749E    cmp         dword ptr [ebp-8],0
>004C74A2    je          004C74BC
 004C74A4    mov         eax,dword ptr [ebp-8]
 004C74A7    mov         dword ptr [ebp-4],eax
 004C74AA    mov         eax,dword ptr [ebp-8]
 004C74AD    push        eax
 004C74AE    call        user32.GetParent
 004C74B3    mov         dword ptr [ebp-8],eax
 004C74B6    cmp         dword ptr [ebp-8],0
>004C74BA    jne         004C74A4
 004C74BC    mov         eax,dword ptr [ebp-4]
 004C74BF    pop         ecx
 004C74C0    pop         ecx
 004C74C1    pop         ebp
 004C74C2    ret
end;*}

//004C74C4
{*procedure sub_004C74C4(?:?; ?:Pointer);
begin
 004C74C4    push        ebp
 004C74C5    mov         ebp,esp
 004C74C7    add         esp,0FFFFFFF0
 004C74CA    mov         dword ptr [ebp-4],edx
 004C74CD    mov         dword ptr [ebp-8],eax
 004C74D0    mov         eax,8
 004C74D5    call        @GetMem
 004C74DA    mov         dword ptr [ebp-0C],eax
 004C74DD    mov         eax,dword ptr [ebp-4]
 004C74E0    mov         edx,dword ptr [ebp-0C]
 004C74E3    mov         dword ptr [edx],eax
 004C74E5    push        ebp
 004C74E6    call        004C7484
 004C74EB    pop         ecx
 004C74EC    mov         edx,dword ptr [ebp-0C]
 004C74EF    mov         dword ptr [edx+4],eax
 004C74F2    lea         ecx,[ebp-10]
 004C74F5    mov         eax,dword ptr [ebp-0C]
 004C74F8    mov         edx,dword ptr [eax+4]
 004C74FB    mov         eax,dword ptr [ebp-8]
 004C74FE    call        004C7430
 004C7503    test        al,al
>004C7505    je          004C7517
 004C7507    mov         ecx,dword ptr [ebp-0C]
 004C750A    mov         edx,dword ptr [ebp-10]
 004C750D    mov         eax,dword ptr [ebp-8]
 004C7510    call        004788DC
>004C7515    jmp         004C7522
 004C7517    mov         edx,dword ptr [ebp-0C]
 004C751A    mov         eax,dword ptr [ebp-8]
 004C751D    call        TList.Add
 004C7522    mov         esp,ebp
 004C7524    pop         ebp
 004C7525    ret
end;*}

//004C7528
procedure sub_004C7528;
begin
{*
 004C7528    push        ebp
 004C7529    mov         ebp,esp
 004C752B    add         esp,0FFFFFFF4
 004C752E    mov         dword ptr [ebp-4],eax
 004C7531    mov         eax,dword ptr [ebp-4]
 004C7534    mov         eax,dword ptr [eax+8];TSiteList.FCount:Integer
 004C7537    dec         eax
 004C7538    test        eax,eax
>004C753A    jl          004C7564
 004C753C    inc         eax
 004C753D    mov         dword ptr [ebp-0C],eax
 004C7540    mov         dword ptr [ebp-8],0
 004C7547    mov         edx,dword ptr [ebp-8]
 004C754A    mov         eax,dword ptr [ebp-4]
 004C754D    call        TList.Get
 004C7552    mov         edx,8
 004C7557    call        @FreeMem
 004C755C    inc         dword ptr [ebp-8]
 004C755F    dec         dword ptr [ebp-0C]
>004C7562    jne         004C7547
 004C7564    mov         eax,dword ptr [ebp-4]
 004C7567    call        00478648
 004C756C    mov         esp,ebp
 004C756E    pop         ebp
 004C756F    ret
*}
end;

//004C7570
{*function sub_004C7570(?:?):?;
begin
 004C7570    push        ebp
 004C7571    mov         ebp,esp
 004C7573    add         esp,0FFFFFFEC
 004C7576    mov         dword ptr [ebp-4],eax
 004C7579    xor         eax,eax
 004C757B    mov         dword ptr [ebp-8],eax
 004C757E    mov         eax,dword ptr [ebp-4]
 004C7581    cmp         dword ptr [eax+8],0
>004C7585    je          004C75F6
 004C7587    mov         eax,dword ptr [ebp-4]
 004C758A    cmp         dword ptr [eax+8],1
>004C758E    jne         004C75A1
 004C7590    xor         edx,edx
 004C7592    mov         eax,dword ptr [ebp-4]
 004C7595    call        TList.Get
 004C759A    mov         eax,dword ptr [eax]
 004C759C    mov         dword ptr [ebp-8],eax
>004C759F    jmp         004C75F6
 004C75A1    call        user32.GetDesktopWindow
 004C75A6    mov         dword ptr [ebp-10],eax
 004C75A9    mov         eax,dword ptr [ebp-10]
 004C75AC    push        eax
 004C75AD    call        user32.GetTopWindow
 004C75B2    mov         dword ptr [ebp-14],eax
>004C75B5    jmp         004C75EA
 004C75B7    lea         ecx,[ebp-0C]
 004C75BA    mov         edx,dword ptr [ebp-14]
 004C75BD    mov         eax,dword ptr [ebp-4]
 004C75C0    call        004C7430
 004C75C5    test        al,al
>004C75C7    je          004C75DC
 004C75C9    mov         eax,dword ptr [ebp-4]
 004C75CC    mov         eax,dword ptr [eax+4]
 004C75CF    mov         edx,dword ptr [ebp-0C]
 004C75D2    mov         eax,dword ptr [eax+edx*4]
 004C75D5    mov         eax,dword ptr [eax]
 004C75D7    mov         dword ptr [ebp-8],eax
>004C75DA    jmp         004C75EA
 004C75DC    push        2
 004C75DE    mov         eax,dword ptr [ebp-14]
 004C75E1    push        eax
 004C75E2    call        user32.GetWindow
 004C75E7    mov         dword ptr [ebp-14],eax
 004C75EA    cmp         dword ptr [ebp-8],0
>004C75EE    jne         004C75F6
 004C75F0    cmp         dword ptr [ebp-14],0
>004C75F4    jne         004C75B7
 004C75F6    mov         eax,dword ptr [ebp-8]
 004C75F9    mov         esp,ebp
 004C75FB    pop         ebp
 004C75FC    ret
end;*}

//004C7600
{*procedure sub_004C7600(?:?);
begin
 004C7600    push        ebp
 004C7601    mov         ebp,esp
 004C7603    add         esp,0FFFFFFF8
 004C7606    mov         dword ptr [ebp-8],edx
 004C7609    mov         dword ptr [ebp-4],eax
 004C760C    mov         eax,dword ptr [ebp-8]
 004C760F    mov         eax,dword ptr [eax+4]
 004C7612    mov         edx,dword ptr [ebp-4]
 004C7615    mov         dword ptr [edx+4],eax;TDragObject.FDragTarget:Pointer
 004C7618    mov         eax,dword ptr [ebp-8]
 004C761B    mov         eax,dword ptr [eax+8]
 004C761E    mov         edx,dword ptr [ebp-4]
 004C7621    mov         dword ptr [edx+8],eax;TDragObject.FDragHandle:HWND
 004C7624    mov         eax,dword ptr [ebp-4]
 004C7627    mov         edx,dword ptr [ebp-8]
 004C762A    mov         ecx,dword ptr [edx+0C]
 004C762D    mov         dword ptr [eax+0C],ecx;TDragObject.FDragPos:TPoint
 004C7630    mov         ecx,dword ptr [edx+10]
 004C7633    mov         dword ptr [eax+10],ecx
 004C7636    mov         eax,dword ptr [ebp-4]
 004C7639    mov         edx,dword ptr [ebp-8]
 004C763C    mov         ecx,dword ptr [edx+14]
 004C763F    mov         dword ptr [eax+14],ecx;TDragObject.FDragTargetPos:TPoint
 004C7642    mov         ecx,dword ptr [edx+18]
 004C7645    mov         dword ptr [eax+18],ecx
 004C7648    mov         eax,dword ptr [ebp-4]
 004C764B    mov         edx,dword ptr [ebp-8]
 004C764E    mov         ecx,dword ptr [edx+20]
 004C7651    mov         dword ptr [eax+20],ecx;TDragObject.FMouseDeltaX:Double
 004C7654    mov         ecx,dword ptr [edx+24]
 004C7657    mov         dword ptr [eax+24],ecx;TDragObject.?f24:dword
 004C765A    mov         eax,dword ptr [ebp-4]
 004C765D    mov         edx,dword ptr [ebp-8]
 004C7660    mov         ecx,dword ptr [edx+28]
 004C7663    mov         dword ptr [eax+28],ecx;TDragObject.FMouseDeltaY:Double
 004C7666    mov         ecx,dword ptr [edx+2C]
 004C7669    mov         dword ptr [eax+2C],ecx;TDragObject.?f2C:dword
 004C766C    pop         ecx
 004C766D    pop         ecx
 004C766E    pop         ebp
 004C766F    ret
end;*}

//004C7670
{*function sub_004C7670(?:?):?;
begin
 004C7670    push        ebp
 004C7671    mov         ebp,esp
 004C7673    add         esp,0FFFFFFF8
 004C7676    mov         dword ptr [ebp-4],eax
 004C7679    mov         eax,dword ptr [ebp-4]
 004C767C    push        eax
 004C767D    push        4C7890
 004C7682    call        00484814
 004C7687    mov         dword ptr [ebp-8],eax
 004C768A    mov         eax,dword ptr [ebp-8]
 004C768D    push        eax
 004C768E    call        user32.SetCapture
 004C7693    mov         eax,dword ptr [ebp-8]
 004C7696    pop         ecx
 004C7697    pop         ecx
 004C7698    pop         ebp
 004C7699    ret
end;*}

//004C769C
{*procedure sub_004C769C(?:?; ?:?);
begin
 004C769C    push        ebp
 004C769D    mov         ebp,esp
 004C769F    add         esp,0FFFFFFF4
 004C76A2    mov         dword ptr [ebp-0C],ecx
 004C76A5    mov         dword ptr [ebp-8],edx
 004C76A8    mov         dword ptr [ebp-4],eax
 004C76AB    mov         esp,ebp
 004C76AD    pop         ebp
 004C76AE    ret         8
end;*}

//004C76B4
{*procedure sub_004C76B4(?:?);
begin
 004C76B4    push        ebp
 004C76B5    mov         ebp,esp
 004C76B7    add         esp,0FFFFFEF8
 004C76BD    mov         dword ptr [ebp-8],edx
 004C76C0    mov         dword ptr [ebp-4],eax
 004C76C3    lea         edx,[ebp-108]
 004C76C9    mov         eax,dword ptr [ebp-4]
 004C76CC    mov         eax,dword ptr [eax]
 004C76CE    call        TObject.ClassName
 004C76D3    lea         edx,[ebp-108]
 004C76D9    mov         eax,dword ptr [ebp-8]
 004C76DC    call        @LStrFromString
 004C76E1    mov         esp,ebp
 004C76E3    pop         ebp
 004C76E4    ret
end;*}

//004C76E8
{*procedure sub_004C76E8(?:?; ?:?);
begin
 004C76E8    push        ebp
 004C76E9    mov         ebp,esp
 004C76EB    add         esp,0FFFFFFF8
 004C76EE    mov         dword ptr [ebp-8],edx
 004C76F1    mov         dword ptr [ebp-4],eax
 004C76F4    call        user32.ReleaseCapture
 004C76F9    mov         eax,dword ptr [ebp-8]
 004C76FC    call        004848D0
 004C7701    pop         ecx
 004C7702    pop         ecx
 004C7703    pop         ebp
 004C7704    ret
end;*}

//004C7708
{*procedure sub_004C7708(?:?);
begin
 004C7708    push        ebp
 004C7709    mov         ebp,esp
 004C770B    add         esp,0FFFFFFF0
 004C770E    push        ebx
 004C770F    push        esi
 004C7710    push        edi
 004C7711    mov         dword ptr [ebp-8],edx
 004C7714    mov         dword ptr [ebp-4],eax
 004C7717    xor         eax,eax
 004C7719    push        ebp
 004C771A    push        4C77E5
 004C771F    push        dword ptr fs:[eax]
 004C7722    mov         dword ptr fs:[eax],esp
 004C7725    mov         eax,dword ptr [ebp-8]
 004C7728    mov         eax,dword ptr [eax]
 004C772A    cmp         eax,215
>004C772F    jg          004C7749
>004C7731    je          004C777F
 004C7733    sub         eax,200
>004C7738    je          004C7758
 004C773A    sub         eax,2
>004C773D    je          004C7788
 004C773F    sub         eax,3
>004C7742    je          004C7788
>004C7744    jmp         004C77DB
 004C7749    sub         eax,0BD00
>004C774E    je          004C77A9
 004C7750    dec         eax
>004C7751    je          004C7791
>004C7753    jmp         004C77DB
 004C7758    lea         edx,[ebp-10]
 004C775B    mov         eax,dword ptr [ebp-8]
 004C775E    mov         eax,dword ptr [eax+8]
 004C7761    call        00408250
 004C7766    lea         eax,[ebp-10]
 004C7769    push        eax
 004C776A    mov         eax,[0055DDD4];gvar_0055DDD4
 004C776F    push        eax
 004C7770    call        user32.ClientToScreen
 004C7775    lea         eax,[ebp-10]
 004C7778    call        004C84D8
>004C777D    jmp         004C77DB
 004C777F    xor         eax,eax
 004C7781    call        DragDone
>004C7786    jmp         004C77DB
 004C7788    mov         al,1
 004C778A    call        DragDone
>004C778F    jmp         004C77DB
 004C7791    mov         eax,dword ptr [ebp-8]
 004C7794    cmp         dword ptr [eax+4],11
>004C7798    jne         004C77DB
 004C779A    mov         eax,[0055DDCC];gvar_0055DDCC
 004C779F    add         eax,0C
 004C77A2    call        004C84D8
>004C77A7    jmp         004C77DB
 004C77A9    mov         eax,dword ptr [ebp-8]
 004C77AC    mov         eax,dword ptr [eax+4]
 004C77AF    sub         eax,11
>004C77B2    je          004C77BB
 004C77B4    sub         eax,0A
>004C77B7    je          004C77CA
>004C77B9    jmp         004C77DB
 004C77BB    mov         eax,[0055DDCC];gvar_0055DDCC
 004C77C0    add         eax,0C
 004C77C3    call        004C84D8
>004C77C8    jmp         004C77DB
 004C77CA    mov         eax,dword ptr [ebp-8]
 004C77CD    mov         dword ptr [eax+0C],1
 004C77D4    xor         eax,eax
 004C77D6    call        DragDone
 004C77DB    xor         eax,eax
 004C77DD    pop         edx
 004C77DE    pop         ecx
 004C77DF    pop         ecx
 004C77E0    mov         dword ptr fs:[eax],edx
>004C77E3    jmp         004C780E
>004C77E5    jmp         @HandleAnyException
 004C77EA    cmp         dword ptr ds:[55DDC8],0;gvar_0055DDC8
>004C77F1    je          004C77FA
 004C77F3    xor         eax,eax
 004C77F5    call        DragDone
 004C77FA    mov         eax,[0055B4C8];^Application:TApplication
 004C77FF    mov         eax,dword ptr [eax]
 004C7801    mov         edx,dword ptr [ebp-4]
 004C7804    call        TApplication.HandleException
 004C7809    call        @DoneExcept
 004C780E    pop         edi
 004C780F    pop         esi
 004C7810    pop         ebx
 004C7811    mov         esp,ebp
 004C7813    pop         ebp
 004C7814    ret
end;*}

//004C7818
{*function sub_004C7818:?;
begin
 004C7818    push        ebp
 004C7819    mov         ebp,esp
 004C781B    add         esp,0FFFFFFF8
 004C781E    mov         dword ptr [ebp-4],eax
 004C7821    xor         eax,eax
 004C7823    mov         dword ptr [ebp-8],eax
 004C7826    mov         eax,dword ptr [ebp-8]
 004C7829    pop         ecx
 004C782A    pop         ecx
 004C782B    pop         ebp
 004C782C    ret
end;*}

//004C7830
{*function sub_004C7830(?:?; ?:?):?;
begin
 004C7830    push        ebp
 004C7831    mov         ebp,esp
 004C7833    add         esp,0FFFFFFF4
 004C7836    mov         dword ptr [ebp-0C],ecx
 004C7839    mov         byte ptr [ebp-5],dl
 004C783C    mov         dword ptr [ebp-4],eax
 004C783F    cmp         byte ptr [ebp-5],0
>004C7843    je          004C784D
 004C7845    mov         word ptr [ebp-8],0FFF4
>004C784B    jmp         004C7853
 004C784D    mov         word ptr [ebp-8],0FFF3
 004C7853    mov         ax,word ptr [ebp-8]
 004C7857    mov         esp,ebp
 004C7859    pop         ebp
 004C785A    ret         4
end;*}

//004C7860
procedure sub_004C7860;
begin
{*
 004C7860    push        ebp
 004C7861    mov         ebp,esp
 004C7863    push        ecx
 004C7864    mov         dword ptr [ebp-4],eax
 004C7867    pop         ecx
 004C7868    pop         ebp
 004C7869    ret
*}
end;

//004C786C
{*function sub_004C786C:?;
begin
 004C786C    push        ebp
 004C786D    mov         ebp,esp
 004C786F    add         esp,0FFFFFFF8
 004C7872    mov         dword ptr [ebp-4],eax
 004C7875    mov         eax,[0055C664];gvar_0055C664
 004C787A    mov         dword ptr [ebp-8],eax
 004C787D    mov         eax,dword ptr [ebp-8]
 004C7880    pop         ecx
 004C7881    pop         ecx
 004C7882    pop         ebp
 004C7883    ret
end;*}

//004C7884
procedure sub_004C7884;
begin
{*
 004C7884    push        ebp
 004C7885    mov         ebp,esp
 004C7887    push        ecx
 004C7888    mov         dword ptr [ebp-4],eax
 004C788B    pop         ecx
 004C788C    pop         ebp
 004C788D    ret
*}
end;

//004C78E4
procedure TDragObject.BeforeDestruction;
begin
{*
 004C78E4    push        ebp
 004C78E5    mov         ebp,esp
 004C78E7    push        ecx
 004C78E8    mov         dword ptr [ebp-4],eax
 004C78EB    mov         eax,dword ptr [ebp-4];{DragSave:TDragObject}
 004C78EE    call        TCustomVariantType.BeforeDestruction
 004C78F3    xor         eax,eax
 004C78F5    mov         [0055DDF8],eax
 004C78FA    pop         ecx
 004C78FB    pop         ebp
 004C78FC    ret
*}
end;

//004C7900
procedure TDragObject.AfterConstruction;
begin
{*
 004C7900    push        ebp
 004C7901    mov         ebp,esp
 004C7903    push        ecx
 004C7904    mov         dword ptr [ebp-4],eax
 004C7907    mov         eax,dword ptr [ebp-4];{DragSave:TDragObject}
 004C790A    call        TCustomVariantType.AfterConstruction
 004C790F    xor         eax,eax
 004C7911    mov         [0055DDF8],eax
 004C7916    pop         ecx
 004C7917    pop         ebp
 004C7918    ret
*}
end;

//004C791C
procedure TDragObjectEx.BeforeDestruction;
begin
{*
 004C791C    push        ebp
 004C791D    mov         ebp,esp
 004C791F    push        ecx
 004C7920    mov         dword ptr [ebp-4],eax
 004C7923    pop         ecx
 004C7924    pop         ebp
 004C7925    ret
*}
end;

//004C7928
constructor TDragControlObjectEx.Create;
begin
{*
 004C7928    push        ebp
 004C7929    mov         ebp,esp
 004C792B    add         esp,0FFFFFFF4
 004C792E    test        dl,dl
>004C7930    je          004C793A
 004C7932    add         esp,0FFFFFFF0
 004C7935    call        @ClassCreate
 004C793A    mov         dword ptr [ebp-0C],ecx
 004C793D    mov         byte ptr [ebp-5],dl
 004C7940    mov         dword ptr [ebp-4],eax
 004C7943    mov         eax,dword ptr [ebp-4]
 004C7946    mov         edx,dword ptr [ebp-0C]
 004C7949    mov         dword ptr [eax+38],edx;TBaseDragControlObject.......................................FCon...
 004C794C    mov         eax,dword ptr [ebp-4]
 004C794F    cmp         byte ptr [ebp-5],0
>004C7953    je          004C7964
 004C7955    call        @AfterConstruction
 004C795A    pop         dword ptr fs:[0]
 004C7961    add         esp,0C
 004C7964    mov         eax,dword ptr [ebp-4]
 004C7967    mov         esp,ebp
 004C7969    pop         ebp
 004C796A    ret
*}
end;

//004C796C
{*procedure sub_004C796C(?:?);
begin
 004C796C    push        ebp
 004C796D    mov         ebp,esp
 004C796F    add         esp,0FFFFFFF8
 004C7972    mov         dword ptr [ebp-8],edx
 004C7975    mov         dword ptr [ebp-4],eax
 004C7978    mov         edx,dword ptr [ebp-8]
 004C797B    mov         eax,dword ptr [ebp-4]
 004C797E    call        004C7600
 004C7983    mov         eax,dword ptr [ebp-8]
 004C7986    mov         edx,dword ptr ds:[4C4864];TBaseDragControlObject
 004C798C    call        @IsClass
 004C7991    test        al,al
>004C7993    je          004C79A1
 004C7995    mov         eax,dword ptr [ebp-8]
 004C7998    mov         eax,dword ptr [eax+38]
 004C799B    mov         edx,dword ptr [ebp-4]
 004C799E    mov         dword ptr [edx+38],eax;TBaseDragControlObject........................................FCo...
 004C79A1    pop         ecx
 004C79A2    pop         ecx
 004C79A3    pop         ebp
 004C79A4    ret
end;*}

//004C79A8
{*procedure sub_004C79A8(?:?; ?:?; ?:?);
begin
 004C79A8    push        ebp
 004C79A9    mov         ebp,esp
 004C79AB    add         esp,0FFFFFFF4
 004C79AE    push        esi
 004C79AF    mov         dword ptr [ebp-0C],ecx
 004C79B2    mov         dword ptr [ebp-8],edx
 004C79B5    mov         dword ptr [ebp-4],eax
 004C79B8    mov         eax,dword ptr [ebp+8]
 004C79BB    push        eax
 004C79BC    mov         ecx,dword ptr [ebp-0C]
 004C79BF    mov         edx,dword ptr [ebp-8]
 004C79C2    mov         eax,dword ptr [ebp-4]
 004C79C5    mov         eax,dword ptr [eax+38];TBaseDragControlObject.........................................FC...
 004C79C8    mov         si,0FFDD
 004C79CC    call        @CallDynaInst;TControl.sub_004CBB90
 004C79D1    pop         esi
 004C79D2    mov         esp,ebp
 004C79D4    pop         ebp
 004C79D5    ret         4
end;*}

//004C79D8
{*procedure sub_004C79D8(?:?; ?:?; ?:?; ?:?);
begin
 004C79D8    push        ebp
 004C79D9    mov         ebp,esp
 004C79DB    add         esp,0FFFFFFF4
 004C79DE    push        ebx
 004C79DF    push        esi
 004C79E0    mov         dword ptr [ebp-0C],ecx
 004C79E3    mov         dword ptr [ebp-8],edx
 004C79E6    mov         dword ptr [ebp-4],eax
 004C79E9    cmp         byte ptr [ebp+8],0
>004C79ED    jne         004C7A03
 004C79EF    mov         eax,dword ptr [ebp-4]
 004C79F2    mov         eax,dword ptr [eax+38];TBaseDragControlObject..........................................F...
 004C79F5    mov         si,0FFDF
 004C79F9    call        @CallDynaInst;TControl.sub_004CBA98
 004C79FE    xor         eax,eax
 004C7A00    mov         dword ptr [ebp-8],eax
 004C7A03    mov         eax,dword ptr [ebp+0C]
 004C7A06    push        eax
 004C7A07    mov         ecx,dword ptr [ebp-0C]
 004C7A0A    mov         edx,dword ptr [ebp-8]
 004C7A0D    mov         eax,dword ptr [ebp-4]
 004C7A10    mov         ebx,dword ptr [eax]
 004C7A12    call        dword ptr [ebx+24];TBaseDragControlObject.sub_004C79A8
 004C7A15    pop         esi
 004C7A16    pop         ebx
 004C7A17    mov         esp,ebp
 004C7A19    pop         ebp
 004C7A1A    ret         8
end;*}

//004C7A20
{*function sub_004C7A20(?:?; ?:?):?;
begin
 004C7A20    push        ebp
 004C7A21    mov         ebp,esp
 004C7A23    add         esp,0FFFFFFF4
 004C7A26    mov         dword ptr [ebp-0C],ecx
 004C7A29    mov         byte ptr [ebp-5],dl
 004C7A2C    mov         dword ptr [ebp-4],eax
 004C7A2F    cmp         byte ptr [ebp-5],0
>004C7A33    je          004C7A45
 004C7A35    mov         eax,dword ptr [ebp-4]
 004C7A38    mov         eax,dword ptr [eax+38];TDragControlObject...........................................FCon...
 004C7A3B    mov         ax,word ptr [eax+7A];TControl.FDragCursor:TCursor
 004C7A3F    mov         word ptr [ebp-8],ax
>004C7A43    jmp         004C7A4B
 004C7A45    mov         word ptr [ebp-8],0FFF3
 004C7A4B    mov         ax,word ptr [ebp-8]
 004C7A4F    mov         esp,ebp
 004C7A51    pop         ebp
 004C7A52    ret         4
end;*}

//004C7A58
{*function sub_004C7A58:?;
begin
 004C7A58    push        ebp
 004C7A59    mov         ebp,esp
 004C7A5B    add         esp,0FFFFFFF8
 004C7A5E    mov         dword ptr [ebp-4],eax
 004C7A61    mov         eax,dword ptr [ebp-4]
 004C7A64    mov         eax,dword ptr [eax+38];TDragControlObject............................................FCo...
 004C7A67    mov         edx,dword ptr [eax]
 004C7A69    call        dword ptr [edx+4C];TControl.sub_004C9C40
 004C7A6C    mov         dword ptr [ebp-8],eax
 004C7A6F    mov         eax,dword ptr [ebp-8]
 004C7A72    pop         ecx
 004C7A73    pop         ecx
 004C7A74    pop         ebp
 004C7A75    ret
end;*}

//004C7A78
procedure sub_004C7A78;
begin
{*
 004C7A78    push        ebp
 004C7A79    mov         ebp,esp
 004C7A7B    push        ecx
 004C7A7C    mov         dword ptr [ebp-4],eax
 004C7A7F    mov         eax,dword ptr [ebp-4]
 004C7A82    mov         eax,dword ptr [eax+38];TDragControlObject.............................................FC...
 004C7A85    mov         edx,dword ptr [eax]
 004C7A87    call        dword ptr [edx+4C];TControl.sub_004C9C40
 004C7A8A    test        eax,eax
>004C7A8C    je          004C7A9E
 004C7A8E    mov         eax,dword ptr [ebp-4]
 004C7A91    mov         eax,dword ptr [eax+38];TDragControlObject..............................................F...
 004C7A94    mov         edx,dword ptr [eax]
 004C7A96    call        dword ptr [edx+4C];TControl.sub_004C9C40
 004C7A99    call        004D5C54
 004C7A9E    pop         ecx
 004C7A9F    pop         ebp
 004C7AA0    ret
*}
end;

//004C7AA4
procedure sub_004C7AA4;
begin
{*
 004C7AA4    push        ebp
 004C7AA5    mov         ebp,esp
 004C7AA7    push        ecx
 004C7AA8    mov         dword ptr [ebp-4],eax
 004C7AAB    mov         eax,dword ptr [ebp-4]
 004C7AAE    mov         eax,dword ptr [eax+38];TDragControlObject..................................................
 004C7AB1    mov         edx,dword ptr [eax]
 004C7AB3    call        dword ptr [edx+4C];TControl.sub_004C9C40
 004C7AB6    test        eax,eax
>004C7AB8    je          004C7ACA
 004C7ABA    mov         eax,dword ptr [ebp-4]
 004C7ABD    mov         eax,dword ptr [eax+38];TDragControlObject..................................................
 004C7AC0    mov         edx,dword ptr [eax]
 004C7AC2    call        dword ptr [edx+4C];TControl.sub_004C9C40
 004C7AC5    call        004D5C34
 004C7ACA    pop         ecx
 004C7ACB    pop         ebp
 004C7ACC    ret
*}
end;

//004C7AD0
procedure TDragControlObjectEx.BeforeDestruction;
begin
{*
 004C7AD0    push        ebp
 004C7AD1    mov         ebp,esp
 004C7AD3    push        ecx
 004C7AD4    mov         dword ptr [ebp-4],eax
 004C7AD7    pop         ecx
 004C7AD8    pop         ebp
 004C7AD9    ret
*}
end;

//004C7ADC
constructor TDragDockObject.Create;
begin
{*
 004C7ADC    push        ebp
 004C7ADD    mov         ebp,esp
 004C7ADF    add         esp,0FFFFFFF4
 004C7AE2    test        dl,dl
>004C7AE4    je          004C7AEE
 004C7AE6    add         esp,0FFFFFFF0
 004C7AE9    call        @ClassCreate
 004C7AEE    mov         dword ptr [ebp-0C],ecx
 004C7AF1    mov         byte ptr [ebp-5],dl
 004C7AF4    mov         dword ptr [ebp-4],eax
 004C7AF7    mov         ecx,dword ptr [ebp-0C]
 004C7AFA    xor         edx,edx
 004C7AFC    mov         eax,dword ptr [ebp-4]
 004C7AFF    call        TDragControlObjectEx.Create
 004C7B04    mov         dl,1
 004C7B06    mov         eax,[00485498];TBrush
 004C7B0B    call        TBrush.Create;TBrush.Create
 004C7B10    mov         edx,dword ptr [ebp-4]
 004C7B13    mov         dword ptr [edx+40],eax;TDragDockObject.FBrush:TBrush
 004C7B16    mov         edx,0FFFFFF
 004C7B1B    xor         eax,eax
 004C7B1D    call        0048FA88
 004C7B22    mov         edx,eax
 004C7B24    mov         eax,dword ptr [ebp-4]
 004C7B27    mov         eax,dword ptr [eax+40];TDragDockObject.FBrush:TBrush
 004C7B2A    call        0048775C
 004C7B2F    mov         eax,dword ptr [ebp-4]
 004C7B32    cmp         byte ptr [ebp-5],0
>004C7B36    je          004C7B47
 004C7B38    call        @AfterConstruction
 004C7B3D    pop         dword ptr fs:[0]
 004C7B44    add         esp,0C
 004C7B47    mov         eax,dword ptr [ebp-4]
 004C7B4A    mov         esp,ebp
 004C7B4C    pop         ebp
 004C7B4D    ret
*}
end;

//004C7B50
destructor TDragDockObject.Destroy;
begin
{*
 004C7B50    push        ebp
 004C7B51    mov         ebp,esp
 004C7B53    add         esp,0FFFFFFF8
 004C7B56    call        @BeforeDestruction
 004C7B5B    mov         byte ptr [ebp-5],dl
 004C7B5E    mov         dword ptr [ebp-4],eax
 004C7B61    mov         eax,dword ptr [ebp-4]
 004C7B64    mov         eax,dword ptr [eax+40];TDragDockObject.FBrush:TBrush
 004C7B67    call        TObject.Free
 004C7B6C    mov         dl,byte ptr [ebp-5]
 004C7B6F    and         dl,0FC
 004C7B72    mov         eax,dword ptr [ebp-4]
 004C7B75    call        TObject.Destroy
 004C7B7A    cmp         byte ptr [ebp-5],0
>004C7B7E    jle         004C7B88
 004C7B80    mov         eax,dword ptr [ebp-4]
 004C7B83    call        @ClassDestroy
 004C7B88    pop         ecx
 004C7B89    pop         ecx
 004C7B8A    pop         ebp
 004C7B8B    ret
*}
end;

//004C7B8C
{*procedure sub_004C7B8C(?:?);
begin
 004C7B8C    push        ebp
 004C7B8D    mov         ebp,esp
 004C7B8F    add         esp,0FFFFFFF8
 004C7B92    push        esi
 004C7B93    push        edi
 004C7B94    mov         dword ptr [ebp-8],edx
 004C7B97    mov         dword ptr [ebp-4],eax
 004C7B9A    mov         edx,dword ptr [ebp-8]
 004C7B9D    mov         eax,dword ptr [ebp-4]
 004C7BA0    call        004C796C
 004C7BA5    mov         eax,dword ptr [ebp-8]
 004C7BA8    mov         edx,dword ptr ds:[4C4A44];TDragDockObject
 004C7BAE    call        @IsClass
 004C7BB3    test        al,al
>004C7BB5    je          004C7C0C
 004C7BB7    mov         eax,dword ptr [ebp-8]
 004C7BBA    mov         al,byte ptr [eax+54]
 004C7BBD    mov         edx,dword ptr [ebp-4]
 004C7BC0    mov         byte ptr [edx+54],al;TDragDockObject.FDropAlign:TAlign
 004C7BC3    mov         eax,dword ptr [ebp-8]
 004C7BC6    mov         eax,dword ptr [eax+58]
 004C7BC9    mov         edx,dword ptr [ebp-4]
 004C7BCC    mov         dword ptr [edx+58],eax;TDragDockObject.FDropOnControl:TControl
 004C7BCF    mov         eax,dword ptr [ebp-8]
 004C7BD2    mov         al,byte ptr [eax+6C]
 004C7BD5    mov         edx,dword ptr [ebp-4]
 004C7BD8    mov         byte ptr [edx+6C],al;TDragDockObject.FFloating:Boolean
 004C7BDB    mov         eax,dword ptr [ebp-8]
 004C7BDE    mov         edx,dword ptr [ebp-4]
 004C7BE1    lea         esi,[eax+44]
 004C7BE4    lea         edi,[edx+44];TDragDockObject.FDockRect:TRect
 004C7BE7    movs        dword ptr [edi],dword ptr [esi]
 004C7BE8    movs        dword ptr [edi],dword ptr [esi]
 004C7BE9    movs        dword ptr [edi],dword ptr [esi]
 004C7BEA    movs        dword ptr [edi],dword ptr [esi]
 004C7BEB    mov         eax,dword ptr [ebp-8]
 004C7BEE    mov         edx,dword ptr [ebp-4]
 004C7BF1    lea         esi,[eax+5C]
 004C7BF4    lea         edi,[edx+5C];TDragDockObject.FEraseDockRect:TRect
 004C7BF7    movs        dword ptr [edi],dword ptr [esi]
 004C7BF8    movs        dword ptr [edi],dword ptr [esi]
 004C7BF9    movs        dword ptr [edi],dword ptr [esi]
 004C7BFA    movs        dword ptr [edi],dword ptr [esi]
 004C7BFB    mov         eax,dword ptr [ebp-8]
 004C7BFE    mov         edx,dword ptr [eax+40]
 004C7C01    mov         eax,dword ptr [ebp-4]
 004C7C04    mov         eax,dword ptr [eax+40];TDragDockObject.FBrush:TBrush
 004C7C07    mov         ecx,dword ptr [eax]
 004C7C09    call        dword ptr [ecx+8];TBrush.sub_00487628
 004C7C0C    pop         edi
 004C7C0D    pop         esi
 004C7C0E    pop         ecx
 004C7C0F    pop         ecx
 004C7C10    pop         ebp
 004C7C11    ret
end;*}

//004C7C14
{*procedure sub_004C7C14(?:?; ?:?; ?:?);
begin
 004C7C14    push        ebp
 004C7C15    mov         ebp,esp
 004C7C17    add         esp,0FFFFFFF4
 004C7C1A    push        esi
 004C7C1B    mov         dword ptr [ebp-0C],ecx
 004C7C1E    mov         dword ptr [ebp-8],edx
 004C7C21    mov         dword ptr [ebp-4],eax
 004C7C24    mov         eax,dword ptr [ebp+8]
 004C7C27    push        eax
 004C7C28    mov         ecx,dword ptr [ebp-0C]
 004C7C2B    mov         edx,dword ptr [ebp-8]
 004C7C2E    mov         eax,dword ptr [ebp-4]
 004C7C31    mov         eax,dword ptr [eax+38];TDragDockObject.................................................F...
 004C7C34    mov         si,0FFE5
 004C7C38    call        @CallDynaInst;TControl.sub_004CBD24
 004C7C3D    pop         esi
 004C7C3E    mov         esp,ebp
 004C7C40    pop         ebp
 004C7C41    ret         4
end;*}

//004C7C44
{*function sub_004C7C44(?:?; ?:?):?;
begin
 004C7C44    push        ebp
 004C7C45    mov         ebp,esp
 004C7C47    add         esp,0FFFFFFF4
 004C7C4A    mov         dword ptr [ebp-8],edx
 004C7C4D    mov         dword ptr [ebp-4],eax
 004C7C50    mov         eax,dword ptr [ebp-4]
 004C7C53    cdq
 004C7C54    xor         eax,edx
 004C7C56    sub         eax,edx
 004C7C58    mov         ecx,eax
 004C7C5A    mov         eax,dword ptr [ebp-8]
 004C7C5D    cdq
 004C7C5E    xor         eax,edx
 004C7C60    sub         eax,edx
 004C7C62    cmp         ecx,eax
>004C7C64    jge         004C7C6E
 004C7C66    mov         eax,dword ptr [ebp-4]
 004C7C69    mov         dword ptr [ebp-0C],eax
>004C7C6C    jmp         004C7C74
 004C7C6E    mov         eax,dword ptr [ebp-8]
 004C7C71    mov         dword ptr [ebp-0C],eax
 004C7C74    mov         eax,dword ptr [ebp-0C]
 004C7C77    mov         esp,ebp
 004C7C79    pop         ebp
 004C7C7A    ret
end;*}

//004C7C7C
{*procedure sub_004C7C7C(?:?);
begin
 004C7C7C    push        ebp
 004C7C7D    mov         ebp,esp
 004C7C7F    add         esp,0FFFFFFE4
 004C7C82    push        esi
 004C7C83    push        edi
 004C7C84    mov         esi,edx
 004C7C86    lea         edi,[ebp-1C]
 004C7C89    movs        dword ptr [edi],dword ptr [esi]
 004C7C8A    movs        dword ptr [edi],dword ptr [esi]
 004C7C8B    movs        dword ptr [edi],dword ptr [esi]
 004C7C8C    movs        dword ptr [edi],dword ptr [esi]
 004C7C8D    mov         dword ptr [ebp-4],eax
 004C7C90    mov         eax,dword ptr [ebp-1C]
 004C7C93    mov         edx,dword ptr [ebp-4]
 004C7C96    cmp         eax,dword ptr [edx+0C];TDragDockObject.FDragPos:TPoint
>004C7C99    jg          004C7CA6
 004C7C9B    mov         eax,dword ptr [ebp-14]
 004C7C9E    mov         edx,dword ptr [ebp-4]
 004C7CA1    cmp         eax,dword ptr [edx+0C];TDragDockObject.FDragPos:TPoint
>004C7CA4    jge         004C7CC4
 004C7CA6    push        ebp
 004C7CA7    mov         edx,dword ptr [ebp-14]
 004C7CAA    mov         eax,dword ptr [ebp-4]
 004C7CAD    sub         edx,dword ptr [eax+0C]
 004C7CB0    mov         eax,dword ptr [ebp-1C]
 004C7CB3    mov         ecx,dword ptr [ebp-4]
 004C7CB6    sub         eax,dword ptr [ecx+0C]
 004C7CB9    call        004C7C44
 004C7CBE    pop         ecx
 004C7CBF    mov         dword ptr [ebp-8],eax
>004C7CC2    jmp         004C7CC9
 004C7CC4    xor         eax,eax
 004C7CC6    mov         dword ptr [ebp-8],eax
 004C7CC9    mov         eax,dword ptr [ebp-18]
 004C7CCC    mov         edx,dword ptr [ebp-4]
 004C7CCF    cmp         eax,dword ptr [edx+10]
>004C7CD2    jg          004C7CDF
 004C7CD4    mov         eax,dword ptr [ebp-10]
 004C7CD7    mov         edx,dword ptr [ebp-4]
 004C7CDA    cmp         eax,dword ptr [edx+10]
>004C7CDD    jge         004C7CFD
 004C7CDF    push        ebp
 004C7CE0    mov         edx,dword ptr [ebp-10]
 004C7CE3    mov         eax,dword ptr [ebp-4]
 004C7CE6    sub         edx,dword ptr [eax+10]
 004C7CE9    mov         eax,dword ptr [ebp-18]
 004C7CEC    mov         ecx,dword ptr [ebp-4]
 004C7CEF    sub         eax,dword ptr [ecx+10]
 004C7CF2    call        004C7C44
 004C7CF7    pop         ecx
 004C7CF8    mov         dword ptr [ebp-0C],eax
>004C7CFB    jmp         004C7D02
 004C7CFD    xor         eax,eax
 004C7CFF    mov         dword ptr [ebp-0C],eax
 004C7D02    cmp         dword ptr [ebp-8],0
>004C7D06    jne         004C7D0E
 004C7D08    cmp         dword ptr [ebp-0C],0
>004C7D0C    je          004C7D26
 004C7D0E    mov         eax,dword ptr [ebp-0C]
 004C7D11    neg         eax
 004C7D13    push        eax
 004C7D14    mov         eax,dword ptr [ebp-8]
 004C7D17    neg         eax
 004C7D19    push        eax
 004C7D1A    mov         eax,dword ptr [ebp-4]
 004C7D1D    add         eax,44;TDragDockObject.FDockRect:TRect
 004C7D20    push        eax
 004C7D21    call        user32.OffsetRect
 004C7D26    pop         edi
 004C7D27    pop         esi
 004C7D28    mov         esp,ebp
 004C7D2A    pop         ebp
 004C7D2B    ret
end;*}

//004C7D2C
procedure sub_004C7D2C;
begin
{*
 004C7D2C    push        ebp
 004C7D2D    mov         ebp,esp
 004C7D2F    push        ecx
 004C7D30    push        esi
 004C7D31    mov         dword ptr [ebp-4],eax
 004C7D34    mov         edx,dword ptr [ebp-4]
 004C7D37    mov         eax,dword ptr [ebp-4]
 004C7D3A    mov         eax,dword ptr [eax+38];TDragDockObject.....................................................
 004C7D3D    mov         si,0FFDB
 004C7D41    call        @CallDynaInst;TControl.sub_004CC084
 004C7D46    pop         esi
 004C7D47    pop         ecx
 004C7D48    pop         ebp
 004C7D49    ret
*}
end;

//004C7D4C
procedure sub_004C7D4C;
begin
{*
 004C7D4C    push        ebp
 004C7D4D    mov         ebp,esp
 004C7D4F    push        ecx
 004C7D50    push        esi
 004C7D51    mov         dword ptr [ebp-4],eax
 004C7D54    mov         edx,dword ptr [ebp-4]
 004C7D57    mov         eax,dword ptr [ebp-4]
 004C7D5A    mov         eax,dword ptr [eax+38];TDragDockObject.....................................................
 004C7D5D    mov         si,0FFDA
 004C7D61    call        @CallDynaInst;TControl.sub_004CC0A8
 004C7D66    pop         esi
 004C7D67    pop         ecx
 004C7D68    pop         ebp
 004C7D69    ret
*}
end;

//004C7D6C
{*function sub_004C7D6C(?:?; ?:?):?;
begin
 004C7D6C    push        ebp
 004C7D6D    mov         ebp,esp
 004C7D6F    add         esp,0FFFFFFF4
 004C7D72    mov         dword ptr [ebp-0C],ecx
 004C7D75    mov         byte ptr [ebp-7],dl
 004C7D78    mov         dword ptr [ebp-4],eax
 004C7D7B    mov         word ptr [ebp-6],0
 004C7D81    mov         ax,word ptr [ebp-6]
 004C7D85    mov         esp,ebp
 004C7D87    pop         ebp
 004C7D88    ret         4
end;*}

//004C7D8C
{*function sub_004C7D8C:?;
begin
 004C7D8C    push        ebp
 004C7D8D    mov         ebp,esp
 004C7D8F    add         esp,0FFFFFFF8
 004C7D92    mov         dword ptr [ebp-4],eax
 004C7D95    mov         dword ptr [ebp-8],4
 004C7D9C    mov         eax,dword ptr [ebp-8]
 004C7D9F    pop         ecx
 004C7DA0    pop         ecx
 004C7DA1    pop         ebp
 004C7DA2    ret
end;*}

//004C7DA4
procedure TDragDockObjectEx.BeforeDestruction;
begin
{*
 004C7DA4    push        ebp
 004C7DA5    mov         ebp,esp
 004C7DA7    push        ecx
 004C7DA8    mov         dword ptr [ebp-4],eax
 004C7DAB    pop         ecx
 004C7DAC    pop         ebp
 004C7DAD    ret
*}
end;

//004C7E44
{*function sub_004C7E44(?:?; ?:?):?;
begin
 004C7E44    push        ebp
 004C7E45    mov         ebp,esp
 004C7E47    add         esp,0FFFFFFBC
 004C7E4A    push        esi
 004C7E4B    mov         dword ptr [ebp-4],eax
 004C7E4E    mov         byte ptr [ebp-5],1
 004C7E52    mov         eax,dword ptr [ebp+8]
 004C7E55    add         eax,0FFFFFFF7
 004C7E58    call        004C8308
 004C7E5D    mov         dword ptr [ebp-1C],eax
 004C7E60    push        4
 004C7E62    mov         eax,dword ptr [ebp-1C]
 004C7E65    push        eax
 004C7E66    call        user32.GetWindow
 004C7E6B    mov         edx,dword ptr ds:[55B4C8];^Application:TApplication
 004C7E71    mov         edx,dword ptr [edx]
 004C7E73    cmp         eax,dword ptr [edx+30];TApplication.FHandle:HWND
>004C7E76    je          004C7EAC
 004C7E78    mov         eax,dword ptr [ebp-1C]
 004C7E7B    call        004C6F7C
 004C7E80    mov         dword ptr [ebp-0C],eax
 004C7E83    cmp         dword ptr [ebp-0C],0
>004C7E87    je          004C7FFF
>004C7E8D    jmp         004C7E98
 004C7E8F    mov         eax,dword ptr [ebp-0C]
 004C7E92    mov         eax,dword ptr [eax+30]
 004C7E95    mov         dword ptr [ebp-0C],eax
 004C7E98    mov         eax,dword ptr [ebp-0C]
 004C7E9B    cmp         dword ptr [eax+30],0
>004C7E9F    jne         004C7E8F
 004C7EA1    mov         eax,dword ptr [ebp-0C]
 004C7EA4    call        TWinControl.GetHandle
 004C7EA9    mov         dword ptr [ebp-1C],eax
 004C7EAC    cmp         dword ptr [ebp-1C],0
>004C7EB0    je          004C7FFF
 004C7EB6    mov         eax,dword ptr [ebp-4]
 004C7EB9    mov         dword ptr [ebp-0C],eax
>004C7EBC    jmp         004C7EC7
 004C7EBE    mov         eax,dword ptr [ebp-0C]
 004C7EC1    mov         eax,dword ptr [eax+30]
 004C7EC4    mov         dword ptr [ebp-0C],eax
 004C7EC7    mov         eax,dword ptr [ebp-0C]
 004C7ECA    cmp         dword ptr [eax+30],0
>004C7ECE    jne         004C7EBE
 004C7ED0    mov         eax,dword ptr [ebp-0C]
 004C7ED3    call        TWinControl.GetHandle
 004C7ED8    mov         dword ptr [ebp-20],eax
 004C7EDB    mov         eax,dword ptr [ebp-1C]
 004C7EDE    cmp         eax,dword ptr [ebp-20]
>004C7EE1    je          004C7FFF
 004C7EE7    mov         eax,dword ptr [ebp+8]
 004C7EEA    mov         eax,dword ptr [eax-10]
 004C7EED    cmp         dword ptr [eax+30],0
>004C7EF1    je          004C7F20
 004C7EF3    mov         eax,dword ptr [ebp+8]
 004C7EF6    mov         eax,dword ptr [eax-10]
 004C7EF9    mov         eax,dword ptr [eax+30]
 004C7EFC    mov         dword ptr [ebp-0C],eax
>004C7EFF    jmp         004C7F0A
 004C7F01    mov         eax,dword ptr [ebp-0C]
 004C7F04    mov         eax,dword ptr [eax+30]
 004C7F07    mov         dword ptr [ebp-0C],eax
 004C7F0A    mov         eax,dword ptr [ebp-0C]
 004C7F0D    cmp         dword ptr [eax+30],0
>004C7F11    jne         004C7F01
 004C7F13    mov         eax,dword ptr [ebp-0C]
 004C7F16    call        TWinControl.GetHandle
 004C7F1B    mov         dword ptr [ebp-24],eax
>004C7F1E    jmp         004C7F4A
 004C7F20    mov         eax,dword ptr [ebp+8]
 004C7F23    mov         eax,dword ptr [eax-10]
 004C7F26    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004C7F2C    call        @IsClass
 004C7F31    test        al,al
>004C7F33    je          004C7F45
 004C7F35    mov         eax,dword ptr [ebp+8]
 004C7F38    mov         eax,dword ptr [eax-10]
 004C7F3B    call        TWinControl.GetHandle
 004C7F40    mov         dword ptr [ebp-24],eax
>004C7F43    jmp         004C7F4A
 004C7F45    xor         eax,eax
 004C7F47    mov         dword ptr [ebp-24],eax
 004C7F4A    mov         byte ptr [ebp-10],0
 004C7F4E    mov         eax,dword ptr [ebp+8]
 004C7F51    mov         edx,dword ptr [eax-9]
 004C7F54    mov         dword ptr [ebp-18],edx
 004C7F57    mov         edx,dword ptr [eax-5]
 004C7F5A    mov         dword ptr [ebp-14],edx
 004C7F5D    lea         eax,[ebp-24]
 004C7F60    push        eax
 004C7F61    push        4C7DB0
 004C7F66    call        kernel32.GetCurrentThreadId
 004C7F6B    push        eax
 004C7F6C    call        user32.EnumThreadWindows
 004C7F71    cmp         byte ptr [ebp-10],0
>004C7F75    je          004C7FFF
 004C7F7B    lea         eax,[ebp-34]
 004C7F7E    push        eax
 004C7F7F    mov         eax,dword ptr [ebp-1C]
 004C7F82    push        eax
 004C7F83    call        user32.GetWindowRect
 004C7F88    mov         eax,dword ptr [ebp+8]
 004C7F8B    add         eax,0FFFFFFF7
 004C7F8E    push        eax
 004C7F8F    mov         eax,dword ptr [ebp+8]
 004C7F92    dec         eax
 004C7F93    push        eax
 004C7F94    lea         ecx,[ebp-44]
 004C7F97    mov         eax,dword ptr [ebp+8]
 004C7F9A    mov         edx,dword ptr [eax-10]
 004C7F9D    mov         eax,dword ptr [ebp-4]
 004C7FA0    mov         si,0FFBD
 004C7FA4    call        @CallDynaInst
 004C7FA9    mov         eax,[0055DDCC];gvar_0055DDCC
 004C7FAE    mov         edx,dword ptr ds:[4C4A44];TDragDockObject
 004C7FB4    call        @IsClass
 004C7FB9    test        al,al
>004C7FBB    je          004C7FE6
 004C7FBD    mov         eax,[0055DDCC];gvar_0055DDCC
 004C7FC2    mov         eax,dword ptr [eax+38]
 004C7FC5    cmp         dword ptr [eax+0A0],0
>004C7FCC    je          004C7FE6
 004C7FCE    mov         eax,[0055DDCC];gvar_0055DDCC
 004C7FD3    mov         eax,dword ptr [eax+38]
 004C7FD6    mov         eax,dword ptr [eax+0A0]
 004C7FDC    call        TWinControl.GetHandle
 004C7FE1    cmp         eax,dword ptr [ebp-1C]
>004C7FE4    je          004C7FFF
 004C7FE6    lea         eax,[ebp-44]
 004C7FE9    push        eax
 004C7FEA    lea         eax,[ebp-34]
 004C7FED    push        eax
 004C7FEE    lea         eax,[ebp-34]
 004C7FF1    push        eax
 004C7FF2    call        user32.IntersectRect
 004C7FF7    test        eax,eax
>004C7FF9    je          004C7FFF
 004C7FFB    mov         byte ptr [ebp-5],0
 004C7FFF    mov         al,byte ptr [ebp-5]
 004C8002    pop         esi
 004C8003    mov         esp,ebp
 004C8005    pop         ebp
 004C8006    ret
end;*}

//004C8008
{*function sub_004C8008(?:?):?;
begin
 004C8008    push        ebp
 004C8009    mov         ebp,esp
 004C800B    push        ecx
 004C800C    mov         eax,dword ptr [ebp+8]
 004C800F    mov         eax,dword ptr [eax-10]
 004C8012    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004C8018    call        @IsClass
 004C801D    test        al,al
>004C801F    je          004C8049
 004C8021    mov         eax,dword ptr [ebp+8]
 004C8024    mov         eax,dword ptr [eax-14]
 004C8027    call        TWinControl.GetHandle
 004C802C    push        eax
 004C802D    mov         eax,dword ptr [ebp+8]
 004C8030    mov         eax,dword ptr [eax-10]
 004C8033    call        TWinControl.GetHandle
 004C8038    push        eax
 004C8039    call        user32.IsChild
 004C803E    cmp         eax,1
 004C8041    sbb         eax,eax
 004C8043    inc         eax
 004C8044    mov         byte ptr [ebp-1],al
>004C8047    jmp         004C804D
 004C8049    mov         byte ptr [ebp-1],0
 004C804D    mov         al,byte ptr [ebp-1]
 004C8050    pop         ecx
 004C8051    pop         ebp
 004C8052    ret
end;*}

//004C8054
{*function sub_004C8054(?:?; ?:?):?;
begin
 004C8054    push        ebp
 004C8055    mov         ebp,esp
 004C8057    add         esp,0FFFFFFD0
 004C805A    push        esi
 004C805B    push        edi
 004C805C    mov         esi,eax
 004C805E    lea         edi,[ebp-9]
 004C8061    movs        dword ptr [edi],dword ptr [esi]
 004C8062    movs        dword ptr [edi],dword ptr [esi]
 004C8063    mov         dword ptr [ebp-10],edx
 004C8066    xor         eax,eax
 004C8068    mov         dword ptr [ebp-18],eax
 004C806B    cmp         dword ptr ds:[55DDF0],0;gvar_0055DDF0:TList
>004C8072    je          004C81AF
 004C8078    push        11
 004C807A    call        user32.GetKeyState
 004C807F    test        ax,8000
 004C8083    setne       al
 004C8086    mov         edx,dword ptr ds:[55B4C8];^Application:TApplication
 004C808C    mov         edx,dword ptr [edx]
 004C808E    xor         al,byte ptr [edx+0B4];TApplication.FAutoDragDocking:Boolean
>004C8094    je          004C81AF
 004C809A    mov         eax,[0055DDF4];gvar_0055DDF4:TSiteList
 004C809F    mov         edx,dword ptr [eax]
 004C80A1    call        dword ptr [edx+8]
 004C80A4    mov         eax,[0055DDF0];gvar_0055DDF0:TList
 004C80A9    mov         eax,dword ptr [eax+8]
 004C80AC    dec         eax
 004C80AD    test        eax,eax
>004C80AF    jl          004C817E
 004C80B5    inc         eax
 004C80B6    mov         dword ptr [ebp-20],eax
 004C80B9    mov         dword ptr [ebp-1C],0
 004C80C0    mov         edx,dword ptr [ebp-1C]
 004C80C3    mov         eax,[0055DDF0];gvar_0055DDF0:TList
 004C80C8    call        TList.Get
 004C80CD    mov         dword ptr [ebp-14],eax
 004C80D0    mov         eax,dword ptr [ebp-14]
 004C80D3    cmp         eax,dword ptr [ebp-10]
>004C80D6    je          004C8172
 004C80DC    mov         eax,dword ptr [ebp-14]
 004C80DF    cmp         byte ptr [eax+1A6],0
>004C80E6    je          004C8172
 004C80EC    mov         eax,dword ptr [ebp-14]
 004C80EF    mov         edx,dword ptr [eax]
 004C80F1    call        dword ptr [edx+50]
 004C80F4    test        al,al
>004C80F6    je          004C8172
 004C80F8    mov         eax,dword ptr [ebp-14]
 004C80FB    call        TWinControl.GetHandle
 004C8100    push        eax
 004C8101    call        user32.IsWindowVisible
 004C8106    test        eax,eax
>004C8108    je          004C8172
 004C810A    push        ebp
 004C810B    call        004C8008
 004C8110    pop         ecx
 004C8111    test        al,al
>004C8113    jne         004C8172
 004C8115    mov         eax,dword ptr [ebp-10]
 004C8118    mov         eax,dword ptr [eax+0A0]
 004C811E    cmp         eax,dword ptr [ebp-14]
>004C8121    jne         004C812E
 004C8123    mov         eax,dword ptr [ebp-14]
 004C8126    call        004D1CC8
 004C812B    dec         eax
>004C812C    jle         004C8172
 004C812E    mov         byte ptr [ebp-1],1
 004C8132    lea         eax,[ebp-9]
 004C8135    push        eax
 004C8136    lea         eax,[ebp-1]
 004C8139    push        eax
 004C813A    lea         ecx,[ebp-30]
 004C813D    mov         edx,dword ptr [ebp-10]
 004C8140    mov         eax,dword ptr [ebp-14]
 004C8143    mov         si,0FFBD
 004C8147    call        @CallDynaInst
 004C814C    cmp         byte ptr [ebp-1],0
>004C8150    je          004C8172
 004C8152    push        dword ptr [ebp-5]
 004C8155    push        dword ptr [ebp-9]
 004C8158    lea         eax,[ebp-30]
 004C815B    push        eax
 004C815C    call        user32.PtInRect
 004C8161    test        eax,eax
>004C8163    je          004C8172
 004C8165    mov         edx,dword ptr [ebp-14]
 004C8168    mov         eax,[0055DDF4];gvar_0055DDF4:TSiteList
 004C816D    call        004C74C4
 004C8172    inc         dword ptr [ebp-1C]
 004C8175    dec         dword ptr [ebp-20]
>004C8178    jne         004C80C0
 004C817E    mov         eax,[0055DDF4];gvar_0055DDF4:TSiteList
 004C8183    cmp         dword ptr [eax+8],0
>004C8187    jle         004C8196
 004C8189    mov         eax,[0055DDF4];gvar_0055DDF4:TSiteList
 004C818E    call        004C7570
 004C8193    mov         dword ptr [ebp-18],eax
 004C8196    cmp         dword ptr [ebp-18],0
>004C819A    je          004C81AF
 004C819C    push        ebp
 004C819D    mov         eax,dword ptr [ebp-18]
 004C81A0    call        004C7E44
 004C81A5    pop         ecx
 004C81A6    test        al,al
>004C81A8    jne         004C81AF
 004C81AA    xor         eax,eax
 004C81AC    mov         dword ptr [ebp-18],eax
 004C81AF    mov         eax,dword ptr [ebp-18]
 004C81B2    pop         edi
 004C81B3    pop         esi
 004C81B4    mov         esp,ebp
 004C81B6    pop         ebp
 004C81B7    ret
end;*}

//004C81B8
{*procedure sub_004C81B8(?:TPanel; ?:?);
begin
 004C81B8    push        ebp
 004C81B9    mov         ebp,esp
 004C81BB    add         esp,0FFFFFFF4
 004C81BE    mov         byte ptr [ebp-5],dl
 004C81C1    mov         dword ptr [ebp-4],eax
 004C81C4    cmp         dword ptr [ebp-4],0
>004C81C8    je          004C8222
 004C81CA    cmp         dword ptr ds:[55DDF0],0;gvar_0055DDF0:TList
>004C81D1    jne         004C81E4
 004C81D3    mov         dl,1
 004C81D5    mov         eax,[004759C0];TList
 004C81DA    call        TObject.Create;TList.Create
 004C81DF    mov         [0055DDF0],eax;gvar_0055DDF0:TList
 004C81E4    mov         edx,dword ptr [ebp-4]
 004C81E7    mov         eax,[0055DDF0];gvar_0055DDF0:TList
 004C81EC    call        00478890
 004C81F1    mov         dword ptr [ebp-0C],eax
 004C81F4    cmp         byte ptr [ebp-5],0
>004C81F8    je          004C820F
 004C81FA    cmp         dword ptr [ebp-0C],0FFFFFFFF
>004C81FE    jne         004C8222
 004C8200    mov         edx,dword ptr [ebp-4]
 004C8203    mov         eax,[0055DDF0];gvar_0055DDF0:TList
 004C8208    call        TList.Add
>004C820D    jmp         004C8222
 004C820F    cmp         dword ptr [ebp-0C],0FFFFFFFF
>004C8213    je          004C8222
 004C8215    mov         edx,dword ptr [ebp-0C]
 004C8218    mov         eax,[0055DDF0];gvar_0055DDF0:TList
 004C821D    call        00478668
 004C8222    mov         esp,ebp
 004C8224    pop         ebp
 004C8225    ret
end;*}

//004C8228
{*function sub_004C8228(?:?; ?:?; ?:?; ?:?; ?:?):?;
begin
 004C8228    push        ebp
 004C8229    mov         ebp,esp
 004C822B    add         esp,0FFFFFFDC
 004C822E    mov         dword ptr [ebp-0C],ecx
 004C8231    mov         byte ptr [ebp-5],dl
 004C8234    mov         dword ptr [ebp-4],eax
 004C8237    xor         eax,eax
 004C8239    mov         dword ptr [ebp-10],eax
 004C823C    cmp         dword ptr [ebp-4],0
>004C8240    je          004C8284
 004C8242    mov         eax,dword ptr [ebp+8]
 004C8245    mov         edx,dword ptr [eax]
 004C8247    mov         dword ptr [ebp-24],edx
 004C824A    mov         edx,dword ptr [eax+4]
 004C824D    mov         dword ptr [ebp-20],edx
 004C8250    mov         eax,dword ptr [ebp+0C]
 004C8253    mov         dword ptr [ebp-18],eax
 004C8256    mov         eax,dword ptr [ebp-0C]
 004C8259    mov         dword ptr [ebp-1C],eax
 004C825C    cmp         byte ptr ds:[55DDE8],2;gvar_0055DDE8
 004C8263    sete        al
 004C8266    mov         byte ptr [ebp-14],al
 004C8269    lea         eax,[ebp-24]
 004C826C    push        eax
 004C826D    xor         eax,eax
 004C826F    mov         al,byte ptr [ebp-5]
 004C8272    push        eax
 004C8273    push        0B02F
 004C8278    mov         eax,dword ptr [ebp-4]
 004C827B    push        eax
 004C827C    call        user32.SendMessageA
 004C8281    mov         dword ptr [ebp-10],eax
 004C8284    mov         eax,dword ptr [ebp-10]
 004C8287    mov         esp,ebp
 004C8289    pop         ebp
 004C828A    ret         8
end;*}

//004C8290
{*function sub_004C8290(?:HWND):?;
begin
 004C8290    push        ebp
 004C8291    mov         ebp,esp
 004C8293    add         esp,0FFFFFFF4
 004C8296    mov         dword ptr [ebp-4],eax
 004C8299    mov         byte ptr [ebp-5],0
 004C829D    cmp         dword ptr [ebp-4],0
>004C82A1    je          004C82FE
 004C82A3    lea         eax,[ebp-0C]
 004C82A6    push        eax
 004C82A7    mov         eax,dword ptr [ebp-4]
 004C82AA    push        eax
 004C82AB    call        user32.GetWindowThreadProcessId
 004C82B0    test        eax,eax
>004C82B2    je          004C82FE
 004C82B4    call        kernel32.GetCurrentProcessId
 004C82B9    cmp         eax,dword ptr [ebp-0C]
>004C82BC    jne         004C82FE
 004C82BE    mov         eax,[0055DDBC];gvar_0055DDBC
 004C82C3    call        @LStrToPChar
 004C82C8    push        eax
 004C82C9    call        kernel32.GlobalFindAtomA
 004C82CE    cmp         ax,word ptr ds:[55DDB8];gvar_0055DDB8
>004C82D5    jne         004C82F0
 004C82D7    movzx       eax,word ptr ds:[55DDB8];gvar_0055DDB8
 004C82DE    push        eax
 004C82DF    mov         eax,dword ptr [ebp-4]
 004C82E2    push        eax
 004C82E3    call        user32.GetPropA
 004C82E8    test        eax,eax
 004C82EA    setne       byte ptr [ebp-5]
>004C82EE    jmp         004C82FE
 004C82F0    mov         eax,dword ptr [ebp-4]
 004C82F3    call        004C6F34
 004C82F8    test        eax,eax
 004C82FA    setne       byte ptr [ebp-5]
 004C82FE    mov         al,byte ptr [ebp-5]
 004C8301    mov         esp,ebp
 004C8303    pop         ebp
 004C8304    ret
end;*}

//004C8308
{*function sub_004C8308(?:?):?;
begin
 004C8308    push        ebp
 004C8309    mov         ebp,esp
 004C830B    add         esp,0FFFFFFF8
 004C830E    mov         dword ptr [ebp-4],eax
 004C8311    mov         eax,dword ptr [ebp-4]
 004C8314    push        dword ptr [eax+4]
 004C8317    push        dword ptr [eax]
 004C8319    call        user32.WindowFromPoint
 004C831E    mov         dword ptr [ebp-8],eax
 004C8321    cmp         dword ptr [ebp-8],0
>004C8325    je          004C8345
 004C8327    mov         eax,dword ptr [ebp-8]
 004C832A    call        004C8290
 004C832F    test        al,al
>004C8331    jne         004C8345
 004C8333    mov         eax,dword ptr [ebp-8]
 004C8336    push        eax
 004C8337    call        user32.GetParent
 004C833C    mov         dword ptr [ebp-8],eax
 004C833F    cmp         dword ptr [ebp-8],0
>004C8343    jne         004C8327
 004C8345    mov         eax,dword ptr [ebp-8]
 004C8348    pop         ecx
 004C8349    pop         ecx
 004C834A    pop         ebp
 004C834B    ret
end;*}

//004C834C
{*function sub_004C834C(?:?; ?:?; ?:?; ?:?):?;
begin
 004C834C    push        ebp
 004C834D    mov         ebp,esp
 004C834F    add         esp,0FFFFFFF0
 004C8352    mov         byte ptr [ebp-9],cl
 004C8355    mov         dword ptr [ebp-8],edx
 004C8358    mov         dword ptr [ebp-4],eax
 004C835B    cmp         byte ptr [ebp-9],0
>004C835F    jne         004C838B
 004C8361    mov         eax,dword ptr [ebp-4]
 004C8364    call        004C8308
 004C8369    mov         edx,dword ptr [ebp-8]
 004C836C    mov         dword ptr [edx],eax
 004C836E    push        0
 004C8370    mov         eax,dword ptr [ebp-4]
 004C8373    push        eax
 004C8374    mov         eax,dword ptr [ebp-8]
 004C8377    mov         eax,dword ptr [eax]
 004C8379    mov         ecx,dword ptr ds:[55DDCC];gvar_0055DDCC
 004C837F    mov         dl,5
 004C8381    call        004C8228
 004C8386    mov         dword ptr [ebp-10],eax
>004C8389    jmp         004C83AC
 004C838B    mov         eax,dword ptr [ebp-4]
 004C838E    mov         edx,dword ptr [ebp+8]
 004C8391    call        004C8054
 004C8396    mov         dword ptr [ebp-10],eax
 004C8399    cmp         dword ptr [ebp-10],0
>004C839D    je          004C83AC
 004C839F    mov         eax,dword ptr [ebp-10]
 004C83A2    call        TWinControl.GetHandle
 004C83A7    mov         edx,dword ptr [ebp-8]
 004C83AA    mov         dword ptr [edx],eax
 004C83AC    mov         eax,dword ptr [ebp-10]
 004C83AF    mov         esp,ebp
 004C83B1    pop         ebp
 004C83B2    ret         4
end;*}

//004C83B8
{*function sub_004C83B8(?:?):?;
begin
 004C83B8    push        ebp
 004C83B9    mov         ebp,esp
 004C83BB    push        ecx
 004C83BC    mov         byte ptr [ebp-1],al
 004C83BF    mov         byte ptr [ebp-2],0
 004C83C3    mov         eax,[0055DDCC];gvar_0055DDCC
 004C83C8    cmp         dword ptr [eax+4],0
>004C83CC    je          004C83FF
 004C83CE    mov         eax,[0055DDCC];gvar_0055DDCC
 004C83D3    mov         eax,dword ptr [eax+4]
 004C83D6    push        eax
 004C83D7    mov         eax,[0055DDCC];gvar_0055DDCC
 004C83DC    add         eax,0C
 004C83DF    push        eax
 004C83E0    mov         eax,[0055DDCC];gvar_0055DDCC
 004C83E5    mov         eax,dword ptr [eax+8]
 004C83E8    mov         ecx,dword ptr ds:[55DDCC];gvar_0055DDCC
 004C83EE    mov         dl,byte ptr [ebp-1]
 004C83F1    call        004C8228
 004C83F6    cmp         eax,1
 004C83F9    sbb         eax,eax
 004C83FB    inc         eax
 004C83FC    mov         byte ptr [ebp-2],al
 004C83FF    mov         al,byte ptr [ebp-2]
 004C8402    pop         ecx
 004C8403    pop         ebp
 004C8404    ret
end;*}

//004C8408
{*function sub_004C8408:?;
begin
 004C8408    push        ebp
 004C8409    mov         ebp,esp
 004C840B    add         esp,0FFFFFFF0
 004C840E    xor         eax,eax
 004C8410    mov         dword ptr [ebp-4],eax
 004C8413    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8418    mov         eax,dword ptr [eax+4]
 004C841B    mov         dword ptr [ebp-0C],eax
 004C841E    cmp         dword ptr [ebp-0C],0
>004C8422    je          004C84CF
 004C8428    mov         eax,dword ptr [ebp-0C]
 004C842B    cmp         byte ptr [eax+1A7],0
>004C8432    je          004C84CF
 004C8438    mov         eax,dword ptr [ebp-0C]
 004C843B    cmp         dword ptr [eax+178],0
>004C8442    je          004C84CF
 004C8448    mov         eax,dword ptr [ebp-0C]
 004C844B    call        004D1BE8
 004C8450    test        eax,eax
>004C8452    je          004C84CF
 004C8454    mov         eax,dword ptr [ebp-0C]
 004C8457    call        004D1BE8
 004C845C    dec         eax
>004C845D    jne         004C847A
 004C845F    xor         edx,edx
 004C8461    mov         eax,dword ptr [ebp-0C]
 004C8464    mov         eax,dword ptr [eax+178]
 004C846A    call        TList.Get
 004C846F    mov         edx,dword ptr ds:[55DDCC];gvar_0055DDCC
 004C8475    cmp         eax,dword ptr [edx+38]
>004C8478    je          004C84CF
 004C847A    mov         eax,[0055DDCC];gvar_0055DDCC
 004C847F    add         eax,0C
 004C8482    xor         edx,edx
 004C8484    call        004C8F78
 004C8489    mov         dword ptr [ebp-8],eax
>004C848C    jmp         004C84C1
 004C848E    mov         edx,dword ptr [ebp-8]
 004C8491    mov         eax,dword ptr [ebp-0C]
 004C8494    mov         eax,dword ptr [eax+178]
 004C849A    call        00478890
 004C849F    mov         dword ptr [ebp-10],eax
 004C84A2    cmp         dword ptr [ebp-10],0FFFFFFFF
>004C84A6    je          004C84B8
 004C84A8    mov         edx,dword ptr [ebp-10]
 004C84AB    mov         eax,dword ptr [ebp-0C]
 004C84AE    call        004D1C1C
 004C84B3    mov         dword ptr [ebp-4],eax
>004C84B6    jmp         004C84CF
 004C84B8    mov         eax,dword ptr [ebp-8]
 004C84BB    mov         eax,dword ptr [eax+30]
 004C84BE    mov         dword ptr [ebp-8],eax
 004C84C1    cmp         dword ptr [ebp-8],0
>004C84C5    je          004C84CF
 004C84C7    mov         eax,dword ptr [ebp-8]
 004C84CA    cmp         eax,dword ptr [ebp-0C]
>004C84CD    jne         004C848E
 004C84CF    mov         eax,dword ptr [ebp-4]
 004C84D2    mov         esp,ebp
 004C84D4    pop         ebp
 004C84D5    ret
end;*}

//004C84D8
{*procedure sub_004C84D8(?:?);
begin
 004C84D8    push        ebp
 004C84D9    mov         ebp,esp
 004C84DB    add         esp,0FFFFFFE4
 004C84DE    push        ebx
 004C84DF    push        esi
 004C84E0    push        edi
 004C84E1    mov         dword ptr [ebp-4],eax
 004C84E4    cmp         byte ptr ds:[55DDE8],0;gvar_0055DDE8
>004C84EB    jne         004C8526
 004C84ED    mov         eax,dword ptr [ebp-4]
 004C84F0    push        dword ptr [eax]
 004C84F2    mov         eax,[0055DDD8];gvar_0055DDD8
 004C84F7    pop         edx
 004C84F8    sub         eax,edx
 004C84FA    cdq
 004C84FB    xor         eax,edx
 004C84FD    sub         eax,edx
 004C84FF    cmp         eax,dword ptr ds:[55DDE4];gvar_0055DDE4
>004C8505    jge         004C8526
 004C8507    mov         eax,dword ptr [ebp-4]
 004C850A    push        dword ptr [eax+4]
 004C850D    mov         eax,[0055DDDC];gvar_0055DDDC
 004C8512    pop         edx
 004C8513    sub         eax,edx
 004C8515    cdq
 004C8516    xor         eax,edx
 004C8518    sub         eax,edx
 004C851A    cmp         eax,dword ptr ds:[55DDE4];gvar_0055DDE4
>004C8520    jl          004C87FE
 004C8526    mov         eax,[0055DDC8];gvar_0055DDC8
 004C852B    push        eax
 004C852C    mov         eax,[0055DDC8];gvar_0055DDC8
 004C8531    mov         cl,byte ptr [eax+9B]
 004C8537    lea         edx,[ebp-10]
 004C853A    mov         eax,dword ptr [ebp-4]
 004C853D    call        004C834C
 004C8542    mov         dword ptr [ebp-0C],eax
 004C8545    cmp         byte ptr ds:[55DDE8],0;gvar_0055DDE8
>004C854C    jne         004C8574
 004C854E    cmp         dword ptr ds:[55DDEC],0;gvar_0055DDEC
>004C8555    je          004C8574
 004C8557    mov         eax,[0055DDDC];gvar_0055DDDC
 004C855C    push        eax
 004C855D    call        user32.GetDesktopWindow
 004C8562    mov         edx,eax
 004C8564    mov         ecx,dword ptr ds:[55DDD8];gvar_0055DDD8
 004C856A    mov         eax,[0055DDEC];gvar_0055DDEC
 004C856F    call        004D5ABC
 004C8574    mov         eax,[0055DDC8];gvar_0055DDC8
 004C8579    cmp         byte ptr [eax+9B],0
>004C8580    jne         004C858F
 004C8582    mov         byte ptr ds:[55DDE8],1;gvar_0055DDE8
 004C8589    mov         byte ptr [ebp-11],0
>004C858D    jmp         004C85A1
 004C858F    cmp         byte ptr ds:[55DDE8],0;gvar_0055DDE8
 004C8596    setne       byte ptr [ebp-11]
 004C859A    mov         byte ptr ds:[55DDE8],2;gvar_0055DDE8
 004C85A1    mov         eax,[0055DDCC];gvar_0055DDCC
 004C85A6    mov         eax,dword ptr [eax+4]
 004C85A9    cmp         eax,dword ptr [ebp-0C]
>004C85AC    je          004C85FF
 004C85AE    mov         al,1
 004C85B0    call        004C83B8
 004C85B5    cmp         dword ptr ds:[55DDCC],0;gvar_0055DDCC
>004C85BC    je          004C87FE
 004C85C2    mov         eax,[0055DDCC];gvar_0055DDCC
 004C85C7    mov         edx,dword ptr [ebp-0C]
 004C85CA    mov         dword ptr [eax+4],edx
 004C85CD    mov         eax,[0055DDCC];gvar_0055DDCC
 004C85D2    mov         edx,dword ptr [ebp-10]
 004C85D5    mov         dword ptr [eax+8],edx
 004C85D8    mov         eax,[0055DDCC];gvar_0055DDCC
 004C85DD    mov         edx,dword ptr [ebp-4]
 004C85E0    mov         ecx,dword ptr [edx]
 004C85E2    mov         dword ptr [eax+0C],ecx
 004C85E5    mov         ecx,dword ptr [edx+4]
 004C85E8    mov         dword ptr [eax+10],ecx
 004C85EB    xor         eax,eax
 004C85ED    call        004C83B8
 004C85F2    cmp         dword ptr ds:[55DDCC],0;gvar_0055DDCC
>004C85F9    je          004C87FE
 004C85FF    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8604    mov         edx,dword ptr [ebp-4]
 004C8607    mov         ecx,dword ptr [edx]
 004C8609    mov         dword ptr [eax+0C],ecx
 004C860C    mov         ecx,dword ptr [edx+4]
 004C860F    mov         dword ptr [eax+10],ecx
 004C8612    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8617    cmp         dword ptr [eax+4],0
>004C861B    je          004C8641
 004C861D    lea         ecx,[ebp-1C]
 004C8620    mov         edx,dword ptr [ebp-4]
 004C8623    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8628    mov         eax,dword ptr [eax+4]
 004C862B    call        TControl.ScreenToClient
 004C8630    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8635    mov         edx,dword ptr [ebp-1C]
 004C8638    mov         dword ptr [eax+14],edx
 004C863B    mov         edx,dword ptr [ebp-18]
 004C863E    mov         dword ptr [eax+18],edx
 004C8641    mov         eax,dword ptr [ebp-4]
 004C8644    mov         eax,dword ptr [eax+4]
 004C8647    push        eax
 004C8648    mov         al,2
 004C864A    call        004C83B8
 004C864F    mov         edx,eax
 004C8651    mov         ecx,dword ptr [ebp-4]
 004C8654    mov         ecx,dword ptr [ecx]
 004C8656    mov         eax,[0055DDCC];gvar_0055DDCC
 004C865B    mov         ebx,dword ptr [eax]
 004C865D    call        dword ptr [ebx+4]
 004C8660    mov         word ptr [ebp-6],ax
 004C8664    cmp         dword ptr ds:[55DDEC],0;gvar_0055DDEC
>004C866B    je          004C86EB
 004C866D    cmp         dword ptr [ebp-0C],0
>004C8671    je          004C867C
 004C8673    mov         eax,dword ptr [ebp-0C]
 004C8676    test        byte ptr [eax+51],20
>004C867A    je          004C86CB
 004C867C    mov         dx,word ptr [ebp-6]
 004C8680    mov         eax,[0055DDEC];gvar_0055DDEC
 004C8685    call        004D5A44
 004C868A    mov         eax,[0055DDEC];gvar_0055DDEC
 004C868F    cmp         byte ptr [eax+6A],0
>004C8693    jne         004C86B4
 004C8695    mov         eax,dword ptr [ebp-4]
 004C8698    mov         eax,dword ptr [eax+4]
 004C869B    push        eax
 004C869C    call        user32.GetDesktopWindow
 004C86A1    mov         edx,eax
 004C86A3    mov         ecx,dword ptr [ebp-4]
 004C86A6    mov         ecx,dword ptr [ecx]
 004C86A8    mov         eax,[0055DDEC];gvar_0055DDEC
 004C86AD    call        004D5ABC
>004C86B2    jmp         004C86EB
 004C86B4    mov         ecx,dword ptr [ebp-4]
 004C86B7    mov         ecx,dword ptr [ecx+4]
 004C86BA    mov         edx,dword ptr [ebp-4]
 004C86BD    mov         edx,dword ptr [edx]
 004C86BF    mov         eax,[0055DDEC];gvar_0055DDEC
 004C86C4    call        004D5BE0
>004C86C9    jmp         004C86EB
 004C86CB    mov         eax,[0055DDEC];gvar_0055DDEC
 004C86D0    call        004D5C74
 004C86D5    movsx       edx,word ptr [ebp-6]
 004C86D9    mov         eax,[0055B6D8];^Screen:TScreen
 004C86DE    mov         eax,dword ptr [eax]
 004C86E0    call        004F0790
 004C86E5    push        eax
 004C86E6    call        user32.SetCursor
 004C86EB    movsx       edx,word ptr [ebp-6]
 004C86EF    mov         eax,[0055B6D8];^Screen:TScreen
 004C86F4    mov         eax,dword ptr [eax]
 004C86F6    call        004F0790
 004C86FB    push        eax
 004C86FC    call        user32.SetCursor
 004C8701    cmp         byte ptr ds:[55DDE8],2;gvar_0055DDE8
>004C8708    jne         004C87FE
 004C870E    cmp         dword ptr [ebp-0C],0
>004C8712    jne         004C8739
 004C8714    mov         eax,dword ptr [ebp-4]
 004C8717    mov         eax,dword ptr [eax+4]
 004C871A    push        eax
 004C871B    mov         ecx,dword ptr [ebp-4]
 004C871E    mov         ecx,dword ptr [ecx]
 004C8720    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8725    mov         eax,dword ptr [eax+38]
 004C8728    mov         edx,dword ptr ds:[55DDCC];gvar_0055DDCC
 004C872E    mov         si,0FFE7
 004C8732    call        @CallDynaInst
>004C8737    jmp         004C87A8
 004C8739    push        ebp
 004C873A    call        004C8408
 004C873F    pop         ecx
 004C8740    mov         edx,dword ptr ds:[55DDCC];gvar_0055DDCC
 004C8746    mov         dword ptr [edx+58],eax
 004C8749    mov         eax,[0055DDCC];gvar_0055DDCC
 004C874E    cmp         dword ptr [eax+58],0
>004C8752    jne         004C8778
 004C8754    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8759    lea         edx,[eax+14]
 004C875C    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8761    mov         eax,dword ptr [eax+4]
 004C8764    mov         si,0FFD8
 004C8768    call        @CallDynaInst
 004C876D    mov         edx,dword ptr ds:[55DDCC];gvar_0055DDCC
 004C8773    mov         byte ptr [edx+54],al
>004C8776    jmp         004C87A8
 004C8778    lea         ecx,[ebp-1C]
 004C877B    mov         edx,dword ptr [ebp-4]
 004C877E    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8783    mov         eax,dword ptr [eax+58]
 004C8786    call        TControl.ScreenToClient
 004C878B    lea         edx,[ebp-1C]
 004C878E    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8793    mov         eax,dword ptr [eax+58]
 004C8796    mov         si,0FFD8
 004C879A    call        @CallDynaInst
 004C879F    mov         edx,dword ptr ds:[55DDCC];gvar_0055DDCC
 004C87A5    mov         byte ptr [edx+54],al
 004C87A8    cmp         dword ptr ds:[55DDCC],0;gvar_0055DDCC
>004C87AF    je          004C87FE
 004C87B1    mov         eax,[0055DDCC];gvar_0055DDCC
 004C87B6    lea         edx,[eax+5C]
 004C87B9    mov         eax,[0055DDCC];gvar_0055DDCC
 004C87BE    add         eax,44
 004C87C1    mov         ecx,10
 004C87C6    call        CompareMem
 004C87CB    test        al,al
>004C87CD    jne         004C87FE
 004C87CF    cmp         byte ptr [ebp-11],0
>004C87D3    je          004C87DF
 004C87D5    mov         eax,[0055DDCC];gvar_0055DDCC
 004C87DA    mov         edx,dword ptr [eax]
 004C87DC    call        dword ptr [edx+34]
 004C87DF    mov         eax,[0055DDCC];gvar_0055DDCC
 004C87E4    mov         edx,dword ptr [eax]
 004C87E6    call        dword ptr [edx+30]
 004C87E9    mov         eax,[0055DDCC];gvar_0055DDCC
 004C87EE    mov         edx,dword ptr ds:[55DDCC];gvar_0055DDCC
 004C87F4    lea         esi,[eax+44]
 004C87F7    lea         edi,[edx+5C]
 004C87FA    movs        dword ptr [edi],dword ptr [esi]
 004C87FB    movs        dword ptr [edi],dword ptr [esi]
 004C87FC    movs        dword ptr [edi],dword ptr [esi]
 004C87FD    movs        dword ptr [edi],dword ptr [esi]
 004C87FE    pop         edi
 004C87FF    pop         esi
 004C8800    pop         ebx
 004C8801    mov         esp,ebp
 004C8803    pop         ebp
 004C8804    ret
end;*}

//004C8808
{*procedure sub_004C8808(?:TDragDockObjectEx; ?:?; ?:?);
begin
 004C8808    push        ebp
 004C8809    mov         ebp,esp
 004C880B    add         esp,0FFFFFFE8
 004C880E    mov         dword ptr [ebp-0C],ecx
 004C8811    mov         byte ptr [ebp-5],dl
 004C8814    mov         dword ptr [ebp-4],eax
 004C8817    mov         eax,dword ptr [ebp-4]
 004C881A    mov         [0055DDCC],eax;gvar_0055DDCC
 004C881F    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8824    xor         edx,edx
 004C8826    mov         dword ptr [eax+4],edx
 004C8829    push        55DDD8;gvar_0055DDD8
 004C882E    call        user32.GetCursorPos
 004C8833    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8838    mov         edx,dword ptr ds:[55DDD8];gvar_0055DDD8
 004C883E    mov         dword ptr [eax+0C],edx
 004C8841    mov         edx,dword ptr ds:[55DDDC];gvar_0055DDDC
 004C8847    mov         dword ptr [eax+10],edx
 004C884A    call        user32.GetCursor
 004C884F    mov         [0055DDE0],eax;gvar_0055DDE0:HICON
 004C8854    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8859    call        004C7670
 004C885E    mov         [0055DDD4],eax;gvar_0055DDD4
 004C8863    mov         eax,dword ptr [ebp-0C]
 004C8866    mov         [0055DDE4],eax;gvar_0055DDE4
 004C886B    mov         eax,dword ptr [ebp-4]
 004C886E    mov         edx,dword ptr ds:[4C4A44];TDragDockObject
 004C8874    call        @IsClass
 004C8879    test        al,al
>004C887B    je          004C893B
 004C8881    mov         eax,dword ptr [ebp-4]
 004C8884    add         eax,44
 004C8887    mov         dword ptr [ebp-10],eax
 004C888A    mov         eax,dword ptr [ebp-10]
 004C888D    mov         eax,dword ptr [eax+8]
 004C8890    mov         edx,dword ptr [ebp-10]
 004C8893    sub         eax,dword ptr [edx]
 004C8895    test        eax,eax
>004C8897    jle         004C88C6
 004C8899    mov         eax,dword ptr [ebp-4]
 004C889C    mov         eax,dword ptr [eax+0C]
 004C889F    mov         edx,dword ptr [ebp-10]
 004C88A2    sub         eax,dword ptr [edx]
 004C88A4    mov         dword ptr [ebp-14],eax
 004C88A7    fild        dword ptr [ebp-14]
 004C88AA    mov         eax,dword ptr [ebp-10]
 004C88AD    mov         eax,dword ptr [eax+8]
 004C88B0    mov         edx,dword ptr [ebp-10]
 004C88B3    sub         eax,dword ptr [edx]
 004C88B5    mov         dword ptr [ebp-18],eax
 004C88B8    fild        dword ptr [ebp-18]
 004C88BB    fdivp       st(1),st
 004C88BD    mov         eax,dword ptr [ebp-4]
 004C88C0    fstp        qword ptr [eax+20]
 004C88C3    wait
>004C88C4    jmp         004C88D1
 004C88C6    mov         eax,dword ptr [ebp-4]
 004C88C9    xor         edx,edx
 004C88CB    mov         dword ptr [eax+20],edx
 004C88CE    mov         dword ptr [eax+24],edx
 004C88D1    mov         eax,dword ptr [ebp-10]
 004C88D4    mov         eax,dword ptr [eax+0C]
 004C88D7    mov         edx,dword ptr [ebp-10]
 004C88DA    sub         eax,dword ptr [edx+4]
 004C88DD    test        eax,eax
>004C88DF    jle         004C8910
 004C88E1    mov         eax,dword ptr [ebp-4]
 004C88E4    mov         eax,dword ptr [eax+10]
 004C88E7    mov         edx,dword ptr [ebp-10]
 004C88EA    sub         eax,dword ptr [edx+4]
 004C88ED    mov         dword ptr [ebp-14],eax
 004C88F0    fild        dword ptr [ebp-14]
 004C88F3    mov         eax,dword ptr [ebp-10]
 004C88F6    mov         eax,dword ptr [eax+0C]
 004C88F9    mov         edx,dword ptr [ebp-10]
 004C88FC    sub         eax,dword ptr [edx+4]
 004C88FF    mov         dword ptr [ebp-18],eax
 004C8902    fild        dword ptr [ebp-18]
 004C8905    fdivp       st(1),st
 004C8907    mov         eax,dword ptr [ebp-4]
 004C890A    fstp        qword ptr [eax+28]
 004C890D    wait
>004C890E    jmp         004C891B
 004C8910    mov         eax,dword ptr [ebp-4]
 004C8913    xor         edx,edx
 004C8915    mov         dword ptr [eax+28],edx
 004C8918    mov         dword ptr [eax+2C],edx
 004C891B    cmp         byte ptr [ebp-5],0
>004C891F    je          004C8932
 004C8921    mov         byte ptr ds:[55DDE8],2;gvar_0055DDE8
 004C8928    mov         eax,dword ptr [ebp-4]
 004C892B    mov         edx,dword ptr [eax]
 004C892D    call        dword ptr [edx+30]
>004C8930    jmp         004C8951
 004C8932    mov         byte ptr ds:[55DDE8],0;gvar_0055DDE8
>004C8939    jmp         004C8951
 004C893B    cmp         byte ptr [ebp-5],0
>004C893F    je          004C894A
 004C8941    mov         byte ptr ds:[55DDE8],1;gvar_0055DDE8
>004C8948    jmp         004C8951
 004C894A    mov         byte ptr ds:[55DDE8],0;gvar_0055DDE8
 004C8951    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8956    mov         edx,dword ptr [eax]
 004C8958    call        dword ptr [edx+8]
 004C895B    mov         [0055DDEC],eax;gvar_0055DDEC
 004C8960    cmp         dword ptr ds:[55DDEC],0;gvar_0055DDEC
>004C8967    je          004C8986
 004C8969    mov         eax,[0055DDDC];gvar_0055DDDC
 004C896E    push        eax
 004C896F    call        user32.GetDesktopWindow
 004C8974    mov         edx,eax
 004C8976    mov         ecx,dword ptr ds:[55DDD8];gvar_0055DDD8
 004C897C    mov         eax,[0055DDEC];gvar_0055DDEC
 004C8981    call        004D5ABC
 004C8986    mov         dl,1
 004C8988    mov         eax,[004C73C8];TSiteList
 004C898D    call        TObject.Create;TSiteList.Create
 004C8992    mov         [0055DDF4],eax;gvar_0055DDF4:TSiteList
 004C8997    cmp         byte ptr ds:[55DDE8],0;gvar_0055DDE8
>004C899E    je          004C89AA
 004C89A0    mov         eax,55DDD8;gvar_0055DDD8
 004C89A5    call        004C84D8
 004C89AA    mov         esp,ebp
 004C89AC    pop         ebp
 004C89AD    ret
end;*}

//004C89B0
{*procedure sub_004C89B0(?:TControl; ?:?; ?:?);
begin
 004C89B0    push        ebp
 004C89B1    mov         ebp,esp
 004C89B3    add         esp,0FFFFFFD8
 004C89B6    push        ebx
 004C89B7    push        esi
 004C89B8    push        edi
 004C89B9    mov         dword ptr [ebp-0C],ecx
 004C89BC    mov         byte ptr [ebp-5],dl
 004C89BF    mov         dword ptr [ebp-4],eax
 004C89C2    mov         eax,dword ptr [ebp-4]
 004C89C5    mov         [0055DDC8],eax;gvar_0055DDC8
 004C89CA    xor         eax,eax
 004C89CC    push        ebp
 004C89CD    push        4C8B77
 004C89D2    push        dword ptr fs:[eax]
 004C89D5    mov         dword ptr fs:[eax],esp
 004C89D8    xor         eax,eax
 004C89DA    mov         dword ptr [ebp-10],eax
 004C89DD    mov         byte ptr ds:[55DDD0],0;gvar_0055DDD0
 004C89E4    mov         eax,dword ptr [ebp-4]
 004C89E7    cmp         byte ptr [eax+9B],0
>004C89EE    jne         004C8A3D
 004C89F0    lea         edx,[ebp-10]
 004C89F3    mov         eax,dword ptr [ebp-4]
 004C89F6    mov         si,0FFDC
 004C89FA    call        @CallDynaInst
 004C89FF    cmp         dword ptr ds:[55DDC8],0;gvar_0055DDC8
>004C8A06    jne         004C8A15
 004C8A08    xor         eax,eax
 004C8A0A    pop         edx
 004C8A0B    pop         ecx
 004C8A0C    pop         ecx
 004C8A0D    mov         dword ptr fs:[eax],edx
>004C8A10    jmp         004C8B8D
 004C8A15    cmp         dword ptr [ebp-10],0
>004C8A19    jne         004C8B5F
 004C8A1F    mov         ecx,dword ptr [ebp-4]
 004C8A22    mov         dl,1
 004C8A24    mov         eax,[004C49B4];TDragControlObjectEx
 004C8A29    call        TDragControlObjectEx.Create;TDragControlObjectEx.Create
 004C8A2E    mov         dword ptr [ebp-10],eax
 004C8A31    mov         byte ptr ds:[55DDD0],1;gvar_0055DDD0
>004C8A38    jmp         004C8B5F
 004C8A3D    lea         edx,[ebp-10]
 004C8A40    mov         eax,dword ptr [ebp-4]
 004C8A43    mov         si,0FFE3
 004C8A47    call        @CallDynaInst
 004C8A4C    cmp         dword ptr ds:[55DDC8],0;gvar_0055DDC8
>004C8A53    jne         004C8A62
 004C8A55    xor         eax,eax
 004C8A57    pop         edx
 004C8A58    pop         ecx
 004C8A59    pop         ecx
 004C8A5A    mov         dword ptr fs:[eax],edx
>004C8A5D    jmp         004C8B8D
 004C8A62    cmp         dword ptr [ebp-10],0
>004C8A66    jne         004C8A81
 004C8A68    mov         ecx,dword ptr [ebp-4]
 004C8A6B    mov         dl,1
 004C8A6D    mov         eax,[004C4B08];TDragDockObjectEx
 004C8A72    call        TDragDockObject.Create;TDragDockObjectEx.Create
 004C8A77    mov         dword ptr [ebp-10],eax
 004C8A7A    mov         byte ptr ds:[55DDD0],1;gvar_0055DDD0
 004C8A81    mov         eax,dword ptr [ebp-10]
 004C8A84    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004C8A87    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004C8A8D    call        @IsClass
 004C8A92    test        al,al
>004C8A94    je          004C8AB3
 004C8A96    mov         eax,dword ptr [ebp-10]
 004C8A99    add         eax,44;TDragDockObjectEx.FDockRect:TRect
 004C8A9C    push        eax
 004C8A9D    mov         eax,dword ptr [ebp-10]
 004C8AA0    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004C8AA3    call        TWinControl.GetHandle
 004C8AA8    push        eax
 004C8AA9    call        user32.GetWindowRect
>004C8AAE    jmp         004C8B4F
 004C8AB3    mov         eax,dword ptr [ebp-10]
 004C8AB6    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004C8AB9    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004C8ABD    jne         004C8AEE
 004C8ABF    mov         eax,dword ptr [ebp-10]
 004C8AC2    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004C8AC5    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004C8ACB    call        @IsClass
 004C8AD0    test        al,al
>004C8AD2    jne         004C8AEE
 004C8AD4    lea         eax,[ebp-18]
 004C8AD7    push        eax
 004C8AD8    call        user32.GetCursorPos
 004C8ADD    mov         eax,dword ptr [ebp-10]
 004C8AE0    mov         edx,dword ptr [ebp-18]
 004C8AE3    mov         dword ptr [eax+44],edx;TDragDockObjectEx.FDockRect:TRect
 004C8AE6    mov         edx,dword ptr [ebp-14]
 004C8AE9    mov         dword ptr [eax+48],edx;TDragDockObjectEx.FDockRect.Top:Longint
>004C8AEC    jmp         004C8B1A
 004C8AEE    lea         ecx,[ebp-28]
 004C8AF1    xor         edx,edx
 004C8AF3    xor         eax,eax
 004C8AF5    call        Point
 004C8AFA    lea         edx,[ebp-28]
 004C8AFD    lea         ecx,[ebp-20]
 004C8B00    mov         eax,dword ptr [ebp-10]
 004C8B03    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004C8B06    call        TControl.ClientToScreen
 004C8B0B    mov         eax,dword ptr [ebp-10]
 004C8B0E    mov         edx,dword ptr [ebp-20]
 004C8B11    mov         dword ptr [eax+44],edx;TDragDockObjectEx.FDockRect:TRect
 004C8B14    mov         edx,dword ptr [ebp-1C]
 004C8B17    mov         dword ptr [eax+48],edx;TDragDockObjectEx.FDockRect.Top:Longint
 004C8B1A    mov         eax,dword ptr [ebp-10]
 004C8B1D    mov         edx,dword ptr [eax+48];TDragDockObjectEx.FDockRect.Top:Longint
 004C8B20    mov         eax,dword ptr [ebp-10]
 004C8B23    mov         eax,dword ptr [eax+38];TDragDockObjectEx...................................................
 004C8B26    add         edx,dword ptr [eax+4C];TControl.Height:Integer
 004C8B29    mov         eax,dword ptr [ebp-10]
 004C8B2C    mov         eax,dword ptr [eax+44];TDragDockObjectEx.FDockRect:TRect
 004C8B2F    mov         ecx,dword ptr [ebp-10]
 004C8B32    mov         ecx,dword ptr [ecx+38];TDragDockObjectEx...................................................
 004C8B35    add         eax,dword ptr [ecx+48];TControl.Width:Integer
 004C8B38    lea         ecx,[ebp-20]
 004C8B3B    call        Point
 004C8B40    mov         eax,dword ptr [ebp-10]
 004C8B43    mov         edx,dword ptr [ebp-20]
 004C8B46    mov         dword ptr [eax+4C],edx;TDragDockObjectEx.FDockRect.Right:Longint
 004C8B49    mov         edx,dword ptr [ebp-1C]
 004C8B4C    mov         dword ptr [eax+50],edx
 004C8B4F    mov         eax,dword ptr [ebp-10]
 004C8B52    mov         edx,dword ptr [ebp-10]
 004C8B55    lea         esi,[eax+44];TDragDockObjectEx.FDockRect:TRect
 004C8B58    lea         edi,[edx+5C];TDragDockObjectEx.FEraseDockRect:TRect
 004C8B5B    movs        dword ptr [edi],dword ptr [esi]
 004C8B5C    movs        dword ptr [edi],dword ptr [esi]
 004C8B5D    movs        dword ptr [edi],dword ptr [esi]
 004C8B5E    movs        dword ptr [edi],dword ptr [esi]
 004C8B5F    mov         ecx,dword ptr [ebp-0C]
 004C8B62    mov         dl,byte ptr [ebp-5]
 004C8B65    mov         eax,dword ptr [ebp-10]
 004C8B68    call        004C8808
 004C8B6D    xor         eax,eax
 004C8B6F    pop         edx
 004C8B70    pop         ecx
 004C8B71    pop         ecx
 004C8B72    mov         dword ptr fs:[eax],edx
>004C8B75    jmp         004C8B8D
>004C8B77    jmp         @HandleAnyException
 004C8B7C    xor         eax,eax
 004C8B7E    mov         [0055DDC8],eax;gvar_0055DDC8
 004C8B83    call        @RaiseAgain
 004C8B88    call        @DoneExcept
 004C8B8D    pop         edi
 004C8B8E    pop         esi
 004C8B8F    pop         ebx
 004C8B90    mov         esp,ebp
 004C8B92    pop         ebp
 004C8B93    ret
end;*}

//004C8B94
{*function sub_004C8B94(?:?):?;
begin
 004C8B94    push        ebp
 004C8B95    mov         ebp,esp
 004C8B97    push        ecx
 004C8B98    push        esi
 004C8B99    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8B9E    cmp         dword ptr [eax+4],0
 004C8BA2    setne       byte ptr [ebp-1]
 004C8BA6    mov         eax,dword ptr [ebp+8]
 004C8BA9    cmp         byte ptr [eax-1],0
>004C8BAD    je          004C8C0D
 004C8BAF    cmp         byte ptr ds:[55DDE8],2;gvar_0055DDE8
>004C8BB6    jne         004C8C0D
 004C8BB8    mov         eax,[0055DDC8];gvar_0055DDC8
 004C8BBD    mov         edx,dword ptr [eax]
 004C8BBF    call        dword ptr [edx+54]
 004C8BC2    test        al,al
>004C8BC4    jne         004C8BD4
 004C8BC6    mov         eax,[0055DDC8];gvar_0055DDC8
 004C8BCB    cmp         dword ptr [eax+0A0],0
>004C8BD2    jne         004C8BDA
 004C8BD4    mov         byte ptr [ebp-1],1
>004C8BD8    jmp         004C8C0D
 004C8BDA    mov         eax,[0055DDC8];gvar_0055DDC8
 004C8BDF    cmp         dword ptr [eax+0A0],0
>004C8BE6    je          004C8C0D
 004C8BE8    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8BED    mov         edx,dword ptr [eax+4]
 004C8BF0    mov         eax,[0055DDC8];gvar_0055DDC8
 004C8BF5    mov         eax,dword ptr [eax+0A0]
 004C8BFB    mov         ecx,dword ptr ds:[55DDC8];gvar_0055DDC8
 004C8C01    mov         si,0FFBE
 004C8C05    call        @CallDynaInst
 004C8C0A    mov         byte ptr [ebp-1],al
 004C8C0D    mov         al,byte ptr [ebp-1]
 004C8C10    pop         esi
 004C8C11    pop         ecx
 004C8C12    pop         ebp
 004C8C13    ret
end;*}

//004C8C14
procedure DragDone(Drop:Boolean);
begin
{*
 004C8C14    push        ebp
 004C8C15    mov         ebp,esp
 004C8C17    add         esp,0FFFFFFE8
 004C8C1A    push        ebx
 004C8C1B    mov         byte ptr [ebp-1],al
 004C8C1E    xor         eax,eax
 004C8C20    mov         dword ptr [ebp-8],eax
 004C8C23    mov         byte ptr [ebp-9],0
 004C8C27    cmp         dword ptr ds:[55DDCC],0;gvar_0055DDCC
>004C8C2E    je          004C8F0A
 004C8C34    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8C39    cmp         byte ptr [eax+30],0
>004C8C3D    jne         004C8F0A
 004C8C43    xor         eax,eax
 004C8C45    push        ebp
 004C8C46    push        4C8F03
 004C8C4B    push        dword ptr fs:[eax]
 004C8C4E    mov         dword ptr fs:[eax],esp
 004C8C51    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8C56    mov         [0055DDF8],eax
 004C8C5B    xor         eax,eax
 004C8C5D    push        ebp
 004C8C5E    push        4C8E91
 004C8C63    push        dword ptr fs:[eax]
 004C8C66    mov         dword ptr fs:[eax],esp
 004C8C69    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8C6E    mov         byte ptr [eax+30],1
 004C8C72    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8C77    mov         dl,byte ptr [ebp-1]
 004C8C7A    mov         byte ptr [eax+1C],dl
 004C8C7D    mov         edx,dword ptr ds:[55DDD4];gvar_0055DDD4
 004C8C83    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8C88    call        004C76E8
 004C8C8D    cmp         byte ptr ds:[55DDE8],2;gvar_0055DDE8
>004C8C94    jne         004C8CC1
 004C8C96    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8C9B    mov         edx,dword ptr ds:[4C4A44];TDragDockObject
 004C8CA1    call        @AsClass
 004C8CA6    mov         dword ptr [ebp-8],eax
 004C8CA9    mov         eax,dword ptr [ebp-8]
 004C8CAC    mov         edx,dword ptr [eax]
 004C8CAE    call        dword ptr [edx+34]
 004C8CB1    mov         eax,dword ptr [ebp-8]
 004C8CB4    cmp         dword ptr [eax+4],0
 004C8CB8    sete        al
 004C8CBB    mov         edx,dword ptr [ebp-8]
 004C8CBE    mov         byte ptr [edx+6C],al
 004C8CC1    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8CC6    cmp         dword ptr [eax+4],0
>004C8CCA    je          004C8CF6
 004C8CCC    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8CD1    mov         eax,dword ptr [eax+4]
 004C8CD4    mov         edx,dword ptr ds:[4C5774];TControl
 004C8CDA    call        @IsClass
 004C8CDF    test        al,al
>004C8CE1    je          004C8CF6
 004C8CE3    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8CE8    mov         edx,dword ptr [eax+14]
 004C8CEB    mov         dword ptr [ebp-12],edx
 004C8CEE    mov         edx,dword ptr [eax+18]
 004C8CF1    mov         dword ptr [ebp-0E],edx
>004C8CF4    jmp         004C8D07
 004C8CF6    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8CFB    mov         edx,dword ptr [eax+0C]
 004C8CFE    mov         dword ptr [ebp-12],edx
 004C8D01    mov         edx,dword ptr [eax+10]
 004C8D04    mov         dword ptr [ebp-0E],edx
 004C8D07    push        ebp
 004C8D08    call        004C8B94
 004C8D0D    pop         ecx
 004C8D0E    test        al,al
>004C8D10    je          004C8D3E
 004C8D12    cmp         byte ptr ds:[55DDE8],2;gvar_0055DDE8
>004C8D19    jne         004C8D24
 004C8D1B    mov         eax,dword ptr [ebp-8]
 004C8D1E    cmp         byte ptr [eax+6C],0
>004C8D22    jne         004C8D38
 004C8D24    cmp         byte ptr ds:[55DDE8],0;gvar_0055DDE8
>004C8D2B    je          004C8D3E
 004C8D2D    mov         al,1
 004C8D2F    call        004C83B8
 004C8D34    test        al,al
>004C8D36    je          004C8D3E
 004C8D38    cmp         byte ptr [ebp-1],0
>004C8D3C    jne         004C8D42
 004C8D3E    xor         eax,eax
>004C8D40    jmp         004C8D44
 004C8D42    mov         al,1
 004C8D44    mov         byte ptr [ebp-9],al
 004C8D47    cmp         byte ptr ds:[55DDE8],2;gvar_0055DDE8
>004C8D4E    jne         004C8DA7
 004C8D50    cmp         byte ptr [ebp-9],0
>004C8D54    je          004C8DC7
 004C8D56    mov         eax,dword ptr [ebp-8]
 004C8D59    cmp         byte ptr [eax+6C],0
>004C8D5D    je          004C8DC7
 004C8D5F    mov         eax,dword ptr [ebp-8]
 004C8D62    mov         eax,dword ptr [eax+38]
 004C8D65    call        004E7ED8
 004C8D6A    mov         dword ptr [ebp-18],eax
 004C8D6D    cmp         dword ptr [ebp-18],0
>004C8D71    je          004C8D8E
 004C8D73    mov         eax,dword ptr [ebp-18]
 004C8D76    mov         eax,dword ptr [eax+220]
 004C8D7C    mov         edx,dword ptr [ebp-8]
 004C8D7F    cmp         eax,dword ptr [edx+38]
>004C8D82    jne         004C8D8E
 004C8D84    xor         edx,edx
 004C8D86    mov         eax,dword ptr [ebp-18]
 004C8D89    call        TForm.SetActiveControl
 004C8D8E    mov         eax,[0055DDCC];gvar_0055DDCC
 004C8D93    push        eax
 004C8D94    xor         ecx,ecx
 004C8D96    mov         edx,0B03A
 004C8D9B    mov         eax,[0055DDC8];gvar_0055DDC8
 004C8DA0    call        004CC7DC
>004C8DA5    jmp         004C8DC7
 004C8DA7    cmp         dword ptr ds:[55DDEC],0;gvar_0055DDEC
>004C8DAE    je          004C8DBC
 004C8DB0    mov         eax,[0055DDEC];gvar_0055DDEC
 004C8DB5    call        004D5C74
>004C8DBA    jmp         004C8DC7
 004C8DBC    mov         eax,[0055DDE0];gvar_0055DDE0:HICON
 004C8DC1    push        eax
 004C8DC2    call        user32.SetCursor
 004C8DC7    xor         eax,eax
 004C8DC9    mov         [0055DDC8],eax;gvar_0055DDC8
 004C8DCE    xor         eax,eax
 004C8DD0    mov         [0055DDCC],eax;gvar_0055DDCC
 004C8DD5    cmp         dword ptr ds:[55DDF8],0
>004C8DDC    je          004C8E3D
 004C8DDE    mov         eax,[0055DDF8]
 004C8DE3    cmp         dword ptr [eax+4],0
>004C8DE7    je          004C8E3D
 004C8DE9    mov         byte ptr [ebp-0A],3
 004C8DED    cmp         byte ptr [ebp-9],0
>004C8DF1    jne         004C8E15
 004C8DF3    mov         byte ptr [ebp-0A],4
 004C8DF7    mov         eax,[0055DDF8]
 004C8DFC    xor         edx,edx
 004C8DFE    mov         dword ptr [eax+0C],edx
 004C8E01    mov         eax,[0055DDF8]
 004C8E06    xor         edx,edx
 004C8E08    mov         dword ptr [eax+10],edx
 004C8E0B    xor         eax,eax
 004C8E0D    mov         dword ptr [ebp-12],eax
 004C8E10    xor         eax,eax
 004C8E12    mov         dword ptr [ebp-0E],eax
 004C8E15    mov         eax,[0055DDF8]
 004C8E1A    mov         eax,dword ptr [eax+4]
 004C8E1D    push        eax
 004C8E1E    mov         eax,[0055DDF8]
 004C8E23    add         eax,0C
 004C8E26    push        eax
 004C8E27    mov         eax,[0055DDF8]
 004C8E2C    mov         eax,dword ptr [eax+8]
 004C8E2F    mov         ecx,dword ptr ds:[55DDF8]
 004C8E35    mov         dl,byte ptr [ebp-0A]
 004C8E38    call        004C8228
 004C8E3D    xor         eax,eax
 004C8E3F    pop         edx
 004C8E40    pop         ecx
 004C8E41    pop         ecx
 004C8E42    mov         dword ptr fs:[eax],edx
 004C8E45    push        4C8E98
 004C8E4A    mov         eax,[0055DDF4];gvar_0055DDF4:TSiteList
 004C8E4F    call        TObject.Free
 004C8E54    xor         eax,eax
 004C8E56    mov         [0055DDF4],eax;gvar_0055DDF4:TSiteList
 004C8E5B    cmp         dword ptr ds:[55DDF8],0
>004C8E62    je          004C8E89
 004C8E64    mov         eax,[0055DDF8]
 004C8E69    mov         byte ptr [eax+30],0
 004C8E6D    mov         eax,dword ptr [ebp-0E]
 004C8E70    push        eax
 004C8E71    mov         al,byte ptr [ebp-9]
 004C8E74    push        eax
 004C8E75    mov         eax,[0055DDF8]
 004C8E7A    mov         edx,dword ptr [eax+4]
 004C8E7D    mov         ecx,dword ptr [ebp-12]
 004C8E80    mov         eax,[0055DDF8]
 004C8E85    mov         ebx,dword ptr [eax]
 004C8E87    call        dword ptr [ebx]
 004C8E89    xor         eax,eax
 004C8E8B    mov         [0055DDCC],eax;gvar_0055DDCC
 004C8E90    ret
>004C8E91    jmp         @HandleFinally
>004C8E96    jmp         004C8E4A
 004C8E98    xor         eax,eax
 004C8E9A    pop         edx
 004C8E9B    pop         ecx
 004C8E9C    pop         ecx
 004C8E9D    mov         dword ptr fs:[eax],edx
 004C8EA0    push        4C8F0A
 004C8EA5    xor         eax,eax
 004C8EA7    mov         [0055DDC8],eax;gvar_0055DDC8
 004C8EAC    cmp         dword ptr ds:[55DDF8],0
>004C8EB3    je          004C8EFB
 004C8EB5    mov         eax,[0055DDF8]
 004C8EBA    mov         edx,dword ptr ds:[4C49B4];TDragControlObjectEx
 004C8EC0    call        @IsClass
 004C8EC5    test        al,al
>004C8EC7    jne         004C8EF1
 004C8EC9    mov         eax,[0055DDF8]
 004C8ECE    mov         edx,dword ptr ds:[4C47E4];TDragObjectEx
 004C8ED4    call        @IsClass
 004C8ED9    test        al,al
>004C8EDB    jne         004C8EF1
 004C8EDD    mov         eax,[0055DDF8]
 004C8EE2    mov         edx,dword ptr ds:[4C4B08];TDragDockObjectEx
 004C8EE8    call        @IsClass
 004C8EED    test        al,al
>004C8EEF    je          004C8EFB
 004C8EF1    mov         eax,[0055DDF8]
 004C8EF6    call        TObject.Free
 004C8EFB    mov         byte ptr ds:[55DDE8],0;gvar_0055DDE8
 004C8F02    ret
>004C8F03    jmp         @HandleFinally
>004C8F08    jmp         004C8EA5
 004C8F0A    pop         ebx
 004C8F0B    mov         esp,ebp
 004C8F0D    pop         ebp
 004C8F0E    ret
*}
end;

//004C8F10
procedure CancelDrag;
begin
{*
 004C8F10    cmp         dword ptr ds:[55DDCC],0;gvar_0055DDCC
>004C8F17    je          004C8F20
 004C8F19    xor         eax,eax
 004C8F1B    call        DragDone
 004C8F20    xor         eax,eax
 004C8F22    mov         [0055DDC8],eax;gvar_0055DDC8
 004C8F27    ret
*}
end;

//004C8F28
{*function sub_004C8F28(?:?):?;
begin
 004C8F28    push        ebp
 004C8F29    mov         ebp,esp
 004C8F2B    add         esp,0FFFFFFF4
 004C8F2E    mov         dword ptr [ebp-4],eax
 004C8F31    mov         eax,dword ptr [ebp-4]
 004C8F34    push        dword ptr [eax+4]
 004C8F37    push        dword ptr [eax]
 004C8F39    call        user32.WindowFromPoint
 004C8F3E    mov         dword ptr [ebp-0C],eax
 004C8F41    xor         eax,eax
 004C8F43    mov         dword ptr [ebp-8],eax
 004C8F46    cmp         dword ptr [ebp-0C],0
>004C8F4A    je          004C8F6F
 004C8F4C    mov         eax,dword ptr [ebp-0C]
 004C8F4F    call        004C6F7C
 004C8F54    mov         dword ptr [ebp-8],eax
 004C8F57    cmp         dword ptr [ebp-8],0
>004C8F5B    jne         004C8F6F
 004C8F5D    mov         eax,dword ptr [ebp-0C]
 004C8F60    push        eax
 004C8F61    call        user32.GetParent
 004C8F66    mov         dword ptr [ebp-0C],eax
 004C8F69    cmp         dword ptr [ebp-0C],0
>004C8F6D    jne         004C8F4C
 004C8F6F    mov         eax,dword ptr [ebp-8]
 004C8F72    mov         esp,ebp
 004C8F74    pop         ebp
 004C8F75    ret
end;*}

//004C8F78
{*function sub_004C8F78(?:?; ?:?):?;
begin
 004C8F78    push        ebp
 004C8F79    mov         ebp,esp
 004C8F7B    add         esp,0FFFFFFE4
 004C8F7E    mov         byte ptr [ebp-5],dl
 004C8F81    mov         dword ptr [ebp-4],eax
 004C8F84    xor         eax,eax
 004C8F86    mov         dword ptr [ebp-0C],eax
 004C8F89    mov         eax,dword ptr [ebp-4]
 004C8F8C    call        004C8F28
 004C8F91    mov         dword ptr [ebp-10],eax
 004C8F94    cmp         dword ptr [ebp-10],0
>004C8F98    je          004C8FCD
 004C8F9A    mov         eax,dword ptr [ebp-10]
 004C8F9D    mov         dword ptr [ebp-0C],eax
 004C8FA0    push        0
 004C8FA2    lea         ecx,[ebp-1C]
 004C8FA5    mov         edx,dword ptr [ebp-4]
 004C8FA8    mov         eax,dword ptr [ebp-10]
 004C8FAB    call        TControl.ScreenToClient
 004C8FB0    lea         edx,[ebp-1C]
 004C8FB3    mov         cl,byte ptr [ebp-5]
 004C8FB6    mov         eax,dword ptr [ebp-10]
 004C8FB9    call        004D052C
 004C8FBE    mov         dword ptr [ebp-14],eax
 004C8FC1    cmp         dword ptr [ebp-14],0
>004C8FC5    je          004C8FCD
 004C8FC7    mov         eax,dword ptr [ebp-14]
 004C8FCA    mov         dword ptr [ebp-0C],eax
 004C8FCD    mov         eax,dword ptr [ebp-0C]
 004C8FD0    mov         esp,ebp
 004C8FD2    pop         ebp
 004C8FD3    ret
end;*}

//004C8FD4
{*procedure sub_004C8FD4(?:?; ?:?);
begin
 004C8FD4    push        ebp
 004C8FD5    mov         ebp,esp
 004C8FD7    add         esp,0FFFFFFF8
 004C8FDA    mov         dword ptr [ebp-8],edx
 004C8FDD    mov         dword ptr [ebp-4],eax
 004C8FE0    mov         eax,dword ptr [ebp-4]
 004C8FE3    cmp         dword ptr [eax],0
>004C8FE6    jne         004C8FF9
 004C8FE8    mov         dl,1
 004C8FEA    mov         eax,[004759C0];TList
 004C8FEF    call        TObject.Create;TList.Create
 004C8FF4    mov         edx,dword ptr [ebp-4]
 004C8FF7    mov         dword ptr [edx],eax
 004C8FF9    mov         eax,dword ptr [ebp-4]
 004C8FFC    mov         eax,dword ptr [eax]
 004C8FFE    mov         edx,dword ptr [ebp-8]
 004C9001    call        TList.Add
 004C9006    pop         ecx
 004C9007    pop         ecx
 004C9008    pop         ebp
 004C9009    ret
end;*}

//004C900C
{*procedure sub_004C900C(?:?; ?:?);
begin
 004C900C    push        ebp
 004C900D    mov         ebp,esp
 004C900F    add         esp,0FFFFFFF8
 004C9012    mov         dword ptr [ebp-8],edx
 004C9015    mov         dword ptr [ebp-4],eax
 004C9018    mov         eax,dword ptr [ebp-4]
 004C901B    mov         eax,dword ptr [eax]
 004C901D    mov         edx,dword ptr [ebp-8]
 004C9020    call        00478AC4
 004C9025    mov         eax,dword ptr [ebp-4]
 004C9028    mov         eax,dword ptr [eax]
 004C902A    cmp         dword ptr [eax+8],0
>004C902E    jne         004C9041
 004C9030    mov         eax,dword ptr [ebp-4]
 004C9033    mov         eax,dword ptr [eax]
 004C9035    call        TObject.Free
 004C903A    mov         eax,dword ptr [ebp-4]
 004C903D    xor         edx,edx
 004C903F    mov         dword ptr [eax],edx
 004C9041    pop         ecx
 004C9042    pop         ecx
 004C9043    pop         ebp
 004C9044    ret
end;*}

//004C9048
procedure MoveWindowOrg(DC:HDC; DX:Integer; DY:Integer);
begin
{*
 004C9048    push        ebp
 004C9049    mov         ebp,esp
 004C904B    add         esp,0FFFFFFEC
 004C904E    mov         dword ptr [ebp-0C],ecx
 004C9051    mov         dword ptr [ebp-8],edx
 004C9054    mov         dword ptr [ebp-4],eax
 004C9057    lea         eax,[ebp-14]
 004C905A    push        eax
 004C905B    mov         eax,dword ptr [ebp-4]
 004C905E    push        eax
 004C905F    call        gdi32.GetWindowOrgEx
 004C9064    push        0
 004C9066    mov         eax,dword ptr [ebp-10]
 004C9069    sub         eax,dword ptr [ebp-0C]
 004C906C    push        eax
 004C906D    mov         eax,dword ptr [ebp-14]
 004C9070    sub         eax,dword ptr [ebp-8]
 004C9073    push        eax
 004C9074    mov         eax,dword ptr [ebp-4]
 004C9077    push        eax
 004C9078    call        gdi32.SetWindowOrgEx
 004C907D    mov         esp,ebp
 004C907F    pop         ebp
 004C9080    ret
*}
end;

//004C9084
procedure FreeDeviceContext;
begin
{*
 004C9084    push        ebp
 004C9085    mov         ebp,esp
 004C9087    add         esp,0FFFFFFF0
 004C908A    mov         eax,[0055DDFC];gvar_0055DDFC
 004C908F    call        TThreadList.LockList
 004C9094    mov         dword ptr [ebp-8],eax
 004C9097    xor         eax,eax
 004C9099    push        ebp
 004C909A    push        4C9134
 004C909F    push        dword ptr fs:[eax]
 004C90A2    mov         dword ptr fs:[eax],esp
 004C90A5    mov         eax,dword ptr [ebp-8]
 004C90A8    mov         eax,dword ptr [eax+8]
 004C90AB    dec         eax
 004C90AC    test        eax,eax
>004C90AE    jl          004C911C
 004C90B0    inc         eax
 004C90B1    mov         dword ptr [ebp-0C],eax
 004C90B4    mov         dword ptr [ebp-4],0
 004C90BB    mov         edx,dword ptr [ebp-4]
 004C90BE    mov         eax,dword ptr [ebp-8]
 004C90C1    call        TList.Get
 004C90C6    mov         dword ptr [ebp-10],eax
 004C90C9    mov         eax,dword ptr [ebp-10]
 004C90CC    call        TCanvas.TryLock
 004C90D1    test        al,al
>004C90D3    je          004C9114
 004C90D5    xor         eax,eax
 004C90D7    push        ebp
 004C90D8    push        4C910D
 004C90DD    push        dword ptr fs:[eax]
 004C90E0    mov         dword ptr fs:[eax],esp
 004C90E3    mov         eax,dword ptr [ebp-10]
 004C90E6    call        TControlCanvas.FreeHandle
 004C90EB    call        @TryFinallyExit
 004C90F0    call        @TryFinallyExit
>004C90F5    jmp         004C913B
 004C90F7    xor         eax,eax
 004C90F9    pop         edx
 004C90FA    pop         ecx
 004C90FB    pop         ecx
 004C90FC    mov         dword ptr fs:[eax],edx
 004C90FF    push        4C9114
 004C9104    mov         eax,dword ptr [ebp-10]
 004C9107    call        TCanvas.Unlock
 004C910C    ret
>004C910D    jmp         @HandleFinally
>004C9112    jmp         004C9104
 004C9114    inc         dword ptr [ebp-4]
 004C9117    dec         dword ptr [ebp-0C]
>004C911A    jne         004C90BB
 004C911C    xor         eax,eax
 004C911E    pop         edx
 004C911F    pop         ecx
 004C9120    pop         ecx
 004C9121    mov         dword ptr fs:[eax],edx
 004C9124    push        4C913B
 004C9129    mov         eax,[0055DDFC];gvar_0055DDFC
 004C912E    call        TThreadList.UnlockList
 004C9133    ret
>004C9134    jmp         @HandleFinally
>004C9139    jmp         004C9129
 004C913B    mov         esp,ebp
 004C913D    pop         ebp
 004C913E    ret
*}
end;

//004C9140
procedure FreeDeviceContexts;
begin
{*
 004C9140    push        ebp
 004C9141    mov         ebp,esp
 004C9143    add         esp,0FFFFFFF4
 004C9146    mov         eax,[0055DDFC];gvar_0055DDFC
 004C914B    call        TThreadList.LockList
 004C9150    mov         dword ptr [ebp-8],eax
 004C9153    xor         eax,eax
 004C9155    push        ebp
 004C9156    push        4C91DE
 004C915B    push        dword ptr fs:[eax]
 004C915E    mov         dword ptr fs:[eax],esp
 004C9161    mov         eax,dword ptr [ebp-8]
 004C9164    mov         eax,dword ptr [eax+8]
 004C9167    dec         eax
 004C9168    cmp         eax,0
>004C916B    jl          004C91C6
 004C916D    mov         dword ptr [ebp-4],eax
 004C9170    mov         edx,dword ptr [ebp-4]
 004C9173    mov         eax,dword ptr [ebp-8]
 004C9176    call        TList.Get
 004C917B    mov         dword ptr [ebp-0C],eax
 004C917E    mov         eax,dword ptr [ebp-0C]
 004C9181    call        TCanvas.TryLock
 004C9186    test        al,al
>004C9188    je          004C91BD
 004C918A    xor         eax,eax
 004C918C    push        ebp
 004C918D    push        4C91B6
 004C9192    push        dword ptr fs:[eax]
 004C9195    mov         dword ptr fs:[eax],esp
 004C9198    mov         eax,dword ptr [ebp-0C]
 004C919B    call        TControlCanvas.FreeHandle
 004C91A0    xor         eax,eax
 004C91A2    pop         edx
 004C91A3    pop         ecx
 004C91A4    pop         ecx
 004C91A5    mov         dword ptr fs:[eax],edx
 004C91A8    push        4C91BD
 004C91AD    mov         eax,dword ptr [ebp-0C]
 004C91B0    call        TCanvas.Unlock
 004C91B5    ret
>004C91B6    jmp         @HandleFinally
>004C91BB    jmp         004C91AD
 004C91BD    dec         dword ptr [ebp-4]
 004C91C0    cmp         dword ptr [ebp-4],0FFFFFFFF
>004C91C4    jne         004C9170
 004C91C6    xor         eax,eax
 004C91C8    pop         edx
 004C91C9    pop         ecx
 004C91CA    pop         ecx
 004C91CB    mov         dword ptr fs:[eax],edx
 004C91CE    push        4C91E5
 004C91D3    mov         eax,[0055DDFC];gvar_0055DDFC
 004C91D8    call        TThreadList.UnlockList
 004C91DD    ret
>004C91DE    jmp         @HandleFinally
>004C91E3    jmp         004C91D3
 004C91E5    mov         esp,ebp
 004C91E7    pop         ebp
 004C91E8    ret
*}
end;

//004C91EC
destructor TControlCanvas.Destroy;
begin
{*
 004C91EC    push        ebp
 004C91ED    mov         ebp,esp
 004C91EF    add         esp,0FFFFFFF8
 004C91F2    call        @BeforeDestruction
 004C91F7    mov         byte ptr [ebp-5],dl
 004C91FA    mov         dword ptr [ebp-4],eax
 004C91FD    mov         eax,dword ptr [ebp-4]
 004C9200    call        TControlCanvas.FreeHandle
 004C9205    mov         dl,byte ptr [ebp-5]
 004C9208    and         dl,0FC
 004C920B    mov         eax,dword ptr [ebp-4]
 004C920E    call        TCanvas.Destroy
 004C9213    cmp         byte ptr [ebp-5],0
>004C9217    jle         004C9221
 004C9219    mov         eax,dword ptr [ebp-4]
 004C921C    call        @ClassDestroy
 004C9221    pop         ecx
 004C9222    pop         ecx
 004C9223    pop         ebp
 004C9224    ret
*}
end;

//004C9228
procedure sub_004C9228;
begin
{*
 004C9228    push        ebp
 004C9229    mov         ebp,esp
 004C922B    add         esp,0FFFFFFF8
 004C922E    mov         dword ptr [ebp-4],eax
 004C9231    mov         eax,dword ptr [ebp-4]
 004C9234    cmp         dword ptr [eax+58],0;TControlCanvas.FControl:TControl
>004C9238    jne         004C9247
 004C923A    mov         eax,dword ptr [ebp-4]
 004C923D    call        00488550
>004C9242    jmp         004C92D0
 004C9247    mov         eax,dword ptr [ebp-4]
 004C924A    cmp         dword ptr [eax+5C],0;TControlCanvas.FDeviceContext:HDC
>004C924E    jne         004C92BA
 004C9250    mov         eax,[0055DDFC];gvar_0055DDFC
 004C9255    call        TThreadList.LockList
 004C925A    mov         dword ptr [ebp-8],eax
 004C925D    xor         eax,eax
 004C925F    push        ebp
 004C9260    push        4C92B3
 004C9265    push        dword ptr fs:[eax]
 004C9268    mov         dword ptr fs:[eax],esp
 004C926B    mov         eax,dword ptr [ebp-8]
 004C926E    cmp         dword ptr [eax+8],4;TList.FCount:Integer
>004C9272    jl          004C9279
 004C9274    call        FreeDeviceContext
 004C9279    mov         eax,dword ptr [ebp-4]
 004C927C    lea         edx,[eax+60];TControlCanvas.FWindowHandle:HWND
 004C927F    mov         eax,dword ptr [ebp-4]
 004C9282    mov         eax,dword ptr [eax+58];TControlCanvas.FControl:TControl
 004C9285    mov         ecx,dword ptr [eax]
 004C9287    call        dword ptr [ecx+48];TControl.sub_004CB4F8
 004C928A    mov         edx,dword ptr [ebp-4]
 004C928D    mov         dword ptr [edx+5C],eax;TControlCanvas.FDeviceContext:HDC
 004C9290    mov         edx,dword ptr [ebp-4]
 004C9293    mov         eax,dword ptr [ebp-8]
 004C9296    call        TList.Add
 004C929B    xor         eax,eax
 004C929D    pop         edx
 004C929E    pop         ecx
 004C929F    pop         ecx
 004C92A0    mov         dword ptr fs:[eax],edx
 004C92A3    push        4C92BA
 004C92A8    mov         eax,[0055DDFC];gvar_0055DDFC
 004C92AD    call        TThreadList.UnlockList
 004C92B2    ret
>004C92B3    jmp         @HandleFinally
>004C92B8    jmp         004C92A8
 004C92BA    mov         eax,dword ptr [ebp-4]
 004C92BD    mov         edx,dword ptr [eax+5C];TControlCanvas.FDeviceContext:HDC
 004C92C0    mov         eax,dword ptr [ebp-4]
 004C92C3    call        TCanvas.SetHandle
 004C92C8    mov         eax,dword ptr [ebp-4]
 004C92CB    call        004C9348
 004C92D0    pop         ecx
 004C92D1    pop         ecx
 004C92D2    pop         ebp
 004C92D3    ret
*}
end;

//004C92D4
procedure TControlCanvas.FreeHandle;
begin
{*
 004C92D4    push        ebp
 004C92D5    mov         ebp,esp
 004C92D7    push        ecx
 004C92D8    mov         dword ptr [ebp-4],eax
 004C92DB    mov         eax,dword ptr [ebp-4]
 004C92DE    cmp         dword ptr [eax+5C],0
>004C92E2    je          004C9316
 004C92E4    xor         edx,edx
 004C92E6    mov         eax,dword ptr [ebp-4]
 004C92E9    call        TCanvas.SetHandle
 004C92EE    mov         edx,dword ptr [ebp-4]
 004C92F1    mov         eax,[0055DDFC];gvar_0055DDFC
 004C92F6    call        00478DA8
 004C92FB    mov         eax,dword ptr [ebp-4]
 004C92FE    mov         eax,dword ptr [eax+5C]
 004C9301    push        eax
 004C9302    mov         eax,dword ptr [ebp-4]
 004C9305    mov         eax,dword ptr [eax+60]
 004C9308    push        eax
 004C9309    call        user32.ReleaseDC
 004C930E    mov         eax,dword ptr [ebp-4]
 004C9311    xor         edx,edx
 004C9313    mov         dword ptr [eax+5C],edx
 004C9316    pop         ecx
 004C9317    pop         ebp
 004C9318    ret
*}
end;

//004C931C
procedure sub_004C931C(?:TCanvas; ?:TWinControl);
begin
{*
 004C931C    push        ebp
 004C931D    mov         ebp,esp
 004C931F    add         esp,0FFFFFFF8
 004C9322    mov         dword ptr [ebp-8],edx
 004C9325    mov         dword ptr [ebp-4],eax
 004C9328    mov         eax,dword ptr [ebp-4]
 004C932B    mov         eax,dword ptr [eax+58]
 004C932E    cmp         eax,dword ptr [ebp-8]
>004C9331    je          004C9344
 004C9333    mov         eax,dword ptr [ebp-4]
 004C9336    call        TControlCanvas.FreeHandle
 004C933B    mov         eax,dword ptr [ebp-8]
 004C933E    mov         edx,dword ptr [ebp-4]
 004C9341    mov         dword ptr [edx+58],eax
 004C9344    pop         ecx
 004C9345    pop         ecx
 004C9346    pop         ebp
 004C9347    ret
*}
end;

//004C9348
procedure sub_004C9348(?:TCanvas);
begin
{*
 004C9348    push        ebp
 004C9349    mov         ebp,esp
 004C934B    push        ecx
 004C934C    mov         dword ptr [ebp-4],eax
 004C934F    mov         eax,dword ptr [ebp-4]
 004C9352    cmp         dword ptr [eax+58],0
>004C9356    je          004C937D
 004C9358    mov         eax,dword ptr [ebp-4]
 004C935B    mov         eax,dword ptr [eax+58]
 004C935E    call        004CB90C
 004C9363    test        al,al
>004C9365    je          004C9373
 004C9367    mov         eax,dword ptr [ebp-4]
 004C936A    or          dword ptr [eax+54],80;TCanvas.FTextFlags:Longint
>004C9371    jmp         004C937D
 004C9373    mov         eax,dword ptr [ebp-4]
 004C9376    and         dword ptr [eax+54],0FFFFFF7F;TCanvas.FTextFlags:Longint
 004C937D    pop         ecx
 004C937E    pop         ebp
 004C937F    ret
*}
end;

//004C9380
constructor TSizeConstraints.Create;
begin
{*
 004C9380    push        ebp
 004C9381    mov         ebp,esp
 004C9383    add         esp,0FFFFFFF4
 004C9386    test        dl,dl
>004C9388    je          004C9392
 004C938A    add         esp,0FFFFFFF0
 004C938D    call        @ClassCreate
 004C9392    mov         dword ptr [ebp-0C],ecx
 004C9395    mov         byte ptr [ebp-5],dl
 004C9398    mov         dword ptr [ebp-4],eax
 004C939B    xor         edx,edx
 004C939D    mov         eax,dword ptr [ebp-4]
 004C93A0    call        TObject.Create
 004C93A5    mov         eax,dword ptr [ebp-4]
 004C93A8    mov         edx,dword ptr [ebp-0C]
 004C93AB    mov         dword ptr [eax+4],edx;TSizeConstraints.FControl:TControl
 004C93AE    mov         eax,dword ptr [ebp-4]
 004C93B1    cmp         byte ptr [ebp-5],0
>004C93B5    je          004C93C6
 004C93B7    call        @AfterConstruction
 004C93BC    pop         dword ptr fs:[0]
 004C93C3    add         esp,0C
 004C93C6    mov         eax,dword ptr [ebp-4]
 004C93C9    mov         esp,ebp
 004C93CB    pop         ebp
 004C93CC    ret
*}
end;

//004C93D0
{*procedure sub_004C93D0(?:?);
begin
 004C93D0    push        ebp
 004C93D1    mov         ebp,esp
 004C93D3    add         esp,0FFFFFFF8
 004C93D6    mov         dword ptr [ebp-8],edx
 004C93D9    mov         dword ptr [ebp-4],eax
 004C93DC    mov         eax,dword ptr [ebp-8]
 004C93DF    mov         edx,dword ptr ds:[4C4EC0];TSizeConstraints
 004C93E5    call        @IsClass
 004C93EA    test        al,al
>004C93EC    je          004C9428
 004C93EE    mov         eax,dword ptr [ebp-8]
 004C93F1    mov         edx,dword ptr [ebp-4]
 004C93F4    mov         edx,dword ptr [edx+10];TSizeConstraints.MinHeight:TConstraintSize
 004C93F7    mov         dword ptr [eax+10],edx
 004C93FA    mov         eax,dword ptr [ebp-8]
 004C93FD    mov         edx,dword ptr [ebp-4]
 004C9400    mov         edx,dword ptr [edx+8];TSizeConstraints.MaxHeight:TConstraintSize
 004C9403    mov         dword ptr [eax+8],edx
 004C9406    mov         eax,dword ptr [ebp-8]
 004C9409    mov         edx,dword ptr [ebp-4]
 004C940C    mov         edx,dword ptr [edx+14];TSizeConstraints.MinWidth:TConstraintSize
 004C940F    mov         dword ptr [eax+14],edx
 004C9412    mov         eax,dword ptr [ebp-8]
 004C9415    mov         edx,dword ptr [ebp-4]
 004C9418    mov         edx,dword ptr [edx+0C];TSizeConstraints.MaxWidth:TConstraintSize
 004C941B    mov         dword ptr [eax+0C],edx
 004C941E    mov         eax,dword ptr [ebp-8]
 004C9421    mov         edx,dword ptr [eax]
 004C9423    call        dword ptr [edx+0C]
>004C9426    jmp         004C9433
 004C9428    mov         edx,dword ptr [ebp-8]
 004C942B    mov         eax,dword ptr [ebp-4]
 004C942E    call        004791AC
 004C9433    pop         ecx
 004C9434    pop         ecx
 004C9435    pop         ebp
 004C9436    ret
end;*}

//004C9438
procedure TSizeConstraints.SetMaxHeight(Value:TConstraintSize; ?:Integer);
begin
{*
 004C9438    push        ebp
 004C9439    mov         ebp,esp
 004C943B    add         esp,0FFFFFFF4
 004C943E    mov         dword ptr [ebp-0C],ecx
 004C9441    mov         dword ptr [ebp-8],edx
 004C9444    mov         dword ptr [ebp-4],eax
 004C9447    mov         eax,dword ptr [ebp-8]
 004C944A    sub         eax,1
>004C944D    jb          004C9464
>004C944F    je          004C94A3
 004C9451    dec         eax
>004C9452    je          004C94DF
 004C9458    dec         eax
>004C9459    je          004C951A
>004C945F    jmp         004C9553
 004C9464    mov         eax,dword ptr [ebp-0C]
 004C9467    mov         edx,dword ptr [ebp-4]
 004C946A    cmp         eax,dword ptr [edx+8];TSizeConstraints.MaxHeight:TConstraintSize
>004C946D    je          004C9553
 004C9473    mov         eax,dword ptr [ebp-0C]
 004C9476    mov         edx,dword ptr [ebp-4]
 004C9479    mov         dword ptr [edx+8],eax;TSizeConstraints.MaxHeight:TConstraintSize
 004C947C    cmp         dword ptr [ebp-0C],0
>004C9480    jbe         004C9496
 004C9482    mov         eax,dword ptr [ebp-0C]
 004C9485    mov         edx,dword ptr [ebp-4]
 004C9488    cmp         eax,dword ptr [edx+10];TSizeConstraints.MinHeight:TConstraintSize
>004C948B    jae         004C9496
 004C948D    mov         eax,dword ptr [ebp-0C]
 004C9490    mov         edx,dword ptr [ebp-4]
 004C9493    mov         dword ptr [edx+10],eax;TSizeConstraints.MinHeight:TConstraintSize
 004C9496    mov         eax,dword ptr [ebp-4]
 004C9499    mov         edx,dword ptr [eax]
 004C949B    call        dword ptr [edx+0C];TSizeConstraints.sub_004C9558
>004C949E    jmp         004C9553
 004C94A3    mov         eax,dword ptr [ebp-0C]
 004C94A6    mov         edx,dword ptr [ebp-4]
 004C94A9    cmp         eax,dword ptr [edx+0C];TSizeConstraints.MaxWidth:TConstraintSize
>004C94AC    je          004C9553
 004C94B2    mov         eax,dword ptr [ebp-0C]
 004C94B5    mov         edx,dword ptr [ebp-4]
 004C94B8    mov         dword ptr [edx+0C],eax;TSizeConstraints.MaxWidth:TConstraintSize
 004C94BB    cmp         dword ptr [ebp-0C],0
>004C94BF    jbe         004C94D5
 004C94C1    mov         eax,dword ptr [ebp-0C]
 004C94C4    mov         edx,dword ptr [ebp-4]
 004C94C7    cmp         eax,dword ptr [edx+14];TSizeConstraints.MinWidth:TConstraintSize
>004C94CA    jae         004C94D5
 004C94CC    mov         eax,dword ptr [ebp-0C]
 004C94CF    mov         edx,dword ptr [ebp-4]
 004C94D2    mov         dword ptr [edx+14],eax;TSizeConstraints.MinWidth:TConstraintSize
 004C94D5    mov         eax,dword ptr [ebp-4]
 004C94D8    mov         edx,dword ptr [eax]
 004C94DA    call        dword ptr [edx+0C];TSizeConstraints.sub_004C9558
>004C94DD    jmp         004C9553
 004C94DF    mov         eax,dword ptr [ebp-0C]
 004C94E2    mov         edx,dword ptr [ebp-4]
 004C94E5    cmp         eax,dword ptr [edx+10];TSizeConstraints.MinHeight:TConstraintSize
>004C94E8    je          004C9553
 004C94EA    mov         eax,dword ptr [ebp-0C]
 004C94ED    mov         edx,dword ptr [ebp-4]
 004C94F0    mov         dword ptr [edx+10],eax;TSizeConstraints.MinHeight:TConstraintSize
 004C94F3    mov         eax,dword ptr [ebp-4]
 004C94F6    cmp         dword ptr [eax+8],0;TSizeConstraints.MaxHeight:TConstraintSize
>004C94FA    jbe         004C9510
 004C94FC    mov         eax,dword ptr [ebp-0C]
 004C94FF    mov         edx,dword ptr [ebp-4]
 004C9502    cmp         eax,dword ptr [edx+8];TSizeConstraints.MaxHeight:TConstraintSize
>004C9505    jbe         004C9510
 004C9507    mov         eax,dword ptr [ebp-0C]
 004C950A    mov         edx,dword ptr [ebp-4]
 004C950D    mov         dword ptr [edx+8],eax;TSizeConstraints.MaxHeight:TConstraintSize
 004C9510    mov         eax,dword ptr [ebp-4]
 004C9513    mov         edx,dword ptr [eax]
 004C9515    call        dword ptr [edx+0C];TSizeConstraints.sub_004C9558
>004C9518    jmp         004C9553
 004C951A    mov         eax,dword ptr [ebp-0C]
 004C951D    mov         edx,dword ptr [ebp-4]
 004C9520    cmp         eax,dword ptr [edx+14];TSizeConstraints.MinWidth:TConstraintSize
>004C9523    je          004C9553
 004C9525    mov         eax,dword ptr [ebp-0C]
 004C9528    mov         edx,dword ptr [ebp-4]
 004C952B    mov         dword ptr [edx+14],eax;TSizeConstraints.MinWidth:TConstraintSize
 004C952E    mov         eax,dword ptr [ebp-4]
 004C9531    cmp         dword ptr [eax+0C],0;TSizeConstraints.MaxWidth:TConstraintSize
>004C9535    jbe         004C954B
 004C9537    mov         eax,dword ptr [ebp-0C]
 004C953A    mov         edx,dword ptr [ebp-4]
 004C953D    cmp         eax,dword ptr [edx+0C];TSizeConstraints.MaxWidth:TConstraintSize
>004C9540    jbe         004C954B
 004C9542    mov         eax,dword ptr [ebp-0C]
 004C9545    mov         edx,dword ptr [ebp-4]
 004C9548    mov         dword ptr [edx+0C],eax;TSizeConstraints.MaxWidth:TConstraintSize
 004C954B    mov         eax,dword ptr [ebp-4]
 004C954E    mov         edx,dword ptr [eax]
 004C9550    call        dword ptr [edx+0C];TSizeConstraints.sub_004C9558
 004C9553    mov         esp,ebp
 004C9555    pop         ebp
 004C9556    ret
*}
end;

//004C9558
procedure sub_004C9558;
begin
{*
 004C9558    push        ebp
 004C9559    mov         ebp,esp
 004C955B    push        ecx
 004C955C    push        ebx
 004C955D    mov         dword ptr [ebp-4],eax
 004C9560    mov         eax,dword ptr [ebp-4]
 004C9563    cmp         word ptr [eax+1A],0;TSizeConstraints.?f1A:word
>004C9568    je          004C9576
 004C956A    mov         ebx,dword ptr [ebp-4]
 004C956D    mov         edx,dword ptr [ebp-4]
 004C9570    mov         eax,dword ptr [ebx+1C];TSizeConstraints.?f1C:TControl
 004C9573    call        dword ptr [ebx+18];TSizeConstraints.FOnChange
 004C9576    pop         ebx
 004C9577    pop         ecx
 004C9578    pop         ebp
 004C9579    ret
*}
end;

//004C957C
{*procedure sub_004C957C(?:?);
begin
 004C957C    push        ebp
 004C957D    mov         ebp,esp
 004C957F    add         esp,0FFFFFFF8
 004C9582    mov         dword ptr [ebp-8],edx
 004C9585    mov         dword ptr [ebp-4],eax
 004C9588    mov         eax,dword ptr [ebp-8]
 004C958B    mov         edx,dword ptr ds:[4C5774];TControl
 004C9591    call        @AsClass
 004C9596    mov         edx,dword ptr [ebp-4]
 004C9599    mov         dword ptr [edx+18],eax;TControlActionLink...................FClient:TControl
 004C959C    pop         ecx
 004C959D    pop         ecx
 004C959E    pop         ebp
 004C959F    ret
end;*}

//004C95A0
{*function sub_004C95A0(?:?):?;
begin
 004C95A0    push        ebp
 004C95A1    mov         ebp,esp
 004C95A3    add         esp,0FFFFFFDC
 004C95A6    push        esi
 004C95A7    xor         ecx,ecx
 004C95A9    mov         dword ptr [ebp-10],ecx
 004C95AC    mov         dword ptr [ebp-24],ecx
 004C95AF    mov         dword ptr [ebp-8],edx
 004C95B2    mov         dword ptr [ebp-4],eax
 004C95B5    xor         eax,eax
 004C95B7    push        ebp
 004C95B8    push        4C9685
 004C95BD    push        dword ptr fs:[eax]
 004C95C0    mov         dword ptr fs:[eax],esp
 004C95C3    mov         byte ptr [ebp-9],1
 004C95C7    mov         eax,dword ptr [ebp-4]
 004C95CA    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C95CD    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004C95D3    call        @IsClass
 004C95D8    test        al,al
>004C95DA    je          004C9667
 004C95E0    mov         edx,dword ptr [ebp-8]
 004C95E3    mov         eax,dword ptr [ebp-4]
 004C95E6    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C95E9    mov         si,0FFEE
 004C95ED    call        @CallDynaInst
 004C95F2    test        al,al
>004C95F4    je          004C9667
 004C95F6    mov         eax,[0055B4C8];^Application:TApplication
 004C95FB    mov         eax,dword ptr [eax]
 004C95FD    cmp         byte ptr [eax+7C],0;TApplication.FHintShortCuts:Boolean
>004C9601    je          004C9667
 004C9603    mov         eax,dword ptr [ebp-4]
 004C9606    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C9609    cmp         word ptr [eax+84],0
>004C9611    je          004C9667
 004C9613    mov         eax,dword ptr [ebp-8]
 004C9616    cmp         dword ptr [eax],0
>004C9619    je          004C9667
 004C961B    lea         eax,[ebp-10]
 004C961E    push        eax
 004C961F    mov         eax,dword ptr [ebp-8]
 004C9622    mov         eax,dword ptr [eax]
 004C9624    mov         dword ptr [ebp-20],eax
 004C9627    mov         byte ptr [ebp-1C],0B
 004C962B    lea         edx,[ebp-24]
 004C962E    mov         eax,dword ptr [ebp-4]
 004C9631    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C9634    mov         ax,word ptr [eax+84]
 004C963B    call        004DF13C
 004C9640    mov         eax,dword ptr [ebp-24]
 004C9643    mov         dword ptr [ebp-18],eax
 004C9646    mov         byte ptr [ebp-14],0B
 004C964A    lea         edx,[ebp-20]
 004C964D    mov         ecx,1
 004C9652    mov         eax,4C969C;'%s (%s)'
 004C9657    call        Format
 004C965C    mov         edx,dword ptr [ebp-10]
 004C965F    mov         eax,dword ptr [ebp-8]
 004C9662    call        @LStrAsg
 004C9667    xor         eax,eax
 004C9669    pop         edx
 004C966A    pop         ecx
 004C966B    pop         ecx
 004C966C    mov         dword ptr fs:[eax],edx
 004C966F    push        4C968C
 004C9674    lea         eax,[ebp-24]
 004C9677    call        @LStrClr
 004C967C    lea         eax,[ebp-10]
 004C967F    call        @LStrClr
 004C9684    ret
>004C9685    jmp         @HandleFinally
>004C968A    jmp         004C9674
 004C968C    mov         al,byte ptr [ebp-9]
 004C968F    pop         esi
 004C9690    mov         esp,ebp
 004C9692    pop         ebp
 004C9693    ret
end;*}

//004C96A4
{*function sub_004C96A4:?;
begin
 004C96A4    push        ebp
 004C96A5    mov         ebp,esp
 004C96A7    add         esp,0FFFFFFF4
 004C96AA    xor         edx,edx
 004C96AC    mov         dword ptr [ebp-0C],edx
 004C96AF    mov         dword ptr [ebp-4],eax
 004C96B2    xor         eax,eax
 004C96B4    push        ebp
 004C96B5    push        4C9719
 004C96BA    push        dword ptr fs:[eax]
 004C96BD    mov         dword ptr fs:[eax],esp
 004C96C0    mov         eax,dword ptr [ebp-4]
 004C96C3    call        004DB1D8
 004C96C8    test        al,al
>004C96CA    je          004C96FA
 004C96CC    lea         edx,[ebp-0C]
 004C96CF    mov         eax,dword ptr [ebp-4]
 004C96D2    mov         eax,dword ptr [eax+18];TControlActionLink....................FClient:TControl
 004C96D5    call        TControl.GetText
 004C96DA    mov         eax,dword ptr [ebp-0C]
 004C96DD    push        eax
 004C96DE    mov         eax,dword ptr [ebp-4]
 004C96E1    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C96E4    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004C96EA    call        @AsClass
 004C96EF    mov         edx,dword ptr [eax+64];TCustomAction.FCaption:String
 004C96F2    pop         eax
 004C96F3    call        @LStrCmp
>004C96F8    je          004C96FE
 004C96FA    xor         eax,eax
>004C96FC    jmp         004C9700
 004C96FE    mov         al,1
 004C9700    mov         byte ptr [ebp-5],al
 004C9703    xor         eax,eax
 004C9705    pop         edx
 004C9706    pop         ecx
 004C9707    pop         ecx
 004C9708    mov         dword ptr fs:[eax],edx
 004C970B    push        4C9720
 004C9710    lea         eax,[ebp-0C]
 004C9713    call        @LStrClr
 004C9718    ret
>004C9719    jmp         @HandleFinally
>004C971E    jmp         004C9710
 004C9720    mov         al,byte ptr [ebp-5]
 004C9723    mov         esp,ebp
 004C9725    pop         ebp
 004C9726    ret
end;*}

//004C9728
{*function sub_004C9728:?;
begin
 004C9728    push        ebp
 004C9729    mov         ebp,esp
 004C972B    add         esp,0FFFFFFF8
 004C972E    push        ebx
 004C972F    mov         dword ptr [ebp-4],eax
 004C9732    mov         eax,dword ptr [ebp-4]
 004C9735    call        004DB220
 004C973A    test        al,al
>004C973C    je          004C9761
 004C973E    mov         eax,dword ptr [ebp-4]
 004C9741    mov         eax,dword ptr [eax+18];TControlActionLink.....................FClient:TControl
 004C9744    mov         edx,dword ptr [eax]
 004C9746    call        dword ptr [edx+50];TImage.GetEnabled
 004C9749    mov         ebx,eax
 004C974B    mov         eax,dword ptr [ebp-4]
 004C974E    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C9751    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004C9757    call        @AsClass
 004C975C    cmp         bl,byte ptr [eax+6A];TCustomAction.FEnabled:Boolean
>004C975F    je          004C9765
 004C9761    xor         eax,eax
>004C9763    jmp         004C9767
 004C9765    mov         al,1
 004C9767    mov         byte ptr [ebp-5],al
 004C976A    mov         al,byte ptr [ebp-5]
 004C976D    pop         ebx
 004C976E    pop         ecx
 004C976F    pop         ecx
 004C9770    pop         ebp
 004C9771    ret
end;*}

//004C9774
{*function sub_004C9774:?;
begin
 004C9774    push        ebp
 004C9775    mov         ebp,esp
 004C9777    add         esp,0FFFFFFF8
 004C977A    mov         dword ptr [ebp-4],eax
 004C977D    mov         eax,dword ptr [ebp-4]
 004C9780    call        004DB2B0
 004C9785    test        al,al
>004C9787    je          004C97B0
 004C9789    mov         eax,dword ptr [ebp-4]
 004C978C    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C978F    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004C9795    call        @AsClass
 004C979A    mov         edx,dword ptr [eax+7C];TCustomAction.FHint:String
 004C979D    mov         eax,dword ptr [ebp-4]
 004C97A0    mov         eax,dword ptr [eax+18];TControlActionLink......................FClient:TControl
 004C97A3    mov         eax,dword ptr [eax+80];TControl.Hint:String
 004C97A9    call        @LStrCmp
>004C97AE    je          004C97B4
 004C97B0    xor         eax,eax
>004C97B2    jmp         004C97B6
 004C97B4    mov         al,1
 004C97B6    mov         byte ptr [ebp-5],al
 004C97B9    mov         al,byte ptr [ebp-5]
 004C97BC    pop         ecx
 004C97BD    pop         ecx
 004C97BE    pop         ebp
 004C97BF    ret
end;*}

//004C97C0
{*function sub_004C97C0:?;
begin
 004C97C0    push        ebp
 004C97C1    mov         ebp,esp
 004C97C3    add         esp,0FFFFFFF8
 004C97C6    mov         dword ptr [ebp-4],eax
 004C97C9    mov         eax,dword ptr [ebp-4]
 004C97CC    call        004DB31C
 004C97D1    test        al,al
>004C97D3    je          004C97F7
 004C97D5    mov         eax,dword ptr [ebp-4]
 004C97D8    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C97DB    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004C97E1    call        @AsClass
 004C97E6    mov         al,byte ptr [eax+86];TCustomAction.FVisible:Boolean
 004C97EC    mov         edx,dword ptr [ebp-4]
 004C97EF    mov         edx,dword ptr [edx+18];TControlActionLink.......................FClient:TControl
 004C97F2    cmp         al,byte ptr [edx+57];TControl.FVisible:Boolean
>004C97F5    je          004C97FB
 004C97F7    xor         eax,eax
>004C97F9    jmp         004C97FD
 004C97FB    mov         al,1
 004C97FD    mov         byte ptr [ebp-5],al
 004C9800    mov         al,byte ptr [ebp-5]
 004C9803    pop         ecx
 004C9804    pop         ecx
 004C9805    pop         ebp
 004C9806    ret
end;*}

//004C9808
{*function sub_004C9808:?;
begin
 004C9808    push        ebp
 004C9809    mov         ebp,esp
 004C980B    add         esp,0FFFFFFF8
 004C980E    mov         dword ptr [ebp-4],eax
 004C9811    mov         eax,dword ptr [ebp-4]
 004C9814    call        00483CF4
 004C9819    test        al,al
>004C981B    je          004C9834
 004C981D    mov         eax,dword ptr [ebp-4]
 004C9820    mov         eax,dword ptr [eax+18];TControlActionLink........................FClient:TControl
 004C9823    mov         eax,dword ptr [eax+120];TControl.FOnClick:TNotifyEvent
 004C9829    mov         edx,dword ptr [ebp-4]
 004C982C    mov         edx,dword ptr [edx+10];TControlActionLink.FAction:TBasicAction
 004C982F    cmp         eax,dword ptr [edx+40];TBasicAction.FOnExecute:TNotifyEvent
>004C9832    je          004C9838
 004C9834    xor         eax,eax
>004C9836    jmp         004C983A
 004C9838    mov         al,1
 004C983A    mov         byte ptr [ebp-5],al
 004C983D    mov         al,byte ptr [ebp-5]
 004C9840    pop         ecx
 004C9841    pop         ecx
 004C9842    pop         ebp
 004C9843    ret
end;*}

//004C9844
{*procedure sub_004C9844(?:?);
begin
 004C9844    push        ebp
 004C9845    mov         ebp,esp
 004C9847    add         esp,0FFFFFFF8
 004C984A    mov         dword ptr [ebp-8],edx
 004C984D    mov         dword ptr [ebp-4],eax
 004C9850    mov         eax,dword ptr [ebp-4]
 004C9853    mov         edx,dword ptr [eax]
 004C9855    call        dword ptr [edx+20];TControlActionLink.sub_004C96A4
 004C9858    test        al,al
>004C985A    je          004C986A
 004C985C    mov         edx,dword ptr [ebp-8]
 004C985F    mov         eax,dword ptr [ebp-4]
 004C9862    mov         eax,dword ptr [eax+18];TControlActionLink.........................FClient:TControl
 004C9865    call        TControl.SetText
 004C986A    pop         ecx
 004C986B    pop         ecx
 004C986C    pop         ebp
 004C986D    ret
end;*}

//004C9870
{*procedure sub_004C9870(?:?);
begin
 004C9870    push        ebp
 004C9871    mov         ebp,esp
 004C9873    add         esp,0FFFFFFF8
 004C9876    mov         byte ptr [ebp-5],dl
 004C9879    mov         dword ptr [ebp-4],eax
 004C987C    mov         eax,dword ptr [ebp-4]
 004C987F    mov         edx,dword ptr [eax]
 004C9881    call        dword ptr [edx+28];TControlActionLink.sub_004C9728
 004C9884    test        al,al
>004C9886    je          004C9896
 004C9888    mov         dl,byte ptr [ebp-5]
 004C988B    mov         eax,dword ptr [ebp-4]
 004C988E    mov         eax,dword ptr [eax+18];TControlActionLink..........................FClient:TControl
 004C9891    mov         ecx,dword ptr [eax]
 004C9893    call        dword ptr [ecx+64];TImage.SetEnabled
 004C9896    pop         ecx
 004C9897    pop         ecx
 004C9898    pop         ebp
 004C9899    ret
end;*}

//004C989C
{*procedure sub_004C989C(?:?);
begin
 004C989C    push        ebp
 004C989D    mov         ebp,esp
 004C989F    add         esp,0FFFFFFF8
 004C98A2    mov         dword ptr [ebp-8],edx
 004C98A5    mov         dword ptr [ebp-4],eax
 004C98A8    mov         eax,dword ptr [ebp-4]
 004C98AB    mov         edx,dword ptr [eax]
 004C98AD    call        dword ptr [edx+38];TControlActionLink.sub_004C9774
 004C98B0    test        al,al
>004C98B2    je          004C98C7
 004C98B4    mov         eax,dword ptr [ebp-4]
 004C98B7    mov         eax,dword ptr [eax+18];TControlActionLink...........................FClient:TControl
 004C98BA    add         eax,80;TControl.Hint:String
 004C98BF    mov         edx,dword ptr [ebp-8]
 004C98C2    call        @LStrAsg
 004C98C7    pop         ecx
 004C98C8    pop         ecx
 004C98C9    pop         ebp
 004C98CA    ret
end;*}

//004C98CC
{*procedure sub_004C98CC(?:?);
begin
 004C98CC    push        ebp
 004C98CD    mov         ebp,esp
 004C98CF    add         esp,0FFFFFFF8
 004C98D2    mov         byte ptr [ebp-5],dl
 004C98D5    mov         dword ptr [ebp-4],eax
 004C98D8    mov         eax,dword ptr [ebp-4]
 004C98DB    mov         edx,dword ptr [eax]
 004C98DD    call        dword ptr [edx+44];TControlActionLink.sub_004C97C0
 004C98E0    test        al,al
>004C98E2    je          004C98F2
 004C98E4    mov         dl,byte ptr [ebp-5]
 004C98E7    mov         eax,dword ptr [ebp-4]
 004C98EA    mov         eax,dword ptr [eax+18];TControlActionLink............................FClient:TControl
 004C98ED    call        TControl.SetVisible
 004C98F2    pop         ecx
 004C98F3    pop         ecx
 004C98F4    pop         ebp
 004C98F5    ret
end;*}

//004C98F8
{*procedure sub_004C98F8(?:?; ?:?);
begin
 004C98F8    push        ebp
 004C98F9    mov         ebp,esp
 004C98FB    push        ecx
 004C98FC    mov         dword ptr [ebp-4],eax
 004C98FF    mov         eax,dword ptr [ebp-4]
 004C9902    mov         edx,dword ptr [eax]
 004C9904    call        dword ptr [edx+8];TControlActionLink.sub_004C9808
 004C9907    test        al,al
>004C9909    je          004C9923
 004C990B    mov         eax,dword ptr [ebp-4]
 004C990E    mov         eax,dword ptr [eax+18];TControlActionLink.............................FClient:TControl
 004C9911    mov         edx,dword ptr [ebp+8]
 004C9914    mov         dword ptr [eax+120],edx;TControl.FOnClick:TNotifyEvent
 004C991A    mov         edx,dword ptr [ebp+0C]
 004C991D    mov         dword ptr [eax+124],edx;TControl.?f124:TMessageForm
 004C9923    pop         ecx
 004C9924    pop         ebp
 004C9925    ret         8
end;*}

//004C9928
{*function sub_004C9928:?;
begin
 004C9928    push        ebp
 004C9929    mov         ebp,esp
 004C992B    add         esp,0FFFFFFF8
 004C992E    mov         dword ptr [ebp-4],eax
 004C9931    mov         eax,dword ptr [ebp-4]
 004C9934    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C9937    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004C993D    call        @AsClass
 004C9942    mov         eax,dword ptr [eax+74];TCustomAction.FHelpContext:THelpContext
 004C9945    mov         edx,dword ptr [ebp-4]
 004C9948    mov         edx,dword ptr [edx+18];TControlActionLink..............................FClient:TControl
 004C994B    cmp         eax,dword ptr [edx+158];TControl.HelpContext:THelpContext
>004C9951    jne         004C999C
 004C9953    mov         eax,dword ptr [ebp-4]
 004C9956    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C9959    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004C995F    call        @AsClass
 004C9964    mov         edx,dword ptr [eax+78];TCustomAction.FHelpKeyword:String
 004C9967    mov         eax,dword ptr [ebp-4]
 004C996A    mov         eax,dword ptr [eax+18];TControlActionLink...............................FClient:TControl
 004C996D    mov         eax,dword ptr [eax+154];TControl.HelpKeyword:String
 004C9973    call        @LStrCmp
>004C9978    jne         004C999C
 004C997A    mov         eax,dword ptr [ebp-4]
 004C997D    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C9980    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004C9986    call        @AsClass
 004C998B    mov         al,byte ptr [eax+70];TCustomAction.FHelpType:THelpType
 004C998E    mov         edx,dword ptr [ebp-4]
 004C9991    mov         edx,dword ptr [edx+18];TControlActionLink................................FClient:TContro...
 004C9994    cmp         al,byte ptr [edx+150];TControl.HelpType:THelpType
>004C999A    je          004C99A0
 004C999C    xor         eax,eax
>004C999E    jmp         004C99A2
 004C99A0    mov         al,1
 004C99A2    mov         byte ptr [ebp-5],al
 004C99A5    mov         al,byte ptr [ebp-5]
 004C99A8    pop         ecx
 004C99A9    pop         ecx
 004C99AA    pop         ebp
 004C99AB    ret
end;*}

//004C99AC
{*procedure sub_004C99AC(?:?);
begin
 004C99AC    push        ebp
 004C99AD    mov         ebp,esp
 004C99AF    add         esp,0FFFFFFF8
 004C99B2    mov         dword ptr [ebp-8],edx
 004C99B5    mov         dword ptr [ebp-4],eax
 004C99B8    mov         eax,dword ptr [ebp-4]
 004C99BB    mov         edx,dword ptr [eax]
 004C99BD    call        dword ptr [edx+34];TControlActionLink.sub_004C9928
 004C99C0    test        al,al
>004C99C2    je          004C99D2
 004C99C4    mov         edx,dword ptr [ebp-8]
 004C99C7    mov         eax,dword ptr [ebp-4]
 004C99CA    mov         eax,dword ptr [eax+18];TControlActionLink.................................FClient:TContr...
 004C99CD    call        TControl.SetHelpKeyword
 004C99D2    pop         ecx
 004C99D3    pop         ecx
 004C99D4    pop         ebp
 004C99D5    ret
end;*}

//004C99D8
{*procedure sub_004C99D8(?:?);
begin
 004C99D8    push        ebp
 004C99D9    mov         ebp,esp
 004C99DB    add         esp,0FFFFFFF8
 004C99DE    mov         dword ptr [ebp-8],edx
 004C99E1    mov         dword ptr [ebp-4],eax
 004C99E4    mov         eax,dword ptr [ebp-4]
 004C99E7    mov         edx,dword ptr [eax]
 004C99E9    call        dword ptr [edx+34];TControlActionLink.sub_004C9928
 004C99EC    test        al,al
>004C99EE    je          004C99FE
 004C99F0    mov         edx,dword ptr [ebp-8]
 004C99F3    mov         eax,dword ptr [ebp-4]
 004C99F6    mov         eax,dword ptr [eax+18];TControlActionLink..................................FClient:TCont...
 004C99F9    call        TControl.SetHelpContext
 004C99FE    pop         ecx
 004C99FF    pop         ecx
 004C9A00    pop         ebp
 004C9A01    ret
end;*}

//004C9A04
{*procedure sub_004C9A04(?:?);
begin
 004C9A04    push        ebp
 004C9A05    mov         ebp,esp
 004C9A07    add         esp,0FFFFFFF8
 004C9A0A    mov         byte ptr [ebp-5],dl
 004C9A0D    mov         dword ptr [ebp-4],eax
 004C9A10    mov         eax,dword ptr [ebp-4]
 004C9A13    mov         edx,dword ptr [eax]
 004C9A15    call        dword ptr [edx+34];TControlActionLink.sub_004C9928
 004C9A18    test        al,al
>004C9A1A    je          004C9A2B
 004C9A1C    mov         eax,dword ptr [ebp-4]
 004C9A1F    mov         eax,dword ptr [eax+18];TControlActionLink...................................FClient:TCon...
 004C9A22    mov         dl,byte ptr [ebp-5]
 004C9A25    mov         byte ptr [eax+150],dl;TControl.HelpType:THelpType
 004C9A2B    pop         ecx
 004C9A2C    pop         ecx
 004C9A2D    pop         ebp
 004C9A2E    ret
end;*}

//004C9A30
constructor sub_004C9A30;
begin
{*
 004C9A30    push        ebp
 004C9A31    mov         ebp,esp
 004C9A33    add         esp,0FFFFFFF4
 004C9A36    test        dl,dl
>004C9A38    je          004C9A42
 004C9A3A    add         esp,0FFFFFFF0
 004C9A3D    call        @ClassCreate
 004C9A42    mov         dword ptr [ebp-0C],ecx
 004C9A45    mov         byte ptr [ebp-5],dl
 004C9A48    mov         dword ptr [ebp-4],eax
 004C9A4B    mov         ecx,dword ptr [ebp-0C]
 004C9A4E    xor         edx,edx
 004C9A50    mov         eax,dword ptr [ebp-4]
 004C9A53    call        00482F04
 004C9A58    mov         eax,dword ptr [ebp-4]
 004C9A5B    mov         edx,dword ptr [ebp-4]
 004C9A5E    mov         dword ptr [eax+3C],edx;TControl.?f3C:TControl
 004C9A61    mov         edx,dword ptr [edx]
 004C9A63    mov         edx,dword ptr [edx+74];TControl.FConstraints:TSizeConstraints
 004C9A66    mov         dword ptr [eax+38],edx;TControl.FWindowProc:TWndMethod
 004C9A69    mov         eax,dword ptr [ebp-4]
 004C9A6C    mov         edx,dword ptr ds:[4C9B50];0xAA gvar_004C9B50
 004C9A72    mov         dword ptr [eax+50],edx;TControl.FControlStyle:TControlStyle
 004C9A75    mov         dl,1
 004C9A77    mov         eax,[0048521C];TFont
 004C9A7C    call        TFont.Create;TFont.Create
 004C9A81    mov         edx,dword ptr [ebp-4]
 004C9A84    mov         dword ptr [edx+68],eax;TControl.FFont:TFont
 004C9A87    mov         eax,dword ptr [ebp-4]
 004C9A8A    mov         eax,dword ptr [eax+68];TControl.FFont:TFont
 004C9A8D    mov         edx,dword ptr [ebp-4]
 004C9A90    mov         dword ptr [eax+0C],edx;TFont.?fC:TCustomListView
 004C9A93    mov         dword ptr [eax+8],4CB084;TFont.FOnChange:TNotifyEvent sub_004CB084
 004C9A9A    mov         eax,dword ptr [ebp-4]
 004C9A9D    mov         dl,byte ptr ds:[4C9B54];0x3 gvar_004C9B54
 004C9AA3    mov         byte ptr [eax+61],dl;TControl.FAnchors:TAnchors
 004C9AA6    mov         ecx,dword ptr [ebp-4]
 004C9AA9    mov         dl,1
 004C9AAB    mov         eax,[004C4EC0];TSizeConstraints
 004C9AB0    call        TSizeConstraints.Create;TSizeConstraints.Create
 004C9AB5    mov         edx,dword ptr [ebp-4]
 004C9AB8    mov         dword ptr [edx+74],eax;TControl.FConstraints:TSizeConstraints
 004C9ABB    mov         eax,dword ptr [ebp-4]
 004C9ABE    mov         eax,dword ptr [eax+74];TControl.FConstraints:TSizeConstraints
 004C9AC1    mov         edx,dword ptr [ebp-4]
 004C9AC4    mov         dword ptr [eax+1C],edx;TSizeConstraints.?f1C:TControl
 004C9AC7    mov         dword ptr [eax+18],4CC4C4;TSizeConstraints.FOnChange:TNotifyEvent sub_004CC4C4
 004C9ACE    mov         eax,dword ptr [ebp-4]
 004C9AD1    mov         dword ptr [eax+70],0FF000005;TControl.FColor:TColor
 004C9AD8    mov         eax,dword ptr [ebp-4]
 004C9ADB    mov         byte ptr [eax+57],1;TControl.FVisible:Boolean
 004C9ADF    mov         eax,dword ptr [ebp-4]
 004C9AE2    mov         byte ptr [eax+58],1;TControl.FEnabled:Boolean
 004C9AE6    mov         eax,dword ptr [ebp-4]
 004C9AE9    mov         byte ptr [eax+59],1;TControl.FParentFont:Boolean
 004C9AED    mov         eax,dword ptr [ebp-4]
 004C9AF0    mov         byte ptr [eax+5A],1;TControl.FParentColor:Boolean
 004C9AF4    mov         eax,dword ptr [ebp-4]
 004C9AF7    mov         byte ptr [eax+9A],1;TControl.FParentShowHint:Boolean
 004C9AFE    mov         eax,dword ptr [ebp-4]
 004C9B01    mov         byte ptr [eax+60],1;TControl.FParentBiDiMode:Boolean
 004C9B05    mov         eax,dword ptr [ebp-4]
 004C9B08    mov         byte ptr [eax+5E],0;TControl.FIsControl:Boolean
 004C9B0C    mov         eax,dword ptr [ebp-4]
 004C9B0F    mov         word ptr [eax+7A],0FFF4;TControl.FDragCursor:TCursor
 004C9B15    mov         eax,dword ptr [ebp-4]
 004C9B18    mov         edx,dword ptr ds:[4E74A8];TCustomDockForm
 004C9B1E    mov         dword ptr [eax+0B8],edx;TControl.FFloatingDockSiteClass:TWinControlClass
 004C9B24    mov         eax,dword ptr [ebp-4]
 004C9B27    mov         byte ptr [eax+150],1;TControl.HelpType:THelpType
 004C9B2E    mov         eax,dword ptr [ebp-4]
 004C9B31    cmp         byte ptr [ebp-5],0
>004C9B35    je          004C9B46
 004C9B37    call        @AfterConstruction
 004C9B3C    pop         dword ptr fs:[0]
 004C9B43    add         esp,0C
 004C9B46    mov         eax,dword ptr [ebp-4]
 004C9B49    mov         esp,ebp
 004C9B4B    pop         ebp
 004C9B4C    ret
*}
end;

//004C9B58
destructor TControl.Destroy;
begin
{*
 004C9B58    push        ebp
 004C9B59    mov         ebp,esp
 004C9B5B    add         esp,0FFFFFFE8
 004C9B5E    push        esi
 004C9B5F    call        @BeforeDestruction
 004C9B64    mov         byte ptr [ebp-5],dl
 004C9B67    mov         dword ptr [ebp-4],eax
 004C9B6A    mov         eax,[0055B4C8];^Application:TApplication
 004C9B6F    mov         eax,dword ptr [eax]
 004C9B71    mov         edx,dword ptr [ebp-4]
 004C9B74    call        004F1950
 004C9B79    mov         eax,dword ptr [ebp-4]
 004C9B7C    cmp         dword ptr [eax+0A0],0
>004C9B83    je          004C9BE1
 004C9B85    mov         eax,dword ptr [ebp-4]
 004C9B88    mov         eax,dword ptr [eax+0A0]
 004C9B8E    test        byte ptr [eax+1C],8
>004C9B92    jne         004C9BE1
 004C9B94    mov         eax,dword ptr [ebp-4]
 004C9B97    push        eax
 004C9B98    mov         eax,dword ptr [ebp-4]
 004C9B9B    mov         eax,dword ptr [eax+0A0]
 004C9BA1    xor         ecx,ecx
 004C9BA3    mov         edx,0B039
 004C9BA8    call        004CC7DC
 004C9BAD    xor         edx,edx
 004C9BAF    mov         eax,dword ptr [ebp-4]
 004C9BB2    mov         ecx,dword ptr [eax]
 004C9BB4    call        dword ptr [ecx+68]
 004C9BB7    lea         edx,[ebp-18]
 004C9BBA    mov         eax,dword ptr [ebp-4]
 004C9BBD    call        004CA6AC
 004C9BC2    lea         ecx,[ebp-18]
 004C9BC5    or          edx,0FFFFFFFF
 004C9BC8    mov         eax,dword ptr [ebp-4]
 004C9BCB    mov         si,0FFCC
 004C9BCF    call        @CallDynaInst
 004C9BD4    mov         eax,dword ptr [ebp-4]
 004C9BD7    xor         edx,edx
 004C9BD9    mov         dword ptr [eax+0A0],edx
>004C9BDF    jmp         004C9BEB
 004C9BE1    xor         edx,edx
 004C9BE3    mov         eax,dword ptr [ebp-4]
 004C9BE6    mov         ecx,dword ptr [eax]
 004C9BE8    call        dword ptr [ecx+68]
 004C9BEB    mov         eax,dword ptr [ebp-4]
 004C9BEE    mov         eax,dword ptr [eax+6C]
 004C9BF1    call        TObject.Free
 004C9BF6    mov         eax,dword ptr [ebp-4]
 004C9BF9    xor         edx,edx
 004C9BFB    mov         dword ptr [eax+6C],edx
 004C9BFE    mov         eax,dword ptr [ebp-4]
 004C9C01    mov         eax,dword ptr [eax+74]
 004C9C04    call        TObject.Free
 004C9C09    mov         eax,dword ptr [ebp-4]
 004C9C0C    mov         eax,dword ptr [eax+68]
 004C9C0F    call        TObject.Free
 004C9C14    mov         eax,dword ptr [ebp-4]
 004C9C17    mov         eax,dword ptr [eax+64]
 004C9C1A    call        00467520
 004C9C1F    mov         dl,byte ptr [ebp-5]
 004C9C22    and         dl,0FC
 004C9C25    mov         eax,dword ptr [ebp-4]
 004C9C28    call        TComponent.Destroy
 004C9C2D    cmp         byte ptr [ebp-5],0
>004C9C31    jle         004C9C3B
 004C9C33    mov         eax,dword ptr [ebp-4]
 004C9C36    call        @ClassDestroy
 004C9C3B    pop         esi
 004C9C3C    mov         esp,ebp
 004C9C3E    pop         ebp
 004C9C3F    ret
*}
end;

//004C9C40
{*function sub_004C9C40:?;
begin
 004C9C40    push        ebp
 004C9C41    mov         ebp,esp
 004C9C43    add         esp,0FFFFFFF8
 004C9C46    mov         dword ptr [ebp-4],eax
 004C9C49    xor         eax,eax
 004C9C4B    mov         dword ptr [ebp-8],eax
 004C9C4E    mov         eax,dword ptr [ebp-8]
 004C9C51    pop         ecx
 004C9C52    pop         ecx
 004C9C53    pop         ebp
 004C9C54    ret
end;*}

//004C9C58
function TImage.GetEnabled:Boolean;
begin
{*
 004C9C58    push        ebp
 004C9C59    mov         ebp,esp
 004C9C5B    add         esp,0FFFFFFF8
 004C9C5E    mov         dword ptr [ebp-4],eax
 004C9C61    mov         eax,dword ptr [ebp-4]
 004C9C64    mov         al,byte ptr [eax+58];TImage.FEnabled:Boolean
 004C9C67    mov         byte ptr [ebp-5],al
 004C9C6A    mov         al,byte ptr [ebp-5]
 004C9C6D    pop         ecx
 004C9C6E    pop         ecx
 004C9C6F    pop         ebp
 004C9C70    ret
*}
end;

//004C9C74
procedure TControl.sub_004C9C74;
begin
{*
 004C9C74    push        ebp
 004C9C75    mov         ebp,esp
 004C9C77    add         esp,0FFFFFFF8
 004C9C7A    mov         dword ptr [ebp-4],eax
 004C9C7D    xor         eax,eax
 004C9C7F    mov         dword ptr [ebp-8],eax
 004C9C82    mov         eax,dword ptr [ebp-8]
 004C9C85    pop         ecx
 004C9C86    pop         ecx
 004C9C87    pop         ebp
 004C9C88    ret
*}
end;

//004C9C8C
procedure TControl.sub_004834C8;
begin
{*
 004C9C8C    push        ebp
 004C9C8D    mov         ebp,esp
 004C9C8F    add         esp,0FFFFFFF8
 004C9C92    mov         dword ptr [ebp-4],eax
 004C9C95    mov         eax,dword ptr [ebp-4]
 004C9C98    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
 004C9C9C    setne       byte ptr [ebp-5]
 004C9CA0    mov         al,byte ptr [ebp-5]
 004C9CA3    pop         ecx
 004C9CA4    pop         ecx
 004C9CA5    pop         ebp
 004C9CA6    ret
*}
end;

//004C9CA8
procedure TControl.sub_00483570;
begin
{*
 004C9CA8    push        ebp
 004C9CA9    mov         ebp,esp
 004C9CAB    add         esp,0FFFFFFF8
 004C9CAE    mov         dword ptr [ebp-4],eax
 004C9CB1    mov         eax,dword ptr [ebp-4]
 004C9CB4    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004C9CB7    mov         dword ptr [ebp-8],eax
 004C9CBA    mov         eax,dword ptr [ebp-8]
 004C9CBD    pop         ecx
 004C9CBE    pop         ecx
 004C9CBF    pop         ebp
 004C9CC0    ret
*}
end;

//004C9CC4
{*procedure TControl.sub_00483588(?:?);
begin
 004C9CC4    push        ebp
 004C9CC5    mov         ebp,esp
 004C9CC7    add         esp,0FFFFFFF8
 004C9CCA    mov         dword ptr [ebp-8],edx
 004C9CCD    mov         dword ptr [ebp-4],eax
 004C9CD0    mov         eax,dword ptr [ebp-4]
 004C9CD3    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004C9CD6    cmp         eax,dword ptr [ebp-8]
>004C9CD9    je          004C9CF8
 004C9CDB    mov         eax,dword ptr [ebp-8]
 004C9CDE    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004C9CE4    call        @IsClass
 004C9CE9    test        al,al
>004C9CEB    je          004C9CF8
 004C9CED    mov         edx,dword ptr [ebp-8]
 004C9CF0    mov         eax,dword ptr [ebp-4]
 004C9CF3    mov         ecx,dword ptr [eax]
 004C9CF5    call        dword ptr [ecx+68];TControl.sub_004CAD7C
 004C9CF8    pop         ecx
 004C9CF9    pop         ecx
 004C9CFA    pop         ebp
 004C9CFB    ret
end;*}

//004C9CFC
{*procedure TControl.sub_004C9CFC(?:?);
begin
 004C9CFC    push        ebp
 004C9CFD    mov         ebp,esp
 004C9CFF    add         esp,0FFFFFFE8
 004C9D02    push        esi
 004C9D03    mov         byte ptr [ebp-5],dl
 004C9D06    mov         dword ptr [ebp-4],eax
 004C9D09    mov         byte ptr [ebp-6],0
 004C9D0D    mov         eax,dword ptr [ebp-4]
 004C9D10    cmp         byte ptr [eax+57],0;TControl.FVisible:Boolean
>004C9D14    je          004C9D88
 004C9D16    mov         eax,dword ptr [ebp-4]
 004C9D19    mov         si,0FFD7
 004C9D1D    call        @CallDynaInst;TControl.sub_004C9C74
 004C9D22    mov         dword ptr [ebp-10],eax
 004C9D25    cmp         dword ptr [ebp-10],0
>004C9D29    je          004C9D88
 004C9D2B    lea         edx,[ebp-14]
 004C9D2E    mov         eax,dword ptr [ebp-4]
 004C9D31    mov         ecx,dword ptr [eax]
 004C9D33    call        dword ptr [ecx+48];TControl.sub_004CB4F8
 004C9D36    mov         dword ptr [ebp-18],eax
 004C9D39    mov         al,byte ptr [ebp-5]
 004C9D3C    xor         al,1
 004C9D3E    neg         al
 004C9D40    sbb         eax,eax
 004C9D42    push        eax
 004C9D43    mov         eax,dword ptr [ebp-10]
 004C9D46    push        eax
 004C9D47    mov         eax,dword ptr [ebp-18]
 004C9D4A    push        eax
 004C9D4B    call        gdi32.SelectPalette
 004C9D50    mov         dword ptr [ebp-0C],eax
 004C9D53    mov         eax,dword ptr [ebp-18]
 004C9D56    push        eax
 004C9D57    call        gdi32.RealizePalette
 004C9D5C    test        eax,eax
>004C9D5E    je          004C9D68
 004C9D60    mov         eax,dword ptr [ebp-4]
 004C9D63    mov         edx,dword ptr [eax]
 004C9D65    call        dword ptr [edx+7C];TControl.sub_004CB6E8
 004C9D68    push        0FF
 004C9D6A    mov         eax,dword ptr [ebp-0C]
 004C9D6D    push        eax
 004C9D6E    mov         eax,dword ptr [ebp-18]
 004C9D71    push        eax
 004C9D72    call        gdi32.SelectPalette
 004C9D77    mov         eax,dword ptr [ebp-18]
 004C9D7A    push        eax
 004C9D7B    mov         eax,dword ptr [ebp-14]
 004C9D7E    push        eax
 004C9D7F    call        user32.ReleaseDC
 004C9D84    mov         byte ptr [ebp-6],1
 004C9D88    mov         al,byte ptr [ebp-6]
 004C9D8B    pop         esi
 004C9D8C    mov         esp,ebp
 004C9D8E    pop         ebp
 004C9D8F    ret
end;*}

//004C9D90
function TSpeedButton.GetAction:TBasicAction;
begin
{*
 004C9D90    push        ebp
 004C9D91    mov         ebp,esp
 004C9D93    add         esp,0FFFFFFF8
 004C9D96    mov         dword ptr [ebp-4],eax
 004C9D99    mov         eax,dword ptr [ebp-4]
 004C9D9C    cmp         dword ptr [eax+6C],0;TSpeedButton.FActionLink:TControlActionLink
>004C9DA0    je          004C9DB0
 004C9DA2    mov         eax,dword ptr [ebp-4]
 004C9DA5    mov         eax,dword ptr [eax+6C];TSpeedButton.FActionLink:TControlActionLink
 004C9DA8    mov         eax,dword ptr [eax+10];TControlActionLink.FAction:TBasicAction
 004C9DAB    mov         dword ptr [ebp-8],eax
>004C9DAE    jmp         004C9DB5
 004C9DB0    xor         eax,eax
 004C9DB2    mov         dword ptr [ebp-8],eax
 004C9DB5    mov         eax,dword ptr [ebp-8]
 004C9DB8    pop         ecx
 004C9DB9    pop         ecx
 004C9DBA    pop         ebp
 004C9DBB    ret
*}
end;

//004C9DBC
procedure TImage.SetAnchors(Value:TAnchors);
begin
{*
 004C9DBC    push        ebp
 004C9DBD    mov         ebp,esp
 004C9DBF    add         esp,0FFFFFFF8
 004C9DC2    mov         byte ptr [ebp-5],dl
 004C9DC5    mov         dword ptr [ebp-4],eax
 004C9DC8    mov         al,byte ptr [ebp-5]
 004C9DCB    mov         edx,dword ptr [ebp-4]
 004C9DCE    cmp         al,byte ptr [edx+61];TImage.FAnchors:TAnchors
>004C9DD1    je          004C9DE4
 004C9DD3    mov         al,byte ptr [ebp-5]
 004C9DD6    mov         edx,dword ptr [ebp-4]
 004C9DD9    mov         byte ptr [edx+61],al;TImage.FAnchors:TAnchors
 004C9DDC    mov         eax,dword ptr [ebp-4]
 004C9DDF    call        004CA1E0
 004C9DE4    pop         ecx
 004C9DE5    pop         ecx
 004C9DE6    pop         ebp
 004C9DE7    ret
*}
end;

//004C9DE8
procedure TSpeedButton.SetAction(Value:TBasicAction);
begin
{*
 004C9DE8    push        ebp
 004C9DE9    mov         ebp,esp
 004C9DEB    add         esp,0FFFFFFF8
 004C9DEE    push        esi
 004C9DEF    mov         dword ptr [ebp-8],edx
 004C9DF2    mov         dword ptr [ebp-4],eax
 004C9DF5    cmp         dword ptr [ebp-8],0
>004C9DF9    jne         004C9E1A
 004C9DFB    mov         eax,dword ptr [ebp-4]
 004C9DFE    mov         eax,dword ptr [eax+6C];TSpeedButton.FActionLink:TControlActionLink
 004C9E01    call        TObject.Free
 004C9E06    mov         eax,dword ptr [ebp-4]
 004C9E09    xor         edx,edx
 004C9E0B    mov         dword ptr [eax+6C],edx;TSpeedButton.FActionLink:TControlActionLink
 004C9E0E    mov         eax,dword ptr [ebp-4]
 004C9E11    and         dword ptr [eax+50],0FFFF7FFF;TSpeedButton.FControlStyle:TControlStyle
>004C9E18    jmp         004C9E8C
 004C9E1A    mov         eax,dword ptr [ebp-4]
 004C9E1D    or          dword ptr [eax+50],8000;TSpeedButton.FControlStyle:TControlStyle
 004C9E24    mov         eax,dword ptr [ebp-4]
 004C9E27    cmp         dword ptr [eax+6C],0;TSpeedButton.FActionLink:TControlActionLink
>004C9E2B    jne         004C9E47
 004C9E2D    mov         eax,dword ptr [ebp-4]
 004C9E30    mov         si,0FFD9
 004C9E34    call        @CallDynaInst;TSpeedButton.sub_0049EA9C
 004C9E39    mov         ecx,dword ptr [ebp-4]
 004C9E3C    mov         dl,1
 004C9E3E    call        dword ptr [eax+14]
 004C9E41    mov         edx,dword ptr [ebp-4]
 004C9E44    mov         dword ptr [edx+6C],eax;TSpeedButton.FActionLink:TControlActionLink
 004C9E47    mov         edx,dword ptr [ebp-8]
 004C9E4A    mov         eax,dword ptr [ebp-4]
 004C9E4D    mov         eax,dword ptr [eax+6C];TSpeedButton.FActionLink:TControlActionLink
 004C9E50    mov         ecx,dword ptr [eax]
 004C9E52    call        dword ptr [ecx+0C];TControlActionLink.sub_00483CA8
 004C9E55    mov         eax,dword ptr [ebp-4]
 004C9E58    mov         eax,dword ptr [eax+6C];TSpeedButton.FActionLink:TControlActionLink
 004C9E5B    mov         edx,dword ptr [ebp-4]
 004C9E5E    mov         dword ptr [eax+0C],edx;TControlActionLink.?fC:TSpeedButton
 004C9E61    mov         dword ptr [eax+8],4CDB18;TControlActionLink.FOnChange:TNotifyEvent sub_004CDB18
 004C9E68    mov         eax,dword ptr [ebp-8]
 004C9E6B    test        byte ptr [eax+1C],1;TBasicAction.FComponentState:TComponentState
 004C9E6F    setne       cl
 004C9E72    mov         edx,dword ptr [ebp-8]
 004C9E75    mov         eax,dword ptr [ebp-4]
 004C9E78    mov         si,0FFEF
 004C9E7C    call        @CallDynaInst;TSpeedButton.sub_0049F20C
 004C9E81    mov         edx,dword ptr [ebp-4]
 004C9E84    mov         eax,dword ptr [ebp-8]
 004C9E87    call        00483020
 004C9E8C    pop         esi
 004C9E8D    pop         ecx
 004C9E8E    pop         ecx
 004C9E8F    pop         ebp
 004C9E90    ret
*}
end;

//004C9E94
function TImage.IsStoredAnchors(Value:TAnchors):Boolean;
begin
{*
 004C9E94    push        ebp
 004C9E95    mov         ebp,esp
 004C9E97    add         esp,0FFFFFFF8
 004C9E9A    mov         dword ptr [ebp-4],eax
 004C9E9D    mov         eax,dword ptr [ebp-4]
 004C9EA0    movzx       eax,byte ptr [eax+5B];TImage.FAlign:TAlign
 004C9EA4    mov         al,byte ptr [eax+541684]
 004C9EAA    mov         edx,dword ptr [ebp-4]
 004C9EAD    cmp         al,byte ptr [edx+61];TImage.FAnchors:TAnchors
 004C9EB0    setne       byte ptr [ebp-5]
 004C9EB4    mov         al,byte ptr [ebp-5]
 004C9EB7    pop         ecx
 004C9EB8    pop         ecx
 004C9EB9    pop         ebp
 004C9EBA    ret
*}
end;

//004C9EBC
procedure TImage.SetDragMode(Value:TDragMode);
begin
{*
 004C9EBC    push        ebp
 004C9EBD    mov         ebp,esp
 004C9EBF    add         esp,0FFFFFFF8
 004C9EC2    mov         byte ptr [ebp-5],dl
 004C9EC5    mov         dword ptr [ebp-4],eax
 004C9EC8    mov         al,byte ptr [ebp-5]
 004C9ECB    mov         edx,dword ptr [ebp-4]
 004C9ECE    mov         byte ptr [edx+5D],al;TImage.FDragMode:TDragMode
 004C9ED1    pop         ecx
 004C9ED2    pop         ecx
 004C9ED3    pop         ebp
 004C9ED4    ret
*}
end;

//004C9ED8
procedure TControl.sub_004C9ED8;
begin
{*
 004C9ED8    push        ebp
 004C9ED9    mov         ebp,esp
 004C9EDB    push        ecx
 004C9EDC    mov         dword ptr [ebp-4],eax
 004C9EDF    mov         eax,dword ptr [ebp-4]
 004C9EE2    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004C9EE6    je          004C9EF6
 004C9EE8    mov         edx,dword ptr [ebp-4]
 004C9EEB    mov         eax,dword ptr [ebp-4]
 004C9EEE    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004C9EF1    call        004CEFBC
 004C9EF6    pop         ecx
 004C9EF7    pop         ebp
 004C9EF8    ret
*}
end;

//004C9EFC
procedure TControl.sub_004C9EFC;
begin
{*
 004C9EFC    push        ebp
 004C9EFD    mov         ebp,esp
 004C9EFF    push        ecx
 004C9F00    push        ebx
 004C9F01    mov         dword ptr [ebp-4],eax
 004C9F04    mov         eax,dword ptr [ebp-4]
 004C9F07    cmp         word ptr [eax+0FA],0;TControl.?fFA:word
>004C9F0F    je          004C9F23
 004C9F11    mov         ebx,dword ptr [ebp-4]
 004C9F14    mov         edx,dword ptr [ebp-4]
 004C9F17    mov         eax,dword ptr [ebx+0FC];TControl.?fFC:dword
 004C9F1D    call        dword ptr [ebx+0F8];TControl.FOnResize
 004C9F23    pop         ebx
 004C9F24    pop         ecx
 004C9F25    pop         ebp
 004C9F26    ret
*}
end;

//004C9F28
{*procedure sub_004C9F28(?:?);
begin
 004C9F28    push        ebp
 004C9F29    mov         ebp,esp
 004C9F2B    add         esp,0FFFFFFF8
 004C9F2E    mov         dword ptr [ebp-8],edx
 004C9F31    mov         dword ptr [ebp-4],eax
 004C9F34    mov         eax,dword ptr [ebp-4]
 004C9F37    or          word ptr [eax+54],8;TControl.FControlState:TControlState
 004C9F3C    mov         eax,dword ptr [ebp-8]
 004C9F3F    mov         eax,dword ptr [eax+2C]
 004C9F42    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004C9F48    call        @IsClass
 004C9F4D    test        al,al
>004C9F4F    je          004C9F5F
 004C9F51    mov         eax,dword ptr [ebp-8]
 004C9F54    mov         edx,dword ptr [eax+2C]
 004C9F57    mov         eax,dword ptr [ebp-4]
 004C9F5A    mov         ecx,dword ptr [eax]
 004C9F5C    call        dword ptr [ecx+68];TControl.sub_004CAD7C
 004C9F5F    mov         edx,dword ptr [ebp-8]
 004C9F62    mov         eax,dword ptr [ebp-4]
 004C9F65    call        004835E0
 004C9F6A    mov         eax,dword ptr [ebp-4]
 004C9F6D    and         word ptr [eax+54],0FFFFFFF7;TControl.FControlState:TControlState
 004C9F72    mov         eax,dword ptr [ebp-4]
 004C9F75    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004C9F79    je          004C9FD0
 004C9F7B    push        0
 004C9F7D    xor         ecx,ecx
 004C9F7F    mov         edx,0B009
 004C9F84    mov         eax,dword ptr [ebp-4]
 004C9F87    call        004CC7DC
 004C9F8C    push        0
 004C9F8E    xor         ecx,ecx
 004C9F90    mov         edx,0B008
 004C9F95    mov         eax,dword ptr [ebp-4]
 004C9F98    call        004CC7DC
 004C9F9D    push        0
 004C9F9F    xor         ecx,ecx
 004C9FA1    mov         edx,0B023
 004C9FA6    mov         eax,dword ptr [ebp-4]
 004C9FA9    call        004CC7DC
 004C9FAE    push        0
 004C9FB0    xor         ecx,ecx
 004C9FB2    mov         edx,0B035
 004C9FB7    mov         eax,dword ptr [ebp-4]
 004C9FBA    call        004CC7DC
 004C9FBF    push        0
 004C9FC1    xor         ecx,ecx
 004C9FC3    mov         edx,0B03D
 004C9FC8    mov         eax,dword ptr [ebp-4]
 004C9FCB    call        004CC7DC
 004C9FD0    pop         ecx
 004C9FD1    pop         ecx
 004C9FD2    pop         ebp
 004C9FD3    ret
end;*}

//004C9FD4
procedure TControl.Notification(AComponent:TComponent; Operation:TOperation);
begin
{*
 004C9FD4    push        ebp
 004C9FD5    mov         ebp,esp
 004C9FD7    add         esp,0FFFFFFF4
 004C9FDA    mov         byte ptr [ebp-9],cl
 004C9FDD    mov         dword ptr [ebp-8],edx
 004C9FE0    mov         dword ptr [ebp-4],eax
 004C9FE3    mov         cl,byte ptr [ebp-9]
 004C9FE6    mov         edx,dword ptr [ebp-8]
 004C9FE9    mov         eax,dword ptr [ebp-4]
 004C9FEC    call        00483398
 004C9FF1    cmp         byte ptr [ebp-9],1
>004C9FF5    jne         004CA025
 004C9FF7    mov         eax,dword ptr [ebp-8]
 004C9FFA    mov         edx,dword ptr [ebp-4]
 004C9FFD    cmp         eax,dword ptr [edx+7C]
>004CA000    jne         004CA00E
 004CA002    xor         edx,edx
 004CA004    mov         eax,dword ptr [ebp-4]
 004CA007    call        TImage.SetPopupMenu
>004CA00C    jmp         004CA025
 004CA00E    mov         eax,dword ptr [ebp-4]
 004CA011    mov         edx,dword ptr [eax]
 004CA013    call        dword ptr [edx+3C]
 004CA016    cmp         eax,dword ptr [ebp-8]
>004CA019    jne         004CA025
 004CA01B    xor         edx,edx
 004CA01D    mov         eax,dword ptr [ebp-4]
 004CA020    call        TSpeedButton.SetAction
 004CA025    mov         esp,ebp
 004CA027    pop         ebp
 004CA028    ret
*}
end;

//004CA02C
procedure TImage.SetAlign(Value:TAlign);
begin
{*
 004CA02C    push        ebp
 004CA02D    mov         ebp,esp
 004CA02F    add         esp,0FFFFFFF8
 004CA032    push        ebx
 004CA033    push        esi
 004CA034    mov         byte ptr [ebp-5],dl
 004CA037    mov         dword ptr [ebp-4],eax
 004CA03A    mov         eax,dword ptr [ebp-4]
 004CA03D    mov         al,byte ptr [eax+5B];TImage.FAlign:TAlign
 004CA040    cmp         al,byte ptr [ebp-5]
>004CA043    je          004CA0FB
 004CA049    mov         eax,dword ptr [ebp-4]
 004CA04C    mov         al,byte ptr [eax+5B];TImage.FAlign:TAlign
 004CA04F    mov         byte ptr [ebp-6],al
 004CA052    mov         al,byte ptr [ebp-5]
 004CA055    mov         edx,dword ptr [ebp-4]
 004CA058    mov         byte ptr [edx+5B],al;TImage.FAlign:TAlign
 004CA05B    xor         eax,eax
 004CA05D    mov         al,byte ptr [ebp-5]
 004CA060    mov         dl,byte ptr [eax+541684]
 004CA066    mov         eax,dword ptr [ebp-4]
 004CA069    call        TImage.SetAnchors
 004CA06E    mov         eax,dword ptr [ebp-4]
 004CA071    test        byte ptr [eax+1C],1;TImage.FComponentState:TComponentState
>004CA075    jne         004CA0FB
 004CA07B    mov         eax,dword ptr [ebp-4]
 004CA07E    test        byte ptr [eax+1C],10;TImage.FComponentState:TComponentState
>004CA082    je          004CA08D
 004CA084    mov         eax,dword ptr [ebp-4]
 004CA087    cmp         dword ptr [eax+30],0;TImage.FParent:TWinControl
>004CA08B    je          004CA0FB
 004CA08D    cmp         byte ptr [ebp-5],6
>004CA091    je          004CA0FB
 004CA093    cmp         byte ptr [ebp-6],6
>004CA097    je          004CA0FB
 004CA099    mov         al,byte ptr [ebp-6]
 004CA09C    dec         eax
 004CA09D    sub         al,2
 004CA09F    setb        al
 004CA0A2    mov         dl,byte ptr [ebp-5]
 004CA0A5    add         dl,0FD
 004CA0A8    sub         dl,2
 004CA0AB    setb        dl
 004CA0AE    cmp         al,dl
>004CA0B0    jne         004CA0EF
 004CA0B2    mov         al,byte ptr [ebp-6]
 004CA0B5    test        al,al
>004CA0B7    je          004CA0EF
 004CA0B9    sub         al,5
>004CA0BB    je          004CA0EF
 004CA0BD    mov         al,byte ptr [ebp-5]
 004CA0C0    test        al,al
>004CA0C2    je          004CA0EF
 004CA0C4    sub         al,5
>004CA0C6    je          004CA0EF
 004CA0C8    mov         eax,dword ptr [ebp-4]
 004CA0CB    mov         eax,dword ptr [eax+4C];TImage.Height:Integer
 004CA0CE    push        eax
 004CA0CF    mov         eax,dword ptr [ebp-4]
 004CA0D2    mov         eax,dword ptr [eax+48];TImage.Width:Integer
 004CA0D5    push        eax
 004CA0D6    mov         eax,dword ptr [ebp-4]
 004CA0D9    mov         ecx,dword ptr [eax+44];TImage.Top:Integer
 004CA0DC    mov         eax,dword ptr [ebp-4]
 004CA0DF    mov         edx,dword ptr [eax+40];TImage.Left:Integer
 004CA0E2    mov         eax,dword ptr [ebp-4]
 004CA0E5    mov         ebx,dword ptr [eax]
 004CA0E7    call        dword ptr [ebx+84];TImage.sub_004CA110
>004CA0ED    jmp         004CA0FB
 004CA0EF    mov         eax,dword ptr [ebp-4]
 004CA0F2    mov         si,0FFEE
 004CA0F6    call        @CallDynaInst;TControl.sub_004CDF1C
 004CA0FB    mov         eax,dword ptr [ebp-4]
 004CA0FE    mov         si,0FFD0
 004CA102    call        @CallDynaInst;TControl.sub_004C9ED8
 004CA107    pop         esi
 004CA108    pop         ebx
 004CA109    pop         ecx
 004CA10A    pop         ecx
 004CA10B    pop         ebp
 004CA10C    ret
*}
end;

//004CA110
{*procedure sub_004CA110(?:?; ?:?; ?:?; ?:?);
begin
 004CA110    push        ebp
 004CA111    mov         ebp,esp
 004CA113    add         esp,0FFFFFFF4
 004CA116    push        esi
 004CA117    mov         dword ptr [ebp-0C],ecx
 004CA11A    mov         dword ptr [ebp-8],edx
 004CA11D    mov         dword ptr [ebp-4],eax
 004CA120    lea         ecx,[ebp+8]
 004CA123    lea         edx,[ebp+0C]
 004CA126    mov         eax,dword ptr [ebp-4]
 004CA129    call        004CCF60
 004CA12E    test        al,al
>004CA130    je          004CA1D8
 004CA136    mov         eax,dword ptr [ebp-8]
 004CA139    mov         edx,dword ptr [ebp-4]
 004CA13C    cmp         eax,dword ptr [edx+40];TControl.Left:Integer
>004CA13F    jne         004CA162
 004CA141    mov         eax,dword ptr [ebp-0C]
 004CA144    mov         edx,dword ptr [ebp-4]
 004CA147    cmp         eax,dword ptr [edx+44];TControl.Top:Integer
>004CA14A    jne         004CA162
 004CA14C    mov         eax,dword ptr [ebp+0C]
 004CA14F    mov         edx,dword ptr [ebp-4]
 004CA152    cmp         eax,dword ptr [edx+48];TControl.Width:Integer
>004CA155    jne         004CA162
 004CA157    mov         eax,dword ptr [ebp+8]
 004CA15A    mov         edx,dword ptr [ebp-4]
 004CA15D    cmp         eax,dword ptr [edx+4C];TControl.Height:Integer
>004CA160    je          004CA1D8
 004CA162    xor         ecx,ecx
 004CA164    mov         eax,dword ptr [ebp-4]
 004CA167    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 004CA16A    mov         eax,dword ptr [ebp-4]
 004CA16D    call        004CB65C
 004CA172    mov         eax,dword ptr [ebp-8]
 004CA175    mov         edx,dword ptr [ebp-4]
 004CA178    mov         dword ptr [edx+40],eax;TControl.Left:Integer
 004CA17B    mov         eax,dword ptr [ebp-0C]
 004CA17E    mov         edx,dword ptr [ebp-4]
 004CA181    mov         dword ptr [edx+44],eax;TControl.Top:Integer
 004CA184    mov         eax,dword ptr [ebp+0C]
 004CA187    mov         edx,dword ptr [ebp-4]
 004CA18A    mov         dword ptr [edx+48],eax;TControl.Width:Integer
 004CA18D    mov         eax,dword ptr [ebp+8]
 004CA190    mov         edx,dword ptr [ebp-4]
 004CA193    mov         dword ptr [edx+4C],eax;TControl.Height:Integer
 004CA196    mov         eax,dword ptr [ebp-4]
 004CA199    call        004CA1E0
 004CA19E    mov         eax,dword ptr [ebp-4]
 004CA1A1    mov         edx,dword ptr [eax]
 004CA1A3    call        dword ptr [edx+7C];TControl.sub_004CB6E8
 004CA1A6    push        0
 004CA1A8    xor         ecx,ecx
 004CA1AA    mov         edx,47
 004CA1AF    mov         eax,dword ptr [ebp-4]
 004CA1B2    call        004CC7DC
 004CA1B7    mov         eax,dword ptr [ebp-4]
 004CA1BA    mov         si,0FFD0
 004CA1BE    call        @CallDynaInst;TControl.sub_004C9ED8
 004CA1C3    mov         eax,dword ptr [ebp-4]
 004CA1C6    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004CA1CA    jne         004CA1D8
 004CA1CC    mov         eax,dword ptr [ebp-4]
 004CA1CF    mov         si,0FFCF
 004CA1D3    call        @CallDynaInst;TControl.sub_004C9EFC
 004CA1D8    pop         esi
 004CA1D9    mov         esp,ebp
 004CA1DB    pop         ebp
 004CA1DC    ret         8
end;*}

//004CA1E0
procedure sub_004CA1E0(?:TControl);
begin
{*
 004CA1E0    push        ebp
 004CA1E1    mov         ebp,esp
 004CA1E3    add         esp,0FFFFFFE8
 004CA1E6    mov         dword ptr [ebp-4],eax
 004CA1E9    mov         eax,dword ptr [ebp-4]
 004CA1EC    cmp         byte ptr [eax+62],0;TControl.FAnchorMove:Boolean
>004CA1F0    jne         004CA362
 004CA1F6    mov         eax,dword ptr [ebp-4]
 004CA1F9    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004CA1FD    jne         004CA362
 004CA203    mov         eax,dword ptr [ebp-4]
 004CA206    mov         al,byte ptr [eax+61];TControl.FAnchors:TAnchors
 004CA209    mov         byte ptr [ebp-5],al
 004CA20C    mov         al,[004CA368];0x3 gvar_004CA368
 004CA211    cmp         al,byte ptr [ebp-5]
>004CA214    jne         004CA231
 004CA216    mov         eax,dword ptr [ebp-4]
 004CA219    xor         edx,edx
 004CA21B    mov         dword ptr [eax+90],edx;TControl.FOriginalParentSize:TPoint
 004CA221    mov         eax,dword ptr [ebp-4]
 004CA224    xor         edx,edx
 004CA226    mov         dword ptr [eax+94],edx
>004CA22C    jmp         004CA362
 004CA231    test        byte ptr [ebp-5],4
>004CA235    je          004CA25F
 004CA237    test        byte ptr [ebp-5],1
>004CA23B    je          004CA24E
 004CA23D    mov         eax,dword ptr [ebp-4]
 004CA240    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CA243    mov         edx,dword ptr [ebp-4]
 004CA246    mov         dword ptr [edx+88],eax;TControl.FAnchorRules:TPoint
>004CA24C    jmp         004CA27B
 004CA24E    mov         eax,dword ptr [ebp-4]
 004CA251    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004CA254    mov         edx,dword ptr [ebp-4]
 004CA257    mov         dword ptr [edx+88],eax;TControl.FAnchorRules:TPoint
>004CA25D    jmp         004CA27B
 004CA25F    mov         eax,dword ptr [ebp-4]
 004CA262    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CA265    sar         eax,1
>004CA267    jns         004CA26C
 004CA269    adc         eax,0
 004CA26C    mov         edx,dword ptr [ebp-4]
 004CA26F    add         eax,dword ptr [edx+40];TControl.Left:Integer
 004CA272    mov         edx,dword ptr [ebp-4]
 004CA275    mov         dword ptr [edx+88],eax;TControl.FAnchorRules:TPoint
 004CA27B    test        byte ptr [ebp-5],8
>004CA27F    je          004CA2A9
 004CA281    test        byte ptr [ebp-5],2
>004CA285    je          004CA298
 004CA287    mov         eax,dword ptr [ebp-4]
 004CA28A    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CA28D    mov         edx,dword ptr [ebp-4]
 004CA290    mov         dword ptr [edx+8C],eax
>004CA296    jmp         004CA2C5
 004CA298    mov         eax,dword ptr [ebp-4]
 004CA29B    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004CA29E    mov         edx,dword ptr [ebp-4]
 004CA2A1    mov         dword ptr [edx+8C],eax
>004CA2A7    jmp         004CA2C5
 004CA2A9    mov         eax,dword ptr [ebp-4]
 004CA2AC    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CA2AF    sar         eax,1
>004CA2B1    jns         004CA2B6
 004CA2B3    adc         eax,0
 004CA2B6    mov         edx,dword ptr [ebp-4]
 004CA2B9    add         eax,dword ptr [edx+44];TControl.Top:Integer
 004CA2BC    mov         edx,dword ptr [ebp-4]
 004CA2BF    mov         dword ptr [edx+8C],eax
 004CA2C5    mov         eax,dword ptr [ebp-4]
 004CA2C8    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CA2CC    je          004CA362
 004CA2D2    mov         eax,dword ptr [ebp-4]
 004CA2D5    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CA2D8    test        byte ptr [eax+1C],2;TWinControl.FComponentState:TComponentState
>004CA2DC    je          004CA30A
 004CA2DE    mov         eax,dword ptr [ebp-4]
 004CA2E1    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004CA2E5    jne         004CA362
 004CA2E7    mov         eax,dword ptr [ebp-4]
 004CA2EA    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CA2ED    mov         edx,dword ptr [ebp-4]
 004CA2F0    mov         ecx,dword ptr [eax+1FA];TWinControl.FDesignSize:TPoint
 004CA2F6    mov         dword ptr [edx+90],ecx;TControl.FOriginalParentSize:TPoint
 004CA2FC    mov         ecx,dword ptr [eax+1FE]
 004CA302    mov         dword ptr [edx+94],ecx
>004CA308    jmp         004CA362
 004CA30A    mov         eax,dword ptr [ebp-4]
 004CA30D    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CA310    call        TWinControl.HandleAllocated
 004CA315    test        al,al
>004CA317    je          004CA33E
 004CA319    lea         edx,[ebp-18]
 004CA31C    mov         eax,dword ptr [ebp-4]
 004CA31F    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CA322    mov         ecx,dword ptr [eax]
 004CA324    call        dword ptr [ecx+44];TWinControl.sub_004D3A1C
 004CA327    mov         eax,dword ptr [ebp-4]
 004CA32A    mov         edx,dword ptr [ebp-10]
 004CA32D    mov         dword ptr [eax+90],edx;TControl.FOriginalParentSize:TPoint
 004CA333    mov         edx,dword ptr [ebp-0C]
 004CA336    mov         dword ptr [eax+94],edx
>004CA33C    jmp         004CA362
 004CA33E    mov         eax,dword ptr [ebp-4]
 004CA341    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CA344    mov         eax,dword ptr [eax+48];TWinControl.Width:Integer
 004CA347    mov         edx,dword ptr [ebp-4]
 004CA34A    mov         dword ptr [edx+90],eax;TControl.FOriginalParentSize:TPoint
 004CA350    mov         eax,dword ptr [ebp-4]
 004CA353    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CA356    mov         eax,dword ptr [eax+4C];TWinControl.Height:Integer
 004CA359    mov         edx,dword ptr [ebp-4]
 004CA35C    mov         dword ptr [edx+94],eax
 004CA362    mov         esp,ebp
 004CA364    pop         ebp
 004CA365    ret
*}
end;

//004CA36C
procedure TTabSheet.SetLeft(Value:Integer);
begin
{*
 004CA36C    push        ebp
 004CA36D    mov         ebp,esp
 004CA36F    add         esp,0FFFFFFF8
 004CA372    push        ebx
 004CA373    mov         dword ptr [ebp-8],edx
 004CA376    mov         dword ptr [ebp-4],eax
 004CA379    mov         eax,dword ptr [ebp-4]
 004CA37C    mov         eax,dword ptr [eax+48];TTabSheet.Width:Integer
 004CA37F    push        eax
 004CA380    mov         eax,dword ptr [ebp-4]
 004CA383    mov         eax,dword ptr [eax+4C];TTabSheet.Height:Integer
 004CA386    push        eax
 004CA387    mov         eax,dword ptr [ebp-4]
 004CA38A    mov         ecx,dword ptr [eax+44];TTabSheet.Top:Integer
 004CA38D    mov         edx,dword ptr [ebp-8]
 004CA390    mov         eax,dword ptr [ebp-4]
 004CA393    mov         ebx,dword ptr [eax]
 004CA395    call        dword ptr [ebx+84];TWinControl.SetBounds
 004CA39B    mov         eax,dword ptr [ebp-4]
 004CA39E    or          byte ptr [eax+98],1;TTabSheet.FScalingFlags:TScalingFlags
 004CA3A5    pop         ebx
 004CA3A6    pop         ecx
 004CA3A7    pop         ecx
 004CA3A8    pop         ebp
 004CA3A9    ret
*}
end;

//004CA3AC
procedure TTabSheet.SetTop(Value:Integer);
begin
{*
 004CA3AC    push        ebp
 004CA3AD    mov         ebp,esp
 004CA3AF    add         esp,0FFFFFFF8
 004CA3B2    push        ebx
 004CA3B3    mov         dword ptr [ebp-8],edx
 004CA3B6    mov         dword ptr [ebp-4],eax
 004CA3B9    mov         eax,dword ptr [ebp-4]
 004CA3BC    mov         eax,dword ptr [eax+48];TTabSheet.Width:Integer
 004CA3BF    push        eax
 004CA3C0    mov         eax,dword ptr [ebp-4]
 004CA3C3    mov         eax,dword ptr [eax+4C];TTabSheet.Height:Integer
 004CA3C6    push        eax
 004CA3C7    mov         ecx,dword ptr [ebp-8]
 004CA3CA    mov         eax,dword ptr [ebp-4]
 004CA3CD    mov         edx,dword ptr [eax+40];TTabSheet.Left:Integer
 004CA3D0    mov         eax,dword ptr [ebp-4]
 004CA3D3    mov         ebx,dword ptr [eax]
 004CA3D5    call        dword ptr [ebx+84];TWinControl.SetBounds
 004CA3DB    mov         eax,dword ptr [ebp-4]
 004CA3DE    or          byte ptr [eax+98],2;TTabSheet.FScalingFlags:TScalingFlags
 004CA3E5    pop         ebx
 004CA3E6    pop         ecx
 004CA3E7    pop         ecx
 004CA3E8    pop         ebp
 004CA3E9    ret
*}
end;

//004CA3EC
procedure TControl.SetWidth(Value:Integer);
begin
{*
 004CA3EC    push        ebp
 004CA3ED    mov         ebp,esp
 004CA3EF    add         esp,0FFFFFFF8
 004CA3F2    push        ebx
 004CA3F3    mov         dword ptr [ebp-8],edx
 004CA3F6    mov         dword ptr [ebp-4],eax
 004CA3F9    mov         eax,dword ptr [ebp-8]
 004CA3FC    push        eax
 004CA3FD    mov         eax,dword ptr [ebp-4]
 004CA400    mov         eax,dword ptr [eax+4C]
 004CA403    push        eax
 004CA404    mov         eax,dword ptr [ebp-4]
 004CA407    mov         ecx,dword ptr [eax+44]
 004CA40A    mov         eax,dword ptr [ebp-4]
 004CA40D    mov         edx,dword ptr [eax+40]
 004CA410    mov         eax,dword ptr [ebp-4]
 004CA413    mov         ebx,dword ptr [eax]
 004CA415    call        dword ptr [ebx+84]
 004CA41B    mov         eax,dword ptr [ebp-4]
 004CA41E    or          byte ptr [eax+98],4
 004CA425    pop         ebx
 004CA426    pop         ecx
 004CA427    pop         ecx
 004CA428    pop         ebp
 004CA429    ret
*}
end;

//004CA42C
procedure TControl.SetHeight(Value:Integer);
begin
{*
 004CA42C    push        ebp
 004CA42D    mov         ebp,esp
 004CA42F    add         esp,0FFFFFFF8
 004CA432    push        ebx
 004CA433    mov         dword ptr [ebp-8],edx
 004CA436    mov         dword ptr [ebp-4],eax
 004CA439    mov         eax,dword ptr [ebp-4]
 004CA43C    mov         eax,dword ptr [eax+48]
 004CA43F    push        eax
 004CA440    mov         eax,dword ptr [ebp-8]
 004CA443    push        eax
 004CA444    mov         eax,dword ptr [ebp-4]
 004CA447    mov         ecx,dword ptr [eax+44]
 004CA44A    mov         eax,dword ptr [ebp-4]
 004CA44D    mov         edx,dword ptr [eax+40]
 004CA450    mov         eax,dword ptr [ebp-4]
 004CA453    mov         ebx,dword ptr [eax]
 004CA455    call        dword ptr [ebx+84]
 004CA45B    mov         eax,dword ptr [ebp-4]
 004CA45E    or          byte ptr [eax+98],8
 004CA465    pop         ebx
 004CA466    pop         ecx
 004CA467    pop         ecx
 004CA468    pop         ebp
 004CA469    ret
*}
end;

//004CA46C
{*procedure TControl.sub_004CA46C(?:?; ?:?);
begin
 004CA46C    push        ebp
 004CA46D    mov         ebp,esp
 004CA46F    add         esp,0FFFFFFE4
 004CA472    push        esi
 004CA473    push        edi
 004CA474    mov         esi,ecx
 004CA476    lea         edi,[ebp-1C]
 004CA479    movs        dword ptr [edi],dword ptr [esi]
 004CA47A    movs        dword ptr [edi],dword ptr [esi]
 004CA47B    movs        dword ptr [edi],dword ptr [esi]
 004CA47C    movs        dword ptr [edi],dword ptr [esi]
 004CA47D    mov         dword ptr [ebp-8],edx
 004CA480    mov         dword ptr [ebp-4],eax
 004CA483    mov         eax,dword ptr [ebp-4]
 004CA486    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004CA48C    cmp         eax,dword ptr [ebp-8]
>004CA48F    je          004CA4EF
 004CA491    mov         eax,dword ptr [ebp-4]
 004CA494    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>004CA49B    je          004CA4C6
 004CA49D    mov         eax,dword ptr [ebp-4]
 004CA4A0    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004CA4A6    cmp         dword ptr [eax+178],0;TWinControl.FDockClients:TList
>004CA4AD    je          004CA4C6
 004CA4AF    mov         eax,dword ptr [ebp-4]
 004CA4B2    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004CA4B8    mov         eax,dword ptr [eax+178];TWinControl.FDockClients:TList
 004CA4BE    mov         edx,dword ptr [ebp-4]
 004CA4C1    call        00478AC4
 004CA4C6    cmp         dword ptr [ebp-8],0
>004CA4CA    je          004CA4EF
 004CA4CC    cmp         dword ptr [ebp-8],0FFFFFFFF
>004CA4D0    je          004CA4EF
 004CA4D2    mov         eax,dword ptr [ebp-8]
 004CA4D5    cmp         dword ptr [eax+178],0
>004CA4DC    je          004CA4EF
 004CA4DE    mov         eax,dword ptr [ebp-8]
 004CA4E1    mov         eax,dword ptr [eax+178]
 004CA4E7    mov         edx,dword ptr [ebp-4]
 004CA4EA    call        TList.Add
 004CA4EF    mov         eax,dword ptr [ebp-4]
 004CA4F2    or          word ptr [eax+54],400;TControl.FControlState:TControlState
 004CA4F8    xor         eax,eax
 004CA4FA    push        ebp
 004CA4FB    push        4CA59B
 004CA500    push        dword ptr fs:[eax]
 004CA503    mov         dword ptr fs:[eax],esp
 004CA506    cmp         dword ptr [ebp-8],0FFFFFFFF
>004CA50A    je          004CA51E
 004CA50C    lea         ecx,[ebp-1C]
 004CA50F    mov         edx,dword ptr [ebp-8]
 004CA512    mov         eax,dword ptr [ebp-4]
 004CA515    mov         si,0FFE4
 004CA519    call        @CallDynaInst;TControl.sub_004CA5A8
 004CA51E    mov         eax,dword ptr [ebp-4]
 004CA521    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004CA527    cmp         eax,dword ptr [ebp-8]
>004CA52A    je          004CA584
 004CA52C    mov         eax,dword ptr [ebp-4]
 004CA52F    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004CA535    mov         dword ptr [ebp-0C],eax
 004CA538    cmp         dword ptr [ebp-8],0FFFFFFFF
>004CA53C    je          004CA564
 004CA53E    mov         eax,dword ptr [ebp-4]
 004CA541    mov         edx,dword ptr [ebp-8]
 004CA544    mov         dword ptr [eax+0A0],edx;TControl.FHostDockSite:TWinControl
 004CA54A    cmp         dword ptr [ebp-8],0
>004CA54E    je          004CA56F
 004CA550    lea         ecx,[ebp-1C]
 004CA553    mov         edx,dword ptr [ebp-4]
 004CA556    mov         eax,dword ptr [ebp-8]
 004CA559    mov         si,0FFC5
 004CA55D    call        @CallDynaInst
>004CA562    jmp         004CA56F
 004CA564    mov         eax,dword ptr [ebp-4]
 004CA567    xor         edx,edx
 004CA569    mov         dword ptr [eax+0A0],edx;TControl.FHostDockSite:TWinControl
 004CA56F    cmp         dword ptr [ebp-0C],0
>004CA573    je          004CA584
 004CA575    mov         edx,dword ptr [ebp-4]
 004CA578    mov         eax,dword ptr [ebp-0C]
 004CA57B    mov         si,0FFBF
 004CA57F    call        @CallDynaInst;TWinControl.sub_004D19E8
 004CA584    xor         eax,eax
 004CA586    pop         edx
 004CA587    pop         ecx
 004CA588    pop         ecx
 004CA589    mov         dword ptr fs:[eax],edx
 004CA58C    push        4CA5A2
 004CA591    mov         eax,dword ptr [ebp-4]
 004CA594    and         word ptr [eax+54],0FBFF;TControl.FControlState:TControlState
 004CA59A    ret
>004CA59B    jmp         @HandleFinally
>004CA5A0    jmp         004CA591
 004CA5A2    pop         edi
 004CA5A3    pop         esi
 004CA5A4    mov         esp,ebp
 004CA5A6    pop         ebp
 004CA5A7    ret
end;*}

//004CA5A8
{*procedure TControl.sub_004CA5A8(?:?; ?:?);
begin
 004CA5A8    push        ebp
 004CA5A9    mov         ebp,esp
 004CA5AB    add         esp,0FFFFFFF4
 004CA5AE    mov         dword ptr [ebp-0C],ecx
 004CA5B1    mov         dword ptr [ebp-8],edx
 004CA5B4    mov         dword ptr [ebp-4],eax
 004CA5B7    mov         eax,dword ptr [ebp-4]
 004CA5BA    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004CA5C0    call        @IsClass
 004CA5C5    test        al,al
>004CA5C7    jne         004CA5D9
 004CA5C9    xor         ecx,ecx
 004CA5CB    mov         eax,dword ptr [ebp-4]
 004CA5CE    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 004CA5D1    mov         eax,dword ptr [ebp-4]
 004CA5D4    call        004CB65C
 004CA5D9    mov         eax,dword ptr [ebp-4]
 004CA5DC    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CA5DF    cmp         eax,dword ptr [ebp-8]
>004CA5E2    je          004CA5F1
 004CA5E4    mov         edx,dword ptr [ebp-0C]
 004CA5E7    mov         eax,dword ptr [ebp-4]
 004CA5EA    call        004CC8C8
>004CA5EF    jmp         004CA5FC
 004CA5F1    mov         edx,dword ptr [ebp-0C]
 004CA5F4    mov         eax,dword ptr [ebp-4]
 004CA5F7    call        004CA6F8
 004CA5FC    cmp         dword ptr [ebp-8],0
>004CA600    je          004CA608
 004CA602    cmp         dword ptr [ebp-8],0FFFFFFFF
>004CA606    jne         004CA612
 004CA608    xor         edx,edx
 004CA60A    mov         eax,dword ptr [ebp-4]
 004CA60D    mov         ecx,dword ptr [eax]
 004CA60F    call        dword ptr [ecx+68];TControl.sub_004CAD7C
 004CA612    mov         esp,ebp
 004CA614    pop         ebp
 004CA615    ret
end;*}

//004CA618
procedure TControl.SetHelpContext(Value:THelpContext);
begin
{*
 004CA618    push        ebp
 004CA619    mov         ebp,esp
 004CA61B    add         esp,0FFFFFFF8
 004CA61E    mov         dword ptr [ebp-8],edx
 004CA621    mov         dword ptr [ebp-4],eax
 004CA624    mov         eax,dword ptr [ebp-4]
 004CA627    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004CA62B    jne         004CA637
 004CA62D    mov         eax,dword ptr [ebp-4]
 004CA630    mov         byte ptr [eax+150],1;TControl.HelpType:THelpType
 004CA637    mov         eax,dword ptr [ebp-8]
 004CA63A    mov         edx,dword ptr [ebp-4]
 004CA63D    mov         dword ptr [edx+158],eax;TControl.HelpContext:THelpContext
 004CA643    pop         ecx
 004CA644    pop         ecx
 004CA645    pop         ebp
 004CA646    ret
*}
end;

//004CA648
procedure TControl.SetHelpKeyword(Value:String);
begin
{*
 004CA648    push        ebp
 004CA649    mov         ebp,esp
 004CA64B    add         esp,0FFFFFFF8
 004CA64E    mov         dword ptr [ebp-8],edx
 004CA651    mov         dword ptr [ebp-4],eax
 004CA654    mov         eax,dword ptr [ebp-4]
 004CA657    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004CA65B    jne         004CA667
 004CA65D    mov         eax,dword ptr [ebp-4]
 004CA660    mov         byte ptr [eax+150],0;TControl.HelpType:THelpType
 004CA667    mov         eax,dword ptr [ebp-4]
 004CA66A    add         eax,154;TControl.HelpKeyword:String
 004CA66F    mov         edx,dword ptr [ebp-8]
 004CA672    call        @LStrAsg
 004CA677    pop         ecx
 004CA678    pop         ecx
 004CA679    pop         ebp
 004CA67A    ret
*}
end;

//004CA67C
{*procedure sub_004CA67C(?:?; ?:TCustomActionDockBar);
begin
 004CA67C    push        ebp
 004CA67D    mov         ebp,esp
 004CA67F    add         esp,0FFFFFFE8
 004CA682    push        esi
 004CA683    mov         dword ptr [ebp-8],edx
 004CA686    mov         dword ptr [ebp-4],eax
 004CA689    lea         edx,[ebp-18]
 004CA68C    mov         eax,dword ptr [ebp-4]
 004CA68F    call        004CA6AC
 004CA694    lea         ecx,[ebp-18]
 004CA697    mov         edx,dword ptr [ebp-8]
 004CA69A    mov         eax,dword ptr [ebp-4]
 004CA69D    mov         si,0FFCC
 004CA6A1    call        @CallDynaInst
 004CA6A6    pop         esi
 004CA6A7    mov         esp,ebp
 004CA6A9    pop         ebp
 004CA6AA    ret
end;*}

//004CA6AC
procedure sub_004CA6AC(?:TControl; ?:TPoint);
begin
{*
 004CA6AC    push        ebp
 004CA6AD    mov         ebp,esp
 004CA6AF    add         esp,0FFFFFFF8
 004CA6B2    mov         dword ptr [ebp-8],edx
 004CA6B5    mov         dword ptr [ebp-4],eax
 004CA6B8    mov         eax,dword ptr [ebp-8]
 004CA6BB    mov         edx,dword ptr [ebp-4]
 004CA6BE    mov         edx,dword ptr [edx+40];TToolDockForm.Left:Integer
 004CA6C1    mov         dword ptr [eax],edx
 004CA6C3    mov         eax,dword ptr [ebp-8]
 004CA6C6    mov         edx,dword ptr [ebp-4]
 004CA6C9    mov         edx,dword ptr [edx+44];TToolDockForm.Top:Integer
 004CA6CC    mov         dword ptr [eax+4],edx
 004CA6CF    mov         eax,dword ptr [ebp-4]
 004CA6D2    mov         eax,dword ptr [eax+40];TToolDockForm.Left:Integer
 004CA6D5    mov         edx,dword ptr [ebp-4]
 004CA6D8    add         eax,dword ptr [edx+48];TToolDockForm.Width:Integer
 004CA6DB    mov         edx,dword ptr [ebp-8]
 004CA6DE    mov         dword ptr [edx+8],eax
 004CA6E1    mov         eax,dword ptr [ebp-4]
 004CA6E4    mov         eax,dword ptr [eax+44];TToolDockForm.Top:Integer
 004CA6E7    mov         edx,dword ptr [ebp-4]
 004CA6EA    add         eax,dword ptr [edx+4C];TToolDockForm.Height:Integer
 004CA6ED    mov         edx,dword ptr [ebp-8]
 004CA6F0    mov         dword ptr [edx+0C],eax
 004CA6F3    pop         ecx
 004CA6F4    pop         ecx
 004CA6F5    pop         ebp
 004CA6F6    ret
*}
end;

//004CA6F8
{*procedure sub_004CA6F8(?:TControl; ?:?);
begin
 004CA6F8    push        ebp
 004CA6F9    mov         ebp,esp
 004CA6FB    add         esp,0FFFFFFF8
 004CA6FE    push        ebx
 004CA6FF    mov         dword ptr [ebp-8],edx
 004CA702    mov         dword ptr [ebp-4],eax
 004CA705    mov         eax,dword ptr [ebp-8]
 004CA708    mov         eax,dword ptr [eax+8]
 004CA70B    mov         edx,dword ptr [ebp-8]
 004CA70E    sub         eax,dword ptr [edx]
 004CA710    push        eax
 004CA711    mov         eax,dword ptr [ebp-8]
 004CA714    mov         eax,dword ptr [eax+0C]
 004CA717    mov         edx,dword ptr [ebp-8]
 004CA71A    sub         eax,dword ptr [edx+4]
 004CA71D    push        eax
 004CA71E    mov         ecx,dword ptr [ebp-8]
 004CA721    mov         ecx,dword ptr [ecx+4]
 004CA724    mov         edx,dword ptr [ebp-8]
 004CA727    mov         edx,dword ptr [edx]
 004CA729    mov         eax,dword ptr [ebp-4]
 004CA72C    mov         ebx,dword ptr [eax]
 004CA72E    call        dword ptr [ebx+84];TControl.sub_004CA110
 004CA734    pop         ebx
 004CA735    pop         ecx
 004CA736    pop         ecx
 004CA737    pop         ebp
 004CA738    ret
end;*}

//004CA73C
{*procedure sub_004CA73C(?:?);
begin
 004CA73C    push        ebp
 004CA73D    mov         ebp,esp
 004CA73F    add         esp,0FFFFFFF8
 004CA742    mov         dword ptr [ebp-8],edx
 004CA745    mov         dword ptr [ebp-4],eax
 004CA748    mov         eax,dword ptr [ebp-8]
 004CA74B    xor         edx,edx
 004CA74D    mov         dword ptr [eax],edx
 004CA74F    mov         eax,dword ptr [ebp-8]
 004CA752    xor         edx,edx
 004CA754    mov         dword ptr [eax+4],edx
 004CA757    mov         eax,dword ptr [ebp-8]
 004CA75A    mov         edx,dword ptr [ebp-4]
 004CA75D    mov         edx,dword ptr [edx+48];TControl.Width:Integer
 004CA760    mov         dword ptr [eax+8],edx
 004CA763    mov         eax,dword ptr [ebp-8]
 004CA766    mov         edx,dword ptr [ebp-4]
 004CA769    mov         edx,dword ptr [edx+4C];TControl.Height:Integer
 004CA76C    mov         dword ptr [eax+0C],edx
 004CA76F    pop         ecx
 004CA770    pop         ecx
 004CA771    pop         ebp
 004CA772    ret
end;*}

//004CA774
function TControl.GetClientWidth:Integer;
begin
{*
 004CA774    push        ebp
 004CA775    mov         ebp,esp
 004CA777    add         esp,0FFFFFFE8
 004CA77A    mov         dword ptr [ebp-4],eax
 004CA77D    lea         edx,[ebp-18]
 004CA780    mov         eax,dword ptr [ebp-4]
 004CA783    mov         ecx,dword ptr [eax]
 004CA785    call        dword ptr [ecx+44]
 004CA788    mov         eax,dword ptr [ebp-10]
 004CA78B    mov         dword ptr [ebp-8],eax
 004CA78E    mov         eax,dword ptr [ebp-8]
 004CA791    mov         esp,ebp
 004CA793    pop         ebp
 004CA794    ret
*}
end;

//004CA798
procedure sub_004CA798(?:TCustomForm; ?:Integer);
begin
{*
 004CA798    push        ebp
 004CA799    mov         ebp,esp
 004CA79B    add         esp,0FFFFFFF0
 004CA79E    mov         dword ptr [ebp-8],edx
 004CA7A1    mov         dword ptr [ebp-4],eax
 004CA7A4    mov         eax,dword ptr [ebp-4]
 004CA7A7    call        TControl.GetClientHeight
 004CA7AC    mov         edx,eax
 004CA7AE    lea         ecx,[ebp-10]
 004CA7B1    mov         eax,dword ptr [ebp-8]
 004CA7B4    call        Point
 004CA7B9    lea         edx,[ebp-10]
 004CA7BC    mov         eax,dword ptr [ebp-4]
 004CA7BF    call        004CAD24
 004CA7C4    mov         esp,ebp
 004CA7C6    pop         ebp
 004CA7C7    ret
*}
end;

//004CA7C8
function TControl.GetClientHeight:Integer;
begin
{*
 004CA7C8    push        ebp
 004CA7C9    mov         ebp,esp
 004CA7CB    add         esp,0FFFFFFE8
 004CA7CE    mov         dword ptr [ebp-4],eax
 004CA7D1    lea         edx,[ebp-18]
 004CA7D4    mov         eax,dword ptr [ebp-4]
 004CA7D7    mov         ecx,dword ptr [eax]
 004CA7D9    call        dword ptr [ecx+44]
 004CA7DC    mov         eax,dword ptr [ebp-0C]
 004CA7DF    mov         dword ptr [ebp-8],eax
 004CA7E2    mov         eax,dword ptr [ebp-8]
 004CA7E5    mov         esp,ebp
 004CA7E7    pop         ebp
 004CA7E8    ret
*}
end;

//004CA7EC
procedure sub_004CA7EC(?:TCustomForm; ?:Integer);
begin
{*
 004CA7EC    push        ebp
 004CA7ED    mov         ebp,esp
 004CA7EF    add         esp,0FFFFFFF0
 004CA7F2    mov         dword ptr [ebp-8],edx
 004CA7F5    mov         dword ptr [ebp-4],eax
 004CA7F8    mov         eax,dword ptr [ebp-4]
 004CA7FB    call        TControl.GetClientWidth
 004CA800    lea         ecx,[ebp-10]
 004CA803    mov         edx,dword ptr [ebp-8]
 004CA806    call        Point
 004CA80B    lea         edx,[ebp-10]
 004CA80E    mov         eax,dword ptr [ebp-4]
 004CA811    call        004CAD24
 004CA816    mov         esp,ebp
 004CA818    pop         ebp
 004CA819    ret
*}
end;

//004CA81C
{*procedure sub_004CA81C(?:?);
begin
 004CA81C    push        ebp
 004CA81D    mov         ebp,esp
 004CA81F    add         esp,0FFFFFFEC
 004CA822    xor         ecx,ecx
 004CA824    mov         dword ptr [ebp-14],ecx
 004CA827    mov         dword ptr [ebp-8],edx
 004CA82A    mov         dword ptr [ebp-4],eax
 004CA82D    xor         eax,eax
 004CA82F    push        ebp
 004CA830    push        4CA8B3
 004CA835    push        dword ptr fs:[eax]
 004CA838    mov         dword ptr fs:[eax],esp
 004CA83B    mov         eax,dword ptr [ebp-4]
 004CA83E    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CA842    jne         004CA878
 004CA844    mov         eax,dword ptr [ebp-4]
 004CA847    mov         eax,dword ptr [eax+8];TControl.Name:TComponentName
 004CA84A    mov         dword ptr [ebp-10],eax
 004CA84D    mov         byte ptr [ebp-0C],0B
 004CA851    lea         eax,[ebp-10]
 004CA854    push        eax
 004CA855    push        0
 004CA857    lea         edx,[ebp-14]
 004CA85A    mov         eax,[0055B530];^SParentRequired:TResStringRec
 004CA85F    call        LoadResString
 004CA864    mov         ecx,dword ptr [ebp-14]
 004CA867    mov         dl,1
 004CA869    mov         eax,[00475960];EInvalidOperation
 004CA86E    call        Exception.CreateFmt;EInvalidOperation.Create
 004CA873    call        @RaiseExcept
 004CA878    mov         edx,dword ptr [ebp-8]
 004CA87B    mov         eax,dword ptr [ebp-4]
 004CA87E    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CA881    mov         ecx,dword ptr [eax]
 004CA883    call        dword ptr [ecx+40];TWinControl.sub_004D39E8
 004CA886    mov         eax,dword ptr [ebp-8]
 004CA889    mov         edx,dword ptr [ebp-4]
 004CA88C    mov         edx,dword ptr [edx+40];TControl.Left:Integer
 004CA88F    add         dword ptr [eax],edx
 004CA891    mov         eax,dword ptr [ebp-8]
 004CA894    mov         edx,dword ptr [ebp-4]
 004CA897    mov         edx,dword ptr [edx+44];TControl.Top:Integer
 004CA89A    add         dword ptr [eax+4],edx
 004CA89D    xor         eax,eax
 004CA89F    pop         edx
 004CA8A0    pop         ecx
 004CA8A1    pop         ecx
 004CA8A2    mov         dword ptr fs:[eax],edx
 004CA8A5    push        4CA8BA
 004CA8AA    lea         eax,[ebp-14]
 004CA8AD    call        @LStrClr
 004CA8B2    ret
>004CA8B3    jmp         @HandleFinally
>004CA8B8    jmp         004CA8AA
 004CA8BA    mov         esp,ebp
 004CA8BC    pop         ebp
 004CA8BD    ret
end;*}

//004CA8C0
function TControl.ClientToScreen(const Point:TPoint):TPoint;
begin
{*
 004CA8C0    push        ebp
 004CA8C1    mov         ebp,esp
 004CA8C3    add         esp,0FFFFFFEC
 004CA8C6    mov         dword ptr [ebp-0C],ecx
 004CA8C9    mov         dword ptr [ebp-8],edx
 004CA8CC    mov         dword ptr [ebp-4],eax
 004CA8CF    lea         edx,[ebp-14]
 004CA8D2    mov         eax,dword ptr [ebp-4]
 004CA8D5    mov         ecx,dword ptr [eax]
 004CA8D7    call        dword ptr [ecx+40]
 004CA8DA    mov         eax,dword ptr [ebp-8]
 004CA8DD    mov         eax,dword ptr [eax]
 004CA8DF    add         eax,dword ptr [ebp-14]
 004CA8E2    mov         edx,dword ptr [ebp-0C]
 004CA8E5    mov         dword ptr [edx],eax
 004CA8E7    mov         eax,dword ptr [ebp-8]
 004CA8EA    mov         eax,dword ptr [eax+4]
 004CA8ED    add         eax,dword ptr [ebp-10]
 004CA8F0    mov         edx,dword ptr [ebp-0C]
 004CA8F3    mov         dword ptr [edx+4],eax
 004CA8F6    mov         esp,ebp
 004CA8F8    pop         ebp
 004CA8F9    ret
*}
end;

//004CA8FC
function TControl.ScreenToClient(const Point:TPoint):TPoint;
begin
{*
 004CA8FC    push        ebp
 004CA8FD    mov         ebp,esp
 004CA8FF    add         esp,0FFFFFFEC
 004CA902    mov         dword ptr [ebp-0C],ecx
 004CA905    mov         dword ptr [ebp-8],edx
 004CA908    mov         dword ptr [ebp-4],eax
 004CA90B    lea         edx,[ebp-14]
 004CA90E    mov         eax,dword ptr [ebp-4]
 004CA911    mov         ecx,dword ptr [eax]
 004CA913    call        dword ptr [ecx+40]
 004CA916    mov         eax,dword ptr [ebp-8]
 004CA919    mov         eax,dword ptr [eax]
 004CA91B    sub         eax,dword ptr [ebp-14]
 004CA91E    mov         edx,dword ptr [ebp-0C]
 004CA921    mov         dword ptr [edx],eax
 004CA923    mov         eax,dword ptr [ebp-8]
 004CA926    mov         eax,dword ptr [eax+4]
 004CA929    sub         eax,dword ptr [ebp-10]
 004CA92C    mov         edx,dword ptr [ebp-0C]
 004CA92F    mov         dword ptr [edx+4],eax
 004CA932    mov         esp,ebp
 004CA934    pop         ebp
 004CA935    ret
*}
end;

//004CA938
procedure sub_004CA938(?:TControl; ?:TControl);
begin
{*
 004CA938    push        ebp
 004CA939    mov         ebp,esp
 004CA93B    add         esp,0FFFFFFF4
 004CA93E    mov         dword ptr [ebp-8],edx
 004CA941    mov         dword ptr [ebp-4],eax
 004CA944    mov         eax,dword ptr [ebp-4]
 004CA947    mov         dword ptr [ebp-0C],eax
 004CA94A    cmp         dword ptr [ebp-0C],0
>004CA94E    je          004CA97C
 004CA950    mov         eax,dword ptr [ebp-0C]
 004CA953    mov         edx,dword ptr ds:[4E6404];TCustomForm
 004CA959    call        @IsClass
 004CA95E    test        al,al
>004CA960    je          004CA96D
 004CA962    mov         edx,dword ptr [ebp-8]
 004CA965    mov         eax,dword ptr [ebp-0C]
 004CA968    call        004ECFB4
 004CA96D    mov         eax,dword ptr [ebp-0C]
 004CA970    mov         eax,dword ptr [eax+30]
 004CA973    mov         dword ptr [ebp-0C],eax
 004CA976    cmp         dword ptr [ebp-0C],0
>004CA97A    jne         004CA950
 004CA97C    mov         esp,ebp
 004CA97E    pop         ebp
 004CA97F    ret
*}
end;

//004CA980
{*procedure sub_004CA980(?:TControl; ?:?; ?:?; ?:?);
begin
 004CA980    push        ebp
 004CA981    mov         ebp,esp
 004CA983    add         esp,0FFFFFFE8
 004CA986    mov         dword ptr [ebp-0C],ecx
 004CA989    mov         dword ptr [ebp-8],edx
 004CA98C    mov         dword ptr [ebp-4],eax
 004CA98F    mov         eax,dword ptr [ebp-4]
 004CA992    cmp         dword ptr [eax+0A0],0
>004CA999    je          004CA9E9
 004CA99B    cmp         dword ptr ds:[55DDCC],0;gvar_0055DDCC
>004CA9A2    jne         004CA9E9
 004CA9A4    mov         ax,[004CA9F0];0x9 gvar_004CA9F0
 004CA9AA    mov         edx,dword ptr [ebp-4]
 004CA9AD    and         ax,word ptr [edx+1C]
 004CA9B1    mov         dx,word ptr ds:[4CA9F4];0x0 gvar_004CA9F4
 004CA9B8    cmp         dx,ax
>004CA9BB    jne         004CA9E9
 004CA9BD    mov         eax,dword ptr [ebp-8]
 004CA9C0    mov         dword ptr [ebp-18],eax
 004CA9C3    mov         eax,dword ptr [ebp-0C]
 004CA9C6    mov         dword ptr [ebp-14],eax
 004CA9C9    mov         eax,dword ptr [ebp+8]
 004CA9CC    mov         dword ptr [ebp-10],eax
 004CA9CF    lea         eax,[ebp-18]
 004CA9D2    push        eax
 004CA9D3    mov         ecx,dword ptr [ebp-4]
 004CA9D6    mov         edx,0B042
 004CA9DB    mov         eax,dword ptr [ebp-4]
 004CA9DE    mov         eax,dword ptr [eax+0A0]
 004CA9E4    call        004CC7DC
 004CA9E9    mov         esp,ebp
 004CA9EB    pop         ebp
 004CA9EC    ret         4
end;*}

//004CA9F8
procedure sub_004CA9F8(?:TWinControl);
begin
{*
 004CA9F8    push        ebp
 004CA9F9    mov         ebp,esp
 004CA9FB    push        ecx
 004CA9FC    mov         dword ptr [ebp-4],eax
 004CA9FF    mov         eax,dword ptr [ebp-4]
 004CAA02    push        eax
 004CAA03    xor         ecx,ecx
 004CAA05    mov         edx,0B037
 004CAA0A    mov         eax,dword ptr [ebp-4]
 004CAA0D    call        004CC7DC
 004CAA12    pop         ecx
 004CAA13    pop         ebp
 004CAA14    ret
*}
end;

//004CAA18
{*procedure TControl.sub_004CAA18(?:?; ?:?);
begin
 004CAA18    push        ebp
 004CAA19    mov         ebp,esp
 004CAA1B    add         esp,0FFFFFFE0
 004CAA1E    push        ebx
 004CAA1F    mov         dword ptr [ebp-0C],ecx
 004CAA22    mov         dword ptr [ebp-8],edx
 004CAA25    mov         dword ptr [ebp-4],eax
 004CAA28    mov         eax,dword ptr [ebp-8]
 004CAA2B    cmp         eax,dword ptr [ebp-0C]
>004CAA2E    je          004CAC09
 004CAA34    mov         eax,dword ptr [ebp-4]
 004CAA37    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004CAA3B    je          004CAA4B
 004CAA3D    mov         eax,dword ptr [ebp-4]
 004CAA40    mov         al,byte ptr [eax+98];TControl.FScalingFlags:TScalingFlags
 004CAA46    mov         byte ptr [ebp-1D],al
>004CAA49    jmp         004CAA53
 004CAA4B    mov         al,[004CAC20];0x1F gvar_004CAC20
 004CAA50    mov         byte ptr [ebp-1D],al
 004CAA53    test        byte ptr [ebp-1D],1
>004CAA57    je          004CAA72
 004CAA59    mov         eax,dword ptr [ebp-0C]
 004CAA5C    push        eax
 004CAA5D    mov         eax,dword ptr [ebp-8]
 004CAA60    push        eax
 004CAA61    mov         eax,dword ptr [ebp-4]
 004CAA64    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004CAA67    push        eax
 004CAA68    call        kernel32.MulDiv
 004CAA6D    mov         dword ptr [ebp-10],eax
>004CAA70    jmp         004CAA7B
 004CAA72    mov         eax,dword ptr [ebp-4]
 004CAA75    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004CAA78    mov         dword ptr [ebp-10],eax
 004CAA7B    test        byte ptr [ebp-1D],2
>004CAA7F    je          004CAA9A
 004CAA81    mov         eax,dword ptr [ebp-0C]
 004CAA84    push        eax
 004CAA85    mov         eax,dword ptr [ebp-8]
 004CAA88    push        eax
 004CAA89    mov         eax,dword ptr [ebp-4]
 004CAA8C    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004CAA8F    push        eax
 004CAA90    call        kernel32.MulDiv
 004CAA95    mov         dword ptr [ebp-14],eax
>004CAA98    jmp         004CAAA3
 004CAA9A    mov         eax,dword ptr [ebp-4]
 004CAA9D    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004CAAA0    mov         dword ptr [ebp-14],eax
 004CAAA3    test        byte ptr [ebp-1D],4
>004CAAA7    je          004CAAF3
 004CAAA9    mov         eax,dword ptr [ebp-4]
 004CAAAC    test        byte ptr [eax+51],1;TControl.?f51:byte
>004CAAB0    jne         004CAAF3
 004CAAB2    test        byte ptr [ebp-1D],1
>004CAAB6    je          004CAADA
 004CAAB8    mov         eax,dword ptr [ebp-0C]
 004CAABB    push        eax
 004CAABC    mov         eax,dword ptr [ebp-8]
 004CAABF    push        eax
 004CAAC0    mov         eax,dword ptr [ebp-4]
 004CAAC3    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004CAAC6    mov         edx,dword ptr [ebp-4]
 004CAAC9    add         eax,dword ptr [edx+48];TControl.Width:Integer
 004CAACC    push        eax
 004CAACD    call        kernel32.MulDiv
 004CAAD2    sub         eax,dword ptr [ebp-10]
 004CAAD5    mov         dword ptr [ebp-18],eax
>004CAAD8    jmp         004CAAFC
 004CAADA    mov         eax,dword ptr [ebp-0C]
 004CAADD    push        eax
 004CAADE    mov         eax,dword ptr [ebp-8]
 004CAAE1    push        eax
 004CAAE2    mov         eax,dword ptr [ebp-4]
 004CAAE5    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CAAE8    push        eax
 004CAAE9    call        kernel32.MulDiv
 004CAAEE    mov         dword ptr [ebp-18],eax
>004CAAF1    jmp         004CAAFC
 004CAAF3    mov         eax,dword ptr [ebp-4]
 004CAAF6    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CAAF9    mov         dword ptr [ebp-18],eax
 004CAAFC    test        byte ptr [ebp-1D],8
>004CAB00    je          004CAB4C
 004CAB02    mov         eax,dword ptr [ebp-4]
 004CAB05    test        byte ptr [eax+51],2;TControl.?f51:byte
>004CAB09    jne         004CAB4C
 004CAB0B    test        byte ptr [ebp-1D],8
>004CAB0F    je          004CAB33
 004CAB11    mov         eax,dword ptr [ebp-0C]
 004CAB14    push        eax
 004CAB15    mov         eax,dword ptr [ebp-8]
 004CAB18    push        eax
 004CAB19    mov         eax,dword ptr [ebp-4]
 004CAB1C    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004CAB1F    mov         edx,dword ptr [ebp-4]
 004CAB22    add         eax,dword ptr [edx+4C];TControl.Height:Integer
 004CAB25    push        eax
 004CAB26    call        kernel32.MulDiv
 004CAB2B    sub         eax,dword ptr [ebp-14]
 004CAB2E    mov         dword ptr [ebp-1C],eax
>004CAB31    jmp         004CAB55
 004CAB33    mov         eax,dword ptr [ebp-0C]
 004CAB36    push        eax
 004CAB37    mov         eax,dword ptr [ebp-8]
 004CAB3A    push        eax
 004CAB3B    mov         eax,dword ptr [ebp-4]
 004CAB3E    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004CAB41    push        eax
 004CAB42    call        kernel32.MulDiv
 004CAB47    mov         dword ptr [ebp-1C],eax
>004CAB4A    jmp         004CAB55
 004CAB4C    mov         eax,dword ptr [ebp-4]
 004CAB4F    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CAB52    mov         dword ptr [ebp-1C],eax
 004CAB55    mov         eax,dword ptr [ebp-18]
 004CAB58    push        eax
 004CAB59    mov         eax,dword ptr [ebp-1C]
 004CAB5C    push        eax
 004CAB5D    mov         ecx,dword ptr [ebp-14]
 004CAB60    mov         edx,dword ptr [ebp-10]
 004CAB63    mov         eax,dword ptr [ebp-4]
 004CAB66    mov         ebx,dword ptr [eax]
 004CAB68    call        dword ptr [ebx+84];TControl.sub_004CA110
 004CAB6E    mov         al,byte ptr [ebp-1D]
 004CAB71    and         al,byte ptr ds:[4CAC24];0x5 gvar_004CAC24
 004CAB77    mov         dl,byte ptr ds:[4CAC28];0x0 gvar_004CAC28
 004CAB7D    cmp         dl,al
>004CAB7F    je          004CABA1
 004CAB81    mov         eax,dword ptr [ebp-0C]
 004CAB84    push        eax
 004CAB85    mov         eax,dword ptr [ebp-8]
 004CAB88    push        eax
 004CAB89    mov         eax,dword ptr [ebp-4]
 004CAB8C    mov         eax,dword ptr [eax+90];TControl.FOriginalParentSize:TPoint
 004CAB92    push        eax
 004CAB93    call        kernel32.MulDiv
 004CAB98    mov         edx,dword ptr [ebp-4]
 004CAB9B    mov         dword ptr [edx+90],eax;TControl.FOriginalParentSize:TPoint
 004CABA1    mov         al,byte ptr [ebp-1D]
 004CABA4    and         al,byte ptr ds:[4CAC2C];0xA gvar_004CAC2C
 004CABAA    mov         dl,byte ptr ds:[4CAC28];0x0 gvar_004CAC28
 004CABB0    cmp         dl,al
>004CABB2    je          004CABD4
 004CABB4    mov         eax,dword ptr [ebp-0C]
 004CABB7    push        eax
 004CABB8    mov         eax,dword ptr [ebp-8]
 004CABBB    push        eax
 004CABBC    mov         eax,dword ptr [ebp-4]
 004CABBF    mov         eax,dword ptr [eax+94]
 004CABC5    push        eax
 004CABC6    call        kernel32.MulDiv
 004CABCB    mov         edx,dword ptr [ebp-4]
 004CABCE    mov         dword ptr [edx+94],eax
 004CABD4    mov         eax,dword ptr [ebp-4]
 004CABD7    cmp         byte ptr [eax+59],0;TControl.FParentFont:Boolean
>004CABDB    jne         004CAC09
 004CABDD    test        byte ptr [ebp-1D],10
>004CABE1    je          004CAC09
 004CABE3    mov         eax,dword ptr [ebp-0C]
 004CABE6    push        eax
 004CABE7    mov         eax,dword ptr [ebp-8]
 004CABEA    push        eax
 004CABEB    mov         eax,dword ptr [ebp-4]
 004CABEE    mov         eax,dword ptr [eax+68];TControl.FFont:TFont
 004CABF1    call        TFont.GetSize
 004CABF6    push        eax
 004CABF7    call        kernel32.MulDiv
 004CABFC    mov         edx,eax
 004CABFE    mov         eax,dword ptr [ebp-4]
 004CAC01    mov         eax,dword ptr [eax+68];TControl.FFont:TFont
 004CAC04    call        TFont.SetSize
 004CAC09    mov         eax,dword ptr [ebp-4]
 004CAC0C    mov         dl,byte ptr ds:[4CAC28];0x0 gvar_004CAC28
 004CAC12    mov         byte ptr [eax+98],dl;TControl.FScalingFlags:TScalingFlags
 004CAC18    pop         ebx
 004CAC19    mov         esp,ebp
 004CAC1B    pop         ebp
 004CAC1C    ret
end;*}

//004CAC30
procedure TImage.SetAutoSize(Value:Boolean);
begin
{*
 004CAC30    push        ebp
 004CAC31    mov         ebp,esp
 004CAC33    add         esp,0FFFFFFF8
 004CAC36    push        esi
 004CAC37    mov         byte ptr [ebp-5],dl
 004CAC3A    mov         dword ptr [ebp-4],eax
 004CAC3D    mov         eax,dword ptr [ebp-4]
 004CAC40    mov         al,byte ptr [eax+5C];TImage.FAutoSize:Boolean
 004CAC43    cmp         al,byte ptr [ebp-5]
>004CAC46    je          004CAC63
 004CAC48    mov         al,byte ptr [ebp-5]
 004CAC4B    mov         edx,dword ptr [ebp-4]
 004CAC4E    mov         byte ptr [edx+5C],al;TImage.FAutoSize:Boolean
 004CAC51    cmp         byte ptr [ebp-5],0
>004CAC55    je          004CAC63
 004CAC57    mov         eax,dword ptr [ebp-4]
 004CAC5A    mov         si,0FFEE
 004CAC5E    call        @CallDynaInst;TControl.sub_004CDF1C
 004CAC63    pop         esi
 004CAC64    pop         ecx
 004CAC65    pop         ecx
 004CAC66    pop         ebp
 004CAC67    ret
*}
end;

//004CAC68
{*procedure sub_004CAC68(?:?);
begin
 004CAC68    push        ebp
 004CAC69    mov         ebp,esp
 004CAC6B    add         esp,0FFFFFFF0
 004CAC6E    xor         ecx,ecx
 004CAC70    mov         dword ptr [ebp-10],ecx
 004CAC73    mov         dword ptr [ebp-8],edx
 004CAC76    mov         dword ptr [ebp-4],eax
 004CAC79    xor         eax,eax
 004CAC7B    push        ebp
 004CAC7C    push        4CAD19
 004CAC81    push        dword ptr fs:[eax]
 004CAC84    mov         dword ptr fs:[eax],esp
 004CAC87    mov         eax,dword ptr [ebp-4]
 004CAC8A    test        byte ptr [eax+50],20;TControl.FControlStyle:TControlStyle
>004CAC8E    je          004CACDE
 004CAC90    mov         eax,dword ptr [ebp-4]
 004CAC93    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004CAC97    jne         004CACDE
 004CAC99    lea         edx,[ebp-10]
 004CAC9C    mov         eax,dword ptr [ebp-4]
 004CAC9F    call        TControl.GetText
 004CACA4    mov         edx,dword ptr [ebp-10]
 004CACA7    mov         eax,dword ptr [ebp-4]
 004CACAA    mov         eax,dword ptr [eax+8];TControl.Name:TComponentName
 004CACAD    call        @LStrCmp
>004CACB2    jne         004CACDE
 004CACB4    mov         eax,dword ptr [ebp-4]
 004CACB7    cmp         dword ptr [eax+4],0;TControl.FOwner:TComponent
>004CACBB    je          004CACE2
 004CACBD    mov         eax,dword ptr [ebp-4]
 004CACC0    mov         eax,dword ptr [eax+4];TControl.FOwner:TComponent
 004CACC3    mov         edx,dword ptr ds:[4C5774];TControl
 004CACC9    call        @IsClass
 004CACCE    test        al,al
>004CACD0    je          004CACE2
 004CACD2    mov         eax,dword ptr [ebp-4]
 004CACD5    mov         eax,dword ptr [eax+4];TControl.FOwner:TComponent
 004CACD8    test        byte ptr [eax+1C],1;TComponent.FComponentState:TComponentState
>004CACDC    je          004CACE2
 004CACDE    xor         eax,eax
>004CACE0    jmp         004CACE4
 004CACE2    mov         al,1
 004CACE4    mov         byte ptr [ebp-9],al
 004CACE7    mov         edx,dword ptr [ebp-8]
 004CACEA    mov         eax,dword ptr [ebp-4]
 004CACED    call        TComponent.SetName
 004CACF2    cmp         byte ptr [ebp-9],0
>004CACF6    je          004CAD03
 004CACF8    mov         edx,dword ptr [ebp-8]
 004CACFB    mov         eax,dword ptr [ebp-4]
 004CACFE    call        TControl.SetText
 004CAD03    xor         eax,eax
 004CAD05    pop         edx
 004CAD06    pop         ecx
 004CAD07    pop         ecx
 004CAD08    mov         dword ptr fs:[eax],edx
 004CAD0B    push        4CAD20
 004CAD10    lea         eax,[ebp-10]
 004CAD13    call        @LStrClr
 004CAD18    ret
>004CAD19    jmp         @HandleFinally
>004CAD1E    jmp         004CAD10
 004CAD20    mov         esp,ebp
 004CAD22    pop         ebp
 004CAD23    ret
end;*}

//004CAD24
{*procedure sub_004CAD24(?:?; ?:?);
begin
 004CAD24    push        ebp
 004CAD25    mov         ebp,esp
 004CAD27    add         esp,0FFFFFFE4
 004CAD2A    push        ebx
 004CAD2B    push        esi
 004CAD2C    push        edi
 004CAD2D    mov         esi,edx
 004CAD2F    lea         edi,[ebp-0C]
 004CAD32    movs        dword ptr [edi],dword ptr [esi]
 004CAD33    movs        dword ptr [edi],dword ptr [esi]
 004CAD34    mov         dword ptr [ebp-4],eax
 004CAD37    lea         edx,[ebp-1C]
 004CAD3A    mov         eax,dword ptr [ebp-4]
 004CAD3D    mov         ecx,dword ptr [eax]
 004CAD3F    call        dword ptr [ecx+44]
 004CAD42    mov         eax,dword ptr [ebp-4]
 004CAD45    mov         eax,dword ptr [eax+48]
 004CAD48    sub         eax,dword ptr [ebp-14]
 004CAD4B    add         eax,dword ptr [ebp-0C]
 004CAD4E    push        eax
 004CAD4F    mov         eax,dword ptr [ebp-4]
 004CAD52    mov         eax,dword ptr [eax+4C]
 004CAD55    sub         eax,dword ptr [ebp-10]
 004CAD58    add         eax,dword ptr [ebp-8]
 004CAD5B    push        eax
 004CAD5C    mov         eax,dword ptr [ebp-4]
 004CAD5F    mov         ecx,dword ptr [eax+44]
 004CAD62    mov         eax,dword ptr [ebp-4]
 004CAD65    mov         edx,dword ptr [eax+40]
 004CAD68    mov         eax,dword ptr [ebp-4]
 004CAD6B    mov         ebx,dword ptr [eax]
 004CAD6D    call        dword ptr [ebx+84]
 004CAD73    pop         edi
 004CAD74    pop         esi
 004CAD75    pop         ebx
 004CAD76    mov         esp,ebp
 004CAD78    pop         ebp
 004CAD79    ret
end;*}

//004CAD7C
{*procedure sub_004CAD7C(?:?);
begin
 004CAD7C    push        ebp
 004CAD7D    mov         ebp,esp
 004CAD7F    add         esp,0FFFFFFF8
 004CAD82    mov         dword ptr [ebp-8],edx
 004CAD85    mov         dword ptr [ebp-4],eax
 004CAD88    mov         eax,dword ptr [ebp-4]
 004CAD8B    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CAD8E    cmp         eax,dword ptr [ebp-8]
>004CAD91    je          004CADE2
 004CAD93    mov         eax,dword ptr [ebp-8]
 004CAD96    cmp         eax,dword ptr [ebp-4]
>004CAD99    jne         004CADB2
 004CAD9B    mov         ecx,dword ptr ds:[55B534];^SControlParentSetToSelf:TResStringRec
 004CADA1    mov         dl,1
 004CADA3    mov         eax,[00475960];EInvalidOperation
 004CADA8    call        Exception.Create;EInvalidOperation.Create
 004CADAD    call        @RaiseExcept
 004CADB2    mov         eax,dword ptr [ebp-4]
 004CADB5    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CADB9    je          004CADC9
 004CADBB    mov         edx,dword ptr [ebp-4]
 004CADBE    mov         eax,dword ptr [ebp-4]
 004CADC1    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CADC4    call        004CF520
 004CADC9    cmp         dword ptr [ebp-8],0
>004CADCD    je          004CADE2
 004CADCF    mov         edx,dword ptr [ebp-4]
 004CADD2    mov         eax,dword ptr [ebp-8]
 004CADD5    call        004CF430
 004CADDA    mov         eax,dword ptr [ebp-4]
 004CADDD    call        004CA1E0
 004CADE2    pop         ecx
 004CADE3    pop         ecx
 004CADE4    pop         ebp
 004CADE5    ret
end;*}

//004CADE8
procedure TControl.SetVisible(Value:Boolean);
begin
{*
 004CADE8    push        ebp
 004CADE9    mov         ebp,esp
 004CADEB    add         esp,0FFFFFFF8
 004CADEE    push        esi
 004CADEF    mov         byte ptr [ebp-5],dl
 004CADF2    mov         dword ptr [ebp-4],eax
 004CADF5    mov         eax,dword ptr [ebp-4]
 004CADF8    mov         al,byte ptr [eax+57]
 004CADFB    cmp         al,byte ptr [ebp-5]
>004CADFE    je          004CAE35
 004CAE00    mov         eax,dword ptr [ebp-4]
 004CAE03    mov         si,0FFCD
 004CAE07    call        @CallDynaInst
 004CAE0C    mov         al,byte ptr [ebp-5]
 004CAE0F    mov         edx,dword ptr [ebp-4]
 004CAE12    mov         byte ptr [edx+57],al
 004CAE15    push        0
 004CAE17    xor         ecx,ecx
 004CAE19    mov         cl,byte ptr [ebp-5]
 004CAE1C    mov         edx,0B00B
 004CAE21    mov         eax,dword ptr [ebp-4]
 004CAE24    call        004CC7DC
 004CAE29    mov         eax,dword ptr [ebp-4]
 004CAE2C    mov         si,0FFD0
 004CAE30    call        @CallDynaInst
 004CAE35    pop         esi
 004CAE36    pop         ecx
 004CAE37    pop         ecx
 004CAE38    pop         ebp
 004CAE39    ret
*}
end;

//004CAE3C
procedure TImage.SetEnabled(Value:Boolean);
begin
{*
 004CAE3C    push        ebp
 004CAE3D    mov         ebp,esp
 004CAE3F    add         esp,0FFFFFFF8
 004CAE42    mov         byte ptr [ebp-5],dl
 004CAE45    mov         dword ptr [ebp-4],eax
 004CAE48    mov         eax,dword ptr [ebp-4]
 004CAE4B    mov         al,byte ptr [eax+58];TImage.FEnabled:Boolean
 004CAE4E    cmp         al,byte ptr [ebp-5]
>004CAE51    je          004CAE6D
 004CAE53    mov         al,byte ptr [ebp-5]
 004CAE56    mov         edx,dword ptr [ebp-4]
 004CAE59    mov         byte ptr [edx+58],al;TImage.FEnabled:Boolean
 004CAE5C    push        0
 004CAE5E    xor         ecx,ecx
 004CAE60    mov         edx,0B00C
 004CAE65    mov         eax,dword ptr [ebp-4]
 004CAE68    call        004CC7DC
 004CAE6D    pop         ecx
 004CAE6E    pop         ecx
 004CAE6F    pop         ebp
 004CAE70    ret
*}
end;

//004CAE74
{*function sub_004CAE74(?:TControl):?;
begin
 004CAE74    push        ebp
 004CAE75    mov         ebp,esp
 004CAE77    add         esp,0FFFFFFF8
 004CAE7A    mov         dword ptr [ebp-4],eax
 004CAE7D    push        0
 004CAE7F    xor         ecx,ecx
 004CAE81    mov         edx,0E
 004CAE86    mov         eax,dword ptr [ebp-4]
 004CAE89    call        004CC7DC
 004CAE8E    mov         dword ptr [ebp-8],eax
 004CAE91    mov         eax,dword ptr [ebp-8]
 004CAE94    pop         ecx
 004CAE95    pop         ecx
 004CAE96    pop         ebp
 004CAE97    ret
end;*}

//004CAE98
{*function sub_004CAE98(?:TWinControl; ?:PChar; ?:?):?;
begin
 004CAE98    push        ebp
 004CAE99    mov         ebp,esp
 004CAE9B    add         esp,0FFFFFFF0
 004CAE9E    mov         dword ptr [ebp-0C],ecx
 004CAEA1    mov         dword ptr [ebp-8],edx
 004CAEA4    mov         dword ptr [ebp-4],eax
 004CAEA7    mov         eax,dword ptr [ebp-8]
 004CAEAA    push        eax
 004CAEAB    mov         ecx,dword ptr [ebp-0C]
 004CAEAE    mov         edx,0D
 004CAEB3    mov         eax,dword ptr [ebp-4]
 004CAEB6    call        004CC7DC
 004CAEBB    mov         dword ptr [ebp-10],eax
 004CAEBE    mov         eax,dword ptr [ebp-10]
 004CAEC1    mov         esp,ebp
 004CAEC3    pop         ebp
 004CAEC4    ret
end;*}

//004CAEC8
{*function sub_004CAEC8(?:?):?;
begin
 004CAEC8    push        ebp
 004CAEC9    mov         ebp,esp
 004CAECB    add         esp,0FFFFFFF8
 004CAECE    mov         dword ptr [ebp-4],eax
 004CAED1    mov         eax,dword ptr [ebp-4]
 004CAED4    cmp         dword ptr [eax+0AC],0
>004CAEDB    jle         004CAEEB
 004CAEDD    mov         eax,dword ptr [ebp-4]
 004CAEE0    mov         eax,dword ptr [eax+0AC]
 004CAEE6    mov         dword ptr [ebp-8],eax
>004CAEE9    jmp         004CAEF4
 004CAEEB    mov         eax,dword ptr [ebp-4]
 004CAEEE    mov         eax,dword ptr [eax+4C]
 004CAEF1    mov         dword ptr [ebp-8],eax
 004CAEF4    mov         eax,dword ptr [ebp-8]
 004CAEF7    pop         ecx
 004CAEF8    pop         ecx
 004CAEF9    pop         ebp
 004CAEFA    ret
end;*}

//004CAEFC
{*function sub_004CAEFC(?:?):?;
begin
 004CAEFC    push        ebp
 004CAEFD    mov         ebp,esp
 004CAEFF    add         esp,0FFFFFFF8
 004CAF02    mov         dword ptr [ebp-4],eax
 004CAF05    mov         eax,dword ptr [ebp-4]
 004CAF08    cmp         dword ptr [eax+0A8],0
>004CAF0F    jle         004CAF1F
 004CAF11    mov         eax,dword ptr [ebp-4]
 004CAF14    mov         eax,dword ptr [eax+0A8]
 004CAF1A    mov         dword ptr [ebp-8],eax
>004CAF1D    jmp         004CAF28
 004CAF1F    mov         eax,dword ptr [ebp-4]
 004CAF22    mov         eax,dword ptr [eax+48]
 004CAF25    mov         dword ptr [ebp-8],eax
 004CAF28    mov         eax,dword ptr [ebp-8]
 004CAF2B    pop         ecx
 004CAF2C    pop         ecx
 004CAF2D    pop         ebp
 004CAF2E    ret
end;*}

//004CAF30
procedure TImage.SetPopupMenu(Value:TPopupMenu);
begin
{*
 004CAF30    push        ebp
 004CAF31    mov         ebp,esp
 004CAF33    add         esp,0FFFFFFF8
 004CAF36    mov         dword ptr [ebp-8],edx
 004CAF39    mov         dword ptr [ebp-4],eax
 004CAF3C    mov         eax,dword ptr [ebp-8]
 004CAF3F    mov         edx,dword ptr [ebp-4]
 004CAF42    mov         dword ptr [edx+7C],eax;TImage.FPopupMenu:TPopupMenu
 004CAF45    cmp         dword ptr [ebp-8],0
>004CAF49    je          004CAF61
 004CAF4B    mov         edx,dword ptr [ebp-4]
 004CAF4E    mov         eax,dword ptr [ebp-8]
 004CAF51    call        004E4A38
 004CAF56    mov         edx,dword ptr [ebp-4]
 004CAF59    mov         eax,dword ptr [ebp-8]
 004CAF5C    call        00483020
 004CAF61    pop         ecx
 004CAF62    pop         ecx
 004CAF63    pop         ebp
 004CAF64    ret
*}
end;

//004CAF68
procedure sub_004CAF68(?:TWinControl; ?:PChar);
begin
{*
 004CAF68    push        ebp
 004CAF69    mov         ebp,esp
 004CAF6B    add         esp,0FFFFFFF8
 004CAF6E    mov         dword ptr [ebp-8],edx
 004CAF71    mov         dword ptr [ebp-4],eax
 004CAF74    mov         eax,dword ptr [ebp-8]
 004CAF77    push        eax
 004CAF78    xor         ecx,ecx
 004CAF7A    mov         edx,0C
 004CAF7F    mov         eax,dword ptr [ebp-4]
 004CAF82    call        004CC7DC
 004CAF87    push        0
 004CAF89    xor         ecx,ecx
 004CAF8B    mov         edx,0B012
 004CAF90    mov         eax,dword ptr [ebp-4]
 004CAF93    call        004CC7DC
 004CAF98    pop         ecx
 004CAF99    pop         ecx
 004CAF9A    pop         ebp
 004CAF9B    ret
*}
end;

//004CAF9C
function TControl.GetText:TCaption;
begin
{*
 004CAF9C    push        ebp
 004CAF9D    mov         ebp,esp
 004CAF9F    add         esp,0FFFFFFF4
 004CAFA2    mov         dword ptr [ebp-8],edx
 004CAFA5    mov         dword ptr [ebp-4],eax
 004CAFA8    mov         eax,dword ptr [ebp-4]
 004CAFAB    call        004CAE74
 004CAFB0    mov         dword ptr [ebp-0C],eax
 004CAFB3    mov         eax,dword ptr [ebp-8]
 004CAFB6    mov         ecx,dword ptr [ebp-0C]
 004CAFB9    xor         edx,edx
 004CAFBB    call        @LStrFromPCharLen
 004CAFC0    cmp         dword ptr [ebp-0C],0
>004CAFC4    je          004CAFD7
 004CAFC6    mov         ecx,dword ptr [ebp-0C]
 004CAFC9    inc         ecx
 004CAFCA    mov         edx,dword ptr [ebp-8]
 004CAFCD    mov         edx,dword ptr [edx]
 004CAFCF    mov         eax,dword ptr [ebp-4]
 004CAFD2    call        004CAE98
 004CAFD7    mov         esp,ebp
 004CAFD9    pop         ebp
 004CAFDA    ret
*}
end;

//004CAFDC
procedure TControl.SetText(const Value:TCaption);
begin
{*
 004CAFDC    push        ebp
 004CAFDD    mov         ebp,esp
 004CAFDF    add         esp,0FFFFFFF4
 004CAFE2    xor         ecx,ecx
 004CAFE4    mov         dword ptr [ebp-0C],ecx
 004CAFE7    mov         dword ptr [ebp-8],edx
 004CAFEA    mov         dword ptr [ebp-4],eax
 004CAFED    xor         eax,eax
 004CAFEF    push        ebp
 004CAFF0    push        4CB03B
 004CAFF5    push        dword ptr fs:[eax]
 004CAFF8    mov         dword ptr fs:[eax],esp
 004CAFFB    lea         edx,[ebp-0C]
 004CAFFE    mov         eax,dword ptr [ebp-4]
 004CB001    call        TControl.GetText
 004CB006    mov         eax,dword ptr [ebp-0C]
 004CB009    mov         edx,dword ptr [ebp-8]
 004CB00C    call        @LStrCmp
>004CB011    je          004CB025
 004CB013    mov         eax,dword ptr [ebp-8]
 004CB016    call        @LStrToPChar
 004CB01B    mov         edx,eax
 004CB01D    mov         eax,dword ptr [ebp-4]
 004CB020    call        004CAF68
 004CB025    xor         eax,eax
 004CB027    pop         edx
 004CB028    pop         ecx
 004CB029    pop         ecx
 004CB02A    mov         dword ptr fs:[eax],edx
 004CB02D    push        4CB042
 004CB032    lea         eax,[ebp-0C]
 004CB035    call        @LStrClr
 004CB03A    ret
>004CB03B    jmp         @HandleFinally
>004CB040    jmp         004CB032
 004CB042    mov         esp,ebp
 004CB044    pop         ebp
 004CB045    ret
*}
end;

//004CB048
procedure TPanel.SetBiDiMode(Value:TBiDiMode);
begin
{*
 004CB048    push        ebp
 004CB049    mov         ebp,esp
 004CB04B    add         esp,0FFFFFFF8
 004CB04E    mov         byte ptr [ebp-5],dl
 004CB051    mov         dword ptr [ebp-4],eax
 004CB054    mov         eax,dword ptr [ebp-4]
 004CB057    mov         al,byte ptr [eax+5F];TPanel.FBiDiMode:TBiDiMode
 004CB05A    cmp         al,byte ptr [ebp-5]
>004CB05D    je          004CB080
 004CB05F    mov         al,byte ptr [ebp-5]
 004CB062    mov         edx,dword ptr [ebp-4]
 004CB065    mov         byte ptr [edx+5F],al;TPanel.FBiDiMode:TBiDiMode
 004CB068    mov         eax,dword ptr [ebp-4]
 004CB06B    mov         byte ptr [eax+60],0;TPanel.FParentBiDiMode:Boolean
 004CB06F    push        0
 004CB071    xor         ecx,ecx
 004CB073    mov         edx,0B03C
 004CB078    mov         eax,dword ptr [ebp-4]
 004CB07B    call        004CC7DC
 004CB080    pop         ecx
 004CB081    pop         ecx
 004CB082    pop         ebp
 004CB083    ret
*}
end;

//004CB084
{*procedure sub_004CB084(?:?; ?:?);
begin
 004CB084    push        ebp
 004CB085    mov         ebp,esp
 004CB087    add         esp,0FFFFFFF8
 004CB08A    mov         dword ptr [ebp-8],edx
 004CB08D    mov         dword ptr [ebp-4],eax
 004CB090    mov         eax,dword ptr [ebp-4]
 004CB093    mov         byte ptr [eax+59],0
 004CB097    mov         eax,dword ptr [ebp-4]
 004CB09A    mov         byte ptr [eax+56],0
 004CB09E    mov         eax,dword ptr [ebp-4]
 004CB0A1    mov         eax,dword ptr [eax+68]
 004CB0A4    call        TFont.GetHeight
 004CB0A9    mov         edx,dword ptr [ebp-4]
 004CB0AC    cmp         eax,dword ptr [edx+84]
>004CB0B2    je          004CB0D2
 004CB0B4    mov         eax,dword ptr [ebp-4]
 004CB0B7    or          byte ptr [eax+98],10
 004CB0BE    mov         eax,dword ptr [ebp-4]
 004CB0C1    mov         eax,dword ptr [eax+68]
 004CB0C4    call        TFont.GetHeight
 004CB0C9    mov         edx,dword ptr [ebp-4]
 004CB0CC    mov         dword ptr [edx+84],eax
 004CB0D2    push        0
 004CB0D4    xor         ecx,ecx
 004CB0D6    mov         edx,0B00E
 004CB0DB    mov         eax,dword ptr [ebp-4]
 004CB0DE    call        004CC7DC
 004CB0E3    pop         ecx
 004CB0E4    pop         ecx
 004CB0E5    pop         ebp
 004CB0E6    ret
end;*}

//004CB0E8
procedure TPanel.SetFont(Value:TFont);
begin
{*
 004CB0E8    push        ebp
 004CB0E9    mov         ebp,esp
 004CB0EB    add         esp,0FFFFFFF8
 004CB0EE    mov         dword ptr [ebp-8],edx
 004CB0F1    mov         dword ptr [ebp-4],eax
 004CB0F4    mov         edx,dword ptr [ebp-8]
 004CB0F7    mov         eax,dword ptr [ebp-4]
 004CB0FA    mov         eax,dword ptr [eax+68];TPanel.FFont:TFont
 004CB0FD    mov         ecx,dword ptr [eax]
 004CB0FF    call        dword ptr [ecx+8];TFont.sub_00486CC0
 004CB102    pop         ecx
 004CB103    pop         ecx
 004CB104    pop         ebp
 004CB105    ret
*}
end;

//004CB108
function TPanel.IsStoredFont(Value:TFont):Boolean;
begin
{*
 004CB108    push        ebp
 004CB109    mov         ebp,esp
 004CB10B    add         esp,0FFFFFFF8
 004CB10E    mov         dword ptr [ebp-4],eax
 004CB111    mov         eax,dword ptr [ebp-4]
 004CB114    cmp         byte ptr [eax+59],0;TPanel.FParentFont:Boolean
>004CB118    jne         004CB123
 004CB11A    mov         eax,dword ptr [ebp-4]
 004CB11D    cmp         byte ptr [eax+56],0;TPanel.FDesktopFont:Boolean
>004CB121    je          004CB127
 004CB123    xor         eax,eax
>004CB125    jmp         004CB129
 004CB127    mov         al,1
 004CB129    mov         byte ptr [ebp-5],al
 004CB12C    mov         al,byte ptr [ebp-5]
 004CB12F    pop         ecx
 004CB130    pop         ecx
 004CB131    pop         ebp
 004CB132    ret
*}
end;

//004CB134
function TImage.IsStoredShowHint(Value:Boolean):Boolean;
begin
{*
 004CB134    push        ebp
 004CB135    mov         ebp,esp
 004CB137    add         esp,0FFFFFFF8
 004CB13A    mov         dword ptr [ebp-4],eax
 004CB13D    mov         eax,dword ptr [ebp-4]
 004CB140    mov         al,byte ptr [eax+9A];TImage.FParentShowHint:Boolean
 004CB146    xor         al,1
 004CB148    mov         byte ptr [ebp-5],al
 004CB14B    mov         al,byte ptr [ebp-5]
 004CB14E    pop         ecx
 004CB14F    pop         ecx
 004CB150    pop         ebp
 004CB151    ret
*}
end;

//004CB154
function TPanel.IsStoredBiDiMode(Value:TBiDiMode):Boolean;
begin
{*
 004CB154    push        ebp
 004CB155    mov         ebp,esp
 004CB157    add         esp,0FFFFFFF8
 004CB15A    mov         dword ptr [ebp-4],eax
 004CB15D    mov         eax,dword ptr [ebp-4]
 004CB160    mov         al,byte ptr [eax+60];TPanel.FParentBiDiMode:Boolean
 004CB163    xor         al,1
 004CB165    mov         byte ptr [ebp-5],al
 004CB168    mov         al,byte ptr [ebp-5]
 004CB16B    pop         ecx
 004CB16C    pop         ecx
 004CB16D    pop         ebp
 004CB16E    ret
*}
end;

//004CB170
procedure TPanel.SetParentFont(Value:Boolean);
begin
{*
 004CB170    push        ebp
 004CB171    mov         ebp,esp
 004CB173    add         esp,0FFFFFFF8
 004CB176    mov         byte ptr [ebp-5],dl
 004CB179    mov         dword ptr [ebp-4],eax
 004CB17C    mov         eax,dword ptr [ebp-4]
 004CB17F    mov         al,byte ptr [eax+59];TPanel.FParentFont:Boolean
 004CB182    cmp         al,byte ptr [ebp-5]
>004CB185    je          004CB1B3
 004CB187    mov         al,byte ptr [ebp-5]
 004CB18A    mov         edx,dword ptr [ebp-4]
 004CB18D    mov         byte ptr [edx+59],al;TPanel.FParentFont:Boolean
 004CB190    mov         eax,dword ptr [ebp-4]
 004CB193    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>004CB197    je          004CB1B3
 004CB199    mov         eax,dword ptr [ebp-4]
 004CB19C    test        byte ptr [eax+1C],2;TPanel.FComponentState:TComponentState
>004CB1A0    jne         004CB1B3
 004CB1A2    push        0
 004CB1A4    xor         ecx,ecx
 004CB1A6    mov         edx,0B008
 004CB1AB    mov         eax,dword ptr [ebp-4]
 004CB1AE    call        004CC7DC
 004CB1B3    pop         ecx
 004CB1B4    pop         ecx
 004CB1B5    pop         ebp
 004CB1B6    ret
*}
end;

//004CB1B8
procedure TImage.SetShowHint(Value:Boolean);
begin
{*
 004CB1B8    push        ebp
 004CB1B9    mov         ebp,esp
 004CB1BB    add         esp,0FFFFFFF8
 004CB1BE    mov         byte ptr [ebp-5],dl
 004CB1C1    mov         dword ptr [ebp-4],eax
 004CB1C4    mov         eax,dword ptr [ebp-4]
 004CB1C7    mov         al,byte ptr [eax+99];TImage.FShowHint:Boolean
 004CB1CD    cmp         al,byte ptr [ebp-5]
>004CB1D0    je          004CB1F9
 004CB1D2    mov         al,byte ptr [ebp-5]
 004CB1D5    mov         edx,dword ptr [ebp-4]
 004CB1D8    mov         byte ptr [edx+99],al;TImage.FShowHint:Boolean
 004CB1DE    mov         eax,dword ptr [ebp-4]
 004CB1E1    mov         byte ptr [eax+9A],0;TImage.FParentShowHint:Boolean
 004CB1E8    push        0
 004CB1EA    xor         ecx,ecx
 004CB1EC    mov         edx,0B022
 004CB1F1    mov         eax,dword ptr [ebp-4]
 004CB1F4    call        004CC7DC
 004CB1F9    pop         ecx
 004CB1FA    pop         ecx
 004CB1FB    pop         ebp
 004CB1FC    ret
*}
end;

//004CB200
procedure TImage.SetParentShowHint(Value:Boolean);
begin
{*
 004CB200    push        ebp
 004CB201    mov         ebp,esp
 004CB203    add         esp,0FFFFFFF8
 004CB206    mov         byte ptr [ebp-5],dl
 004CB209    mov         dword ptr [ebp-4],eax
 004CB20C    mov         eax,dword ptr [ebp-4]
 004CB20F    mov         al,byte ptr [eax+9A];TImage.FParentShowHint:Boolean
 004CB215    cmp         al,byte ptr [ebp-5]
>004CB218    je          004CB249
 004CB21A    mov         al,byte ptr [ebp-5]
 004CB21D    mov         edx,dword ptr [ebp-4]
 004CB220    mov         byte ptr [edx+9A],al;TImage.FParentShowHint:Boolean
 004CB226    mov         eax,dword ptr [ebp-4]
 004CB229    cmp         dword ptr [eax+30],0;TImage.FParent:TWinControl
>004CB22D    je          004CB249
 004CB22F    mov         eax,dword ptr [ebp-4]
 004CB232    test        byte ptr [eax+1C],2;TImage.FComponentState:TComponentState
>004CB236    jne         004CB249
 004CB238    push        0
 004CB23A    xor         ecx,ecx
 004CB23C    mov         edx,0B023
 004CB241    mov         eax,dword ptr [ebp-4]
 004CB244    call        004CC7DC
 004CB249    pop         ecx
 004CB24A    pop         ecx
 004CB24B    pop         ebp
 004CB24C    ret
*}
end;

//004CB250
procedure TPanel.SetColor(Value:TColor);
begin
{*
 004CB250    push        ebp
 004CB251    mov         ebp,esp
 004CB253    add         esp,0FFFFFFF8
 004CB256    mov         dword ptr [ebp-8],edx
 004CB259    mov         dword ptr [ebp-4],eax
 004CB25C    mov         eax,dword ptr [ebp-4]
 004CB25F    mov         eax,dword ptr [eax+70];TPanel.FColor:TColor
 004CB262    cmp         eax,dword ptr [ebp-8]
>004CB265    je          004CB288
 004CB267    mov         eax,dword ptr [ebp-8]
 004CB26A    mov         edx,dword ptr [ebp-4]
 004CB26D    mov         dword ptr [edx+70],eax;TPanel.FColor:TColor
 004CB270    mov         eax,dword ptr [ebp-4]
 004CB273    mov         byte ptr [eax+5A],0;TPanel.FParentColor:Boolean
 004CB277    push        0
 004CB279    xor         ecx,ecx
 004CB27B    mov         edx,0B00D
 004CB280    mov         eax,dword ptr [ebp-4]
 004CB283    call        004CC7DC
 004CB288    pop         ecx
 004CB289    pop         ecx
 004CB28A    pop         ebp
 004CB28B    ret
*}
end;

//004CB28C
function TPanel.IsStoredColor(Value:TColor):Boolean;
begin
{*
 004CB28C    push        ebp
 004CB28D    mov         ebp,esp
 004CB28F    add         esp,0FFFFFFF8
 004CB292    mov         dword ptr [ebp-4],eax
 004CB295    mov         eax,dword ptr [ebp-4]
 004CB298    mov         al,byte ptr [eax+5A];TPanel.FParentColor:Boolean
 004CB29B    xor         al,1
 004CB29D    mov         byte ptr [ebp-5],al
 004CB2A0    mov         al,byte ptr [ebp-5]
 004CB2A3    pop         ecx
 004CB2A4    pop         ecx
 004CB2A5    pop         ebp
 004CB2A6    ret
*}
end;

//004CB2A8
procedure TPanel.SetParentColor(Value:Boolean);
begin
{*
 004CB2A8    push        ebp
 004CB2A9    mov         ebp,esp
 004CB2AB    add         esp,0FFFFFFF8
 004CB2AE    mov         byte ptr [ebp-5],dl
 004CB2B1    mov         dword ptr [ebp-4],eax
 004CB2B4    mov         eax,dword ptr [ebp-4]
 004CB2B7    mov         al,byte ptr [eax+5A];TPanel.FParentColor:Boolean
 004CB2BA    cmp         al,byte ptr [ebp-5]
>004CB2BD    je          004CB2EB
 004CB2BF    mov         al,byte ptr [ebp-5]
 004CB2C2    mov         edx,dword ptr [ebp-4]
 004CB2C5    mov         byte ptr [edx+5A],al;TPanel.FParentColor:Boolean
 004CB2C8    mov         eax,dword ptr [ebp-4]
 004CB2CB    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>004CB2CF    je          004CB2EB
 004CB2D1    mov         eax,dword ptr [ebp-4]
 004CB2D4    test        byte ptr [eax+1C],2;TPanel.FComponentState:TComponentState
>004CB2D8    jne         004CB2EB
 004CB2DA    push        0
 004CB2DC    xor         ecx,ecx
 004CB2DE    mov         edx,0B009
 004CB2E3    mov         eax,dword ptr [ebp-4]
 004CB2E6    call        004CC7DC
 004CB2EB    pop         ecx
 004CB2EC    pop         ecx
 004CB2ED    pop         ebp
 004CB2EE    ret
*}
end;

//004CB2F0
procedure TPanel.SetParentBiDiMode(Value:Boolean);
begin
{*
 004CB2F0    push        ebp
 004CB2F1    mov         ebp,esp
 004CB2F3    add         esp,0FFFFFFF8
 004CB2F6    mov         byte ptr [ebp-5],dl
 004CB2F9    mov         dword ptr [ebp-4],eax
 004CB2FC    mov         eax,dword ptr [ebp-4]
 004CB2FF    mov         al,byte ptr [eax+60];TPanel.FParentBiDiMode:Boolean
 004CB302    cmp         al,byte ptr [ebp-5]
>004CB305    je          004CB333
 004CB307    mov         al,byte ptr [ebp-5]
 004CB30A    mov         edx,dword ptr [ebp-4]
 004CB30D    mov         byte ptr [edx+60],al;TPanel.FParentBiDiMode:Boolean
 004CB310    mov         eax,dword ptr [ebp-4]
 004CB313    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>004CB317    je          004CB333
 004CB319    mov         eax,dword ptr [ebp-4]
 004CB31C    test        byte ptr [eax+1C],2;TPanel.FComponentState:TComponentState
>004CB320    jne         004CB333
 004CB322    push        0
 004CB324    xor         ecx,ecx
 004CB326    mov         edx,0B03D
 004CB32B    mov         eax,dword ptr [ebp-4]
 004CB32E    call        004CC7DC
 004CB333    pop         ecx
 004CB334    pop         ecx
 004CB335    pop         ebp
 004CB336    ret
*}
end;

//004CB338
procedure TSplitter.SetCursor(Value:TCursor);
begin
{*
 004CB338    push        ebp
 004CB339    mov         ebp,esp
 004CB33B    add         esp,0FFFFFFF8
 004CB33E    mov         word ptr [ebp-6],dx
 004CB342    mov         dword ptr [ebp-4],eax
 004CB345    mov         eax,dword ptr [ebp-4]
 004CB348    mov         ax,word ptr [eax+78];TSplitter.Cursor:TCursor
 004CB34C    cmp         ax,word ptr [ebp-6]
>004CB350    je          004CB36E
 004CB352    mov         ax,word ptr [ebp-6]
 004CB356    mov         edx,dword ptr [ebp-4]
 004CB359    mov         word ptr [edx+78],ax;TSplitter.Cursor:TCursor
 004CB35D    push        0
 004CB35F    xor         ecx,ecx
 004CB361    mov         edx,0B00F
 004CB366    mov         eax,dword ptr [ebp-4]
 004CB369    call        004CC7DC
 004CB36E    pop         ecx
 004CB36F    pop         ecx
 004CB370    pop         ebp
 004CB371    ret
*}
end;

//004CB374
function TControl.GetMouseCapture:Boolean;
begin
{*
 004CB374    push        ebp
 004CB375    mov         ebp,esp
 004CB377    add         esp,0FFFFFFF8
 004CB37A    mov         dword ptr [ebp-4],eax
 004CB37D    call        004C7334
 004CB382    cmp         eax,dword ptr [ebp-4]
 004CB385    sete        byte ptr [ebp-5]
 004CB389    mov         al,byte ptr [ebp-5]
 004CB38C    pop         ecx
 004CB38D    pop         ecx
 004CB38E    pop         ebp
 004CB38F    ret
*}
end;

//004CB390
{*procedure sub_004CB390(?:TControl; ?:?);
begin
 004CB390    push        ebp
 004CB391    mov         ebp,esp
 004CB393    add         esp,0FFFFFFF8
 004CB396    mov         byte ptr [ebp-5],dl
 004CB399    mov         dword ptr [ebp-4],eax
 004CB39C    mov         eax,dword ptr [ebp-4]
 004CB39F    call        TControl.GetMouseCapture
 004CB3A4    cmp         al,byte ptr [ebp-5]
>004CB3A7    je          004CB3C0
 004CB3A9    cmp         byte ptr [ebp-5],0
>004CB3AD    je          004CB3B9
 004CB3AF    mov         eax,dword ptr [ebp-4]
 004CB3B2    call        004C7370
>004CB3B7    jmp         004CB3C0
 004CB3B9    xor         eax,eax
 004CB3BB    call        004C7370
 004CB3C0    pop         ecx
 004CB3C1    pop         ecx
 004CB3C2    pop         ebp
 004CB3C3    ret
end;*}

//004CB3C4
procedure sub_004CB3C4(?:TWinControl);
begin
{*
 004CB3C4    push        ebp
 004CB3C5    mov         ebp,esp
 004CB3C7    push        ecx
 004CB3C8    push        esi
 004CB3C9    mov         dword ptr [ebp-4],eax
 004CB3CC    mov         dl,1
 004CB3CE    mov         eax,dword ptr [ebp-4]
 004CB3D1    mov         si,0FFCE
 004CB3D5    call        @CallDynaInst
 004CB3DA    pop         esi
 004CB3DB    pop         ecx
 004CB3DC    pop         ebp
 004CB3DD    ret
*}
end;

//004CB3E0
{*procedure sub_004CB3E0(?:TControl; ?:?);
begin
 004CB3E0    push        ebp
 004CB3E1    mov         ebp,esp
 004CB3E3    add         esp,0FFFFFFEC
 004CB3E6    push        esi
 004CB3E7    mov         dword ptr [ebp-8],edx
 004CB3EA    mov         dword ptr [ebp-4],eax
 004CB3ED    mov         eax,dword ptr [ebp-4]
 004CB3F0    cmp         dword ptr [eax+30],0
>004CB3F4    je          004CB4AC
 004CB3FA    mov         eax,dword ptr [ebp-4]
 004CB3FD    mov         eax,dword ptr [eax+30]
 004CB400    mov         eax,dword ptr [eax+198]
 004CB406    mov         edx,dword ptr [ebp-4]
 004CB409    call        00478890
 004CB40E    mov         dword ptr [ebp-0C],eax
 004CB411    cmp         dword ptr [ebp-0C],0
>004CB415    jl          004CB4AC
 004CB41B    mov         eax,dword ptr [ebp-4]
 004CB41E    mov         eax,dword ptr [eax+30]
 004CB421    mov         eax,dword ptr [eax+198]
 004CB427    mov         eax,dword ptr [eax+8]
 004CB42A    mov         dword ptr [ebp-10],eax
 004CB42D    cmp         dword ptr [ebp-8],0
>004CB431    jge         004CB438
 004CB433    xor         eax,eax
 004CB435    mov         dword ptr [ebp-8],eax
 004CB438    mov         eax,dword ptr [ebp-8]
 004CB43B    cmp         eax,dword ptr [ebp-10]
>004CB43E    jl          004CB447
 004CB440    mov         eax,dword ptr [ebp-10]
 004CB443    dec         eax
 004CB444    mov         dword ptr [ebp-8],eax
 004CB447    mov         eax,dword ptr [ebp-8]
 004CB44A    cmp         eax,dword ptr [ebp-0C]
>004CB44D    je          004CB4AC
 004CB44F    mov         eax,dword ptr [ebp-4]
 004CB452    mov         eax,dword ptr [eax+30]
 004CB455    mov         eax,dword ptr [eax+198]
 004CB45B    mov         edx,dword ptr [ebp-0C]
 004CB45E    call        00478668
 004CB463    mov         eax,dword ptr [ebp-4]
 004CB466    mov         eax,dword ptr [eax+30]
 004CB469    mov         eax,dword ptr [eax+198]
 004CB46F    mov         ecx,dword ptr [ebp-4]
 004CB472    mov         edx,dword ptr [ebp-8]
 004CB475    call        004788DC
 004CB47A    mov         cl,1
 004CB47C    mov         eax,dword ptr [ebp-4]
 004CB47F    mov         dl,byte ptr [eax+57]
 004CB482    mov         eax,dword ptr [ebp-4]
 004CB485    call        004CB65C
 004CB48A    mov         eax,dword ptr [ebp-4]
 004CB48D    call        004E7F1C
 004CB492    mov         dword ptr [ebp-14],eax
 004CB495    mov         eax,dword ptr [ebp-14]
 004CB498    test        byte ptr [eax+54],4
>004CB49C    je          004CB4AC
 004CB49E    mov         dl,1
 004CB4A0    mov         eax,dword ptr [ebp-14]
 004CB4A3    mov         si,0FFD1
 004CB4A7    call        @CallDynaInst
 004CB4AC    pop         esi
 004CB4AD    mov         esp,ebp
 004CB4AF    pop         ebp
 004CB4B0    ret
end;*}

//004CB4B4
{*procedure TControl.sub_004CB4B4(?:?);
begin
 004CB4B4    push        ebp
 004CB4B5    mov         ebp,esp
 004CB4B7    add         esp,0FFFFFFF8
 004CB4BA    mov         byte ptr [ebp-5],dl
 004CB4BD    mov         dword ptr [ebp-4],eax
 004CB4C0    mov         eax,dword ptr [ebp-4]
 004CB4C3    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CB4C7    je          004CB4F3
 004CB4C9    cmp         byte ptr [ebp-5],0
>004CB4CD    je          004CB4E9
 004CB4CF    mov         eax,dword ptr [ebp-4]
 004CB4D2    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB4D5    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 004CB4DB    mov         edx,dword ptr [eax+8];TList.FCount:Integer
 004CB4DE    dec         edx
 004CB4DF    mov         eax,dword ptr [ebp-4]
 004CB4E2    call        004CB3E0
>004CB4E7    jmp         004CB4F3
 004CB4E9    xor         edx,edx
 004CB4EB    mov         eax,dword ptr [ebp-4]
 004CB4EE    call        004CB3E0
 004CB4F3    pop         ecx
 004CB4F4    pop         ecx
 004CB4F5    pop         ebp
 004CB4F6    ret
end;*}

//004CB4F8
{*function sub_004CB4F8(?:?):?;
begin
 004CB4F8    push        ebp
 004CB4F9    mov         ebp,esp
 004CB4FB    add         esp,0FFFFFFE8
 004CB4FE    xor         ecx,ecx
 004CB500    mov         dword ptr [ebp-18],ecx
 004CB503    mov         dword ptr [ebp-8],edx
 004CB506    mov         dword ptr [ebp-4],eax
 004CB509    xor         eax,eax
 004CB50B    push        ebp
 004CB50C    push        4CB5AF
 004CB511    push        dword ptr fs:[eax]
 004CB514    mov         dword ptr fs:[eax],esp
 004CB517    mov         eax,dword ptr [ebp-4]
 004CB51A    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CB51E    jne         004CB554
 004CB520    mov         eax,dword ptr [ebp-4]
 004CB523    mov         eax,dword ptr [eax+8];TControl.Name:TComponentName
 004CB526    mov         dword ptr [ebp-14],eax
 004CB529    mov         byte ptr [ebp-10],0B
 004CB52D    lea         eax,[ebp-14]
 004CB530    push        eax
 004CB531    push        0
 004CB533    lea         edx,[ebp-18]
 004CB536    mov         eax,[0055B530];^SParentRequired:TResStringRec
 004CB53B    call        LoadResString
 004CB540    mov         ecx,dword ptr [ebp-18]
 004CB543    mov         dl,1
 004CB545    mov         eax,[00475960];EInvalidOperation
 004CB54A    call        Exception.CreateFmt;EInvalidOperation.Create
 004CB54F    call        @RaiseExcept
 004CB554    mov         edx,dword ptr [ebp-8]
 004CB557    mov         eax,dword ptr [ebp-4]
 004CB55A    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB55D    mov         ecx,dword ptr [eax]
 004CB55F    call        dword ptr [ecx+48];TWinControl.sub_004D35D8
 004CB562    mov         dword ptr [ebp-0C],eax
 004CB565    push        0
 004CB567    mov         eax,dword ptr [ebp-4]
 004CB56A    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004CB56D    push        eax
 004CB56E    mov         eax,dword ptr [ebp-4]
 004CB571    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004CB574    push        eax
 004CB575    mov         eax,dword ptr [ebp-0C]
 004CB578    push        eax
 004CB579    call        gdi32.SetViewportOrgEx
 004CB57E    mov         eax,dword ptr [ebp-4]
 004CB581    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CB584    push        eax
 004CB585    mov         eax,dword ptr [ebp-4]
 004CB588    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CB58B    push        eax
 004CB58C    push        0
 004CB58E    push        0
 004CB590    mov         eax,dword ptr [ebp-0C]
 004CB593    push        eax
 004CB594    call        gdi32.IntersectClipRect
 004CB599    xor         eax,eax
 004CB59B    pop         edx
 004CB59C    pop         ecx
 004CB59D    pop         ecx
 004CB59E    mov         dword ptr fs:[eax],edx
 004CB5A1    push        4CB5B6
 004CB5A6    lea         eax,[ebp-18]
 004CB5A9    call        @LStrClr
 004CB5AE    ret
>004CB5AF    jmp         @HandleFinally
>004CB5B4    jmp         004CB5A6
 004CB5B6    mov         eax,dword ptr [ebp-0C]
 004CB5B9    mov         esp,ebp
 004CB5BB    pop         ebp
 004CB5BC    ret
end;*}

//004CB5C0
{*function sub_004CB5C0(?:?):?;
begin
 004CB5C0    push        ebp
 004CB5C1    mov         ebp,esp
 004CB5C3    add         esp,0FFFFFFD0
 004CB5C6    mov         byte ptr [ebp-1],1
 004CB5CA    mov         eax,dword ptr [ebp+8]
 004CB5CD    mov         eax,dword ptr [eax-4]
 004CB5D0    mov         eax,dword ptr [eax+30]
 004CB5D3    mov         eax,dword ptr [eax+198]
 004CB5D9    mov         dword ptr [ebp-8],eax
 004CB5DC    mov         eax,dword ptr [ebp+8]
 004CB5DF    mov         edx,dword ptr [eax-4]
 004CB5E2    mov         eax,dword ptr [ebp-8]
 004CB5E5    call        00478890
 004CB5EA    mov         dword ptr [ebp-0C],eax
 004CB5ED    cmp         dword ptr [ebp-0C],0
>004CB5F1    jle         004CB64F
 004CB5F3    dec         dword ptr [ebp-0C]
 004CB5F6    mov         edx,dword ptr [ebp-0C]
 004CB5F9    mov         eax,dword ptr [ebp-8]
 004CB5FC    call        TList.Get
 004CB601    mov         dword ptr [ebp-10],eax
 004CB604    mov         eax,dword ptr [ebp-10]
 004CB607    cmp         byte ptr [eax+57],0
>004CB60B    je          004CB649
 004CB60D    mov         eax,dword ptr [ebp-10]
 004CB610    test        byte ptr [eax+50],40
>004CB614    je          004CB649
 004CB616    lea         edx,[ebp-30]
 004CB619    mov         eax,dword ptr [ebp-10]
 004CB61C    call        004CA6AC
 004CB621    lea         eax,[ebp-30]
 004CB624    push        eax
 004CB625    mov         eax,dword ptr [ebp+8]
 004CB628    add         eax,0FFFFFFEC
 004CB62B    push        eax
 004CB62C    lea         eax,[ebp-20]
 004CB62F    push        eax
 004CB630    call        user32.IntersectRect
 004CB635    mov         eax,dword ptr [ebp+8]
 004CB638    add         eax,0FFFFFFEC
 004CB63B    push        eax
 004CB63C    lea         eax,[ebp-20]
 004CB63F    push        eax
 004CB640    call        user32.EqualRect
 004CB645    test        eax,eax
>004CB647    jne         004CB653
 004CB649    cmp         dword ptr [ebp-0C],0
>004CB64D    jg          004CB5F3
 004CB64F    mov         byte ptr [ebp-1],0
 004CB653    mov         al,byte ptr [ebp-1]
 004CB656    mov         esp,ebp
 004CB658    pop         ebp
 004CB659    ret
end;*}

//004CB65C
{*procedure sub_004CB65C(?:TControl; ?:?; ?:?);
begin
 004CB65C    push        ebp
 004CB65D    mov         ebp,esp
 004CB65F    add         esp,0FFFFFFE8
 004CB662    mov         byte ptr [ebp-16],cl
 004CB665    mov         byte ptr [ebp-15],dl
 004CB668    mov         dword ptr [ebp-4],eax
 004CB66B    cmp         byte ptr [ebp-15],0
>004CB66F    jne         004CB683
 004CB671    mov         eax,dword ptr [ebp-4]
 004CB674    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004CB678    je          004CB6E3
 004CB67A    mov         eax,dword ptr [ebp-4]
 004CB67D    test        byte ptr [eax+51],4;TControl.?f51:byte
>004CB681    jne         004CB6E3
 004CB683    mov         eax,dword ptr [ebp-4]
 004CB686    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CB68A    je          004CB6E3
 004CB68C    mov         eax,dword ptr [ebp-4]
 004CB68F    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB692    call        TWinControl.HandleAllocated
 004CB697    test        al,al
>004CB699    je          004CB6E3
 004CB69B    lea         edx,[ebp-14]
 004CB69E    mov         eax,dword ptr [ebp-4]
 004CB6A1    call        004CA6AC
 004CB6A6    cmp         byte ptr [ebp-16],0
>004CB6AA    jne         004CB6C3
 004CB6AC    mov         eax,dword ptr [ebp-4]
 004CB6AF    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB6B2    test        byte ptr [eax+50],40;TWinControl.FControlStyle:TControlStyle
>004CB6B6    jne         004CB6C3
 004CB6B8    push        ebp
 004CB6B9    call        004CB5C0
 004CB6BE    pop         ecx
 004CB6BF    test        al,al
>004CB6C1    je          004CB6C7
 004CB6C3    xor         eax,eax
>004CB6C5    jmp         004CB6C9
 004CB6C7    mov         al,1
 004CB6C9    neg         al
 004CB6CB    sbb         eax,eax
 004CB6CD    push        eax
 004CB6CE    lea         eax,[ebp-14]
 004CB6D1    push        eax
 004CB6D2    mov         eax,dword ptr [ebp-4]
 004CB6D5    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB6D8    call        TWinControl.GetHandle
 004CB6DD    push        eax
 004CB6DE    call        user32.InvalidateRect
 004CB6E3    mov         esp,ebp
 004CB6E5    pop         ebp
 004CB6E6    ret
end;*}

//004CB6E8
procedure sub_004CB6E8;
begin
{*
 004CB6E8    push        ebp
 004CB6E9    mov         ebp,esp
 004CB6EB    push        ecx
 004CB6EC    mov         dword ptr [ebp-4],eax
 004CB6EF    mov         eax,dword ptr [ebp-4]
 004CB6F2    test        byte ptr [eax+50],40;TControl.FControlStyle:TControlStyle
 004CB6F6    setne       cl
 004CB6F9    mov         eax,dword ptr [ebp-4]
 004CB6FC    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 004CB6FF    mov         eax,dword ptr [ebp-4]
 004CB702    call        004CB65C
 004CB707    pop         ecx
 004CB708    pop         ebp
 004CB709    ret
*}
end;

//004CB70C
{*procedure TControl.sub_004CB70C(?:?);
begin
 004CB70C    push        ebp
 004CB70D    mov         ebp,esp
 004CB70F    add         esp,0FFFFFFF4
 004CB712    push        esi
 004CB713    mov         dword ptr [ebp-8],edx
 004CB716    mov         dword ptr [ebp-4],eax
 004CB719    mov         eax,dword ptr [ebp-4]
 004CB71C    call        004E7ED8
 004CB721    mov         dword ptr [ebp-0C],eax
 004CB724    cmp         dword ptr [ebp-0C],0
>004CB728    je          004CB743
 004CB72A    mov         eax,dword ptr [ebp-0C]
 004CB72D    cmp         eax,dword ptr [ebp-4]
>004CB730    je          004CB743
 004CB732    mov         edx,dword ptr [ebp-8]
 004CB735    mov         eax,dword ptr [ebp-0C]
 004CB738    mov         si,0FFC9
 004CB73C    call        @CallDynaInst
>004CB741    jmp         004CB763
 004CB743    mov         eax,dword ptr [ebp-8]
 004CB746    mov         eax,dword ptr [eax+8]
 004CB749    push        eax
 004CB74A    mov         ecx,dword ptr [ebp-8]
 004CB74D    mov         ecx,dword ptr [ecx+4]
 004CB750    mov         edx,0B043
 004CB755    mov         eax,dword ptr [ebp-4]
 004CB758    call        004CC7DC
 004CB75D    mov         edx,dword ptr [ebp-8]
 004CB760    mov         dword ptr [edx+0C],eax
 004CB763    pop         esi
 004CB764    mov         esp,ebp
 004CB766    pop         ebp
 004CB767    ret
end;*}

//004CB768
procedure sub_004CB768(?:TWinControl);
begin
{*
 004CB768    push        ebp
 004CB769    mov         ebp,esp
 004CB76B    push        ecx
 004CB76C    mov         dword ptr [ebp-4],eax
 004CB76F    xor         edx,edx
 004CB771    mov         eax,dword ptr [ebp-4]
 004CB774    call        TControl.SetVisible
 004CB779    pop         ecx
 004CB77A    pop         ebp
 004CB77B    ret
*}
end;

//004CB77C
{*procedure sub_004CB77C(?:?);
begin
 004CB77C    push        ebp
 004CB77D    mov         ebp,esp
 004CB77F    push        ecx
 004CB780    mov         dword ptr [ebp-4],eax
 004CB783    mov         eax,dword ptr [ebp-4]
 004CB786    cmp         dword ptr [eax+30],0
>004CB78A    je          004CB79D
 004CB78C    mov         edx,dword ptr [ebp-4]
 004CB78F    mov         eax,dword ptr [ebp-4]
 004CB792    mov         eax,dword ptr [eax+30]
 004CB795    mov         ecx,dword ptr [eax]
 004CB797    call        dword ptr [ecx+0C0]
 004CB79D    mov         eax,dword ptr [ebp-4]
 004CB7A0    test        byte ptr [eax+1C],10
>004CB7A4    je          004CB7AF
 004CB7A6    mov         eax,dword ptr [ebp-4]
 004CB7A9    test        byte ptr [eax+51],4
>004CB7AD    je          004CB7B9
 004CB7AF    mov         dl,1
 004CB7B1    mov         eax,dword ptr [ebp-4]
 004CB7B4    call        TControl.SetVisible
 004CB7B9    pop         ecx
 004CB7BA    pop         ebp
 004CB7BB    ret
end;*}

//004CB7BC
procedure sub_004CB7BC;
begin
{*
 004CB7BC    push        ebp
 004CB7BD    mov         ebp,esp
 004CB7BF    push        ecx
 004CB7C0    mov         dword ptr [ebp-4],eax
 004CB7C3    mov         eax,dword ptr [ebp-4]
 004CB7C6    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CB7CA    je          004CB7DA
 004CB7CC    mov         eax,dword ptr [ebp-4]
 004CB7CF    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB7D2    mov         edx,dword ptr [eax]
 004CB7D4    call        dword ptr [edx+88];TWinControl.sub_004D3720
 004CB7DA    pop         ecx
 004CB7DB    pop         ebp
 004CB7DC    ret
*}
end;

//004CB7E0
procedure TControl.Refresh;
begin
{*
 004CB7E0    push        ebp
 004CB7E1    mov         ebp,esp
 004CB7E3    push        ecx
 004CB7E4    mov         dword ptr [ebp-4],eax
 004CB7E7    mov         eax,dword ptr [ebp-4]
 004CB7EA    mov         edx,dword ptr [eax]
 004CB7EC    call        dword ptr [edx+80]
 004CB7F2    pop         ecx
 004CB7F3    pop         ebp
 004CB7F4    ret
*}
end;

//004CB7F8
procedure sub_004CB7F8;
begin
{*
 004CB7F8    push        ebp
 004CB7F9    mov         ebp,esp
 004CB7FB    add         esp,0FFFFFFF8
 004CB7FE    mov         dword ptr [ebp-4],eax
 004CB801    mov         eax,dword ptr [ebp-4]
 004CB804    cmp         byte ptr [eax+57],0;TControl.FVisible:Boolean
>004CB808    jne         004CB824
 004CB80A    mov         eax,dword ptr [ebp-4]
 004CB80D    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004CB811    je          004CB8F2
 004CB817    mov         eax,dword ptr [ebp-4]
 004CB81A    test        byte ptr [eax+51],4;TControl.?f51:byte
>004CB81E    jne         004CB8F2
 004CB824    mov         eax,dword ptr [ebp-4]
 004CB827    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CB82B    je          004CB8F2
 004CB831    mov         eax,dword ptr [ebp-4]
 004CB834    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB837    call        TWinControl.HandleAllocated
 004CB83C    test        al,al
>004CB83E    je          004CB8F2
 004CB844    mov         eax,dword ptr [ebp-4]
 004CB847    test        byte ptr [eax+50],40;TControl.FControlStyle:TControlStyle
>004CB84B    je          004CB8DF
 004CB851    mov         eax,dword ptr [ebp-4]
 004CB854    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB857    call        TWinControl.GetHandle
 004CB85C    push        eax
 004CB85D    call        user32.GetDC
 004CB862    mov         dword ptr [ebp-8],eax
 004CB865    xor         eax,eax
 004CB867    push        ebp
 004CB868    push        4CB8D8
 004CB86D    push        dword ptr fs:[eax]
 004CB870    mov         dword ptr fs:[eax],esp
 004CB873    mov         eax,dword ptr [ebp-4]
 004CB876    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004CB879    mov         edx,dword ptr [ebp-4]
 004CB87C    add         eax,dword ptr [edx+4C];TControl.Height:Integer
 004CB87F    push        eax
 004CB880    mov         eax,dword ptr [ebp-4]
 004CB883    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004CB886    mov         edx,dword ptr [ebp-4]
 004CB889    add         eax,dword ptr [edx+48];TControl.Width:Integer
 004CB88C    push        eax
 004CB88D    mov         eax,dword ptr [ebp-4]
 004CB890    mov         eax,dword ptr [eax+44];TControl.Top:Integer
 004CB893    push        eax
 004CB894    mov         eax,dword ptr [ebp-4]
 004CB897    mov         eax,dword ptr [eax+40];TControl.Left:Integer
 004CB89A    push        eax
 004CB89B    mov         eax,dword ptr [ebp-8]
 004CB89E    push        eax
 004CB89F    call        gdi32.IntersectClipRect
 004CB8A4    mov         eax,dword ptr [ebp-4]
 004CB8A7    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB8AA    mov         ecx,dword ptr [ebp-4]
 004CB8AD    mov         edx,dword ptr [ebp-8]
 004CB8B0    call        004D0BB0
 004CB8B5    xor         eax,eax
 004CB8B7    pop         edx
 004CB8B8    pop         ecx
 004CB8B9    pop         ecx
 004CB8BA    mov         dword ptr fs:[eax],edx
 004CB8BD    push        4CB8F2
 004CB8C2    mov         eax,dword ptr [ebp-8]
 004CB8C5    push        eax
 004CB8C6    mov         eax,dword ptr [ebp-4]
 004CB8C9    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CB8CC    call        TWinControl.GetHandle
 004CB8D1    push        eax
 004CB8D2    call        user32.ReleaseDC
 004CB8D7    ret
>004CB8D8    jmp         @HandleFinally
>004CB8DD    jmp         004CB8C2
 004CB8DF    mov         eax,dword ptr [ebp-4]
 004CB8E2    mov         edx,dword ptr [eax]
 004CB8E4    call        dword ptr [edx+7C];TControl.sub_004CB6E8
 004CB8E7    mov         eax,dword ptr [ebp-4]
 004CB8EA    mov         edx,dword ptr [eax]
 004CB8EC    call        dword ptr [edx+88];TControl.sub_004CB7BC
 004CB8F2    pop         ecx
 004CB8F3    pop         ecx
 004CB8F4    pop         ebp
 004CB8F5    ret
*}
end;

//004CB8F8
procedure TControl.sub_004CB8F8;
begin
{*
 004CB8F8    push        ebp
 004CB8F9    mov         ebp,esp
 004CB8FB    add         esp,0FFFFFFF8
 004CB8FE    mov         dword ptr [ebp-4],eax
 004CB901    mov         byte ptr [ebp-5],0
 004CB905    mov         al,byte ptr [ebp-5]
 004CB908    pop         ecx
 004CB909    pop         ecx
 004CB90A    pop         ebp
 004CB90B    ret
*}
end;

//004CB90C
{*function sub_004CB90C(?:TControl):?;
begin
 004CB90C    push        ebp
 004CB90D    mov         ebp,esp
 004CB90F    add         esp,0FFFFFFF8
 004CB912    mov         dword ptr [ebp-4],eax
 004CB915    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004CB91A    cmp         byte ptr [eax+0D],0
>004CB91E    je          004CB929
 004CB920    mov         eax,dword ptr [ebp-4]
 004CB923    cmp         byte ptr [eax+5F],0;TCustomTabControl.FBiDiMode:TBiDiMode
>004CB927    jne         004CB92D
 004CB929    xor         eax,eax
>004CB92B    jmp         004CB92F
 004CB92D    mov         al,1
 004CB92F    mov         byte ptr [ebp-5],al
 004CB932    mov         al,byte ptr [ebp-5]
 004CB935    pop         ecx
 004CB936    pop         ecx
 004CB937    pop         ebp
 004CB938    ret
end;*}

//004CB93C
procedure TControl.sub_004CB93C;
begin
{*
 004CB93C    push        ebp
 004CB93D    mov         ebp,esp
 004CB93F    add         esp,0FFFFFFF8
 004CB942    mov         dword ptr [ebp-4],eax
 004CB945    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004CB94A    cmp         byte ptr [eax+0D],0
>004CB94E    je          004CB959
 004CB950    mov         eax,dword ptr [ebp-4]
 004CB953    cmp         byte ptr [eax+5F],1;TControl.FBiDiMode:TBiDiMode
>004CB957    je          004CB95D
 004CB959    xor         eax,eax
>004CB95B    jmp         004CB95F
 004CB95D    mov         al,1
 004CB95F    mov         byte ptr [ebp-5],al
 004CB962    mov         al,byte ptr [ebp-5]
 004CB965    pop         ecx
 004CB966    pop         ecx
 004CB967    pop         ebp
 004CB968    ret
*}
end;

//004CB96C
{*function sub_004CB96C(?:?):?;
begin
 004CB96C    push        ebp
 004CB96D    mov         ebp,esp
 004CB96F    add         esp,0FFFFFFF8
 004CB972    mov         dword ptr [ebp-4],eax
 004CB975    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004CB97A    cmp         byte ptr [eax+0D],0
>004CB97E    je          004CB98B
 004CB980    mov         eax,dword ptr [ebp-4]
 004CB983    mov         al,byte ptr [eax+5F]
 004CB986    dec         eax
 004CB987    sub         al,2
>004CB989    jb          004CB98F
 004CB98B    xor         eax,eax
>004CB98D    jmp         004CB991
 004CB98F    mov         al,1
 004CB991    mov         byte ptr [ebp-5],al
 004CB994    mov         al,byte ptr [ebp-5]
 004CB997    pop         ecx
 004CB998    pop         ecx
 004CB999    pop         ebp
 004CB99A    ret
end;*}

//004CB99C
procedure TControl.sub_004CB99C;
begin
{*
 004CB99C    push        ebp
 004CB99D    mov         ebp,esp
 004CB99F    push        ecx
 004CB9A0    mov         dword ptr [ebp-4],eax
 004CB9A3    mov         eax,[0055DDAC];gvar_0055DDAC
 004CB9A8    mov         ecx,dword ptr [eax+8]
 004CB9AB    mov         eax,[0055DDAC];gvar_0055DDAC
 004CB9B0    mov         dl,byte ptr [eax+4]
 004CB9B3    mov         eax,dword ptr [ebp-4]
 004CB9B6    call        004CB9C0
 004CB9BB    pop         ecx
 004CB9BC    pop         ebp
 004CB9BD    ret
*}
end;

//004CB9C0
{*procedure sub_004CB9C0(?:TControl; ?:?; ?:?);
begin
 004CB9C0    push        ebp
 004CB9C1    mov         ebp,esp
 004CB9C3    add         esp,0FFFFFFE4
 004CB9C6    mov         dword ptr [ebp-0C],ecx
 004CB9C9    mov         byte ptr [ebp-5],dl
 004CB9CC    mov         dword ptr [ebp-4],eax
 004CB9CF    mov         eax,dword ptr [ebp-4]
 004CB9D2    mov         edx,dword ptr ds:[4E6404];TCustomForm
 004CB9D8    call        @IsClass
 004CB9DD    test        al,al
>004CB9DF    je          004CBA04
 004CB9E1    mov         eax,dword ptr [ebp-4]
 004CB9E4    cmp         byte ptr [eax+9B],1;TControl.FDragKind:TDragKind
>004CB9EB    je          004CBA04
 004CB9ED    mov         ecx,dword ptr ds:[55B51C];^SCannotDragForm:TResStringRec
 004CB9F3    mov         dl,1
 004CB9F5    mov         eax,[00475960];EInvalidOperation
 004CB9FA    call        Exception.Create;EInvalidOperation.Create
 004CB9FF    call        @RaiseExcept
 004CBA04    mov         eax,dword ptr [ebp-4]
 004CBA07    call        004CC828
 004CBA0C    cmp         dword ptr ds:[55DDC8],0;gvar_0055DDC8
>004CBA13    je          004CBA1E
 004CBA15    cmp         dword ptr ds:[55DDC8],0FFFFFFFF;gvar_0055DDC8
>004CBA1C    jne         004CBA91
 004CBA1E    xor         eax,eax
 004CBA20    mov         [0055DDC8],eax;gvar_0055DDC8
 004CBA25    mov         eax,dword ptr [ebp-4]
 004CBA28    test        byte ptr [eax+54],1;TControl.FControlState:TControlState
>004CBA2C    je          004CBA69
 004CBA2E    lea         eax,[ebp-14]
 004CBA31    push        eax
 004CBA32    call        user32.GetCursorPos
 004CBA37    lea         ecx,[ebp-1C]
 004CBA3A    lea         edx,[ebp-14]
 004CBA3D    mov         eax,dword ptr [ebp-4]
 004CBA40    call        TControl.ScreenToClient
 004CBA45    mov         eax,dword ptr [ebp-1C]
 004CBA48    mov         dword ptr [ebp-14],eax
 004CBA4B    mov         eax,dword ptr [ebp-18]
 004CBA4E    mov         dword ptr [ebp-10],eax
 004CBA51    lea         eax,[ebp-14]
 004CBA54    call        00408274
 004CBA59    push        eax
 004CBA5A    xor         ecx,ecx
 004CBA5C    mov         edx,202
 004CBA61    mov         eax,dword ptr [ebp-4]
 004CBA64    call        004CC7DC
 004CBA69    cmp         dword ptr [ebp-0C],0
>004CBA6D    jge         004CBA7A
 004CBA6F    mov         eax,[0055DDAC];gvar_0055DDAC
 004CBA74    mov         eax,dword ptr [eax+8]
 004CBA77    mov         dword ptr [ebp-0C],eax
 004CBA7A    cmp         dword ptr ds:[55DDC8],0FFFFFFFF;gvar_0055DDC8
>004CBA81    je          004CBA91
 004CBA83    mov         ecx,dword ptr [ebp-0C]
 004CBA86    mov         dl,byte ptr [ebp-5]
 004CBA89    mov         eax,dword ptr [ebp-4]
 004CBA8C    call        004C89B0
 004CBA91    mov         esp,ebp
 004CBA93    pop         ebp
 004CBA94    ret
end;*}

//004CBA98
procedure TControl.sub_004CBA98;
begin
{*
 004CBA98    push        ebp
 004CBA99    mov         ebp,esp
 004CBA9B    push        ecx
 004CBA9C    mov         dword ptr [ebp-4],eax
 004CBA9F    pop         ecx
 004CBAA0    pop         ebp
 004CBAA1    ret
*}
end;

//004CBAA4
{*function sub_004CBAA4(?:TWinControl):?;
begin
 004CBAA4    push        ebp
 004CBAA5    mov         ebp,esp
 004CBAA7    add         esp,0FFFFFFF8
 004CBAAA    mov         dword ptr [ebp-4],eax
 004CBAAD    mov         eax,[0055DDC8];gvar_0055DDC8
 004CBAB2    cmp         eax,dword ptr [ebp-4]
 004CBAB5    sete        byte ptr [ebp-5]
 004CBAB9    mov         al,byte ptr [ebp-5]
 004CBABC    pop         ecx
 004CBABD    pop         ecx
 004CBABE    pop         ebp
 004CBABF    ret
end;*}

//004CBAC0
{*procedure TControl.sub_004CBAC0(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004CBAC0    push        ebp
 004CBAC1    mov         ebp,esp
 004CBAC3    add         esp,0FFFFFFF4
 004CBAC6    push        ebx
 004CBAC7    mov         dword ptr [ebp-0C],ecx
 004CBACA    mov         dword ptr [ebp-8],edx
 004CBACD    mov         dword ptr [ebp-4],eax
 004CBAD0    mov         eax,dword ptr [ebp+8]
 004CBAD3    mov         byte ptr [eax],0
 004CBAD6    mov         eax,dword ptr [ebp-4]
 004CBAD9    cmp         word ptr [eax+0F2],0;TControl.?fF2:word
>004CBAE1    je          004CBB0E
 004CBAE3    mov         eax,dword ptr [ebp+8]
 004CBAE6    mov         byte ptr [eax],1
 004CBAE9    mov         eax,dword ptr [ebp-0C]
 004CBAEC    push        eax
 004CBAED    mov         eax,dword ptr [ebp+10]
 004CBAF0    push        eax
 004CBAF1    mov         al,byte ptr [ebp+0C]
 004CBAF4    push        eax
 004CBAF5    mov         eax,dword ptr [ebp+8]
 004CBAF8    push        eax
 004CBAF9    mov         ebx,dword ptr [ebp-4]
 004CBAFC    mov         ecx,dword ptr [ebp-8]
 004CBAFF    mov         edx,dword ptr [ebp-4]
 004CBB02    mov         eax,dword ptr [ebx+0F4];TControl.?fF4:dword
 004CBB08    call        dword ptr [ebx+0F0];TControl.FOnDragOver
 004CBB0E    pop         ebx
 004CBB0F    mov         esp,ebp
 004CBB11    pop         ebp
 004CBB12    ret         0C
end;*}

//004CBB18
{*procedure TControl.sub_004CBB18(?:?; ?:?; ?:?);
begin
 004CBB18    push        ebp
 004CBB19    mov         ebp,esp
 004CBB1B    add         esp,0FFFFFFF4
 004CBB1E    push        ebx
 004CBB1F    mov         dword ptr [ebp-0C],ecx
 004CBB22    mov         dword ptr [ebp-8],edx
 004CBB25    mov         dword ptr [ebp-4],eax
 004CBB28    mov         eax,dword ptr [ebp-4]
 004CBB2B    cmp         word ptr [eax+0EA],0;TControl.?fEA:word
>004CBB33    je          004CBB52
 004CBB35    mov         eax,dword ptr [ebp-0C]
 004CBB38    push        eax
 004CBB39    mov         eax,dword ptr [ebp+8]
 004CBB3C    push        eax
 004CBB3D    mov         ebx,dword ptr [ebp-4]
 004CBB40    mov         ecx,dword ptr [ebp-8]
 004CBB43    mov         edx,dword ptr [ebp-4]
 004CBB46    mov         eax,dword ptr [ebx+0EC];TControl.?fEC:dword
 004CBB4C    call        dword ptr [ebx+0E8];TControl.FOnDragDrop
 004CBB52    pop         ebx
 004CBB53    mov         esp,ebp
 004CBB55    pop         ebp
 004CBB56    ret         4
end;*}

//004CBB5C
{*procedure TControl.sub_004CBB5C(?:?);
begin
 004CBB5C    push        ebp
 004CBB5D    mov         ebp,esp
 004CBB5F    add         esp,0FFFFFFF8
 004CBB62    push        ebx
 004CBB63    mov         dword ptr [ebp-8],edx
 004CBB66    mov         dword ptr [ebp-4],eax
 004CBB69    mov         eax,dword ptr [ebp-4]
 004CBB6C    cmp         word ptr [eax+112],0;TControl.?f112:word
>004CBB74    je          004CBB8B
 004CBB76    mov         ecx,dword ptr [ebp-8]
 004CBB79    mov         ebx,dword ptr [ebp-4]
 004CBB7C    mov         edx,dword ptr [ebp-4]
 004CBB7F    mov         eax,dword ptr [ebx+114];TControl.?f114:dword
 004CBB85    call        dword ptr [ebx+110];TControl.FOnStartDrag
 004CBB8B    pop         ebx
 004CBB8C    pop         ecx
 004CBB8D    pop         ecx
 004CBB8E    pop         ebp
 004CBB8F    ret
end;*}

//004CBB90
{*procedure TControl.sub_004CBB90(?:?; ?:?; ?:?);
begin
 004CBB90    push        ebp
 004CBB91    mov         ebp,esp
 004CBB93    add         esp,0FFFFFFF4
 004CBB96    push        ebx
 004CBB97    mov         dword ptr [ebp-0C],ecx
 004CBB9A    mov         dword ptr [ebp-8],edx
 004CBB9D    mov         dword ptr [ebp-4],eax
 004CBBA0    mov         eax,dword ptr [ebp-4]
 004CBBA3    cmp         word ptr [eax+11A],0;TControl.?f11A:word
>004CBBAB    je          004CBBCA
 004CBBAD    mov         eax,dword ptr [ebp-0C]
 004CBBB0    push        eax
 004CBBB1    mov         eax,dword ptr [ebp+8]
 004CBBB4    push        eax
 004CBBB5    mov         ebx,dword ptr [ebp-4]
 004CBBB8    mov         ecx,dword ptr [ebp-8]
 004CBBBB    mov         edx,dword ptr [ebp-4]
 004CBBBE    mov         eax,dword ptr [ebx+11C];TControl.?f11C:dword
 004CBBC4    call        dword ptr [ebx+118];TControl.FOnEndDrag
 004CBBCA    pop         ebx
 004CBBCB    mov         esp,ebp
 004CBBCD    pop         ebp
 004CBBCE    ret         4
end;*}

//004CBBD4
{*procedure TControl.sub_004CBBD4(?:?);
begin
 004CBBD4    push        ebp
 004CBBD5    mov         ebp,esp
 004CBBD7    add         esp,0FFFFFFDC
 004CBBDA    push        ebx
 004CBBDB    mov         dword ptr [ebp-8],edx
 004CBBDE    mov         dword ptr [ebp-4],eax
 004CBBE1    mov         eax,dword ptr [ebp-8]
 004CBBE4    cmp         dword ptr [eax+4],0
>004CBBE8    je          004CBBFD
 004CBBEA    mov         eax,dword ptr [ebp-8]
 004CBBED    mov         eax,dword ptr [eax+4]
 004CBBF0    cmp         byte ptr [eax+1A7],0
>004CBBF7    jne         004CBC94
 004CBBFD    mov         eax,dword ptr [ebp-8]
 004CBC00    mov         eax,dword ptr [eax+38]
 004CBC03    call        004CAEFC
 004CBC08    mov         dword ptr [ebp-0C],eax
 004CBC0B    mov         eax,dword ptr [ebp-8]
 004CBC0E    mov         eax,dword ptr [eax+38]
 004CBC11    call        004CAEC8
 004CBC16    mov         dword ptr [ebp-10],eax
 004CBC19    fild        dword ptr [ebp-0C]
 004CBC1C    mov         eax,dword ptr [ebp-8]
 004CBC1F    fmul        qword ptr [eax+20]
 004CBC22    mov         eax,dword ptr [ebp-8]
 004CBC25    fild        dword ptr [eax+0C]
 004CBC28    fsubrp      st(1),st
 004CBC2A    fstp        qword ptr [ebp-18]
 004CBC2D    wait
 004CBC2E    fild        dword ptr [ebp-10]
 004CBC31    mov         eax,dword ptr [ebp-8]
 004CBC34    fmul        qword ptr [eax+28]
 004CBC37    mov         eax,dword ptr [ebp-8]
 004CBC3A    fild        dword ptr [eax+10]
 004CBC3D    fsubrp      st(1),st
 004CBC3F    fstp        qword ptr [ebp-20]
 004CBC42    wait
 004CBC43    mov         eax,dword ptr [ebp-8]
 004CBC46    add         eax,44
 004CBC49    mov         dword ptr [ebp-24],eax
 004CBC4C    fld         qword ptr [ebp-18]
 004CBC4F    call        @ROUND
 004CBC54    mov         edx,dword ptr [ebp-24]
 004CBC57    mov         dword ptr [edx],eax
 004CBC59    fld         qword ptr [ebp-20]
 004CBC5C    call        @ROUND
 004CBC61    mov         edx,dword ptr [ebp-24]
 004CBC64    mov         dword ptr [edx+4],eax
 004CBC67    mov         eax,dword ptr [ebp-24]
 004CBC6A    mov         eax,dword ptr [eax]
 004CBC6C    add         eax,dword ptr [ebp-0C]
 004CBC6F    mov         edx,dword ptr [ebp-24]
 004CBC72    mov         dword ptr [edx+8],eax
 004CBC75    mov         eax,dword ptr [ebp-24]
 004CBC78    mov         eax,dword ptr [eax+4]
 004CBC7B    add         eax,dword ptr [ebp-10]
 004CBC7E    mov         edx,dword ptr [ebp-24]
 004CBC81    mov         dword ptr [edx+0C],eax
 004CBC84    mov         eax,dword ptr [ebp-8]
 004CBC87    lea         edx,[eax+44]
 004CBC8A    mov         eax,dword ptr [ebp-8]
 004CBC8D    mov         ecx,dword ptr [eax]
 004CBC8F    call        dword ptr [ecx+2C]
>004CBC92    jmp         004CBCF5
 004CBC94    mov         eax,dword ptr [ebp-8]
 004CBC97    add         eax,44
 004CBC9A    push        eax
 004CBC9B    mov         eax,dword ptr [ebp-8]
 004CBC9E    mov         eax,dword ptr [eax+4]
 004CBCA1    call        TWinControl.GetHandle
 004CBCA6    push        eax
 004CBCA7    call        user32.GetWindowRect
 004CBCAC    mov         eax,dword ptr [ebp-8]
 004CBCAF    mov         eax,dword ptr [eax+4]
 004CBCB2    cmp         byte ptr [eax+1A7],0
>004CBCB9    je          004CBCF5
 004CBCBB    mov         eax,dword ptr [ebp-8]
 004CBCBE    mov         eax,dword ptr [eax+4]
 004CBCC1    cmp         dword ptr [eax+17C],0
>004CBCC8    je          004CBCF5
 004CBCCA    mov         eax,dword ptr [ebp-8]
 004CBCCD    mov         al,byte ptr [eax+54]
 004CBCD0    push        eax
 004CBCD1    mov         eax,dword ptr [ebp-8]
 004CBCD4    add         eax,44
 004CBCD7    push        eax
 004CBCD8    mov         eax,dword ptr [ebp-8]
 004CBCDB    mov         eax,dword ptr [eax+4]
 004CBCDE    mov         eax,dword ptr [eax+17C]
 004CBCE4    mov         edx,dword ptr [ebp-8]
 004CBCE7    mov         ecx,dword ptr [edx+58]
 004CBCEA    mov         edx,dword ptr [ebp-8]
 004CBCED    mov         edx,dword ptr [edx+38]
 004CBCF0    mov         ebx,dword ptr [eax]
 004CBCF2    call        dword ptr [ebx+24]
 004CBCF5    pop         ebx
 004CBCF6    mov         esp,ebp
 004CBCF8    pop         ebp
 004CBCF9    ret
end;*}

//004CBCFC
{*procedure TControl.sub_004CBCFC(?:?; ?:?);
begin
 004CBCFC    push        ebp
 004CBCFD    mov         ebp,esp
 004CBCFF    add         esp,0FFFFFFF4
 004CBD02    push        esi
 004CBD03    mov         dword ptr [ebp-0C],ecx
 004CBD06    mov         dword ptr [ebp-8],edx
 004CBD09    mov         dword ptr [ebp-4],eax
 004CBD0C    mov         edx,dword ptr [ebp-8]
 004CBD0F    mov         eax,dword ptr [ebp-4]
 004CBD12    mov         si,0FFD2
 004CBD16    call        @CallDynaInst;TControl.sub_004CBBD4
 004CBD1B    pop         esi
 004CBD1C    mov         esp,ebp
 004CBD1E    pop         ebp
 004CBD1F    ret         4
end;*}

//004CBD24
{*procedure TControl.sub_004CBD24(?:?; ?:?; ?:?);
begin
 004CBD24    push        ebp
 004CBD25    mov         ebp,esp
 004CBD27    add         esp,0FFFFFFF4
 004CBD2A    push        ebx
 004CBD2B    mov         dword ptr [ebp-0C],ecx
 004CBD2E    mov         dword ptr [ebp-8],edx
 004CBD31    mov         dword ptr [ebp-4],eax
 004CBD34    mov         eax,dword ptr [ebp-4]
 004CBD37    cmp         word ptr [eax+10A],0;TControl.?f10A:word
>004CBD3F    je          004CBD5E
 004CBD41    mov         eax,dword ptr [ebp-0C]
 004CBD44    push        eax
 004CBD45    mov         eax,dword ptr [ebp+8]
 004CBD48    push        eax
 004CBD49    mov         ebx,dword ptr [ebp-4]
 004CBD4C    mov         ecx,dword ptr [ebp-8]
 004CBD4F    mov         edx,dword ptr [ebp-4]
 004CBD52    mov         eax,dword ptr [ebx+10C];TControl.?f10C:dword
 004CBD58    call        dword ptr [ebx+108];TControl.FOnEndDock
 004CBD5E    pop         ebx
 004CBD5F    mov         esp,ebp
 004CBD61    pop         ebp
 004CBD62    ret         4
end;*}

//004CBD68
{*procedure TControl.sub_004CBD68(?:?);
begin
 004CBD68    push        ebp
 004CBD69    mov         ebp,esp
 004CBD6B    add         esp,0FFFFFFF8
 004CBD6E    push        ebx
 004CBD6F    mov         dword ptr [ebp-8],edx
 004CBD72    mov         dword ptr [ebp-4],eax
 004CBD75    mov         eax,dword ptr [ebp-4]
 004CBD78    cmp         word ptr [eax+102],0;TControl.?f102:word
>004CBD80    je          004CBD97
 004CBD82    mov         ecx,dword ptr [ebp-8]
 004CBD85    mov         ebx,dword ptr [ebp-4]
 004CBD88    mov         edx,dword ptr [ebp-4]
 004CBD8B    mov         eax,dword ptr [ebx+104];TControl.?f104:dword
 004CBD91    call        dword ptr [ebx+100];TControl.FOnStartDock
 004CBD97    pop         ebx
 004CBD98    pop         ecx
 004CBD99    pop         ecx
 004CBD9A    pop         ebp
 004CBD9B    ret
end;*}

//004CBD9C
{*procedure TControl.sub_004CBD9C(?:?; ?:?; ?:?);
begin
 004CBD9C    push        ebp
 004CBD9D    mov         ebp,esp
 004CBD9F    add         esp,0FFFFFFE8
 004CBDA2    push        ebx
 004CBDA3    push        esi
 004CBDA4    push        edi
 004CBDA5    mov         esi,dword ptr [ebp+8]
 004CBDA8    lea         edi,[ebp-14]
 004CBDAB    movs        dword ptr [edi],dword ptr [esi]
 004CBDAC    movs        dword ptr [edi],dword ptr [esi]
 004CBDAD    mov         dword ptr [ebp-0C],ecx
 004CBDB0    mov         byte ptr [ebp-5],dl
 004CBDB3    mov         dword ptr [ebp-4],eax
 004CBDB6    mov         byte ptr [ebp-15],0
 004CBDBA    mov         eax,dword ptr [ebp-4]
 004CBDBD    cmp         word ptr [eax+13A],0;TControl.?f13A:word
>004CBDC5    je          004CBDE8
 004CBDC7    mov         eax,dword ptr [ebp-0C]
 004CBDCA    push        eax
 004CBDCB    lea         eax,[ebp-14]
 004CBDCE    push        eax
 004CBDCF    lea         eax,[ebp-15]
 004CBDD2    push        eax
 004CBDD3    mov         ebx,dword ptr [ebp-4]
 004CBDD6    mov         cl,byte ptr [ebp-5]
 004CBDD9    mov         edx,dword ptr [ebp-4]
 004CBDDC    mov         eax,dword ptr [ebx+13C];TControl.?f13C:dword
 004CBDE2    call        dword ptr [ebx+138];TControl.FOnMouseWheel
 004CBDE8    cmp         byte ptr [ebp-15],0
>004CBDEC    jne         004CBE86
 004CBDF2    mov         eax,dword ptr [ebp-0C]
 004CBDF5    mov         edx,dword ptr [ebp-4]
 004CBDF8    add         dword ptr [edx+0A4],eax;TControl.FWheelAccumulator:Integer
>004CBDFE    jmp         004CBE6F
 004CBE00    mov         eax,dword ptr [ebp-4]
 004CBE03    cmp         dword ptr [eax+0A4],0;TControl.FWheelAccumulator:Integer
 004CBE0A    setl        byte ptr [ebp-16]
 004CBE0E    mov         eax,dword ptr [ebp-4]
 004CBE11    mov         eax,dword ptr [eax+0A4];TControl.FWheelAccumulator:Integer
 004CBE17    cdq
 004CBE18    xor         eax,edx
 004CBE1A    sub         eax,edx
 004CBE1C    sub         eax,78
 004CBE1F    mov         edx,dword ptr [ebp-4]
 004CBE22    mov         dword ptr [edx+0A4],eax;TControl.FWheelAccumulator:Integer
 004CBE28    cmp         byte ptr [ebp-16],0
>004CBE2C    je          004CBE5A
 004CBE2E    mov         eax,dword ptr [ebp-4]
 004CBE31    cmp         dword ptr [eax+0A4],0;TControl.FWheelAccumulator:Integer
>004CBE38    je          004CBE43
 004CBE3A    mov         eax,dword ptr [ebp-4]
 004CBE3D    neg         dword ptr [eax+0A4];TControl.FWheelAccumulator:Integer
 004CBE43    lea         ecx,[ebp-14]
 004CBE46    mov         dl,byte ptr [ebp-5]
 004CBE49    mov         eax,dword ptr [ebp-4]
 004CBE4C    mov         si,0FFE1
 004CBE50    call        @CallDynaInst;TControl.sub_004CBE94
 004CBE55    mov         byte ptr [ebp-15],al
>004CBE58    jmp         004CBE6F
 004CBE5A    lea         ecx,[ebp-14]
 004CBE5D    mov         dl,byte ptr [ebp-5]
 004CBE60    mov         eax,dword ptr [ebp-4]
 004CBE63    mov         si,0FFE0
 004CBE67    call        @CallDynaInst;TControl.sub_004CBEE4
 004CBE6C    mov         byte ptr [ebp-15],al
 004CBE6F    mov         eax,dword ptr [ebp-4]
 004CBE72    mov         eax,dword ptr [eax+0A4];TControl.FWheelAccumulator:Integer
 004CBE78    cdq
 004CBE79    xor         eax,edx
 004CBE7B    sub         eax,edx
 004CBE7D    cmp         eax,78
>004CBE80    jge         004CBE00
 004CBE86    mov         al,byte ptr [ebp-15]
 004CBE89    pop         edi
 004CBE8A    pop         esi
 004CBE8B    pop         ebx
 004CBE8C    mov         esp,ebp
 004CBE8E    pop         ebp
 004CBE8F    ret         4
end;*}

//004CBE94
{*procedure TControl.sub_004CBE94(?:?; ?:?);
begin
 004CBE94    push        ebp
 004CBE95    mov         ebp,esp
 004CBE97    add         esp,0FFFFFFF0
 004CBE9A    push        ebx
 004CBE9B    push        esi
 004CBE9C    push        edi
 004CBE9D    mov         esi,ecx
 004CBE9F    lea         edi,[ebp-0D]
 004CBEA2    movs        dword ptr [edi],dword ptr [esi]
 004CBEA3    movs        dword ptr [edi],dword ptr [esi]
 004CBEA4    mov         byte ptr [ebp-5],dl
 004CBEA7    mov         dword ptr [ebp-4],eax
 004CBEAA    mov         byte ptr [ebp-0E],0
 004CBEAE    mov         eax,dword ptr [ebp-4]
 004CBEB1    cmp         word ptr [eax+142],0;TControl.?f142:word
>004CBEB9    je          004CBED8
 004CBEBB    lea         eax,[ebp-0D]
 004CBEBE    push        eax
 004CBEBF    lea         eax,[ebp-0E]
 004CBEC2    push        eax
 004CBEC3    mov         ebx,dword ptr [ebp-4]
 004CBEC6    mov         cl,byte ptr [ebp-5]
 004CBEC9    mov         edx,dword ptr [ebp-4]
 004CBECC    mov         eax,dword ptr [ebx+144];TControl.?f144:dword
 004CBED2    call        dword ptr [ebx+140];TControl.FOnMouseWheelDown
 004CBED8    mov         al,byte ptr [ebp-0E]
 004CBEDB    pop         edi
 004CBEDC    pop         esi
 004CBEDD    pop         ebx
 004CBEDE    mov         esp,ebp
 004CBEE0    pop         ebp
 004CBEE1    ret
end;*}

//004CBEE4
{*procedure TControl.sub_004CBEE4(?:?; ?:?);
begin
 004CBEE4    push        ebp
 004CBEE5    mov         ebp,esp
 004CBEE7    add         esp,0FFFFFFF0
 004CBEEA    push        ebx
 004CBEEB    push        esi
 004CBEEC    push        edi
 004CBEED    mov         esi,ecx
 004CBEEF    lea         edi,[ebp-0D]
 004CBEF2    movs        dword ptr [edi],dword ptr [esi]
 004CBEF3    movs        dword ptr [edi],dword ptr [esi]
 004CBEF4    mov         byte ptr [ebp-5],dl
 004CBEF7    mov         dword ptr [ebp-4],eax
 004CBEFA    mov         byte ptr [ebp-0E],0
 004CBEFE    mov         eax,dword ptr [ebp-4]
 004CBF01    cmp         word ptr [eax+14A],0;TControl.?f14A:word
>004CBF09    je          004CBF28
 004CBF0B    lea         eax,[ebp-0D]
 004CBF0E    push        eax
 004CBF0F    lea         eax,[ebp-0E]
 004CBF12    push        eax
 004CBF13    mov         ebx,dword ptr [ebp-4]
 004CBF16    mov         cl,byte ptr [ebp-5]
 004CBF19    mov         edx,dword ptr [ebp-4]
 004CBF1C    mov         eax,dword ptr [ebx+14C];TControl.?f14C:dword
 004CBF22    call        dword ptr [ebx+148];TControl.FOnMouseWheelUp
 004CBF28    mov         al,byte ptr [ebp-0E]
 004CBF2B    pop         edi
 004CBF2C    pop         esi
 004CBF2D    pop         ebx
 004CBF2E    mov         esp,ebp
 004CBF30    pop         ebp
 004CBF31    ret
end;*}

//004CBF34
{*procedure TControl.sub_004CBF34(?:?; ?:?);
begin
 004CBF34    push        ebp
 004CBF35    mov         ebp,esp
 004CBF37    add         esp,0FFFFFFD4
 004CBF3A    push        esi
 004CBF3B    push        edi
 004CBF3C    mov         byte ptr [ebp-9],cl
 004CBF3F    mov         dword ptr [ebp-8],edx
 004CBF42    mov         dword ptr [ebp-4],eax
 004CBF45    mov         eax,dword ptr [ebp-8]
 004CBF48    mov         edx,dword ptr [eax]
 004CBF4A    call        dword ptr [edx+38]
 004CBF4D    mov         dword ptr [ebp-1C],eax
 004CBF50    cmp         byte ptr [ebp-9],0
>004CBF54    je          004CBF65
 004CBF56    mov         eax,dword ptr [ebp-8]
 004CBF59    lea         esi,[eax+5C]
 004CBF5C    lea         edi,[ebp-2C]
 004CBF5F    movs        dword ptr [edi],dword ptr [esi]
 004CBF60    movs        dword ptr [edi],dword ptr [esi]
 004CBF61    movs        dword ptr [edi],dword ptr [esi]
 004CBF62    movs        dword ptr [edi],dword ptr [esi]
>004CBF63    jmp         004CBF72
 004CBF65    mov         eax,dword ptr [ebp-8]
 004CBF68    lea         esi,[eax+44]
 004CBF6B    lea         edi,[ebp-2C]
 004CBF6E    movs        dword ptr [edi],dword ptr [esi]
 004CBF6F    movs        dword ptr [edi],dword ptr [esi]
 004CBF70    movs        dword ptr [edi],dword ptr [esi]
 004CBF71    movs        dword ptr [edi],dword ptr [esi]
 004CBF72    call        user32.GetDesktopWindow
 004CBF77    mov         dword ptr [ebp-10],eax
 004CBF7A    push        402
 004CBF7F    push        0
 004CBF81    mov         eax,dword ptr [ebp-10]
 004CBF84    push        eax
 004CBF85    call        user32.GetDCEx
 004CBF8A    mov         dword ptr [ebp-14],eax
 004CBF8D    xor         eax,eax
 004CBF8F    push        ebp
 004CBF90    push        4CC077
 004CBF95    push        dword ptr fs:[eax]
 004CBF98    mov         dword ptr fs:[eax],esp
 004CBF9B    mov         eax,dword ptr [ebp-8]
 004CBF9E    mov         eax,dword ptr [eax+40]
 004CBFA1    call        TBrush.GetHandle
 004CBFA6    push        eax
 004CBFA7    mov         eax,dword ptr [ebp-14]
 004CBFAA    push        eax
 004CBFAB    call        gdi32.SelectObject
 004CBFB0    mov         dword ptr [ebp-18],eax
 004CBFB3    push        5A0049;gvar_005A0049
 004CBFB8    mov         eax,dword ptr [ebp-1C]
 004CBFBB    push        eax
 004CBFBC    mov         eax,dword ptr [ebp-24]
 004CBFBF    sub         eax,dword ptr [ebp-2C]
 004CBFC2    sub         eax,dword ptr [ebp-1C]
 004CBFC5    push        eax
 004CBFC6    mov         eax,dword ptr [ebp-28]
 004CBFC9    push        eax
 004CBFCA    mov         eax,dword ptr [ebp-2C]
 004CBFCD    add         eax,dword ptr [ebp-1C]
 004CBFD0    push        eax
 004CBFD1    mov         eax,dword ptr [ebp-14]
 004CBFD4    push        eax
 004CBFD5    call        gdi32.PatBlt
 004CBFDA    push        5A0049;gvar_005A0049
 004CBFDF    mov         eax,dword ptr [ebp-20]
 004CBFE2    sub         eax,dword ptr [ebp-28]
 004CBFE5    sub         eax,dword ptr [ebp-1C]
 004CBFE8    push        eax
 004CBFE9    mov         eax,dword ptr [ebp-1C]
 004CBFEC    push        eax
 004CBFED    mov         eax,dword ptr [ebp-28]
 004CBFF0    add         eax,dword ptr [ebp-1C]
 004CBFF3    push        eax
 004CBFF4    mov         eax,dword ptr [ebp-24]
 004CBFF7    sub         eax,dword ptr [ebp-1C]
 004CBFFA    push        eax
 004CBFFB    mov         eax,dword ptr [ebp-14]
 004CBFFE    push        eax
 004CBFFF    call        gdi32.PatBlt
 004CC004    push        5A0049;gvar_005A0049
 004CC009    mov         eax,dword ptr [ebp-1C]
 004CC00C    push        eax
 004CC00D    mov         eax,dword ptr [ebp-24]
 004CC010    sub         eax,dword ptr [ebp-2C]
 004CC013    sub         eax,dword ptr [ebp-1C]
 004CC016    push        eax
 004CC017    mov         eax,dword ptr [ebp-20]
 004CC01A    sub         eax,dword ptr [ebp-1C]
 004CC01D    push        eax
 004CC01E    mov         eax,dword ptr [ebp-2C]
 004CC021    push        eax
 004CC022    mov         eax,dword ptr [ebp-14]
 004CC025    push        eax
 004CC026    call        gdi32.PatBlt
 004CC02B    push        5A0049;gvar_005A0049
 004CC030    mov         eax,dword ptr [ebp-20]
 004CC033    sub         eax,dword ptr [ebp-28]
 004CC036    sub         eax,dword ptr [ebp-1C]
 004CC039    push        eax
 004CC03A    mov         eax,dword ptr [ebp-1C]
 004CC03D    push        eax
 004CC03E    mov         eax,dword ptr [ebp-28]
 004CC041    push        eax
 004CC042    mov         eax,dword ptr [ebp-2C]
 004CC045    push        eax
 004CC046    mov         eax,dword ptr [ebp-14]
 004CC049    push        eax
 004CC04A    call        gdi32.PatBlt
 004CC04F    mov         eax,dword ptr [ebp-18]
 004CC052    push        eax
 004CC053    mov         eax,dword ptr [ebp-14]
 004CC056    push        eax
 004CC057    call        gdi32.SelectObject
 004CC05C    xor         eax,eax
 004CC05E    pop         edx
 004CC05F    pop         ecx
 004CC060    pop         ecx
 004CC061    mov         dword ptr fs:[eax],edx
 004CC064    push        4CC07E
 004CC069    mov         eax,dword ptr [ebp-14]
 004CC06C    push        eax
 004CC06D    mov         eax,dword ptr [ebp-10]
 004CC070    push        eax
 004CC071    call        user32.ReleaseDC
 004CC076    ret
>004CC077    jmp         @HandleFinally
>004CC07C    jmp         004CC069
 004CC07E    pop         edi
 004CC07F    pop         esi
 004CC080    mov         esp,ebp
 004CC082    pop         ebp
 004CC083    ret
end;*}

//004CC084
{*procedure TControl.sub_004CC084(?:?);
begin
 004CC084    push        ebp
 004CC085    mov         ebp,esp
 004CC087    add         esp,0FFFFFFF8
 004CC08A    push        esi
 004CC08B    mov         dword ptr [ebp-8],edx
 004CC08E    mov         dword ptr [ebp-4],eax
 004CC091    xor         ecx,ecx
 004CC093    mov         edx,dword ptr [ebp-8]
 004CC096    mov         eax,dword ptr [ebp-4]
 004CC099    mov         si,0FFE8
 004CC09D    call        @CallDynaInst;TControl.sub_004CBF34
 004CC0A2    pop         esi
 004CC0A3    pop         ecx
 004CC0A4    pop         ecx
 004CC0A5    pop         ebp
 004CC0A6    ret
end;*}

//004CC0A8
{*procedure TControl.sub_004CC0A8(?:?);
begin
 004CC0A8    push        ebp
 004CC0A9    mov         ebp,esp
 004CC0AB    add         esp,0FFFFFFF8
 004CC0AE    push        esi
 004CC0AF    mov         dword ptr [ebp-8],edx
 004CC0B2    mov         dword ptr [ebp-4],eax
 004CC0B5    mov         cl,1
 004CC0B7    mov         edx,dword ptr [ebp-8]
 004CC0BA    mov         eax,dword ptr [ebp-4]
 004CC0BD    mov         si,0FFE8
 004CC0C1    call        @CallDynaInst;TControl.sub_004CBF34
 004CC0C6    pop         esi
 004CC0C7    pop         ecx
 004CC0C8    pop         ecx
 004CC0C9    pop         ebp
 004CC0CA    ret
end;*}

//004CC0CC
{*procedure sub_004CC0CC(?:?; ?:?);
begin
 004CC0CC    push        ebp
 004CC0CD    mov         ebp,esp
 004CC0CF    add         esp,0FFFFFFE4
 004CC0D2    push        esi
 004CC0D3    mov         dword ptr [ebp-8],edx
 004CC0D6    mov         dword ptr [ebp-4],eax
 004CC0D9    mov         eax,dword ptr [ebp-8]
 004CC0DC    mov         eax,dword ptr [eax+8]
 004CC0DF    mov         dword ptr [ebp-14],eax
 004CC0E2    mov         eax,dword ptr [ebp-14]
 004CC0E5    mov         eax,dword ptr [eax+8]
 004CC0E8    mov         dword ptr [ebp-0C],eax
 004CC0EB    mov         eax,dword ptr [ebp-0C]
 004CC0EE    mov         edx,dword ptr ds:[4C4A44];TDragDockObject
 004CC0F4    call        @IsClass
 004CC0F9    mov         byte ptr [ebp-0E],al
 004CC0FC    cmp         byte ptr ds:[55DDD0],0;gvar_0055DDD0
>004CC103    je          004CC11F
 004CC105    cmp         byte ptr [ebp-0E],0
>004CC109    jne         004CC11F
 004CC10B    mov         eax,dword ptr [ebp-0C]
 004CC10E    mov         edx,dword ptr ds:[4C4928];TDragControlObject
 004CC114    call        @AsClass
 004CC119    mov         eax,dword ptr [eax+38];TDragControlObject..................................................
 004CC11C    mov         dword ptr [ebp-0C],eax
 004CC11F    lea         ecx,[ebp-1C]
 004CC122    mov         eax,dword ptr [ebp-14]
 004CC125    mov         edx,eax
 004CC127    mov         eax,dword ptr [ebp-4]
 004CC12A    call        TControl.ScreenToClient
 004CC12F    mov         eax,dword ptr [ebp-8]
 004CC132    mov         al,byte ptr [eax+4]
 004CC135    sub         al,3
>004CC137    jb          004CC140
>004CC139    je          004CC19E
>004CC13B    jmp         004CC1D5
 004CC140    mov         byte ptr [ebp-0D],1
 004CC144    cmp         byte ptr [ebp-0E],0
>004CC148    je          004CC170
 004CC14A    mov         eax,dword ptr [ebp-18]
 004CC14D    push        eax
 004CC14E    mov         eax,dword ptr [ebp-8]
 004CC151    mov         al,byte ptr [eax+4]
 004CC154    push        eax
 004CC155    lea         eax,[ebp-0D]
 004CC158    push        eax
 004CC159    mov         ecx,dword ptr [ebp-1C]
 004CC15C    mov         edx,dword ptr [ebp-0C]
 004CC15F    mov         eax,dword ptr [ebp-14]
 004CC162    mov         eax,dword ptr [eax+0C]
 004CC165    mov         si,0FFC4
 004CC169    call        @CallDynaInst
>004CC16E    jmp         004CC191
 004CC170    mov         eax,dword ptr [ebp-18]
 004CC173    push        eax
 004CC174    mov         eax,dword ptr [ebp-8]
 004CC177    mov         al,byte ptr [eax+4]
 004CC17A    push        eax
 004CC17B    lea         eax,[ebp-0D]
 004CC17E    push        eax
 004CC17F    mov         ecx,dword ptr [ebp-1C]
 004CC182    mov         edx,dword ptr [ebp-0C]
 004CC185    mov         eax,dword ptr [ebp-4]
 004CC188    mov         si,0FFDE
 004CC18C    call        @CallDynaInst
 004CC191    xor         eax,eax
 004CC193    mov         al,byte ptr [ebp-0D]
 004CC196    mov         edx,dword ptr [ebp-8]
 004CC199    mov         dword ptr [edx+0C],eax
>004CC19C    jmp         004CC1D5
 004CC19E    cmp         byte ptr [ebp-0E],0
>004CC1A2    je          004CC1BF
 004CC1A4    mov         eax,dword ptr [ebp-18]
 004CC1A7    push        eax
 004CC1A8    mov         ecx,dword ptr [ebp-1C]
 004CC1AB    mov         edx,dword ptr [ebp-0C]
 004CC1AE    mov         eax,dword ptr [ebp-14]
 004CC1B1    mov         eax,dword ptr [eax+0C]
 004CC1B4    mov         si,0FFB7
 004CC1B8    call        @CallDynaInst
>004CC1BD    jmp         004CC1D5
 004CC1BF    mov         eax,dword ptr [ebp-18]
 004CC1C2    push        eax
 004CC1C3    mov         ecx,dword ptr [ebp-1C]
 004CC1C6    mov         edx,dword ptr [ebp-0C]
 004CC1C9    mov         eax,dword ptr [ebp-4]
 004CC1CC    mov         si,0FFCB
 004CC1D0    call        @CallDynaInst
 004CC1D5    pop         esi
 004CC1D6    mov         esp,ebp
 004CC1D8    pop         ebp
 004CC1D9    ret
end;*}

//004CC1DC
{*function sub_004CC1DC(?:?; ?:TWinControl; ?:?; ?:?):?;
begin
 004CC1DC    push        ebp
 004CC1DD    mov         ebp,esp
 004CC1DF    add         esp,0FFFFFFC0
 004CC1E2    push        ebx
 004CC1E3    push        esi
 004CC1E4    push        edi
 004CC1E5    mov         dword ptr [ebp-0C],ecx
 004CC1E8    mov         dword ptr [ebp-8],edx
 004CC1EB    mov         dword ptr [ebp-4],eax
 004CC1EE    cmp         dword ptr [ebp-8],0
>004CC1F2    je          004CC1FE
 004CC1F4    cmp         dword ptr [ebp-8],0FFFFFFFF
>004CC1F8    jne         004CC2EB
 004CC1FE    mov         eax,dword ptr [ebp-4]
 004CC201    cmp         dword ptr [eax+0A0],0
>004CC208    je          004CC266
 004CC20A    mov         eax,dword ptr [ebp-4]
 004CC20D    mov         eax,dword ptr [eax+0A0]
 004CC213    cmp         byte ptr [eax+1A7],0
>004CC21A    je          004CC266
 004CC21C    mov         eax,dword ptr [ebp-4]
 004CC21F    mov         eax,dword ptr [eax+0A0]
 004CC225    cmp         dword ptr [eax+17C],0
>004CC22C    je          004CC266
 004CC22E    lea         ecx,[ebp-28]
 004CC231    mov         eax,dword ptr [ebp-4]
 004CC234    mov         eax,dword ptr [eax+0A0]
 004CC23A    mov         eax,dword ptr [eax+17C]
 004CC240    mov         edx,dword ptr [ebp-4]
 004CC243    mov         ebx,dword ptr [eax]
 004CC245    call        dword ptr [ebx+14]
 004CC248    push        2
 004CC24A    lea         eax,[ebp-28]
 004CC24D    push        eax
 004CC24E    push        0
 004CC250    mov         eax,dword ptr [ebp-4]
 004CC253    mov         eax,dword ptr [eax+0A0]
 004CC259    call        TWinControl.GetHandle
 004CC25E    push        eax
 004CC25F    call        user32.MapWindowPoints
>004CC264    jmp         004CC2AC
 004CC266    lea         ecx,[ebp-30]
 004CC269    mov         eax,dword ptr [ebp-4]
 004CC26C    mov         edx,dword ptr [eax+44]
 004CC26F    mov         eax,dword ptr [ebp-4]
 004CC272    mov         eax,dword ptr [eax+40]
 004CC275    call        Point
 004CC27A    mov         eax,dword ptr [ebp-30]
 004CC27D    mov         dword ptr [ebp-28],eax
 004CC280    mov         eax,dword ptr [ebp-2C]
 004CC283    mov         dword ptr [ebp-24],eax
 004CC286    mov         eax,dword ptr [ebp-4]
 004CC289    cmp         dword ptr [eax+30],0
>004CC28D    je          004CC2AC
 004CC28F    lea         ecx,[ebp-30]
 004CC292    lea         edx,[ebp-28]
 004CC295    mov         eax,dword ptr [ebp-4]
 004CC298    mov         eax,dword ptr [eax+30]
 004CC29B    call        TControl.ClientToScreen
 004CC2A0    mov         eax,dword ptr [ebp-30]
 004CC2A3    mov         dword ptr [ebp-28],eax
 004CC2A6    mov         eax,dword ptr [ebp-2C]
 004CC2A9    mov         dword ptr [ebp-24],eax
 004CC2AC    mov         eax,dword ptr [ebp-4]
 004CC2AF    call        004CAEC8
 004CC2B4    push        eax
 004CC2B5    lea         eax,[ebp-40]
 004CC2B8    push        eax
 004CC2B9    mov         eax,dword ptr [ebp-4]
 004CC2BC    call        004CAEFC
 004CC2C1    mov         ecx,eax
 004CC2C3    mov         edx,dword ptr [ebp-24]
 004CC2C6    mov         eax,dword ptr [ebp-28]
 004CC2C9    call        Bounds
 004CC2CE    lea         esi,[ebp-40]
 004CC2D1    lea         edi,[ebp-28]
 004CC2D4    movs        dword ptr [edi],dword ptr [esi]
 004CC2D5    movs        dword ptr [edi],dword ptr [esi]
 004CC2D6    movs        dword ptr [edi],dword ptr [esi]
 004CC2D7    movs        dword ptr [edi],dword ptr [esi]
 004CC2D8    lea         edx,[ebp-28]
 004CC2DB    mov         eax,dword ptr [ebp-4]
 004CC2DE    call        004CC414
 004CC2E3    mov         byte ptr [ebp-0D],al
>004CC2E6    jmp         004CC405
 004CC2EB    mov         eax,dword ptr [ebp-4]
 004CC2EE    call        004CC828
 004CC2F3    mov         eax,dword ptr [ebp-4]
 004CC2F6    cmp         dword ptr [eax+0A0],0
>004CC2FD    je          004CC31F
 004CC2FF    mov         eax,dword ptr [ebp-4]
 004CC302    mov         eax,dword ptr [eax+0A0]
 004CC308    mov         ecx,dword ptr [ebp-4]
 004CC30B    mov         edx,dword ptr [ebp-8]
 004CC30E    mov         si,0FFBE
 004CC312    call        @CallDynaInst
 004CC317    test        al,al
>004CC319    jne         004CC31F
 004CC31B    xor         eax,eax
>004CC31D    jmp         004CC321
 004CC31F    mov         al,1
 004CC321    mov         byte ptr [ebp-0D],al
 004CC324    cmp         byte ptr [ebp-0D],0
>004CC328    je          004CC405
 004CC32E    mov         ecx,dword ptr [ebp-4]
 004CC331    mov         dl,1
 004CC333    mov         eax,[004C4A44];TDragDockObject
 004CC338    call        TDragDockObject.Create;TDragDockObject.Create
 004CC33D    mov         dword ptr [ebp-14],eax
 004CC340    xor         eax,eax
 004CC342    push        ebp
 004CC343    push        4CC3FE
 004CC348    push        dword ptr fs:[eax]
 004CC34B    mov         dword ptr fs:[eax],esp
 004CC34E    mov         eax,dword ptr [ebp-4]
 004CC351    cmp         dword ptr [eax+0A0],0
>004CC358    je          004CC36D
 004CC35A    mov         eax,dword ptr [ebp-4]
 004CC35D    mov         eax,dword ptr [eax+0A0]
 004CC363    call        TWinControl.GetHandle
 004CC368    mov         dword ptr [ebp-18],eax
>004CC36B    jmp         004CC372
 004CC36D    xor         eax,eax
 004CC36F    mov         dword ptr [ebp-18],eax
 004CC372    lea         edx,[ebp-28]
 004CC375    mov         eax,dword ptr [ebp-4]
 004CC378    call        004CA6AC
 004CC37D    cmp         dword ptr [ebp-18],0
>004CC381    je          004CC394
 004CC383    push        2
 004CC385    lea         eax,[ebp-28]
 004CC388    push        eax
 004CC389    push        0
 004CC38B    mov         eax,dword ptr [ebp-18]
 004CC38E    push        eax
 004CC38F    call        user32.MapWindowPoints
 004CC394    mov         eax,dword ptr [ebp-14]
 004CC397    mov         edx,dword ptr [ebp-8]
 004CC39A    mov         dword ptr [eax+4],edx;TDragDockObject.FDragTarget:Pointer
 004CC39D    mov         eax,dword ptr [ebp-14]
 004CC3A0    mov         dl,byte ptr [ebp+8]
 004CC3A3    mov         byte ptr [eax+54],dl;TDragDockObject.FDropAlign:TAlign
 004CC3A6    mov         eax,dword ptr [ebp-14]
 004CC3A9    mov         edx,dword ptr [ebp-0C]
 004CC3AC    mov         dword ptr [eax+58],edx;TDragDockObject.FDropOnControl:TControl
 004CC3AF    mov         eax,dword ptr [ebp-14]
 004CC3B2    lea         edi,[eax+44];TDragDockObject.FDockRect:TRect
 004CC3B5    lea         esi,[ebp-28]
 004CC3B8    movs        dword ptr [edi],dword ptr [esi]
 004CC3B9    movs        dword ptr [edi],dword ptr [esi]
 004CC3BA    movs        dword ptr [edi],dword ptr [esi]
 004CC3BB    movs        dword ptr [edi],dword ptr [esi]
 004CC3BC    push        1
 004CC3BE    lea         eax,[ebp-28]
 004CC3C1    push        eax
 004CC3C2    mov         eax,dword ptr [ebp-8]
 004CC3C5    call        TWinControl.GetHandle
 004CC3CA    push        eax
 004CC3CB    push        0
 004CC3CD    call        user32.MapWindowPoints
 004CC3D2    mov         eax,dword ptr [ebp-24]
 004CC3D5    push        eax
 004CC3D6    mov         ecx,dword ptr [ebp-28]
 004CC3D9    mov         edx,dword ptr [ebp-14]
 004CC3DC    mov         eax,dword ptr [ebp-8]
 004CC3DF    mov         si,0FFB7
 004CC3E3    call        @CallDynaInst
 004CC3E8    xor         eax,eax
 004CC3EA    pop         edx
 004CC3EB    pop         ecx
 004CC3EC    pop         ecx
 004CC3ED    mov         dword ptr fs:[eax],edx
 004CC3F0    push        4CC405
 004CC3F5    mov         eax,dword ptr [ebp-14]
 004CC3F8    call        TObject.Free
 004CC3FD    ret
>004CC3FE    jmp         @HandleFinally
>004CC403    jmp         004CC3F5
 004CC405    mov         al,byte ptr [ebp-0D]
 004CC408    pop         edi
 004CC409    pop         esi
 004CC40A    pop         ebx
 004CC40B    mov         esp,ebp
 004CC40D    pop         ebp
 004CC40E    ret         4
end;*}

//004CC414
{*function sub_004CC414(?:?; ?:TPoint):?;
begin
 004CC414    push        ebp
 004CC415    mov         ebp,esp
 004CC417    add         esp,0FFFFFFD4
 004CC41A    push        esi
 004CC41B    push        edi
 004CC41C    mov         esi,edx
 004CC41E    lea         edi,[ebp-1C]
 004CC421    movs        dword ptr [edi],dword ptr [esi]
 004CC422    movs        dword ptr [edi],dword ptr [esi]
 004CC423    movs        dword ptr [edi],dword ptr [esi]
 004CC424    movs        dword ptr [edi],dword ptr [esi]
 004CC425    mov         dword ptr [ebp-4],eax
 004CC428    mov         eax,dword ptr [ebp-4]
 004CC42B    cmp         dword ptr [eax+0A0],0
>004CC432    je          004CC453
 004CC434    mov         ecx,dword ptr [ebp-4]
 004CC437    xor         edx,edx
 004CC439    mov         eax,dword ptr [ebp-4]
 004CC43C    mov         eax,dword ptr [eax+0A0]
 004CC442    mov         si,0FFBE
 004CC446    call        @CallDynaInst
 004CC44B    test        al,al
>004CC44D    jne         004CC453
 004CC44F    xor         eax,eax
>004CC451    jmp         004CC455
 004CC453    mov         al,1
 004CC455    mov         byte ptr [ebp-5],al
 004CC458    cmp         byte ptr [ebp-5],0
>004CC45C    je          004CC4B8
 004CC45E    lea         edx,[ebp-1C]
 004CC461    mov         eax,dword ptr [ebp-4]
 004CC464    call        004CD81C
 004CC469    mov         dword ptr [ebp-0C],eax
 004CC46C    cmp         dword ptr [ebp-0C],0
>004CC470    je          004CC4A6
 004CC472    mov         eax,dword ptr [ebp-0C]
 004CC475    call        TControl.GetClientHeight
 004CC47A    push        eax
 004CC47B    lea         eax,[ebp-2C]
 004CC47E    push        eax
 004CC47F    mov         eax,dword ptr [ebp-0C]
 004CC482    call        TControl.GetClientWidth
 004CC487    mov         ecx,eax
 004CC489    xor         edx,edx
 004CC48B    xor         eax,eax
 004CC48D    call        Rect
 004CC492    lea         ecx,[ebp-2C]
 004CC495    mov         edx,dword ptr [ebp-0C]
 004CC498    mov         eax,dword ptr [ebp-4]
 004CC49B    mov         si,0FFCC
 004CC49F    call        @CallDynaInst
>004CC4A4    jmp         004CC4B8
 004CC4A6    lea         ecx,[ebp-1C]
 004CC4A9    mov         edx,dword ptr [ebp-0C]
 004CC4AC    mov         eax,dword ptr [ebp-4]
 004CC4AF    mov         si,0FFCC
 004CC4B3    call        @CallDynaInst
 004CC4B8    mov         al,byte ptr [ebp-5]
 004CC4BB    pop         edi
 004CC4BC    pop         esi
 004CC4BD    mov         esp,ebp
 004CC4BF    pop         ebp
 004CC4C0    ret
end;*}

//004CC4C4
{*procedure sub_004CC4C4(?:?; ?:?);
begin
 004CC4C4    push        ebp
 004CC4C5    mov         ebp,esp
 004CC4C7    add         esp,0FFFFFFF8
 004CC4CA    push        esi
 004CC4CB    mov         dword ptr [ebp-8],edx
 004CC4CE    mov         dword ptr [ebp-4],eax
 004CC4D1    mov         eax,dword ptr [ebp-4]
 004CC4D4    mov         si,0FFEE
 004CC4D8    call        @CallDynaInst
 004CC4DD    pop         esi
 004CC4DE    pop         ecx
 004CC4DF    pop         ecx
 004CC4E0    pop         ebp
 004CC4E1    ret
end;*}

//004CC4E4
{*function sub_004CC4E4(?:?; ?:?):?;
begin
 004CC4E4    push        ebp
 004CC4E5    mov         ebp,esp
 004CC4E7    add         esp,0FFFFFFF0
 004CC4EA    mov         dword ptr [ebp-10],ecx
 004CC4ED    mov         dword ptr [ebp-0C],edx
 004CC4F0    mov         dword ptr [ebp-4],eax
 004CC4F3    mov         byte ptr [ebp-5],1
 004CC4F7    mov         al,byte ptr [ebp-5]
 004CC4FA    mov         esp,ebp
 004CC4FC    pop         ebp
 004CC4FD    ret
end;*}

//004CC500
{*function sub_004CC500(?:?; ?:?):?;
begin
 004CC500    push        ebp
 004CC501    mov         ebp,esp
 004CC503    add         esp,0FFFFFFF0
 004CC506    push        ebx
 004CC507    mov         dword ptr [ebp-0C],ecx
 004CC50A    mov         dword ptr [ebp-8],edx
 004CC50D    mov         dword ptr [ebp-4],eax
 004CC510    mov         byte ptr [ebp-0D],1
 004CC514    mov         eax,dword ptr [ebp-4]
 004CC517    cmp         word ptr [eax+0C2],0;TControl.?fC2:word
>004CC51F    je          004CC53E
 004CC521    mov         eax,dword ptr [ebp-0C]
 004CC524    push        eax
 004CC525    lea         eax,[ebp-0D]
 004CC528    push        eax
 004CC529    mov         ecx,dword ptr [ebp-8]
 004CC52C    mov         ebx,dword ptr [ebp-4]
 004CC52F    mov         edx,dword ptr [ebp-4]
 004CC532    mov         eax,dword ptr [ebx+0C4];TControl.?fC4:dword
 004CC538    call        dword ptr [ebx+0C0];TControl.FOnCanResize
 004CC53E    mov         al,byte ptr [ebp-0D]
 004CC541    pop         ebx
 004CC542    mov         esp,ebp
 004CC544    pop         ebp
 004CC545    ret
end;*}

//004CC548
{*function sub_004CC548(?:TControl; ?:?; ?:?):?;
begin
 004CC548    push        ebp
 004CC549    mov         ebp,esp
 004CC54B    add         esp,0FFFFFFE8
 004CC54E    push        ebx
 004CC54F    mov         dword ptr [ebp-0C],ecx
 004CC552    mov         dword ptr [ebp-8],edx
 004CC555    mov         dword ptr [ebp-4],eax
 004CC558    mov         eax,dword ptr [ebp-4]
 004CC55B    cmp         byte ptr [eax+5B],5
>004CC55F    je          004CC5AE
 004CC561    mov         eax,dword ptr [ebp-8]
 004CC564    mov         eax,dword ptr [eax]
 004CC566    mov         dword ptr [ebp-14],eax
 004CC569    mov         eax,dword ptr [ebp-0C]
 004CC56C    mov         eax,dword ptr [eax]
 004CC56E    mov         dword ptr [ebp-18],eax
 004CC571    lea         ecx,[ebp-18]
 004CC574    lea         edx,[ebp-14]
 004CC577    mov         eax,dword ptr [ebp-4]
 004CC57A    mov         ebx,dword ptr [eax]
 004CC57C    call        dword ptr [ebx+34]
 004CC57F    mov         byte ptr [ebp-0D],al
 004CC582    mov         eax,dword ptr [ebp-4]
 004CC585    mov         al,byte ptr [eax+5B]
 004CC588    test        al,al
>004CC58A    je          004CC592
 004CC58C    add         al,0FD
 004CC58E    sub         al,2
>004CC590    jae         004CC59A
 004CC592    mov         eax,dword ptr [ebp-8]
 004CC595    mov         edx,dword ptr [ebp-14]
 004CC598    mov         dword ptr [eax],edx
 004CC59A    mov         eax,dword ptr [ebp-4]
 004CC59D    mov         al,byte ptr [eax+5B]
 004CC5A0    sub         al,3
>004CC5A2    jae         004CC5B2
 004CC5A4    mov         eax,dword ptr [ebp-0C]
 004CC5A7    mov         edx,dword ptr [ebp-18]
 004CC5AA    mov         dword ptr [eax],edx
>004CC5AC    jmp         004CC5B2
 004CC5AE    mov         byte ptr [ebp-0D],1
 004CC5B2    mov         al,byte ptr [ebp-0D]
 004CC5B5    pop         ebx
 004CC5B6    mov         esp,ebp
 004CC5B8    pop         ebp
 004CC5B9    ret
end;*}

//004CC5BC
{*function sub_004CC5BC(?:TControl; ?:?; ?:?):?;
begin
 004CC5BC    push        ebp
 004CC5BD    mov         ebp,esp
 004CC5BF    add         esp,0FFFFFFF0
 004CC5C2    push        ebx
 004CC5C3    mov         dword ptr [ebp-0C],ecx
 004CC5C6    mov         dword ptr [ebp-8],edx
 004CC5C9    mov         dword ptr [ebp-4],eax
 004CC5CC    mov         ecx,dword ptr [ebp-0C]
 004CC5CF    mov         edx,dword ptr [ebp-8]
 004CC5D2    mov         eax,dword ptr [ebp-4]
 004CC5D5    mov         ebx,dword ptr [eax]
 004CC5D7    call        dword ptr [ebx+30]
 004CC5DA    mov         byte ptr [ebp-0D],al
 004CC5DD    cmp         byte ptr [ebp-0D],0
>004CC5E1    je          004CC5F1
 004CC5E3    mov         ecx,dword ptr [ebp-0C]
 004CC5E6    mov         edx,dword ptr [ebp-8]
 004CC5E9    mov         eax,dword ptr [ebp-4]
 004CC5EC    call        004CC6D0
 004CC5F1    mov         al,byte ptr [ebp-0D]
 004CC5F4    pop         ebx
 004CC5F5    mov         esp,ebp
 004CC5F7    pop         ebp
 004CC5F8    ret
end;*}

//004CC5FC
{*procedure sub_004CC5FC(?:?; ?:?; ?:?; ?:?);
begin
 004CC5FC    push        ebp
 004CC5FD    mov         ebp,esp
 004CC5FF    add         esp,0FFFFFFF4
 004CC602    push        ebx
 004CC603    mov         dword ptr [ebp-0C],ecx
 004CC606    mov         dword ptr [ebp-8],edx
 004CC609    mov         dword ptr [ebp-4],eax
 004CC60C    mov         eax,dword ptr [ebp-4]
 004CC60F    cmp         word ptr [eax+0CA],0;TControl.?fCA:word
>004CC617    je          004CC63A
 004CC619    mov         eax,dword ptr [ebp-0C]
 004CC61C    push        eax
 004CC61D    mov         eax,dword ptr [ebp+0C]
 004CC620    push        eax
 004CC621    mov         eax,dword ptr [ebp+8]
 004CC624    push        eax
 004CC625    mov         ecx,dword ptr [ebp-8]
 004CC628    mov         ebx,dword ptr [ebp-4]
 004CC62B    mov         edx,dword ptr [ebp-4]
 004CC62E    mov         eax,dword ptr [ebx+0CC];TControl.?fCC:dword
 004CC634    call        dword ptr [ebx+0C8];TControl.FOnConstrainedResize
 004CC63A    pop         ebx
 004CC63B    mov         esp,ebp
 004CC63D    pop         ebp
 004CC63E    ret         8
end;*}

//004CC644
{*procedure sub_004CC644(?:TControl; ?:?);
begin
 004CC644    push        ebp
 004CC645    mov         ebp,esp
 004CC647    add         esp,0FFFFFFF0
 004CC64A    mov         dword ptr [ebp-8],edx
 004CC64D    mov         dword ptr [ebp-4],eax
 004CC650    mov         eax,dword ptr [ebp-8]
 004CC653    push        eax
 004CC654    call        user32.GetCursorPos
 004CC659    lea         ecx,[ebp-10]
 004CC65C    mov         edx,dword ptr [ebp-8]
 004CC65F    mov         eax,dword ptr [ebp-4]
 004CC662    call        TControl.ScreenToClient
 004CC667    mov         eax,dword ptr [ebp-8]
 004CC66A    mov         edx,dword ptr [ebp-10]
 004CC66D    mov         dword ptr [eax],edx
 004CC66F    mov         edx,dword ptr [ebp-0C]
 004CC672    mov         dword ptr [eax+4],edx
 004CC675    mov         esp,ebp
 004CC677    pop         ebp
 004CC678    ret
end;*}

//004CC67C
{*procedure TControl.sub_004CC67C(?:?);
begin
 004CC67C    push        ebp
 004CC67D    mov         ebp,esp
 004CC67F    add         esp,0FFFFFFF4
 004CC682    mov         dword ptr [ebp-8],edx
 004CC685    mov         dword ptr [ebp-4],eax
 004CC688    mov         eax,dword ptr [ebp-4]
 004CC68B    test        byte ptr [eax+50],4;TControl.FControlStyle:TControlStyle
>004CC68F    je          004CC6BD
 004CC691    mov         eax,dword ptr [ebp-8]
 004CC694    cmp         dword ptr [eax],204
>004CC69A    je          004CC6C1
 004CC69C    mov         eax,dword ptr [ebp-8]
 004CC69F    cmp         dword ptr [eax],205
>004CC6A5    je          004CC6C1
 004CC6A7    mov         eax,dword ptr [ebp-8]
 004CC6AA    cmp         dword ptr [eax],200
>004CC6B0    je          004CC6C1
 004CC6B2    mov         eax,dword ptr [ebp-8]
 004CC6B5    cmp         dword ptr [eax],206
>004CC6BB    je          004CC6C1
 004CC6BD    xor         eax,eax
>004CC6BF    jmp         004CC6C3
 004CC6C1    mov         al,1
 004CC6C3    mov         byte ptr [ebp-9],al
 004CC6C6    mov         al,byte ptr [ebp-9]
 004CC6C9    mov         esp,ebp
 004CC6CB    pop         ebp
 004CC6CC    ret
end;*}

//004CC6D0
{*procedure sub_004CC6D0(?:?; ?:?; ?:?);
begin
 004CC6D0    push        ebp
 004CC6D1    mov         ebp,esp
 004CC6D3    add         esp,0FFFFFFE4
 004CC6D6    push        ebx
 004CC6D7    mov         dword ptr [ebp-0C],ecx
 004CC6DA    mov         dword ptr [ebp-8],edx
 004CC6DD    mov         dword ptr [ebp-4],eax
 004CC6E0    mov         eax,dword ptr [ebp-4]
 004CC6E3    mov         eax,dword ptr [eax+74]
 004CC6E6    cmp         dword ptr [eax+14],0
>004CC6EA    jbe         004CC6FA
 004CC6EC    mov         eax,dword ptr [ebp-4]
 004CC6EF    mov         eax,dword ptr [eax+74]
 004CC6F2    mov         eax,dword ptr [eax+14]
 004CC6F5    mov         dword ptr [ebp-10],eax
>004CC6F8    jmp         004CC6FF
 004CC6FA    xor         eax,eax
 004CC6FC    mov         dword ptr [ebp-10],eax
 004CC6FF    mov         eax,dword ptr [ebp-4]
 004CC702    mov         eax,dword ptr [eax+74]
 004CC705    cmp         dword ptr [eax+10],0
>004CC709    jbe         004CC719
 004CC70B    mov         eax,dword ptr [ebp-4]
 004CC70E    mov         eax,dword ptr [eax+74]
 004CC711    mov         eax,dword ptr [eax+10]
 004CC714    mov         dword ptr [ebp-14],eax
>004CC717    jmp         004CC71E
 004CC719    xor         eax,eax
 004CC71B    mov         dword ptr [ebp-14],eax
 004CC71E    mov         eax,dword ptr [ebp-4]
 004CC721    mov         eax,dword ptr [eax+74]
 004CC724    cmp         dword ptr [eax+0C],0
>004CC728    jbe         004CC738
 004CC72A    mov         eax,dword ptr [ebp-4]
 004CC72D    mov         eax,dword ptr [eax+74]
 004CC730    mov         eax,dword ptr [eax+0C]
 004CC733    mov         dword ptr [ebp-18],eax
>004CC736    jmp         004CC73D
 004CC738    xor         eax,eax
 004CC73A    mov         dword ptr [ebp-18],eax
 004CC73D    mov         eax,dword ptr [ebp-4]
 004CC740    mov         eax,dword ptr [eax+74]
 004CC743    cmp         dword ptr [eax+8],0
>004CC747    jbe         004CC757
 004CC749    mov         eax,dword ptr [ebp-4]
 004CC74C    mov         eax,dword ptr [eax+74]
 004CC74F    mov         eax,dword ptr [eax+8]
 004CC752    mov         dword ptr [ebp-1C],eax
>004CC755    jmp         004CC75C
 004CC757    xor         eax,eax
 004CC759    mov         dword ptr [ebp-1C],eax
 004CC75C    lea         eax,[ebp-18]
 004CC75F    push        eax
 004CC760    lea         eax,[ebp-1C]
 004CC763    push        eax
 004CC764    lea         ecx,[ebp-14]
 004CC767    lea         edx,[ebp-10]
 004CC76A    mov         eax,dword ptr [ebp-4]
 004CC76D    mov         ebx,dword ptr [eax]
 004CC76F    call        dword ptr [ebx+38]
 004CC772    cmp         dword ptr [ebp-18],0
>004CC776    jle         004CC78C
 004CC778    mov         eax,dword ptr [ebp-8]
 004CC77B    mov         eax,dword ptr [eax]
 004CC77D    cmp         eax,dword ptr [ebp-18]
>004CC780    jle         004CC78C
 004CC782    mov         eax,dword ptr [ebp-8]
 004CC785    mov         edx,dword ptr [ebp-18]
 004CC788    mov         dword ptr [eax],edx
>004CC78A    jmp         004CC7A4
 004CC78C    cmp         dword ptr [ebp-10],0
>004CC790    jle         004CC7A4
 004CC792    mov         eax,dword ptr [ebp-8]
 004CC795    mov         eax,dword ptr [eax]
 004CC797    cmp         eax,dword ptr [ebp-10]
>004CC79A    jge         004CC7A4
 004CC79C    mov         eax,dword ptr [ebp-8]
 004CC79F    mov         edx,dword ptr [ebp-10]
 004CC7A2    mov         dword ptr [eax],edx
 004CC7A4    cmp         dword ptr [ebp-1C],0
>004CC7A8    jle         004CC7BE
 004CC7AA    mov         eax,dword ptr [ebp-0C]
 004CC7AD    mov         eax,dword ptr [eax]
 004CC7AF    cmp         eax,dword ptr [ebp-1C]
>004CC7B2    jle         004CC7BE
 004CC7B4    mov         eax,dword ptr [ebp-0C]
 004CC7B7    mov         edx,dword ptr [ebp-1C]
 004CC7BA    mov         dword ptr [eax],edx
>004CC7BC    jmp         004CC7D6
 004CC7BE    cmp         dword ptr [ebp-14],0
>004CC7C2    jle         004CC7D6
 004CC7C4    mov         eax,dword ptr [ebp-0C]
 004CC7C7    mov         eax,dword ptr [eax]
 004CC7C9    cmp         eax,dword ptr [ebp-14]
>004CC7CC    jge         004CC7D6
 004CC7CE    mov         eax,dword ptr [ebp-0C]
 004CC7D1    mov         edx,dword ptr [ebp-14]
 004CC7D4    mov         dword ptr [eax],edx
 004CC7D6    pop         ebx
 004CC7D7    mov         esp,ebp
 004CC7D9    pop         ebp
 004CC7DA    ret
end;*}

//004CC7DC
{*function sub_004CC7DC(?:TControl; ?:?; ?:TControl; ?:?):?;
begin
 004CC7DC    push        ebp
 004CC7DD    mov         ebp,esp
 004CC7DF    add         esp,0FFFFFFE0
 004CC7E2    push        ebx
 004CC7E3    mov         dword ptr [ebp-0C],ecx
 004CC7E6    mov         dword ptr [ebp-8],edx
 004CC7E9    mov         dword ptr [ebp-4],eax
 004CC7EC    mov         eax,dword ptr [ebp-8]
 004CC7EF    mov         dword ptr [ebp-20],eax
 004CC7F2    mov         eax,dword ptr [ebp-0C]
 004CC7F5    mov         dword ptr [ebp-1C],eax
 004CC7F8    mov         eax,dword ptr [ebp+8]
 004CC7FB    mov         dword ptr [ebp-18],eax
 004CC7FE    xor         eax,eax
 004CC800    mov         dword ptr [ebp-14],eax
 004CC803    cmp         dword ptr [ebp-4],0
>004CC807    je          004CC815
 004CC809    lea         edx,[ebp-20]
 004CC80C    mov         ebx,dword ptr [ebp-4]
 004CC80F    mov         eax,dword ptr [ebx+3C];TControl.?f3C:TControl
 004CC812    call        dword ptr [ebx+38];TControl.FWindowProc
 004CC815    mov         eax,dword ptr [ebp-14]
 004CC818    mov         dword ptr [ebp-10],eax
 004CC81B    mov         eax,dword ptr [ebp-10]
 004CC81E    pop         ebx
 004CC81F    mov         esp,ebp
 004CC821    pop         ebp
 004CC822    ret         4
end;*}

//004CC828
procedure sub_004CC828(?:TControl);
begin
{*
 004CC828    push        ebp
 004CC829    mov         ebp,esp
 004CC82B    push        ecx
 004CC82C    mov         dword ptr [ebp-4],eax
 004CC82F    mov         eax,dword ptr [ebp-4]
 004CC832    mov         edx,dword ptr [eax]
 004CC834    call        dword ptr [edx+54];TControl.sub_004CDEBC
 004CC837    test        al,al
>004CC839    je          004CC85C
 004CC83B    mov         eax,dword ptr [ebp-4]
 004CC83E    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CC841    mov         edx,dword ptr [ebp-4]
 004CC844    mov         dword ptr [edx+0AC],eax;TControl.FUndockHeight:Integer
 004CC84A    mov         eax,dword ptr [ebp-4]
 004CC84D    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CC850    mov         edx,dword ptr [ebp-4]
 004CC853    mov         dword ptr [edx+0A8],eax;TControl.FUndockWidth:Integer
 004CC859    pop         ecx
 004CC85A    pop         ebp
 004CC85B    ret
 004CC85C    mov         eax,dword ptr [ebp-4]
 004CC85F    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>004CC866    je          004CC8C3
 004CC868    mov         eax,dword ptr [ebp-4]
 004CC86B    cmp         byte ptr [eax+9C],2;TControl.FDockOrientation:TDockOrientation
>004CC872    je          004CC885
 004CC874    mov         eax,dword ptr [ebp-4]
 004CC877    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004CC87D    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004CC880    dec         eax
 004CC881    sub         al,2
>004CC883    jae         004CC896
 004CC885    mov         eax,dword ptr [ebp-4]
 004CC888    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CC88B    mov         edx,dword ptr [ebp-4]
 004CC88E    mov         dword ptr [edx+0B4],eax;TControl.FTBDockHeight:Integer
>004CC894    jmp         004CC8C3
 004CC896    mov         eax,dword ptr [ebp-4]
 004CC899    cmp         byte ptr [eax+9C],1;TControl.FDockOrientation:TDockOrientation
>004CC8A0    je          004CC8B4
 004CC8A2    mov         eax,dword ptr [ebp-4]
 004CC8A5    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004CC8AB    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004CC8AE    add         al,0FD
 004CC8B0    sub         al,2
>004CC8B2    jae         004CC8C3
 004CC8B4    mov         eax,dword ptr [ebp-4]
 004CC8B7    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CC8BA    mov         edx,dword ptr [ebp-4]
 004CC8BD    mov         dword ptr [edx+0B0],eax;TControl.FLRDockWidth:Integer
 004CC8C3    pop         ecx
 004CC8C4    pop         ebp
 004CC8C5    ret
*}
end;

//004CC8C8
{*procedure sub_004CC8C8(?:TControl; ?:?);
begin
 004CC8C8    push        ebp
 004CC8C9    mov         ebp,esp
 004CC8CB    add         esp,0FFFFFFF8
 004CC8CE    mov         dword ptr [ebp-8],edx
 004CC8D1    mov         dword ptr [ebp-4],eax
 004CC8D4    mov         eax,dword ptr [ebp-8]
 004CC8D7    mov         eax,dword ptr [eax]
 004CC8D9    mov         edx,dword ptr [ebp-4]
 004CC8DC    mov         dword ptr [edx+40],eax;TControl.Left:Integer
 004CC8DF    mov         eax,dword ptr [ebp-8]
 004CC8E2    mov         eax,dword ptr [eax+4]
 004CC8E5    mov         edx,dword ptr [ebp-4]
 004CC8E8    mov         dword ptr [edx+44],eax;TControl.Top:Integer
 004CC8EB    mov         eax,dword ptr [ebp-8]
 004CC8EE    mov         eax,dword ptr [eax+8]
 004CC8F1    mov         edx,dword ptr [ebp-8]
 004CC8F4    sub         eax,dword ptr [edx]
 004CC8F6    mov         edx,dword ptr [ebp-4]
 004CC8F9    mov         dword ptr [edx+48],eax;TControl.Width:Integer
 004CC8FC    mov         eax,dword ptr [ebp-8]
 004CC8FF    mov         eax,dword ptr [eax+0C]
 004CC902    mov         edx,dword ptr [ebp-8]
 004CC905    sub         eax,dword ptr [edx+4]
 004CC908    mov         edx,dword ptr [ebp-4]
 004CC90B    mov         dword ptr [edx+4C],eax;TControl.Height:Integer
 004CC90E    mov         eax,dword ptr [ebp-4]
 004CC911    call        004CA1E0
 004CC916    pop         ecx
 004CC917    pop         ecx
 004CC918    pop         ebp
 004CC919    ret
end;*}

//004CC91C
procedure TControl.sub_004CC91C;
begin
{*
 004CC91C    push        ebp
 004CC91D    mov         ebp,esp
 004CC91F    push        ecx
 004CC920    mov         dword ptr [ebp-4],eax
 004CC923    pop         ecx
 004CC924    pop         ebp
 004CC925    ret
*}
end;

//004CC928
{*procedure sub_004CC928(?:?);
begin
 004CC928    push        ebp
 004CC929    mov         ebp,esp
 004CC92B    add         esp,0FFFFFEE4
 004CC931    push        ebx
 004CC932    push        esi
 004CC933    mov         dword ptr [ebp-18],edx
 004CC936    mov         dword ptr [ebp-14],eax
 004CC939    mov         eax,dword ptr [ebp-14]
 004CC93C    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004CC940    je          004CC97B
 004CC942    mov         eax,dword ptr [ebp-14]
 004CC945    call        004E7ED8
 004CC94A    mov         dword ptr [ebp-1C],eax
 004CC94D    cmp         dword ptr [ebp-1C],0
>004CC951    je          004CC97B
 004CC953    mov         eax,dword ptr [ebp-1C]
 004CC956    cmp         dword ptr [eax+250],0
>004CC95D    je          004CC97B
 004CC95F    mov         ecx,dword ptr [ebp-18]
 004CC962    mov         eax,dword ptr [ebp-1C]
 004CC965    mov         eax,dword ptr [eax+250]
 004CC96B    mov         edx,dword ptr [ebp-14]
 004CC96E    mov         ebx,dword ptr [eax]
 004CC970    call        dword ptr [ebx+24]
 004CC973    test        al,al
>004CC975    jne         004CCB0A
 004CC97B    mov         eax,dword ptr [ebp-18]
 004CC97E    cmp         dword ptr [eax],100
>004CC984    jb          004CC9C4
 004CC986    mov         eax,dword ptr [ebp-18]
 004CC989    cmp         dword ptr [eax],108
>004CC98F    ja          004CC9C4
 004CC991    mov         eax,dword ptr [ebp-14]
 004CC994    call        004E7ED8
 004CC999    mov         dword ptr [ebp-1C],eax
 004CC99C    cmp         dword ptr [ebp-1C],0
>004CC9A0    je          004CCAFF
 004CC9A6    mov         ecx,dword ptr [ebp-18]
 004CC9A9    mov         edx,dword ptr [ebp-14]
 004CC9AC    mov         eax,dword ptr [ebp-1C]
 004CC9AF    mov         ebx,dword ptr [eax]
 004CC9B1    call        dword ptr [ebx+0F0]
 004CC9B7    test        al,al
>004CC9B9    jne         004CCB0A
>004CC9BF    jmp         004CCAFF
 004CC9C4    mov         eax,dword ptr [ebp-18]
 004CC9C7    cmp         dword ptr [eax],200
>004CC9CD    jb          004CCADA
 004CC9D3    mov         eax,dword ptr [ebp-18]
 004CC9D6    cmp         dword ptr [eax],20A
>004CC9DC    ja          004CCADA
 004CC9E2    mov         eax,dword ptr [ebp-14]
 004CC9E5    test        byte ptr [eax+50],80;TControl.FControlStyle:TControlStyle
>004CC9E9    jne         004CCA07
 004CC9EB    mov         eax,dword ptr [ebp-18]
 004CC9EE    mov         eax,dword ptr [eax]
 004CC9F0    sub         eax,203
>004CC9F5    je          004CCA01
 004CC9F7    sub         eax,3
>004CC9FA    je          004CCA01
 004CC9FC    sub         eax,3
>004CC9FF    jne         004CCA07
 004CCA01    mov         eax,dword ptr [ebp-18]
 004CCA04    sub         dword ptr [eax],2
 004CCA07    mov         eax,dword ptr [ebp-18]
 004CCA0A    mov         eax,dword ptr [eax]
 004CCA0C    sub         eax,200
>004CCA11    je          004CCA1E
 004CCA13    dec         eax
>004CCA14    je          004CCA35
 004CCA16    dec         eax
>004CCA17    je          004CCA5C
 004CCA19    dec         eax
>004CCA1A    je          004CCA35
>004CCA1C    jmp         004CCA69
 004CCA1E    mov         ecx,dword ptr [ebp-18]
 004CCA21    mov         eax,[0055B4C8];^Application:TApplication
 004CCA26    mov         eax,dword ptr [eax]
 004CCA28    mov         edx,dword ptr [ebp-14]
 004CCA2B    call        004F3AF4
>004CCA30    jmp         004CCAFF
 004CCA35    mov         eax,dword ptr [ebp-14]
 004CCA38    cmp         byte ptr [eax+5D],1;TControl.FDragMode:TDragMode
>004CCA3C    jne         004CCA4F
 004CCA3E    mov         eax,dword ptr [ebp-14]
 004CCA41    mov         si,0FFED
 004CCA45    call        @CallDynaInst;TControl.sub_004CB99C
>004CCA4A    jmp         004CCB0A
 004CCA4F    mov         eax,dword ptr [ebp-14]
 004CCA52    or          word ptr [eax+54],1;TControl.FControlState:TControlState
>004CCA57    jmp         004CCAFF
 004CCA5C    mov         eax,dword ptr [ebp-14]
 004CCA5F    and         word ptr [eax+54],0FFFFFFFE;TControl.FControlState:TControlState
>004CCA64    jmp         004CCAFF
 004CCA69    mov         eax,[0055DDAC];gvar_0055DDAC
 004CCA6E    cmp         byte ptr [eax+20],0
>004CCA72    je          004CCAFF
 004CCA78    mov         eax,[0055DDAC];gvar_0055DDAC
 004CCA7D    cmp         dword ptr [eax+1C],0
>004CCA81    je          004CCAFF
 004CCA83    mov         eax,dword ptr [ebp-18]
 004CCA86    mov         eax,dword ptr [eax]
 004CCA88    mov         edx,dword ptr ds:[55DDAC];gvar_0055DDAC
 004CCA8E    cmp         eax,dword ptr [edx+1C]
>004CCA91    jne         004CCAFF
 004CCA93    lea         eax,[ebp-11C]
 004CCA99    push        eax
 004CCA9A    call        user32.GetKeyboardState
 004CCA9F    mov         eax,dword ptr [ebp-18]
 004CCAA2    mov         eax,dword ptr [eax]
 004CCAA4    mov         dword ptr [ebp-10],eax
 004CCAA7    lea         eax,[ebp-11C]
 004CCAAD    call        004E7DC8
 004CCAB2    mov         byte ptr [ebp-0C],al
 004CCAB5    mov         eax,dword ptr [ebp-18]
 004CCAB8    mov         ax,word ptr [eax+4]
 004CCABC    mov         word ptr [ebp-0A],ax
 004CCAC0    mov         eax,dword ptr [ebp-18]
 004CCAC3    mov         eax,dword ptr [eax+8]
 004CCAC6    mov         dword ptr [ebp-8],eax
 004CCAC9    lea         edx,[ebp-10]
 004CCACC    mov         eax,dword ptr [ebp-14]
 004CCACF    mov         si,0FFC9
 004CCAD3    call        @CallDynaInst;TControl.sub_004CB70C
>004CCAD8    jmp         004CCB0A
 004CCADA    mov         eax,dword ptr [ebp-18]
 004CCADD    cmp         dword ptr [eax],0B00B
>004CCAE3    jne         004CCAFF
 004CCAE5    mov         eax,dword ptr [ebp-18]
 004CCAE8    mov         eax,dword ptr [eax+8]
 004CCAEB    push        eax
 004CCAEC    mov         ecx,dword ptr [ebp-18]
 004CCAEF    mov         ecx,dword ptr [ecx+4]
 004CCAF2    mov         edx,dword ptr [ebp-18]
 004CCAF5    mov         edx,dword ptr [edx]
 004CCAF7    mov         eax,dword ptr [ebp-14]
 004CCAFA    call        004CA980
 004CCAFF    mov         edx,dword ptr [ebp-18]
 004CCB02    mov         eax,dword ptr [ebp-14]
 004CCB05    mov         ecx,dword ptr [eax]
 004CCB07    call        dword ptr [ecx-14];TObject.Dispatch
 004CCB0A    pop         esi
 004CCB0B    pop         ebx
 004CCB0C    mov         esp,ebp
 004CCB0E    pop         ebp
 004CCB0F    ret
end;*}

//004CCB10
procedure TControl.DefaultHandler(var Message:void );
begin
{*
 004CCB10    push        ebp
 004CCB11    mov         ebp,esp
 004CCB13    add         esp,0FFFFFFF4
 004CCB16    mov         dword ptr [ebp-8],edx
 004CCB19    mov         dword ptr [ebp-4],eax
 004CCB1C    mov         eax,dword ptr [ebp-8]
 004CCB1F    mov         eax,dword ptr [eax]
 004CCB21    sub         eax,0C
>004CCB24    je          004CCB95
 004CCB26    dec         eax
>004CCB27    je          004CCB31
 004CCB29    dec         eax
>004CCB2A    je          004CCB6F
>004CCB2C    jmp         004CCBD1
 004CCB31    mov         eax,dword ptr [ebp-4]
 004CCB34    cmp         dword ptr [eax+64],0
>004CCB38    je          004CCB45
 004CCB3A    mov         eax,dword ptr [ebp-4]
 004CCB3D    mov         eax,dword ptr [eax+64]
 004CCB40    mov         dword ptr [ebp-0C],eax
>004CCB43    jmp         004CCB4D
 004CCB45    mov         eax,4CCBD8
 004CCB4A    mov         dword ptr [ebp-0C],eax
 004CCB4D    mov         ecx,dword ptr [ebp-8]
 004CCB50    mov         ecx,dword ptr [ecx+4]
 004CCB53    dec         ecx
 004CCB54    mov         eax,dword ptr [ebp-8]
 004CCB57    mov         eax,dword ptr [eax+8]
 004CCB5A    mov         edx,dword ptr [ebp-0C]
 004CCB5D    call        StrLCopy
 004CCB62    call        StrLen
 004CCB67    mov         edx,dword ptr [ebp-8]
 004CCB6A    mov         dword ptr [edx+0C],eax;{StrNew}
>004CCB6D    jmp         004CCBD1
 004CCB6F    mov         eax,dword ptr [ebp-4]
 004CCB72    cmp         dword ptr [eax+64],0
>004CCB76    jne         004CCB82
 004CCB78    mov         eax,dword ptr [ebp-8]
 004CCB7B    xor         edx,edx
 004CCB7D    mov         dword ptr [eax+0C],edx
>004CCB80    jmp         004CCBD1
 004CCB82    mov         eax,dword ptr [ebp-4]
 004CCB85    mov         eax,dword ptr [eax+64]
 004CCB88    call        StrLen
 004CCB8D    mov         edx,dword ptr [ebp-8]
 004CCB90    mov         dword ptr [edx+0C],eax
>004CCB93    jmp         004CCBD1
 004CCB95    mov         eax,dword ptr [ebp-8]
 004CCB98    mov         eax,dword ptr [eax+8]
 004CCB9B    call        004674E0
 004CCBA0    mov         dword ptr [ebp-0C],eax
 004CCBA3    mov         eax,dword ptr [ebp-4]
 004CCBA6    mov         eax,dword ptr [eax+64]
 004CCBA9    call        00467520
 004CCBAE    mov         eax,dword ptr [ebp-0C]
 004CCBB1    mov         edx,dword ptr [ebp-4]
 004CCBB4    mov         dword ptr [edx+64],eax
 004CCBB7    mov         eax,dword ptr [ebp-8]
 004CCBBA    mov         eax,dword ptr [eax+8]
 004CCBBD    push        eax
 004CCBBE    mov         ecx,dword ptr [ebp-8]
 004CCBC1    mov         ecx,dword ptr [ecx+4]
 004CCBC4    mov         edx,dword ptr [ebp-8]
 004CCBC7    mov         edx,dword ptr [edx]
 004CCBC9    mov         eax,dword ptr [ebp-4]
 004CCBCC    call        004CA980
 004CCBD1    mov         esp,ebp
 004CCBD3    pop         ebp
 004CCBD4    ret
*}
end;

//004CCBDC
procedure TControl.ReadIsControl(Reader:TReader);
begin
{*
 004CCBDC    push        ebp
 004CCBDD    mov         ebp,esp
 004CCBDF    add         esp,0FFFFFFF8
 004CCBE2    mov         dword ptr [ebp-8],edx
 004CCBE5    mov         dword ptr [ebp-4],eax
 004CCBE8    mov         eax,dword ptr [ebp-8]
 004CCBEB    call        0047D990
 004CCBF0    mov         edx,dword ptr [ebp-4]
 004CCBF3    mov         byte ptr [edx+5E],al
 004CCBF6    pop         ecx
 004CCBF7    pop         ecx
 004CCBF8    pop         ebp
 004CCBF9    ret
*}
end;

//004CCBFC
procedure TControl.WriteIsControl(Writer:TWriter);
begin
{*
 004CCBFC    push        ebp
 004CCBFD    mov         ebp,esp
 004CCBFF    add         esp,0FFFFFFF8
 004CCC02    mov         dword ptr [ebp-8],edx
 004CCC05    mov         dword ptr [ebp-4],eax
 004CCC08    mov         eax,dword ptr [ebp-4]
 004CCC0B    mov         dl,byte ptr [eax+5E]
 004CCC0E    mov         eax,dword ptr [ebp-8]
 004CCC11    call        00480148
 004CCC16    pop         ecx
 004CCC17    pop         ecx
 004CCC18    pop         ebp
 004CCC19    ret
*}
end;

//004CCC1C
function DoWriteIsControl:Boolean;
begin
{*
 004CCC1C    push        ebp
 004CCC1D    mov         ebp,esp
 004CCC1F    push        ecx
 004CCC20    mov         eax,dword ptr [ebp+8]
 004CCC23    mov         eax,dword ptr [eax-4]
 004CCC26    cmp         dword ptr [eax+20],0
>004CCC2A    je          004CCC47
 004CCC2C    mov         eax,dword ptr [ebp+8]
 004CCC2F    mov         eax,dword ptr [eax-4]
 004CCC32    mov         eax,dword ptr [eax+20]
 004CCC35    mov         al,byte ptr [eax+5E]
 004CCC38    mov         edx,dword ptr [ebp+8]
 004CCC3B    mov         edx,dword ptr [edx-8]
 004CCC3E    cmp         al,byte ptr [edx+5E]
 004CCC41    setne       byte ptr [ebp-1]
>004CCC45    jmp         004CCC53
 004CCC47    mov         eax,dword ptr [ebp+8]
 004CCC4A    mov         eax,dword ptr [eax-8]
 004CCC4D    mov         al,byte ptr [eax+5E]
 004CCC50    mov         byte ptr [ebp-1],al
 004CCC53    mov         al,byte ptr [ebp-1]
 004CCC56    pop         ecx
 004CCC57    pop         ebp
 004CCC58    ret
*}
end;

//004CCC5C
procedure TControl.DefineProperties(Filer:TFiler);
begin
{*
 004CCC5C    push        ebp
 004CCC5D    mov         ebp,esp
 004CCC5F    add         esp,0FFFFFFF8
 004CCC62    push        ebx
 004CCC63    mov         dword ptr [ebp-4],edx
 004CCC66    mov         dword ptr [ebp-8],eax
 004CCC69    mov         eax,dword ptr [ebp-8]
 004CCC6C    push        eax
 004CCC6D    push        4CCBDC;TControl.ReadIsControl
 004CCC72    mov         eax,dword ptr [ebp-8]
 004CCC75    push        eax
 004CCC76    push        4CCBFC;TControl.WriteIsControl
 004CCC7B    push        ebp
 004CCC7C    call        DoWriteIsControl
 004CCC81    pop         ecx
 004CCC82    mov         ecx,eax
 004CCC84    mov         edx,4CCCA0;'IsControl'
 004CCC89    mov         eax,dword ptr [ebp-4]
 004CCC8C    mov         ebx,dword ptr [eax]
 004CCC8E    call        dword ptr [ebx+4]
 004CCC91    pop         ebx
 004CCC92    pop         ecx
 004CCC93    pop         ecx
 004CCC94    pop         ebp
 004CCC95    ret
*}
end;

//004CCCAC
procedure TControl.sub_004CCCAC;
begin
{*
 004CCCAC    push        ebp
 004CCCAD    mov         ebp,esp
 004CCCAF    push        ecx
 004CCCB0    push        ebx
 004CCCB1    mov         dword ptr [ebp-4],eax
 004CCCB4    mov         eax,dword ptr [ebp-4]
 004CCCB7    cmp         word ptr [eax+122],0;TControl.?f122:word
>004CCCBF    je          004CCCF7
 004CCCC1    mov         eax,dword ptr [ebp-4]
 004CCCC4    mov         edx,dword ptr [eax]
 004CCCC6    call        dword ptr [edx+3C];TSpeedButton.GetAction
 004CCCC9    test        eax,eax
>004CCCCB    je          004CCCF7
 004CCCCD    mov         eax,dword ptr [ebp-4]
 004CCCD0    mov         edx,dword ptr [eax]
 004CCCD2    call        dword ptr [edx+3C];TSpeedButton.GetAction
 004CCCD5    mov         eax,dword ptr [eax+40];TBasicAction.FOnExecute:TNotifyEvent
 004CCCD8    mov         edx,dword ptr [ebp-4]
 004CCCDB    cmp         eax,dword ptr [edx+120];TControl.FOnClick:TNotifyEvent
>004CCCE1    je          004CCCF7
 004CCCE3    mov         ebx,dword ptr [ebp-4]
 004CCCE6    mov         edx,dword ptr [ebp-4]
 004CCCE9    mov         eax,dword ptr [ebx+124];TControl.?f124:TMessageForm
 004CCCEF    call        dword ptr [ebx+120];TControl.FOnClick
>004CCCF5    jmp         004CCD38
 004CCCF7    mov         eax,dword ptr [ebp-4]
 004CCCFA    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004CCCFE    jne         004CCD19
 004CCD00    mov         eax,dword ptr [ebp-4]
 004CCD03    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>004CCD07    je          004CCD19
 004CCD09    mov         edx,dword ptr [ebp-4]
 004CCD0C    mov         eax,dword ptr [ebp-4]
 004CCD0F    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 004CCD12    mov         ecx,dword ptr [eax]
 004CCD14    call        dword ptr [ecx+18];TControlActionLink.sub_00483C70
>004CCD17    jmp         004CCD38
 004CCD19    mov         eax,dword ptr [ebp-4]
 004CCD1C    cmp         word ptr [eax+122],0;TControl.?f122:word
>004CCD24    je          004CCD38
 004CCD26    mov         ebx,dword ptr [ebp-4]
 004CCD29    mov         edx,dword ptr [ebp-4]
 004CCD2C    mov         eax,dword ptr [ebx+124];TControl.?f124:TMessageForm
 004CCD32    call        dword ptr [ebx+120];TControl.FOnClick
 004CCD38    pop         ebx
 004CCD39    pop         ecx
 004CCD3A    pop         ebp
 004CCD3B    ret
*}
end;

//004CCD3C
procedure TControl.sub_004CCD3C;
begin
{*
 004CCD3C    push        ebp
 004CCD3D    mov         ebp,esp
 004CCD3F    push        ecx
 004CCD40    push        ebx
 004CCD41    mov         dword ptr [ebp-4],eax
 004CCD44    mov         eax,dword ptr [ebp-4]
 004CCD47    cmp         word ptr [eax+12A],0;TControl.?f12A:word
>004CCD4F    je          004CCD63
 004CCD51    mov         ebx,dword ptr [ebp-4]
 004CCD54    mov         edx,dword ptr [ebp-4]
 004CCD57    mov         eax,dword ptr [ebx+12C];TControl.?f12C:dword
 004CCD5D    call        dword ptr [ebx+128];TControl.FOnDblClick
 004CCD63    pop         ebx
 004CCD64    pop         ecx
 004CCD65    pop         ebp
 004CCD66    ret
*}
end;

//004CCD68
{*procedure TControl.sub_004CCD68(?:?; ?:?; ?:?; ?:?);
begin
 004CCD68    push        ebp
 004CCD69    mov         ebp,esp
 004CCD6B    add         esp,0FFFFFFF8
 004CCD6E    push        ebx
 004CCD6F    mov         byte ptr [ebp-6],cl
 004CCD72    mov         byte ptr [ebp-5],dl
 004CCD75    mov         dword ptr [ebp-4],eax
 004CCD78    mov         eax,dword ptr [ebp-4]
 004CCD7B    cmp         word ptr [eax+0D2],0;TControl.?fD2:word
>004CCD83    je          004CCDA6
 004CCD85    mov         al,byte ptr [ebp-6]
 004CCD88    push        eax
 004CCD89    mov         eax,dword ptr [ebp+0C]
 004CCD8C    push        eax
 004CCD8D    mov         eax,dword ptr [ebp+8]
 004CCD90    push        eax
 004CCD91    mov         ebx,dword ptr [ebp-4]
 004CCD94    mov         cl,byte ptr [ebp-5]
 004CCD97    mov         edx,dword ptr [ebp-4]
 004CCD9A    mov         eax,dword ptr [ebx+0D4];TControl.?fD4:dword
 004CCDA0    call        dword ptr [ebx+0D0];TControl.FOnMouseDown
 004CCDA6    pop         ebx
 004CCDA7    pop         ecx
 004CCDA8    pop         ecx
 004CCDA9    pop         ebp
 004CCDAA    ret         8
end;*}

//004CCDB0
{*procedure sub_004CCDB0(?:TControl; ?:?; ?:?; ?:?);
begin
 004CCDB0    push        ebp
 004CCDB1    mov         ebp,esp
 004CCDB3    add         esp,0FFFFFFEC
 004CCDB6    push        esi
 004CCDB7    mov         byte ptr [ebp-9],cl
 004CCDBA    mov         dword ptr [ebp-8],edx
 004CCDBD    mov         dword ptr [ebp-4],eax
 004CCDC0    mov         eax,dword ptr [ebp-4]
 004CCDC3    test        byte ptr [eax+51],10
>004CCDC7    jne         004CCE46
 004CCDC9    mov         eax,dword ptr [ebp-4]
 004CCDCC    cmp         dword ptr [eax+48],8000
>004CCDD3    jg          004CCDE1
 004CCDD5    mov         eax,dword ptr [ebp-4]
 004CCDD8    cmp         dword ptr [eax+4C],8000
>004CCDDF    jle         004CCE16
 004CCDE1    lea         edx,[ebp-11]
 004CCDE4    mov         eax,dword ptr [ebp-4]
 004CCDE7    call        004CC644
 004CCDEC    mov         eax,dword ptr [ebp-11]
 004CCDEF    push        eax
 004CCDF0    mov         eax,dword ptr [ebp-0D]
 004CCDF3    push        eax
 004CCDF4    mov         eax,dword ptr [ebp-8]
 004CCDF7    mov         ax,word ptr [eax+4]
 004CCDFB    call        004E7D24
 004CCE00    mov         ecx,eax
 004CCE02    or          cl,byte ptr [ebp+8]
 004CCE05    mov         dl,byte ptr [ebp-9]
 004CCE08    mov         eax,dword ptr [ebp-4]
 004CCE0B    mov         si,0FFD5
 004CCE0F    call        @CallDynaInst
>004CCE14    jmp         004CCE46
 004CCE16    mov         eax,dword ptr [ebp-8]
 004CCE19    movsx       eax,word ptr [eax+8]
 004CCE1D    push        eax
 004CCE1E    mov         eax,dword ptr [ebp-8]
 004CCE21    movsx       eax,word ptr [eax+0A]
 004CCE25    push        eax
 004CCE26    mov         eax,dword ptr [ebp-8]
 004CCE29    mov         ax,word ptr [eax+4]
 004CCE2D    call        004E7D24
 004CCE32    mov         ecx,eax
 004CCE34    or          cl,byte ptr [ebp+8]
 004CCE37    mov         dl,byte ptr [ebp-9]
 004CCE3A    mov         eax,dword ptr [ebp-4]
 004CCE3D    mov         si,0FFD5
 004CCE41    call        @CallDynaInst
 004CCE46    pop         esi
 004CCE47    mov         esp,ebp
 004CCE49    pop         ebp
 004CCE4A    ret         4
end;*}

//004CCE50
{*procedure TControl.WMLButtonDown(?:?);
begin
 004CCE50    push        ebp
 004CCE51    mov         ebp,esp
 004CCE53    add         esp,0FFFFFFF8
 004CCE56    mov         dword ptr [ebp-8],edx
 004CCE59    mov         dword ptr [ebp-4],eax
 004CCE5C    mov         edx,dword ptr [ebp-4]
 004CCE5F    mov         eax,dword ptr [ebp-4]
 004CCE62    call        004CA938
 004CCE67    mov         edx,dword ptr [ebp-8]
 004CCE6A    mov         eax,dword ptr [ebp-4]
 004CCE6D    mov         ecx,dword ptr [eax]
 004CCE6F    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CCE72    mov         eax,dword ptr [ebp-4]
 004CCE75    test        byte ptr [eax+50],2;TControl.FControlStyle:TControlStyle
>004CCE79    je          004CCE85
 004CCE7B    mov         dl,1
 004CCE7D    mov         eax,dword ptr [ebp-4]
 004CCE80    call        004CB390
 004CCE85    mov         eax,dword ptr [ebp-4]
 004CCE88    test        byte ptr [eax+50],8;TControl.FControlStyle:TControlStyle
>004CCE8C    je          004CCE96
 004CCE8E    mov         eax,dword ptr [ebp-4]
 004CCE91    or          word ptr [eax+54],2;TControl.FControlState:TControlState
 004CCE96    mov         al,[004CCEB0];0x0 gvar_004CCEB0
 004CCE9B    push        eax
 004CCE9C    mov         edx,dword ptr [ebp-8]
 004CCE9F    xor         ecx,ecx
 004CCEA1    mov         eax,dword ptr [ebp-4]
 004CCEA4    call        004CCDB0
 004CCEA9    pop         ecx
 004CCEAA    pop         ecx
 004CCEAB    pop         ebp
 004CCEAC    ret
end;*}

//004CCEB4
{*procedure TControl.WMNCLButtonDown(?:?);
begin
 004CCEB4    push        ebp
 004CCEB5    mov         ebp,esp
 004CCEB7    add         esp,0FFFFFFF8
 004CCEBA    mov         dword ptr [ebp-8],edx
 004CCEBD    mov         dword ptr [ebp-4],eax
 004CCEC0    mov         edx,dword ptr [ebp-4]
 004CCEC3    mov         eax,dword ptr [ebp-4]
 004CCEC6    call        004CA938
 004CCECB    mov         edx,dword ptr [ebp-8]
 004CCECE    mov         eax,dword ptr [ebp-4]
 004CCED1    mov         ecx,dword ptr [eax]
 004CCED3    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CCED6    pop         ecx
 004CCED7    pop         ecx
 004CCED8    pop         ebp
 004CCED9    ret
end;*}

//004CCEDC
{*procedure TControl.WMLButtonDblClk(?:?);
begin
 004CCEDC    push        ebp
 004CCEDD    mov         ebp,esp
 004CCEDF    add         esp,0FFFFFFF8
 004CCEE2    push        esi
 004CCEE3    mov         dword ptr [ebp-8],edx
 004CCEE6    mov         dword ptr [ebp-4],eax
 004CCEE9    mov         edx,dword ptr [ebp-4]
 004CCEEC    mov         eax,dword ptr [ebp-4]
 004CCEEF    call        004CA938
 004CCEF4    mov         edx,dword ptr [ebp-8]
 004CCEF7    mov         eax,dword ptr [ebp-4]
 004CCEFA    mov         ecx,dword ptr [eax]
 004CCEFC    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CCEFF    mov         eax,dword ptr [ebp-4]
 004CCF02    test        byte ptr [eax+50],2;TControl.FControlStyle:TControlStyle
>004CCF06    je          004CCF12
 004CCF08    mov         dl,1
 004CCF0A    mov         eax,dword ptr [ebp-4]
 004CCF0D    call        004CB390
 004CCF12    mov         eax,dword ptr [ebp-4]
 004CCF15    test        byte ptr [eax+50],8;TControl.FControlStyle:TControlStyle
>004CCF19    je          004CCF27
 004CCF1B    mov         eax,dword ptr [ebp-4]
 004CCF1E    mov         si,0FFE9
 004CCF22    call        @CallDynaInst;TControl.sub_004CCD3C
 004CCF27    mov         al,[004CCF40];0x40 gvar_004CCF40
 004CCF2C    push        eax
 004CCF2D    mov         edx,dword ptr [ebp-8]
 004CCF30    xor         ecx,ecx
 004CCF32    mov         eax,dword ptr [ebp-4]
 004CCF35    call        004CCDB0
 004CCF3A    pop         esi
 004CCF3B    pop         ecx
 004CCF3C    pop         ecx
 004CCF3D    pop         ebp
 004CCF3E    ret
end;*}

//004CCF44
procedure TControl.sub_004CCF44;
begin
{*
 004CCF44    push        ebp
 004CCF45    mov         ebp,esp
 004CCF47    add         esp,0FFFFFFF8
 004CCF4A    mov         dword ptr [ebp-4],eax
 004CCF4D    mov         eax,dword ptr [ebp-4]
 004CCF50    mov         eax,dword ptr [eax+7C];TControl.FPopupMenu:TPopupMenu
 004CCF53    mov         dword ptr [ebp-8],eax
 004CCF56    mov         eax,dword ptr [ebp-8]
 004CCF59    pop         ecx
 004CCF5A    pop         ecx
 004CCF5B    pop         ebp
 004CCF5C    ret
*}
end;

//004CCF60
{*function sub_004CCF60(?:TControl; ?:?; ?:?):?;
begin
 004CCF60    push        ebp
 004CCF61    mov         ebp,esp
 004CCF63    add         esp,0FFFFFFE0
 004CCF66    mov         dword ptr [ebp-0C],ecx
 004CCF69    mov         dword ptr [ebp-8],edx
 004CCF6C    mov         dword ptr [ebp-4],eax
 004CCF6F    mov         byte ptr [ebp-0D],0
 004CCF73    mov         eax,dword ptr [ebp-8]
 004CCF76    mov         eax,dword ptr [eax]
 004CCF78    mov         dword ptr [ebp-14],eax
 004CCF7B    mov         eax,dword ptr [ebp-0C]
 004CCF7E    mov         eax,dword ptr [eax]
 004CCF80    mov         dword ptr [ebp-18],eax
 004CCF83    lea         ecx,[ebp-18]
 004CCF86    lea         edx,[ebp-14]
 004CCF89    mov         eax,dword ptr [ebp-4]
 004CCF8C    call        004CC5BC
 004CCF91    test        al,al
>004CCF93    je          004CCFFD
 004CCF95    mov         eax,dword ptr [ebp-14]
 004CCF98    mov         dword ptr [ebp-1C],eax
 004CCF9B    mov         eax,dword ptr [ebp-18]
 004CCF9E    mov         dword ptr [ebp-20],eax
 004CCFA1    mov         eax,dword ptr [ebp-4]
 004CCFA4    cmp         byte ptr [eax+5C],0;TControl.FAutoSize:Boolean
>004CCFA8    je          004CCFE2
 004CCFAA    lea         ecx,[ebp-20]
 004CCFAD    lea         edx,[ebp-1C]
 004CCFB0    mov         eax,dword ptr [ebp-4]
 004CCFB3    call        004CC548
 004CCFB8    test        al,al
>004CCFBA    je          004CCFCC
 004CCFBC    mov         eax,dword ptr [ebp-1C]
 004CCFBF    cmp         eax,dword ptr [ebp-14]
>004CCFC2    jne         004CCFCC
 004CCFC4    mov         eax,dword ptr [ebp-20]
 004CCFC7    cmp         eax,dword ptr [ebp-18]
>004CCFCA    je          004CCFE2
 004CCFCC    lea         ecx,[ebp-20]
 004CCFCF    lea         edx,[ebp-1C]
 004CCFD2    mov         eax,dword ptr [ebp-4]
 004CCFD5    call        004CC5BC
 004CCFDA    test        al,al
>004CCFDC    jne         004CCFE2
 004CCFDE    xor         eax,eax
>004CCFE0    jmp         004CCFE4
 004CCFE2    mov         al,1
 004CCFE4    mov         byte ptr [ebp-0D],al
 004CCFE7    cmp         byte ptr [ebp-0D],0
>004CCFEB    je          004CCFFD
 004CCFED    mov         eax,dword ptr [ebp-8]
 004CCFF0    mov         edx,dword ptr [ebp-1C]
 004CCFF3    mov         dword ptr [eax],edx
 004CCFF5    mov         eax,dword ptr [ebp-0C]
 004CCFF8    mov         edx,dword ptr [ebp-20]
 004CCFFB    mov         dword ptr [eax],edx
 004CCFFD    mov         al,byte ptr [ebp-0D]
 004CD000    mov         esp,ebp
 004CD002    pop         ebp
 004CD003    ret
end;*}

//004CD004
{*procedure TControl.WMRButtonDown(?:?);
begin
 004CD004    push        ebp
 004CD005    mov         ebp,esp
 004CD007    add         esp,0FFFFFFF8
 004CD00A    mov         dword ptr [ebp-8],edx
 004CD00D    mov         dword ptr [ebp-4],eax
 004CD010    mov         edx,dword ptr [ebp-8]
 004CD013    mov         eax,dword ptr [ebp-4]
 004CD016    mov         ecx,dword ptr [eax]
 004CD018    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD01B    mov         al,[004CD034];0x0 gvar_004CD034
 004CD020    push        eax
 004CD021    mov         edx,dword ptr [ebp-8]
 004CD024    mov         cl,1
 004CD026    mov         eax,dword ptr [ebp-4]
 004CD029    call        004CCDB0
 004CD02E    pop         ecx
 004CD02F    pop         ecx
 004CD030    pop         ebp
 004CD031    ret
end;*}

//004CD038
{*procedure TControl.WMRButtonDblClk(?:?);
begin
 004CD038    push        ebp
 004CD039    mov         ebp,esp
 004CD03B    add         esp,0FFFFFFF8
 004CD03E    mov         dword ptr [ebp-8],edx
 004CD041    mov         dword ptr [ebp-4],eax
 004CD044    mov         edx,dword ptr [ebp-8]
 004CD047    mov         eax,dword ptr [ebp-4]
 004CD04A    mov         ecx,dword ptr [eax]
 004CD04C    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD04F    mov         al,[004CD068];0x40 gvar_004CD068
 004CD054    push        eax
 004CD055    mov         edx,dword ptr [ebp-8]
 004CD058    mov         cl,1
 004CD05A    mov         eax,dword ptr [ebp-4]
 004CD05D    call        004CCDB0
 004CD062    pop         ecx
 004CD063    pop         ecx
 004CD064    pop         ebp
 004CD065    ret
end;*}

//004CD06C
{*procedure TControl.WMMButtonDown(?:?);
begin
 004CD06C    push        ebp
 004CD06D    mov         ebp,esp
 004CD06F    add         esp,0FFFFFFF8
 004CD072    mov         dword ptr [ebp-8],edx
 004CD075    mov         dword ptr [ebp-4],eax
 004CD078    mov         edx,dword ptr [ebp-8]
 004CD07B    mov         eax,dword ptr [ebp-4]
 004CD07E    mov         ecx,dword ptr [eax]
 004CD080    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD083    mov         al,[004CD09C];0x0 gvar_004CD09C
 004CD088    push        eax
 004CD089    mov         edx,dword ptr [ebp-8]
 004CD08C    mov         cl,2
 004CD08E    mov         eax,dword ptr [ebp-4]
 004CD091    call        004CCDB0
 004CD096    pop         ecx
 004CD097    pop         ecx
 004CD098    pop         ebp
 004CD099    ret
end;*}

//004CD0A0
{*procedure TControl.WMMButtonDblClk(?:?);
begin
 004CD0A0    push        ebp
 004CD0A1    mov         ebp,esp
 004CD0A3    add         esp,0FFFFFFF8
 004CD0A6    mov         dword ptr [ebp-8],edx
 004CD0A9    mov         dword ptr [ebp-4],eax
 004CD0AC    mov         edx,dword ptr [ebp-8]
 004CD0AF    mov         eax,dword ptr [ebp-4]
 004CD0B2    mov         ecx,dword ptr [eax]
 004CD0B4    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD0B7    mov         al,[004CD0D0];0x40 gvar_004CD0D0
 004CD0BC    push        eax
 004CD0BD    mov         edx,dword ptr [ebp-8]
 004CD0C0    mov         cl,2
 004CD0C2    mov         eax,dword ptr [ebp-4]
 004CD0C5    call        004CCDB0
 004CD0CA    pop         ecx
 004CD0CB    pop         ecx
 004CD0CC    pop         ebp
 004CD0CD    ret
end;*}

//004CD0D4
{*procedure TControl.sub_004CD0D4(?:?; ?:?; ?:?);
begin
 004CD0D4    push        ebp
 004CD0D5    mov         ebp,esp
 004CD0D7    add         esp,0FFFFFFF4
 004CD0DA    push        ebx
 004CD0DB    mov         dword ptr [ebp-0C],ecx
 004CD0DE    mov         byte ptr [ebp-5],dl
 004CD0E1    mov         dword ptr [ebp-4],eax
 004CD0E4    mov         eax,dword ptr [ebp-4]
 004CD0E7    cmp         word ptr [eax+0DA],0;TControl.?fDA:word
>004CD0EF    je          004CD10E
 004CD0F1    mov         eax,dword ptr [ebp-0C]
 004CD0F4    push        eax
 004CD0F5    mov         eax,dword ptr [ebp+8]
 004CD0F8    push        eax
 004CD0F9    mov         ebx,dword ptr [ebp-4]
 004CD0FC    mov         cl,byte ptr [ebp-5]
 004CD0FF    mov         edx,dword ptr [ebp-4]
 004CD102    mov         eax,dword ptr [ebx+0DC];TControl.?fDC:dword
 004CD108    call        dword ptr [ebx+0D8];TControl.FOnMouseMove
 004CD10E    pop         ebx
 004CD10F    mov         esp,ebp
 004CD111    pop         ebp
 004CD112    ret         4
end;*}

//004CD118
{*procedure TControl.WMMouseMove(?:?);
begin
 004CD118    push        ebp
 004CD119    mov         ebp,esp
 004CD11B    add         esp,0FFFFFFF0
 004CD11E    push        esi
 004CD11F    mov         dword ptr [ebp-8],edx
 004CD122    mov         dword ptr [ebp-4],eax
 004CD125    mov         edx,dword ptr [ebp-8]
 004CD128    mov         eax,dword ptr [ebp-4]
 004CD12B    mov         ecx,dword ptr [eax]
 004CD12D    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD130    mov         eax,dword ptr [ebp-4]
 004CD133    test        byte ptr [eax+51],10;TControl.?f51:byte
>004CD137    jne         004CD1A8
 004CD139    mov         eax,dword ptr [ebp-4]
 004CD13C    cmp         dword ptr [eax+48],8000;TControl.Width:Integer
>004CD143    jg          004CD151
 004CD145    mov         eax,dword ptr [ebp-4]
 004CD148    cmp         dword ptr [eax+4C],8000;TControl.Height:Integer
>004CD14F    jle         004CD17F
 004CD151    lea         edx,[ebp-10]
 004CD154    mov         eax,dword ptr [ebp-4]
 004CD157    call        004CC644
 004CD15C    mov         eax,dword ptr [ebp-0C]
 004CD15F    push        eax
 004CD160    mov         eax,dword ptr [ebp-8]
 004CD163    mov         ax,word ptr [eax+4]
 004CD167    call        004E7D24
 004CD16C    mov         edx,eax
 004CD16E    mov         ecx,dword ptr [ebp-10]
 004CD171    mov         eax,dword ptr [ebp-4]
 004CD174    mov         si,0FFD4
 004CD178    call        @CallDynaInst;TControl.sub_004CD0D4
>004CD17D    jmp         004CD1A8
 004CD17F    mov         eax,dword ptr [ebp-8]
 004CD182    movsx       eax,word ptr [eax+0A]
 004CD186    push        eax
 004CD187    mov         eax,dword ptr [ebp-8]
 004CD18A    mov         ax,word ptr [eax+4]
 004CD18E    call        004E7D24
 004CD193    mov         edx,eax
 004CD195    mov         ecx,dword ptr [ebp-8]
 004CD198    movsx       ecx,word ptr [ecx+8]
 004CD19C    mov         eax,dword ptr [ebp-4]
 004CD19F    mov         si,0FFD4
 004CD1A3    call        @CallDynaInst;TControl.sub_004CD0D4
 004CD1A8    pop         esi
 004CD1A9    mov         esp,ebp
 004CD1AB    pop         ebp
 004CD1AC    ret
end;*}

//004CD1B0
{*procedure TControl.sub_004CD1B0(?:?; ?:?; ?:?; ?:?);
begin
 004CD1B0    push        ebp
 004CD1B1    mov         ebp,esp
 004CD1B3    add         esp,0FFFFFFF8
 004CD1B6    push        ebx
 004CD1B7    mov         byte ptr [ebp-6],cl
 004CD1BA    mov         byte ptr [ebp-5],dl
 004CD1BD    mov         dword ptr [ebp-4],eax
 004CD1C0    mov         eax,dword ptr [ebp-4]
 004CD1C3    cmp         word ptr [eax+0E2],0;TControl.?fE2:word
>004CD1CB    je          004CD1EE
 004CD1CD    mov         al,byte ptr [ebp-6]
 004CD1D0    push        eax
 004CD1D1    mov         eax,dword ptr [ebp+0C]
 004CD1D4    push        eax
 004CD1D5    mov         eax,dword ptr [ebp+8]
 004CD1D8    push        eax
 004CD1D9    mov         ebx,dword ptr [ebp-4]
 004CD1DC    mov         cl,byte ptr [ebp-5]
 004CD1DF    mov         edx,dword ptr [ebp-4]
 004CD1E2    mov         eax,dword ptr [ebx+0E4];TControl.?fE4:dword
 004CD1E8    call        dword ptr [ebx+0E0];TControl.FOnMouseUp
 004CD1EE    pop         ebx
 004CD1EF    pop         ecx
 004CD1F0    pop         ecx
 004CD1F1    pop         ebp
 004CD1F2    ret         8
end;*}

//004CD1F8
{*procedure sub_004CD1F8(?:TControl; ?:?; ?:?);
begin
 004CD1F8    push        ebp
 004CD1F9    mov         ebp,esp
 004CD1FB    add         esp,0FFFFFFF4
 004CD1FE    push        esi
 004CD1FF    mov         byte ptr [ebp-9],cl
 004CD202    mov         dword ptr [ebp-8],edx
 004CD205    mov         dword ptr [ebp-4],eax
 004CD208    mov         eax,dword ptr [ebp-4]
 004CD20B    test        byte ptr [eax+51],10
>004CD20F    jne         004CD23E
 004CD211    mov         eax,dword ptr [ebp-8]
 004CD214    movsx       eax,word ptr [eax+8]
 004CD218    push        eax
 004CD219    mov         eax,dword ptr [ebp-8]
 004CD21C    movsx       eax,word ptr [eax+0A]
 004CD220    push        eax
 004CD221    mov         eax,dword ptr [ebp-8]
 004CD224    mov         ax,word ptr [eax+4]
 004CD228    call        004E7D24
 004CD22D    mov         ecx,eax
 004CD22F    mov         dl,byte ptr [ebp-9]
 004CD232    mov         eax,dword ptr [ebp-4]
 004CD235    mov         si,0FFD3
 004CD239    call        @CallDynaInst
 004CD23E    pop         esi
 004CD23F    mov         esp,ebp
 004CD241    pop         ebp
 004CD242    ret
end;*}

//004CD244
{*procedure TControl.WMLButtonUp(?:?);
begin
 004CD244    push        ebp
 004CD245    mov         ebp,esp
 004CD247    add         esp,0FFFFFFE0
 004CD24A    push        esi
 004CD24B    mov         dword ptr [ebp-8],edx
 004CD24E    mov         dword ptr [ebp-4],eax
 004CD251    mov         edx,dword ptr [ebp-8]
 004CD254    mov         eax,dword ptr [ebp-4]
 004CD257    mov         ecx,dword ptr [eax]
 004CD259    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD25C    mov         eax,dword ptr [ebp-4]
 004CD25F    test        byte ptr [eax+50],2;TControl.FControlStyle:TControlStyle
>004CD263    je          004CD26F
 004CD265    xor         edx,edx
 004CD267    mov         eax,dword ptr [ebp-4]
 004CD26A    call        004CB390
 004CD26F    mov         eax,dword ptr [ebp-4]
 004CD272    test        byte ptr [eax+54],2;TControl.FControlState:TControlState
>004CD276    je          004CD2B8
 004CD278    mov         eax,dword ptr [ebp-4]
 004CD27B    and         word ptr [eax+54],0FFFFFFFD;TControl.FControlState:TControlState
 004CD280    lea         edx,[ebp-10]
 004CD283    mov         eax,dword ptr [ebp-8]
 004CD286    mov         eax,dword ptr [eax+8]
 004CD289    call        00408250
 004CD28E    push        dword ptr [ebp-0C]
 004CD291    push        dword ptr [ebp-10]
 004CD294    lea         edx,[ebp-20]
 004CD297    mov         eax,dword ptr [ebp-4]
 004CD29A    mov         ecx,dword ptr [eax]
 004CD29C    call        dword ptr [ecx+44];TControl.sub_004CA73C
 004CD29F    lea         eax,[ebp-20]
 004CD2A2    push        eax
 004CD2A3    call        user32.PtInRect
 004CD2A8    test        eax,eax
>004CD2AA    je          004CD2B8
 004CD2AC    mov         eax,dword ptr [ebp-4]
 004CD2AF    mov         si,0FFEB
 004CD2B3    call        @CallDynaInst;TControl.sub_004CCCAC
 004CD2B8    mov         edx,dword ptr [ebp-8]
 004CD2BB    xor         ecx,ecx
 004CD2BD    mov         eax,dword ptr [ebp-4]
 004CD2C0    call        004CD1F8
 004CD2C5    pop         esi
 004CD2C6    mov         esp,ebp
 004CD2C8    pop         ebp
 004CD2C9    ret
end;*}

//004CD2CC
{*procedure TControl.WMRButtonUp(?:?);
begin
 004CD2CC    push        ebp
 004CD2CD    mov         ebp,esp
 004CD2CF    add         esp,0FFFFFFF8
 004CD2D2    mov         dword ptr [ebp-8],edx
 004CD2D5    mov         dword ptr [ebp-4],eax
 004CD2D8    mov         edx,dword ptr [ebp-8]
 004CD2DB    mov         eax,dword ptr [ebp-4]
 004CD2DE    mov         ecx,dword ptr [eax]
 004CD2E0    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD2E3    mov         edx,dword ptr [ebp-8]
 004CD2E6    mov         cl,1
 004CD2E8    mov         eax,dword ptr [ebp-4]
 004CD2EB    call        004CD1F8
 004CD2F0    pop         ecx
 004CD2F1    pop         ecx
 004CD2F2    pop         ebp
 004CD2F3    ret
end;*}

//004CD2F4
{*procedure TControl.WMMButtonUp(?:?);
begin
 004CD2F4    push        ebp
 004CD2F5    mov         ebp,esp
 004CD2F7    add         esp,0FFFFFFF8
 004CD2FA    mov         dword ptr [ebp-8],edx
 004CD2FD    mov         dword ptr [ebp-4],eax
 004CD300    mov         edx,dword ptr [ebp-8]
 004CD303    mov         eax,dword ptr [ebp-4]
 004CD306    mov         ecx,dword ptr [eax]
 004CD308    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD30B    mov         edx,dword ptr [ebp-8]
 004CD30E    mov         cl,2
 004CD310    mov         eax,dword ptr [ebp-4]
 004CD313    call        004CD1F8
 004CD318    pop         ecx
 004CD319    pop         ecx
 004CD31A    pop         ebp
 004CD31B    ret
end;*}

//004CD31C
{*procedure TControl.WMMouseWheel(?:?);
begin
 004CD31C    push        ebp
 004CD31D    mov         ebp,esp
 004CD31F    add         esp,0FFFFFFF8
 004CD322    push        esi
 004CD323    mov         dword ptr [ebp-8],edx
 004CD326    mov         dword ptr [ebp-4],eax
 004CD329    mov         eax,[0055DDAC];gvar_0055DDAC
 004CD32E    cmp         byte ptr [eax+20],0
>004CD332    jne         004CD34C
 004CD334    mov         eax,[0055DDAC];gvar_0055DDAC
 004CD339    mov         byte ptr [eax+20],1
 004CD33D    mov         edx,68
 004CD342    mov         eax,[0055DDAC];gvar_0055DDAC
 004CD347    call        004D96BC
 004CD34C    mov         eax,dword ptr [ebp-8]
 004CD34F    mov         ax,word ptr [eax+4]
 004CD353    call        004E7D24
 004CD358    mov         edx,dword ptr [ebp-8]
 004CD35B    mov         byte ptr [edx+4],al
 004CD35E    mov         edx,dword ptr [ebp-8]
 004CD361    mov         eax,dword ptr [ebp-4]
 004CD364    mov         si,0FFC9
 004CD368    call        @CallDynaInst;TControl.sub_004CB70C
 004CD36D    mov         eax,dword ptr [ebp-8]
 004CD370    cmp         dword ptr [eax+0C],0
>004CD374    jne         004CD381
 004CD376    mov         edx,dword ptr [ebp-8]
 004CD379    mov         eax,dword ptr [ebp-4]
 004CD37C    mov         ecx,dword ptr [eax]
 004CD37E    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD381    pop         esi
 004CD382    pop         ecx
 004CD383    pop         ecx
 004CD384    pop         ebp
 004CD385    ret
end;*}

//004CD388
{*procedure TControl.WMCancelMode(?:?);
begin
 004CD388    push        ebp
 004CD389    mov         ebp,esp
 004CD38B    add         esp,0FFFFFFF8
 004CD38E    mov         dword ptr [ebp-8],edx
 004CD391    mov         dword ptr [ebp-4],eax
 004CD394    mov         edx,dword ptr [ebp-8]
 004CD397    mov         eax,dword ptr [ebp-4]
 004CD39A    mov         ecx,dword ptr [eax]
 004CD39C    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD39F    mov         eax,dword ptr [ebp-4]
 004CD3A2    call        TControl.GetMouseCapture
 004CD3A7    test        al,al
>004CD3A9    je          004CD3D1
 004CD3AB    xor         edx,edx
 004CD3AD    mov         eax,dword ptr [ebp-4]
 004CD3B0    call        004CB390
 004CD3B5    mov         eax,dword ptr [ebp-4]
 004CD3B8    test        byte ptr [eax+54],1;TControl.FControlState:TControlState
>004CD3BC    je          004CD3D9
 004CD3BE    push        0FF
 004CD3C0    xor         ecx,ecx
 004CD3C2    mov         edx,202
 004CD3C7    mov         eax,dword ptr [ebp-4]
 004CD3CA    call        004CC7DC
>004CD3CF    jmp         004CD3D9
 004CD3D1    mov         eax,dword ptr [ebp-4]
 004CD3D4    and         word ptr [eax+54],0FFFFFFFE;TControl.FControlState:TControlState
 004CD3D9    pop         ecx
 004CD3DA    pop         ecx
 004CD3DB    pop         ebp
 004CD3DC    ret
end;*}

//004CD3E0
{*procedure TControl.WMWindowPosChangedMsg(?:?);
begin
 004CD3E0    push        ebp
 004CD3E1    mov         ebp,esp
 004CD3E3    add         esp,0FFFFFFF0
 004CD3E6    mov         dword ptr [ebp-8],edx
 004CD3E9    mov         dword ptr [ebp-4],eax
 004CD3EC    mov         edx,dword ptr [ebp-8]
 004CD3EF    mov         eax,dword ptr [ebp-4]
 004CD3F2    mov         ecx,dword ptr [eax]
 004CD3F4    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CD3F7    mov         ax,[004CD4FC];0x3 gvar_004CD4FC
 004CD3FD    mov         edx,dword ptr [ebp-4]
 004CD400    and         ax,word ptr [edx+1C];TControl.FComponentState:TComponentState
 004CD404    mov         dx,word ptr ds:[4CD500];0x0 gvar_004CD500
 004CD40B    cmp         dx,ax
>004CD40E    jne         004CD4F7
 004CD414    mov         eax,dword ptr [ebp-4]
 004CD417    mov         eax,dword ptr [eax+74];TControl.FConstraints:TSizeConstraints
 004CD41A    mov         dword ptr [ebp-0C],eax
 004CD41D    mov         eax,dword ptr [ebp-0C]
 004CD420    cmp         dword ptr [eax+0C],0;TSizeConstraints.MaxWidth:TConstraintSize
>004CD424    jbe         004CD442
 004CD426    mov         eax,dword ptr [ebp-4]
 004CD429    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CD42C    mov         edx,dword ptr [ebp-0C]
 004CD42F    cmp         eax,dword ptr [edx+0C];TSizeConstraints.MaxWidth:TConstraintSize
>004CD432    jle         004CD442
 004CD434    mov         eax,dword ptr [ebp-4]
 004CD437    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CD43A    mov         edx,dword ptr [ebp-0C]
 004CD43D    mov         dword ptr [edx+0C],eax;TSizeConstraints.MaxWidth:TConstraintSize
>004CD440    jmp         004CD465
 004CD442    mov         eax,dword ptr [ebp-0C]
 004CD445    cmp         dword ptr [eax+14],0;TSizeConstraints.MinWidth:TConstraintSize
>004CD449    jbe         004CD465
 004CD44B    mov         eax,dword ptr [ebp-4]
 004CD44E    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CD451    mov         edx,dword ptr [ebp-0C]
 004CD454    cmp         eax,dword ptr [edx+14];TSizeConstraints.MinWidth:TConstraintSize
>004CD457    jge         004CD465
 004CD459    mov         eax,dword ptr [ebp-4]
 004CD45C    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CD45F    mov         edx,dword ptr [ebp-0C]
 004CD462    mov         dword ptr [edx+14],eax;TSizeConstraints.MinWidth:TConstraintSize
 004CD465    mov         eax,dword ptr [ebp-0C]
 004CD468    cmp         dword ptr [eax+8],0;TSizeConstraints.MaxHeight:TConstraintSize
>004CD46C    jbe         004CD48A
 004CD46E    mov         eax,dword ptr [ebp-4]
 004CD471    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CD474    mov         edx,dword ptr [ebp-0C]
 004CD477    cmp         eax,dword ptr [edx+8];TSizeConstraints.MaxHeight:TConstraintSize
>004CD47A    jle         004CD48A
 004CD47C    mov         eax,dword ptr [ebp-4]
 004CD47F    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CD482    mov         edx,dword ptr [ebp-0C]
 004CD485    mov         dword ptr [edx+8],eax;TSizeConstraints.MaxHeight:TConstraintSize
>004CD488    jmp         004CD4AD
 004CD48A    mov         eax,dword ptr [ebp-0C]
 004CD48D    cmp         dword ptr [eax+10],0;TSizeConstraints.MinHeight:TConstraintSize
>004CD491    jbe         004CD4AD
 004CD493    mov         eax,dword ptr [ebp-4]
 004CD496    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CD499    mov         edx,dword ptr [ebp-0C]
 004CD49C    cmp         eax,dword ptr [edx+10];TSizeConstraints.MinHeight:TConstraintSize
>004CD49F    jge         004CD4AD
 004CD4A1    mov         eax,dword ptr [ebp-4]
 004CD4A4    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CD4A7    mov         edx,dword ptr [ebp-0C]
 004CD4AA    mov         dword ptr [edx+10],eax;TSizeConstraints.MinHeight:TConstraintSize
 004CD4AD    mov         eax,dword ptr [ebp-8]
 004CD4B0    cmp         dword ptr [eax+8],0
>004CD4B4    je          004CD4F7
 004CD4B6    mov         eax,dword ptr [ebp-8]
 004CD4B9    mov         eax,dword ptr [eax+8]
 004CD4BC    mov         dword ptr [ebp-10],eax
 004CD4BF    mov         eax,dword ptr [ebp-4]
 004CD4C2    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>004CD4C9    je          004CD4F7
 004CD4CB    mov         eax,dword ptr [ebp-4]
 004CD4CE    test        byte ptr [eax+55],4;TControl.?f55:byte
>004CD4D2    jne         004CD4F7
 004CD4D4    mov         eax,dword ptr [ebp-10]
 004CD4D7    test        byte ptr [eax+18],1
>004CD4DB    jne         004CD4F7
 004CD4DD    mov         eax,dword ptr [ebp-10]
 004CD4E0    cmp         dword ptr [eax+10],0
>004CD4E4    je          004CD4F7
 004CD4E6    mov         eax,dword ptr [ebp-10]
 004CD4E9    cmp         dword ptr [eax+14],0
>004CD4ED    je          004CD4F7
 004CD4EF    mov         eax,dword ptr [ebp-4]
 004CD4F2    call        004CC828
 004CD4F7    mov         esp,ebp
 004CD4F9    pop         ebp
 004CD4FA    ret
end;*}

//004CD504
{*procedure TControl.CMVisibleChanged(?:?);
begin
 004CD504    push        ebp
 004CD505    mov         ebp,esp
 004CD507    add         esp,0FFFFFFF8
 004CD50A    mov         dword ptr [ebp-8],edx
 004CD50D    mov         dword ptr [ebp-4],eax
 004CD510    mov         eax,dword ptr [ebp-4]
 004CD513    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004CD517    je          004CD522
 004CD519    mov         eax,dword ptr [ebp-4]
 004CD51C    test        byte ptr [eax+51],4;TControl.?f51:byte
>004CD520    je          004CD544
 004CD522    mov         eax,dword ptr [ebp-4]
 004CD525    cmp         byte ptr [eax+57],0;TControl.FVisible:Boolean
>004CD529    je          004CD534
 004CD52B    mov         eax,dword ptr [ebp-4]
 004CD52E    test        byte ptr [eax+50],40;TControl.FControlStyle:TControlStyle
>004CD532    jne         004CD538
 004CD534    xor         ecx,ecx
>004CD536    jmp         004CD53A
 004CD538    mov         cl,1
 004CD53A    mov         dl,1
 004CD53C    mov         eax,dword ptr [ebp-4]
 004CD53F    call        004CB65C
 004CD544    pop         ecx
 004CD545    pop         ecx
 004CD546    pop         ebp
 004CD547    ret
end;*}

//004CD548
{*procedure TControl.CMEnabledChanged(?:?);
begin
 004CD548    push        ebp
 004CD549    mov         ebp,esp
 004CD54B    add         esp,0FFFFFFF8
 004CD54E    mov         dword ptr [ebp-8],edx
 004CD551    mov         dword ptr [ebp-4],eax
 004CD554    mov         eax,dword ptr [ebp-4]
 004CD557    mov         edx,dword ptr [eax]
 004CD559    call        dword ptr [edx+7C];TControl.sub_004CB6E8
 004CD55C    pop         ecx
 004CD55D    pop         ecx
 004CD55E    pop         ebp
 004CD55F    ret
end;*}

//004CD560
{*procedure TControl.CMFontChanged(?:?);
begin
 004CD560    push        ebp
 004CD561    mov         ebp,esp
 004CD563    add         esp,0FFFFFFF8
 004CD566    mov         dword ptr [ebp-8],edx
 004CD569    mov         dword ptr [ebp-4],eax
 004CD56C    mov         eax,dword ptr [ebp-4]
 004CD56F    mov         edx,dword ptr [eax]
 004CD571    call        dword ptr [edx+7C];TControl.sub_004CB6E8
 004CD574    pop         ecx
 004CD575    pop         ecx
 004CD576    pop         ebp
 004CD577    ret
end;*}

//004CD578
{*procedure TControl.CMColorChanged(?:?);
begin
 004CD578    push        ebp
 004CD579    mov         ebp,esp
 004CD57B    add         esp,0FFFFFFF8
 004CD57E    mov         dword ptr [ebp-8],edx
 004CD581    mov         dword ptr [ebp-4],eax
 004CD584    mov         eax,dword ptr [ebp-4]
 004CD587    mov         edx,dword ptr [eax]
 004CD589    call        dword ptr [edx+7C];TControl.sub_004CB6E8
 004CD58C    pop         ecx
 004CD58D    pop         ecx
 004CD58E    pop         ebp
 004CD58F    ret
end;*}

//004CD590
{*procedure TControl.CMParentColorChanged(?:?);
begin
 004CD590    push        ebp
 004CD591    mov         ebp,esp
 004CD593    add         esp,0FFFFFFF8
 004CD596    mov         dword ptr [ebp-8],edx
 004CD599    mov         dword ptr [ebp-4],eax
 004CD59C    mov         eax,dword ptr [ebp-4]
 004CD59F    cmp         byte ptr [eax+5A],0;TControl.FParentColor:Boolean
>004CD5A3    je          004CD5D6
 004CD5A5    mov         eax,dword ptr [ebp-8]
 004CD5A8    cmp         dword ptr [eax+4],0
>004CD5AC    je          004CD5BE
 004CD5AE    mov         edx,dword ptr [ebp-8]
 004CD5B1    mov         edx,dword ptr [edx+8]
 004CD5B4    mov         eax,dword ptr [ebp-4]
 004CD5B7    call        TPanel.SetColor
>004CD5BC    jmp         004CD5CF
 004CD5BE    mov         eax,dword ptr [ebp-4]
 004CD5C1    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CD5C4    mov         edx,dword ptr [eax+70];TWinControl.FColor:TColor
 004CD5C7    mov         eax,dword ptr [ebp-4]
 004CD5CA    call        TPanel.SetColor
 004CD5CF    mov         eax,dword ptr [ebp-4]
 004CD5D2    mov         byte ptr [eax+5A],1;TControl.FParentColor:Boolean
 004CD5D6    pop         ecx
 004CD5D7    pop         ecx
 004CD5D8    pop         ebp
 004CD5D9    ret
end;*}

//004CD5DC
{*procedure TControl.CMParentBiDiModeChanged(?:?);
begin
 004CD5DC    push        ebp
 004CD5DD    mov         ebp,esp
 004CD5DF    add         esp,0FFFFFFF8
 004CD5E2    mov         dword ptr [ebp-8],edx
 004CD5E5    mov         dword ptr [ebp-4],eax
 004CD5E8    mov         eax,dword ptr [ebp-4]
 004CD5EB    cmp         byte ptr [eax+60],0;TControl.FParentBiDiMode:Boolean
>004CD5EF    je          004CD612
 004CD5F1    mov         eax,dword ptr [ebp-4]
 004CD5F4    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CD5F8    je          004CD60B
 004CD5FA    mov         eax,dword ptr [ebp-4]
 004CD5FD    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CD600    mov         dl,byte ptr [eax+5F];TWinControl.FBiDiMode:TBiDiMode
 004CD603    mov         eax,dword ptr [ebp-4]
 004CD606    mov         ecx,dword ptr [eax]
 004CD608    call        dword ptr [ecx+70];TPanel.SetBiDiMode
 004CD60B    mov         eax,dword ptr [ebp-4]
 004CD60E    mov         byte ptr [eax+60],1;TControl.FParentBiDiMode:Boolean
 004CD612    pop         ecx
 004CD613    pop         ecx
 004CD614    pop         ebp
 004CD615    ret
end;*}

//004CD618
{*procedure TControl.CMMouseWheel(?:?);
begin
 004CD618    push        ebp
 004CD619    mov         ebp,esp
 004CD61B    add         esp,0FFFFFFF0
 004CD61E    push        esi
 004CD61F    mov         dword ptr [ebp-8],edx
 004CD622    mov         dword ptr [ebp-4],eax
 004CD625    mov         eax,dword ptr [ebp-8]
 004CD628    xor         edx,edx
 004CD62A    mov         dword ptr [eax+0C],edx
 004CD62D    lea         edx,[ebp-10]
 004CD630    mov         eax,dword ptr [ebp-8]
 004CD633    mov         eax,dword ptr [eax+8]
 004CD636    call        00408250
 004CD63B    lea         eax,[ebp-10]
 004CD63E    push        eax
 004CD63F    mov         ecx,dword ptr [ebp-8]
 004CD642    movsx       ecx,word ptr [ecx+6]
 004CD646    mov         edx,dword ptr [ebp-8]
 004CD649    mov         dl,byte ptr [edx+4]
 004CD64C    mov         eax,dword ptr [ebp-4]
 004CD64F    mov         si,0FFE2
 004CD653    call        @CallDynaInst;TControl.sub_004CBD9C
 004CD658    test        al,al
>004CD65A    je          004CD668
 004CD65C    mov         eax,dword ptr [ebp-8]
 004CD65F    mov         dword ptr [eax+0C],1
>004CD666    jmp         004CD694
 004CD668    mov         eax,dword ptr [ebp-4]
 004CD66B    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CD66F    je          004CD694
 004CD671    mov         eax,dword ptr [ebp-8]
 004CD674    mov         eax,dword ptr [eax+8]
 004CD677    push        eax
 004CD678    mov         ecx,dword ptr [ebp-8]
 004CD67B    mov         ecx,dword ptr [ecx+4]
 004CD67E    mov         edx,0B043
 004CD683    mov         eax,dword ptr [ebp-4]
 004CD686    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CD689    call        004CC7DC
 004CD68E    mov         edx,dword ptr [ebp-8]
 004CD691    mov         dword ptr [edx+0C],eax
 004CD694    pop         esi
 004CD695    mov         esp,ebp
 004CD697    pop         ebp
 004CD698    ret
end;*}

//004CD69C
{*procedure TControl.CMBiDiModeChanged(?:?);
begin
 004CD69C    push        ebp
 004CD69D    mov         ebp,esp
 004CD69F    add         esp,0FFFFFFF8
 004CD6A2    mov         dword ptr [ebp-8],edx
 004CD6A5    mov         dword ptr [ebp-4],eax
 004CD6A8    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004CD6AD    cmp         byte ptr [eax+0D],0
>004CD6B1    je          004CD6C4
 004CD6B3    mov         eax,dword ptr [ebp-8]
 004CD6B6    cmp         dword ptr [eax+4],0
>004CD6BA    jne         004CD6C4
 004CD6BC    mov         eax,dword ptr [ebp-4]
 004CD6BF    mov         edx,dword ptr [eax]
 004CD6C1    call        dword ptr [edx+7C];TControl.sub_004CB6E8
 004CD6C4    pop         ecx
 004CD6C5    pop         ecx
 004CD6C6    pop         ebp
 004CD6C7    ret
end;*}

//004CD6C8
{*procedure TControl.CMParentShowHintChanged(?:?);
begin
 004CD6C8    push        ebp
 004CD6C9    mov         ebp,esp
 004CD6CB    add         esp,0FFFFFFF8
 004CD6CE    mov         dword ptr [ebp-8],edx
 004CD6D1    mov         dword ptr [ebp-4],eax
 004CD6D4    mov         eax,dword ptr [ebp-4]
 004CD6D7    cmp         byte ptr [eax+9A],0;TControl.FParentShowHint:Boolean
>004CD6DE    je          004CD6FE
 004CD6E0    mov         eax,dword ptr [ebp-4]
 004CD6E3    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CD6E6    mov         dl,byte ptr [eax+99];TWinControl.FShowHint:Boolean
 004CD6EC    mov         eax,dword ptr [ebp-4]
 004CD6EF    call        TImage.SetShowHint
 004CD6F4    mov         eax,dword ptr [ebp-4]
 004CD6F7    mov         byte ptr [eax+9A],1;TControl.FParentShowHint:Boolean
 004CD6FE    pop         ecx
 004CD6FF    pop         ecx
 004CD700    pop         ebp
 004CD701    ret
end;*}

//004CD704
{*procedure TControl.CMParentFontChanged(?:?);
begin
 004CD704    push        ebp
 004CD705    mov         ebp,esp
 004CD707    add         esp,0FFFFFFF8
 004CD70A    mov         dword ptr [ebp-8],edx
 004CD70D    mov         dword ptr [ebp-4],eax
 004CD710    mov         eax,dword ptr [ebp-4]
 004CD713    cmp         byte ptr [eax+59],0;TControl.FParentFont:Boolean
>004CD717    je          004CD74A
 004CD719    mov         eax,dword ptr [ebp-8]
 004CD71C    cmp         dword ptr [eax+4],0
>004CD720    je          004CD732
 004CD722    mov         edx,dword ptr [ebp-8]
 004CD725    mov         edx,dword ptr [edx+8]
 004CD728    mov         eax,dword ptr [ebp-4]
 004CD72B    call        TPanel.SetFont
>004CD730    jmp         004CD743
 004CD732    mov         eax,dword ptr [ebp-4]
 004CD735    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CD738    mov         edx,dword ptr [eax+68];TWinControl.FFont:TFont
 004CD73B    mov         eax,dword ptr [ebp-4]
 004CD73E    call        TPanel.SetFont
 004CD743    mov         eax,dword ptr [ebp-4]
 004CD746    mov         byte ptr [eax+59],1;TControl.FParentFont:Boolean
 004CD74A    pop         ecx
 004CD74B    pop         ecx
 004CD74C    pop         ebp
 004CD74D    ret
end;*}

//004CD750
{*procedure TControl.CMSysFontChanged(?:?);
begin
 004CD750    push        ebp
 004CD751    mov         ebp,esp
 004CD753    add         esp,0FFFFFFF8
 004CD756    mov         dword ptr [ebp-8],edx
 004CD759    mov         dword ptr [ebp-4],eax
 004CD75C    mov         eax,dword ptr [ebp-4]
 004CD75F    cmp         byte ptr [eax+56],0;TControl.FDesktopFont:Boolean
>004CD763    je          004CD781
 004CD765    mov         eax,[0055B6D8];^Screen:TScreen
 004CD76A    mov         eax,dword ptr [eax]
 004CD76C    mov         edx,dword ptr [eax+84];TScreen.FIconFont:TFont
 004CD772    mov         eax,dword ptr [ebp-4]
 004CD775    call        TPanel.SetFont
 004CD77A    mov         eax,dword ptr [ebp-4]
 004CD77D    mov         byte ptr [eax+56],1;TControl.FDesktopFont:Boolean
 004CD781    pop         ecx
 004CD782    pop         ecx
 004CD783    pop         ebp
 004CD784    ret
end;*}

//004CD788
{*procedure TControl.CMHitTest(?:?);
begin
 004CD788    push        ebp
 004CD789    mov         ebp,esp
 004CD78B    add         esp,0FFFFFFF8
 004CD78E    mov         dword ptr [ebp-8],edx
 004CD791    mov         dword ptr [ebp-4],eax
 004CD794    mov         eax,dword ptr [ebp-8]
 004CD797    mov         dword ptr [eax+0C],1
 004CD79E    pop         ecx
 004CD79F    pop         ecx
 004CD7A0    pop         ebp
 004CD7A1    ret
end;*}

//004CD7A4
{*procedure TControl.CMMouseEnter(?:?);
begin
 004CD7A4    push        ebp
 004CD7A5    mov         ebp,esp
 004CD7A7    add         esp,0FFFFFFF8
 004CD7AA    mov         dword ptr [ebp-8],edx
 004CD7AD    mov         dword ptr [ebp-4],eax
 004CD7B0    mov         eax,dword ptr [ebp-4]
 004CD7B3    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CD7B7    je          004CD7CF
 004CD7B9    mov         eax,dword ptr [ebp-4]
 004CD7BC    push        eax
 004CD7BD    xor         ecx,ecx
 004CD7BF    mov         edx,0B013
 004CD7C4    mov         eax,dword ptr [ebp-4]
 004CD7C7    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CD7CA    call        004CC7DC
 004CD7CF    pop         ecx
 004CD7D0    pop         ecx
 004CD7D1    pop         ebp
 004CD7D2    ret
end;*}

//004CD7D4
{*procedure TControl.CMMouseLeave(?:?);
begin
 004CD7D4    push        ebp
 004CD7D5    mov         ebp,esp
 004CD7D7    add         esp,0FFFFFFF8
 004CD7DA    mov         dword ptr [ebp-8],edx
 004CD7DD    mov         dword ptr [ebp-4],eax
 004CD7E0    mov         eax,dword ptr [ebp-4]
 004CD7E3    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CD7E7    je          004CD7FF
 004CD7E9    mov         eax,dword ptr [ebp-4]
 004CD7EC    push        eax
 004CD7ED    xor         ecx,ecx
 004CD7EF    mov         edx,0B014
 004CD7F4    mov         eax,dword ptr [ebp-4]
 004CD7F7    mov         eax,dword ptr [eax+30];TControl.FParent:TWinControl
 004CD7FA    call        004CC7DC
 004CD7FF    pop         ecx
 004CD800    pop         ecx
 004CD801    pop         ebp
 004CD802    ret
end;*}

//004CD804
{*procedure TControl.CMDesignHitTest(?:?);
begin
 004CD804    push        ebp
 004CD805    mov         ebp,esp
 004CD807    add         esp,0FFFFFFF8
 004CD80A    mov         dword ptr [ebp-8],edx
 004CD80D    mov         dword ptr [ebp-4],eax
 004CD810    mov         eax,dword ptr [ebp-8]
 004CD813    xor         edx,edx
 004CD815    mov         dword ptr [eax+0C],edx
 004CD818    pop         ecx
 004CD819    pop         ecx
 004CD81A    pop         ebp
 004CD81B    ret
end;*}

//004CD81C
{*function sub_004CD81C(?:TControl; ?:?):?;
begin
 004CD81C    push        ebp
 004CD81D    mov         ebp,esp
 004CD81F    add         esp,0FFFFFFE8
 004CD822    push        ebx
 004CD823    push        esi
 004CD824    push        edi
 004CD825    mov         esi,edx
 004CD827    lea         edi,[ebp-18]
 004CD82A    movs        dword ptr [edi],dword ptr [esi]
 004CD82B    movs        dword ptr [edi],dword ptr [esi]
 004CD82C    movs        dword ptr [edi],dword ptr [esi]
 004CD82D    movs        dword ptr [edi],dword ptr [esi]
 004CD82E    mov         dword ptr [ebp-4],eax
 004CD831    xor         eax,eax
 004CD833    mov         dword ptr [ebp-8],eax
 004CD836    mov         eax,dword ptr [ebp-4]
 004CD839    mov         edx,dword ptr [eax]
 004CD83B    call        dword ptr [edx+58]
 004CD83E    test        eax,eax
>004CD840    je          004CD8A2
 004CD842    mov         eax,dword ptr [ebp-4]
 004CD845    mov         edx,dword ptr [eax]
 004CD847    call        dword ptr [edx+58]
 004CD84A    mov         ebx,eax
 004CD84C    mov         eax,dword ptr [ebp-4]
 004CD84F    call        TObject.ClassType
 004CD854    cmp         ebx,eax
>004CD856    je          004CD8A2
 004CD858    mov         eax,dword ptr [ebp-4]
 004CD85B    mov         edx,dword ptr [eax]
 004CD85D    call        dword ptr [edx+58]
 004CD860    mov         ecx,dword ptr ds:[55B4C8];^Application:TApplication
 004CD866    mov         ecx,dword ptr [ecx]
 004CD868    mov         dl,1
 004CD86A    call        dword ptr [eax+2C]
 004CD86D    mov         dword ptr [ebp-8],eax
 004CD870    mov         edx,dword ptr [ebp-14]
 004CD873    mov         eax,dword ptr [ebp-8]
 004CD876    call        TTabSheet.SetTop
 004CD87B    mov         edx,dword ptr [ebp-18]
 004CD87E    mov         eax,dword ptr [ebp-8]
 004CD881    call        TTabSheet.SetLeft
 004CD886    mov         edx,dword ptr [ebp-10]
 004CD889    sub         edx,dword ptr [ebp-18]
 004CD88C    mov         eax,dword ptr [ebp-8]
 004CD88F    call        004CA798
 004CD894    mov         edx,dword ptr [ebp-0C]
 004CD897    sub         edx,dword ptr [ebp-14]
 004CD89A    mov         eax,dword ptr [ebp-8]
 004CD89D    call        004CA7EC
 004CD8A2    mov         eax,dword ptr [ebp-8]
 004CD8A5    pop         edi
 004CD8A6    pop         esi
 004CD8A7    pop         ebx
 004CD8A8    mov         esp,ebp
 004CD8AA    pop         ebp
 004CD8AB    ret
end;*}

//004CD8AC
{*procedure sub_004CD8AC(?:?);
begin
 004CD8AC    push        ebp
 004CD8AD    mov         ebp,esp
 004CD8AF    add         esp,0FFFFFFDC
 004CD8B2    push        ebx
 004CD8B3    lea         ecx,[ebp-14]
 004CD8B6    mov         eax,dword ptr [ebp+8]
 004CD8B9    mov         eax,dword ptr [eax-4]
 004CD8BC    mov         edx,dword ptr [eax+44]
 004CD8BF    mov         eax,dword ptr [ebp+8]
 004CD8C2    mov         eax,dword ptr [eax-4]
 004CD8C5    mov         eax,dword ptr [eax+40]
 004CD8C8    call        Point
 004CD8CD    lea         edx,[ebp-14]
 004CD8D0    lea         ecx,[ebp-8]
 004CD8D3    mov         eax,dword ptr [ebp+8]
 004CD8D6    mov         eax,dword ptr [eax-4]
 004CD8D9    mov         eax,dword ptr [eax+30]
 004CD8DC    call        TControl.ClientToScreen
 004CD8E1    mov         eax,dword ptr [ebp+8]
 004CD8E4    mov         eax,dword ptr [eax-8]
 004CD8E7    mov         eax,dword ptr [eax+8]
 004CD8EA    add         eax,44
 004CD8ED    mov         dword ptr [ebp-0C],eax
 004CD8F0    mov         eax,dword ptr [ebp-0C]
 004CD8F3    mov         eax,dword ptr [eax+0C]
 004CD8F6    mov         edx,dword ptr [ebp-0C]
 004CD8F9    sub         eax,dword ptr [edx+4]
 004CD8FC    mov         edx,dword ptr [ebp+8]
 004CD8FF    mov         edx,dword ptr [edx-4]
 004CD902    mov         edx,dword ptr [edx+30]
 004CD905    add         eax,dword ptr [edx+4C]
 004CD908    mov         edx,dword ptr [ebp+8]
 004CD90B    mov         edx,dword ptr [edx-4]
 004CD90E    sub         eax,dword ptr [edx+4C]
 004CD911    push        eax
 004CD912    lea         eax,[ebp-24]
 004CD915    push        eax
 004CD916    mov         eax,dword ptr [ebp-0C]
 004CD919    mov         ecx,dword ptr [eax+8]
 004CD91C    mov         eax,dword ptr [ebp-0C]
 004CD91F    sub         ecx,dword ptr [eax]
 004CD921    mov         eax,dword ptr [ebp+8]
 004CD924    mov         eax,dword ptr [eax-4]
 004CD927    mov         eax,dword ptr [eax+30]
 004CD92A    add         ecx,dword ptr [eax+48]
 004CD92D    mov         eax,dword ptr [ebp+8]
 004CD930    mov         eax,dword ptr [eax-4]
 004CD933    sub         ecx,dword ptr [eax+48]
 004CD936    mov         eax,dword ptr [ebp+8]
 004CD939    mov         eax,dword ptr [eax-4]
 004CD93C    mov         eax,dword ptr [eax+30]
 004CD93F    mov         edx,dword ptr [eax+44]
 004CD942    mov         eax,dword ptr [ebp-0C]
 004CD945    add         edx,dword ptr [eax+4]
 004CD948    sub         edx,dword ptr [ebp-4]
 004CD94B    mov         eax,dword ptr [ebp+8]
 004CD94E    mov         eax,dword ptr [eax-4]
 004CD951    mov         eax,dword ptr [eax+30]
 004CD954    mov         eax,dword ptr [eax+40]
 004CD957    mov         ebx,dword ptr [ebp-0C]
 004CD95A    add         eax,dword ptr [ebx]
 004CD95C    sub         eax,dword ptr [ebp-8]
 004CD95F    call        Bounds
 004CD964    lea         edx,[ebp-24]
 004CD967    mov         eax,dword ptr [ebp+8]
 004CD96A    mov         eax,dword ptr [eax-4]
 004CD96D    mov         eax,dword ptr [eax+30]
 004CD970    call        004CA6F8
 004CD975    pop         ebx
 004CD976    mov         esp,ebp
 004CD978    pop         ebp
 004CD979    ret
end;*}

//004CD97C
{*procedure TControl.CMFloat(?:?);
begin
 004CD97C    push        ebp
 004CD97D    mov         ebp,esp
 004CD97F    add         esp,0FFFFFFF4
 004CD982    mov         dword ptr [ebp-8],edx
 004CD985    mov         dword ptr [ebp-4],eax
 004CD988    mov         eax,dword ptr [ebp-4]
 004CD98B    mov         edx,dword ptr [eax]
 004CD98D    call        dword ptr [edx+54];TControl.sub_004CDEBC
 004CD990    test        al,al
>004CD992    je          004CD9A6
 004CD994    mov         eax,dword ptr [ebp-4]
 004CD997    cmp         dword ptr [eax+30],0;TControl.FParent:TWinControl
>004CD99B    je          004CD9A6
 004CD99D    push        ebp
 004CD99E    call        004CD8AC
 004CD9A3    pop         ecx
>004CD9A4    jmp         004CD9DD
 004CD9A6    mov         eax,dword ptr [ebp-8]
 004CD9A9    mov         eax,dword ptr [eax+8]
 004CD9AC    lea         edx,[eax+44]
 004CD9AF    mov         eax,dword ptr [ebp-4]
 004CD9B2    call        004CD81C
 004CD9B7    mov         dword ptr [ebp-0C],eax
 004CD9BA    cmp         dword ptr [ebp-0C],0
>004CD9BE    je          004CD9DD
 004CD9C0    mov         eax,dword ptr [ebp-8]
 004CD9C3    mov         eax,dword ptr [eax+8]
 004CD9C6    mov         edx,dword ptr [ebp-0C]
 004CD9C9    mov         dword ptr [eax+4],edx
 004CD9CC    mov         eax,dword ptr [ebp-0C]
 004CD9CF    call        TWinControl.GetHandle
 004CD9D4    mov         edx,dword ptr [ebp-8]
 004CD9D7    mov         edx,dword ptr [edx+8]
 004CD9DA    mov         dword ptr [edx+8],eax
 004CD9DD    mov         esp,ebp
 004CD9DF    pop         ebp
 004CD9E0    ret
end;*}

//004CD9E4
{*procedure TControl.sub_004CD9E4(?:?; ?:?);
begin
 004CD9E4    push        ebp
 004CD9E5    mov         ebp,esp
 004CD9E7    add         esp,0FFFFFFEC
 004CD9EA    push        ebx
 004CD9EB    xor         ebx,ebx
 004CD9ED    mov         dword ptr [ebp-10],ebx
 004CD9F0    mov         dword ptr [ebp-14],ebx
 004CD9F3    mov         byte ptr [ebp-9],cl
 004CD9F6    mov         dword ptr [ebp-8],edx
 004CD9F9    mov         dword ptr [ebp-4],eax
 004CD9FC    xor         eax,eax
 004CD9FE    push        ebp
 004CD9FF    push        4CDB0B
 004CDA04    push        dword ptr fs:[eax]
 004CDA07    mov         dword ptr fs:[eax],esp
 004CDA0A    mov         eax,dword ptr [ebp-8]
 004CDA0D    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004CDA13    call        @IsClass
 004CDA18    test        al,al
>004CDA1A    je          004CDAF0
 004CDA20    cmp         byte ptr [ebp-9],0
>004CDA24    je          004CDA52
 004CDA26    lea         edx,[ebp-10]
 004CDA29    mov         eax,dword ptr [ebp-4]
 004CDA2C    call        TControl.GetText
 004CDA31    cmp         dword ptr [ebp-10],0
>004CDA35    je          004CDA52
 004CDA37    lea         edx,[ebp-14]
 004CDA3A    mov         eax,dword ptr [ebp-4]
 004CDA3D    call        TControl.GetText
 004CDA42    mov         eax,dword ptr [ebp-14]
 004CDA45    mov         edx,dword ptr [ebp-4]
 004CDA48    mov         edx,dword ptr [edx+8];TControl.Name:TComponentName
 004CDA4B    call        @LStrCmp
>004CDA50    jne         004CDA60
 004CDA52    mov         eax,dword ptr [ebp-8]
 004CDA55    mov         edx,dword ptr [eax+64]
 004CDA58    mov         eax,dword ptr [ebp-4]
 004CDA5B    call        TControl.SetText
 004CDA60    cmp         byte ptr [ebp-9],0
>004CDA64    je          004CDA72
 004CDA66    mov         eax,dword ptr [ebp-4]
 004CDA69    mov         edx,dword ptr [eax]
 004CDA6B    call        dword ptr [edx+50];TImage.GetEnabled
 004CDA6E    cmp         al,1
>004CDA70    jne         004CDA80
 004CDA72    mov         eax,dword ptr [ebp-8]
 004CDA75    mov         dl,byte ptr [eax+6A]
 004CDA78    mov         eax,dword ptr [ebp-4]
 004CDA7B    mov         ecx,dword ptr [eax]
 004CDA7D    call        dword ptr [ecx+64];TImage.SetEnabled
 004CDA80    cmp         byte ptr [ebp-9],0
>004CDA84    je          004CDA92
 004CDA86    mov         eax,dword ptr [ebp-4]
 004CDA89    cmp         dword ptr [eax+80],0;TControl.Hint:String
>004CDA90    jne         004CDAA5
 004CDA92    mov         eax,dword ptr [ebp-4]
 004CDA95    add         eax,80;TControl.Hint:String
 004CDA9A    mov         edx,dword ptr [ebp-8]
 004CDA9D    mov         edx,dword ptr [edx+7C]
 004CDAA0    call        @LStrAsg
 004CDAA5    cmp         byte ptr [ebp-9],0
>004CDAA9    je          004CDAB4
 004CDAAB    mov         eax,dword ptr [ebp-4]
 004CDAAE    cmp         byte ptr [eax+57],1;TControl.FVisible:Boolean
>004CDAB2    jne         004CDAC5
 004CDAB4    mov         eax,dword ptr [ebp-8]
 004CDAB7    mov         dl,byte ptr [eax+86]
 004CDABD    mov         eax,dword ptr [ebp-4]
 004CDAC0    call        TControl.SetVisible
 004CDAC5    cmp         byte ptr [ebp-9],0
>004CDAC9    je          004CDAD8
 004CDACB    mov         eax,dword ptr [ebp-4]
 004CDACE    cmp         word ptr [eax+122],0;TControl.?f122:word
>004CDAD6    jne         004CDAF0
 004CDAD8    mov         eax,dword ptr [ebp-8]
 004CDADB    mov         edx,dword ptr [ebp-4]
 004CDADE    mov         ecx,dword ptr [eax+40]
 004CDAE1    mov         dword ptr [edx+120],ecx;TControl.FOnClick:TNotifyEvent
 004CDAE7    mov         ecx,dword ptr [eax+44]
 004CDAEA    mov         dword ptr [edx+124],ecx;TControl.?f124:TMessageForm
 004CDAF0    xor         eax,eax
 004CDAF2    pop         edx
 004CDAF3    pop         ecx
 004CDAF4    pop         ecx
 004CDAF5    mov         dword ptr fs:[eax],edx
 004CDAF8    push        4CDB12
 004CDAFD    lea         eax,[ebp-14]
 004CDB00    mov         edx,2
 004CDB05    call        @LStrArrayClr
 004CDB0A    ret
>004CDB0B    jmp         @HandleFinally
>004CDB10    jmp         004CDAFD
 004CDB12    pop         ebx
 004CDB13    mov         esp,ebp
 004CDB15    pop         ebp
 004CDB16    ret
end;*}

//004CDB18
{*procedure sub_004CDB18(?:?; ?:?);
begin
 004CDB18    push        ebp
 004CDB19    mov         ebp,esp
 004CDB1B    add         esp,0FFFFFFF8
 004CDB1E    push        esi
 004CDB1F    mov         dword ptr [ebp-8],edx
 004CDB22    mov         dword ptr [ebp-4],eax
 004CDB25    mov         eax,dword ptr [ebp-4]
 004CDB28    mov         edx,dword ptr [eax]
 004CDB2A    call        dword ptr [edx+3C]
 004CDB2D    cmp         eax,dword ptr [ebp-8]
>004CDB30    jne         004CDB43
 004CDB32    xor         ecx,ecx
 004CDB34    mov         edx,dword ptr [ebp-8]
 004CDB37    mov         eax,dword ptr [ebp-4]
 004CDB3A    mov         si,0FFEF
 004CDB3E    call        @CallDynaInst
 004CDB43    pop         esi
 004CDB44    pop         ecx
 004CDB45    pop         ecx
 004CDB46    pop         ebp
 004CDB47    ret
end;*}

//004CDB48
procedure TControl.sub_004CDB48;
begin
{*
 004CDB48    push        ebp
 004CDB49    mov         ebp,esp
 004CDB4B    add         esp,0FFFFFFF8
 004CDB4E    mov         dword ptr [ebp-4],eax
 004CDB51    mov         eax,[004C4C44];TControlActionLink
 004CDB56    mov         dword ptr [ebp-8],eax
 004CDB59    mov         eax,dword ptr [ebp-8]
 004CDB5C    pop         ecx
 004CDB5D    pop         ecx
 004CDB5E    pop         ebp
 004CDB5F    ret
*}
end;

//004CDB60
function TPanel.IsStoredCaption(Value:TCaption):Boolean;
begin
{*
 004CDB60    push        ebp
 004CDB61    mov         ebp,esp
 004CDB63    add         esp,0FFFFFFF8
 004CDB66    mov         dword ptr [ebp-4],eax
 004CDB69    mov         eax,dword ptr [ebp-4]
 004CDB6C    cmp         dword ptr [eax+6C],0;TPanel.FActionLink:TControlActionLink
>004CDB70    je          004CDB85
 004CDB72    mov         eax,dword ptr [ebp-4]
 004CDB75    mov         eax,dword ptr [eax+6C];TPanel.FActionLink:TControlActionLink
 004CDB78    mov         edx,dword ptr [eax]
 004CDB7A    call        dword ptr [edx+20];TControlActionLink.sub_004C96A4
 004CDB7D    test        al,al
>004CDB7F    je          004CDB85
 004CDB81    xor         eax,eax
>004CDB83    jmp         004CDB87
 004CDB85    mov         al,1
 004CDB87    mov         byte ptr [ebp-5],al
 004CDB8A    mov         al,byte ptr [ebp-5]
 004CDB8D    pop         ecx
 004CDB8E    pop         ecx
 004CDB8F    pop         ebp
 004CDB90    ret
*}
end;

//004CDB94
function TImage.IsStoredEnabled(Value:Boolean):Boolean;
begin
{*
 004CDB94    push        ebp
 004CDB95    mov         ebp,esp
 004CDB97    add         esp,0FFFFFFF8
 004CDB9A    mov         dword ptr [ebp-4],eax
 004CDB9D    mov         eax,dword ptr [ebp-4]
 004CDBA0    cmp         dword ptr [eax+6C],0;TImage.FActionLink:TControlActionLink
>004CDBA4    je          004CDBB9
 004CDBA6    mov         eax,dword ptr [ebp-4]
 004CDBA9    mov         eax,dword ptr [eax+6C];TImage.FActionLink:TControlActionLink
 004CDBAC    mov         edx,dword ptr [eax]
 004CDBAE    call        dword ptr [edx+28];TControlActionLink.sub_004C9728
 004CDBB1    test        al,al
>004CDBB3    je          004CDBB9
 004CDBB5    xor         eax,eax
>004CDBB7    jmp         004CDBBB
 004CDBB9    mov         al,1
 004CDBBB    mov         byte ptr [ebp-5],al
 004CDBBE    mov         al,byte ptr [ebp-5]
 004CDBC1    pop         ecx
 004CDBC2    pop         ecx
 004CDBC3    pop         ebp
 004CDBC4    ret
*}
end;

//004CDBC8
function TControl.IsStoredHint(Value:String):Boolean;
begin
{*
 004CDBC8    push        ebp
 004CDBC9    mov         ebp,esp
 004CDBCB    add         esp,0FFFFFFF8
 004CDBCE    mov         dword ptr [ebp-4],eax
 004CDBD1    mov         eax,dword ptr [ebp-4]
 004CDBD4    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>004CDBD8    je          004CDBED
 004CDBDA    mov         eax,dword ptr [ebp-4]
 004CDBDD    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 004CDBE0    mov         edx,dword ptr [eax]
 004CDBE2    call        dword ptr [edx+38];TControlActionLink.sub_004C9774
 004CDBE5    test        al,al
>004CDBE7    je          004CDBED
 004CDBE9    xor         eax,eax
>004CDBEB    jmp         004CDBEF
 004CDBED    mov         al,1
 004CDBEF    mov         byte ptr [ebp-5],al
 004CDBF2    mov         al,byte ptr [ebp-5]
 004CDBF5    pop         ecx
 004CDBF6    pop         ecx
 004CDBF7    pop         ebp
 004CDBF8    ret
*}
end;

//004CDBFC
function TControl.IsStoredHelpKeyword(Value:String):Boolean;
begin
{*
 004CDBFC    push        ebp
 004CDBFD    mov         ebp,esp
 004CDBFF    add         esp,0FFFFFFF8
 004CDC02    mov         dword ptr [ebp-4],eax
 004CDC05    mov         eax,dword ptr [ebp-4]
 004CDC08    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>004CDC0C    je          004CDC21
 004CDC0E    mov         eax,dword ptr [ebp-4]
 004CDC11    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 004CDC14    mov         edx,dword ptr [eax]
 004CDC16    call        dword ptr [edx+30];TControlActionLink.sub_004DB268
 004CDC19    test        al,al
>004CDC1B    je          004CDC21
 004CDC1D    xor         eax,eax
>004CDC1F    jmp         004CDC23
 004CDC21    mov         al,1
 004CDC23    mov         byte ptr [ebp-5],al
 004CDC26    mov         al,byte ptr [ebp-5]
 004CDC29    pop         ecx
 004CDC2A    pop         ecx
 004CDC2B    pop         ebp
 004CDC2C    ret
*}
end;

//004CDC30
function TImage.IsStoredVisible(Value:Boolean):Boolean;
begin
{*
 004CDC30    push        ebp
 004CDC31    mov         ebp,esp
 004CDC33    add         esp,0FFFFFFF8
 004CDC36    mov         dword ptr [ebp-4],eax
 004CDC39    mov         eax,dword ptr [ebp-4]
 004CDC3C    cmp         dword ptr [eax+6C],0;TImage.FActionLink:TControlActionLink
>004CDC40    je          004CDC55
 004CDC42    mov         eax,dword ptr [ebp-4]
 004CDC45    mov         eax,dword ptr [eax+6C];TImage.FActionLink:TControlActionLink
 004CDC48    mov         edx,dword ptr [eax]
 004CDC4A    call        dword ptr [edx+44];TControlActionLink.sub_004C97C0
 004CDC4D    test        al,al
>004CDC4F    je          004CDC55
 004CDC51    xor         eax,eax
>004CDC53    jmp         004CDC57
 004CDC55    mov         al,1
 004CDC57    mov         byte ptr [ebp-5],al
 004CDC5A    mov         al,byte ptr [ebp-5]
 004CDC5D    pop         ecx
 004CDC5E    pop         ecx
 004CDC5F    pop         ebp
 004CDC60    ret
*}
end;

//004CDC64
function TImage.IsStoredOnClick(Value:TNotifyEvent):Boolean;
begin
{*
 004CDC64    push        ebp
 004CDC65    mov         ebp,esp
 004CDC67    add         esp,0FFFFFFF8
 004CDC6A    mov         dword ptr [ebp-4],eax
 004CDC6D    mov         eax,dword ptr [ebp-4]
 004CDC70    cmp         dword ptr [eax+6C],0;TImage.FActionLink:TControlActionLink
>004CDC74    je          004CDC89
 004CDC76    mov         eax,dword ptr [ebp-4]
 004CDC79    mov         eax,dword ptr [eax+6C];TImage.FActionLink:TControlActionLink
 004CDC7C    mov         edx,dword ptr [eax]
 004CDC7E    call        dword ptr [edx+8];TControlActionLink.sub_004C9808
 004CDC81    test        al,al
>004CDC83    je          004CDC89
 004CDC85    xor         eax,eax
>004CDC87    jmp         004CDC8B
 004CDC89    mov         al,1
 004CDC8B    mov         byte ptr [ebp-5],al
 004CDC8E    mov         al,byte ptr [ebp-5]
 004CDC91    pop         ecx
 004CDC92    pop         ecx
 004CDC93    pop         ebp
 004CDC94    ret
*}
end;

//004CDC98
procedure TControl.Loaded;
begin
{*
 004CDC98    push        ebp
 004CDC99    mov         ebp,esp
 004CDC9B    push        ecx
 004CDC9C    push        esi
 004CDC9D    mov         dword ptr [ebp-4],eax
 004CDCA0    mov         eax,dword ptr [ebp-4]
 004CDCA3    call        004835C0
 004CDCA8    mov         eax,dword ptr [ebp-4]
 004CDCAB    mov         edx,dword ptr [eax]
 004CDCAD    call        dword ptr [edx+3C]
 004CDCB0    test        eax,eax
>004CDCB2    je          004CDCCC
 004CDCB4    mov         eax,dword ptr [ebp-4]
 004CDCB7    mov         edx,dword ptr [eax]
 004CDCB9    call        dword ptr [edx+3C]
 004CDCBC    mov         edx,eax
 004CDCBE    mov         cl,1
 004CDCC0    mov         eax,dword ptr [ebp-4]
 004CDCC3    mov         si,0FFEF
 004CDCC7    call        @CallDynaInst
 004CDCCC    mov         eax,dword ptr [ebp-4]
 004CDCCF    call        004CA1E0
 004CDCD4    pop         esi
 004CDCD5    pop         ecx
 004CDCD6    pop         ebp
 004CDCD7    ret
*}
end;

//004CDCD8
{*procedure sub_004CDCD8(?:?);
begin
 004CDCD8    push        ebp
 004CDCD9    mov         ebp,esp
 004CDCDB    add         esp,0FFFFFFF4
 004CDCDE    xor         ecx,ecx
 004CDCE0    mov         dword ptr [ebp-0C],ecx
 004CDCE3    mov         dword ptr [ebp-8],edx
 004CDCE6    mov         dword ptr [ebp-4],eax
 004CDCE9    xor         eax,eax
 004CDCEB    push        ebp
 004CDCEC    push        4CDD8A
 004CDCF1    push        dword ptr fs:[eax]
 004CDCF4    mov         dword ptr fs:[eax],esp
 004CDCF7    mov         eax,dword ptr [ebp-8]
 004CDCFA    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004CDD00    call        @IsClass
 004CDD05    test        al,al
>004CDD07    je          004CDD69
 004CDD09    mov         eax,dword ptr [ebp-4]
 004CDD0C    mov         edx,dword ptr [eax]
 004CDD0E    call        dword ptr [edx+50];TImage.GetEnabled
 004CDD11    mov         edx,eax
 004CDD13    mov         eax,dword ptr [ebp-8]
 004CDD16    call        TVirtualListAction.SetEnabled
 004CDD1B    mov         eax,dword ptr [ebp-4]
 004CDD1E    mov         edx,dword ptr [eax+80];TControl.Hint:String
 004CDD24    mov         eax,dword ptr [ebp-8]
 004CDD27    call        TVirtualListAction.SetHint
 004CDD2C    lea         edx,[ebp-0C]
 004CDD2F    mov         eax,dword ptr [ebp-4]
 004CDD32    call        TControl.GetText
 004CDD37    mov         edx,dword ptr [ebp-0C]
 004CDD3A    mov         eax,dword ptr [ebp-8]
 004CDD3D    call        TVirtualListAction.SetCaption
 004CDD42    mov         eax,dword ptr [ebp-4]
 004CDD45    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 004CDD48    mov         eax,dword ptr [ebp-8]
 004CDD4B    call        TVirtualListAction.SetVisible
 004CDD50    mov         eax,dword ptr [ebp-4]
 004CDD53    push        dword ptr [eax+124];TControl.?f124:TMessageForm
 004CDD59    push        dword ptr [eax+120];TControl.FOnClick:TNotifyEvent
 004CDD5F    mov         eax,dword ptr [ebp-8]
 004CDD62    mov         edx,dword ptr [eax]
 004CDD64    call        dword ptr [edx+34]
>004CDD67    jmp         004CDD74
 004CDD69    mov         edx,dword ptr [ebp-8]
 004CDD6C    mov         eax,dword ptr [ebp-4]
 004CDD6F    call        004791AC
 004CDD74    xor         eax,eax
 004CDD76    pop         edx
 004CDD77    pop         ecx
 004CDD78    pop         ecx
 004CDD79    mov         dword ptr fs:[eax],edx
 004CDD7C    push        4CDD91
 004CDD81    lea         eax,[ebp-0C]
 004CDD84    call        @LStrClr
 004CDD89    ret
>004CDD8A    jmp         @HandleFinally
>004CDD8F    jmp         004CDD81
 004CDD91    mov         esp,ebp
 004CDD93    pop         ebp
 004CDD94    ret
end;*}

//004CDD98
{*function sub_004CDD98(?:Double; ?:?):?;
begin
 004CDD98    push        ebp
 004CDD99    mov         ebp,esp
 004CDD9B    add         esp,0FFFFFFEC
 004CDD9E    mov         dword ptr [ebp-8],edx
 004CDDA1    mov         dword ptr [ebp-4],eax
 004CDDA4    xor         eax,eax
 004CDDA6    mov         dword ptr [ebp-0C],eax
 004CDDA9    mov         eax,dword ptr [ebp-8]
 004CDDAC    test        eax,eax
>004CDDAE    jle         004CDDDF
 004CDDB0    mov         dword ptr [ebp-14],eax
 004CDDB3    mov         dword ptr [ebp-10],1
 004CDDBA    mov         eax,dword ptr [ebp-4]
 004CDDBD    mov         edx,dword ptr [ebp-10]
 004CDDC0    fld         qword ptr [eax+edx*8]
 004CDDC3    mov         eax,dword ptr [ebp-4]
 004CDDC6    mov         edx,dword ptr [ebp-0C]
 004CDDC9    fcomp       qword ptr [eax+edx*8]
 004CDDCC    fnstsw      al
 004CDDCE    sahf
>004CDDCF    jae         004CDDD7
 004CDDD1    mov         eax,dword ptr [ebp-10]
 004CDDD4    mov         dword ptr [ebp-0C],eax
 004CDDD7    inc         dword ptr [ebp-10]
 004CDDDA    dec         dword ptr [ebp-14]
>004CDDDD    jne         004CDDBA
 004CDDDF    mov         eax,dword ptr [ebp-0C]
 004CDDE2    mov         esp,ebp
 004CDDE4    pop         ebp
 004CDDE5    ret
end;*}

//004CDDE8
{*procedure TControl.sub_004CDDE8(?:?);
begin
 004CDDE8    push        ebp
 004CDDE9    mov         ebp,esp
 004CDDEB    add         esp,0FFFFFFC0
 004CDDEE    push        esi
 004CDDEF    push        edi
 004CDDF0    mov         esi,edx
 004CDDF2    lea         edi,[ebp-0C]
 004CDDF5    movs        dword ptr [edi],dword ptr [esi]
 004CDDF6    movs        dword ptr [edi],dword ptr [esi]
 004CDDF7    mov         dword ptr [ebp-4],eax
 004CDDFA    mov         byte ptr [ebp-0D],0
 004CDDFE    mov         eax,dword ptr [ebp-4]
 004CDE01    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CDE04    mov         dword ptr [ebp-20],eax
 004CDE07    mov         eax,dword ptr [ebp-4]
 004CDE0A    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CDE0D    mov         dword ptr [ebp-1C],eax
 004CDE10    cmp         dword ptr [ebp-0C],0
>004CDE14    jg          004CDE1F
 004CDE16    mov         byte ptr [ebp-0D],3
>004CDE1A    jmp         004CDEB2
 004CDE1F    mov         eax,dword ptr [ebp-0C]
 004CDE22    cmp         eax,dword ptr [ebp-20]
>004CDE25    jl          004CDE30
 004CDE27    mov         byte ptr [ebp-0D],4
>004CDE2B    jmp         004CDEB2
 004CDE30    cmp         dword ptr [ebp-8],0
>004CDE34    jg          004CDE3C
 004CDE36    mov         byte ptr [ebp-0D],1
>004CDE3A    jmp         004CDEB2
 004CDE3C    mov         eax,dword ptr [ebp-8]
 004CDE3F    cmp         eax,dword ptr [ebp-1C]
>004CDE42    jl          004CDE4A
 004CDE44    mov         byte ptr [ebp-0D],2
>004CDE48    jmp         004CDEB2
 004CDE4A    mov         eax,dword ptr [ebp-8]
 004CDE4D    mov         dword ptr [ebp-14],eax
 004CDE50    mov         eax,dword ptr [ebp-8]
 004CDE53    sub         dword ptr [ebp-1C],eax
 004CDE56    mov         eax,dword ptr [ebp-0C]
 004CDE59    mov         dword ptr [ebp-18],eax
 004CDE5C    mov         eax,dword ptr [ebp-0C]
 004CDE5F    sub         dword ptr [ebp-20],eax
 004CDE62    push        ebp
 004CDE63    fild        dword ptr [ebp-18]
 004CDE66    fstp        qword ptr [ebp-40]
 004CDE69    wait
 004CDE6A    fild        dword ptr [ebp-20]
 004CDE6D    fstp        qword ptr [ebp-38]
 004CDE70    wait
 004CDE71    fild        dword ptr [ebp-14]
 004CDE74    fstp        qword ptr [ebp-30]
 004CDE77    wait
 004CDE78    fild        dword ptr [ebp-1C]
 004CDE7B    fstp        qword ptr [ebp-28]
 004CDE7E    wait
 004CDE7F    lea         eax,[ebp-40]
 004CDE82    mov         edx,3
 004CDE87    call        004CDD98
 004CDE8C    pop         ecx
 004CDE8D    sub         eax,1
>004CDE90    jb          004CDE9C
>004CDE92    je          004CDEA2
 004CDE94    dec         eax
>004CDE95    je          004CDEA8
 004CDE97    dec         eax
>004CDE98    je          004CDEAE
>004CDE9A    jmp         004CDEB2
 004CDE9C    mov         byte ptr [ebp-0D],3
>004CDEA0    jmp         004CDEB2
 004CDEA2    mov         byte ptr [ebp-0D],4
>004CDEA6    jmp         004CDEB2
 004CDEA8    mov         byte ptr [ebp-0D],1
>004CDEAC    jmp         004CDEB2
 004CDEAE    mov         byte ptr [ebp-0D],2
 004CDEB2    mov         al,byte ptr [ebp-0D]
 004CDEB5    pop         edi
 004CDEB6    pop         esi
 004CDEB7    mov         esp,ebp
 004CDEB9    pop         ebp
 004CDEBA    ret
end;*}

//004CDEBC
{*function sub_004CDEBC:?;
begin
 004CDEBC    push        ebp
 004CDEBD    mov         ebp,esp
 004CDEBF    add         esp,0FFFFFFF8
 004CDEC2    mov         dword ptr [ebp-4],eax
 004CDEC5    mov         eax,dword ptr [ebp-4]
 004CDEC8    cmp         dword ptr [eax+0A0],0;TControl.FHostDockSite:TWinControl
>004CDECF    je          004CDEED
 004CDED1    mov         eax,dword ptr [ebp-4]
 004CDED4    mov         edx,dword ptr [eax]
 004CDED6    call        dword ptr [edx+58];TControl.sub_004CDF00
 004CDED9    mov         edx,eax
 004CDEDB    mov         eax,dword ptr [ebp-4]
 004CDEDE    mov         eax,dword ptr [eax+0A0];TControl.FHostDockSite:TWinControl
 004CDEE4    call        @IsClass
 004CDEE9    test        al,al
>004CDEEB    jne         004CDEF1
 004CDEED    xor         eax,eax
>004CDEEF    jmp         004CDEF3
 004CDEF1    mov         al,1
 004CDEF3    mov         byte ptr [ebp-5],al
 004CDEF6    mov         al,byte ptr [ebp-5]
 004CDEF9    pop         ecx
 004CDEFA    pop         ecx
 004CDEFB    pop         ebp
 004CDEFC    ret
end;*}

//004CDF00
{*function sub_004CDF00:?;
begin
 004CDF00    push        ebp
 004CDF01    mov         ebp,esp
 004CDF03    add         esp,0FFFFFFF8
 004CDF06    mov         dword ptr [ebp-4],eax
 004CDF09    mov         eax,dword ptr [ebp-4]
 004CDF0C    mov         eax,dword ptr [eax+0B8];TControl.FFloatingDockSiteClass:TWinControlClass
 004CDF12    mov         dword ptr [ebp-8],eax
 004CDF15    mov         eax,dword ptr [ebp-8]
 004CDF18    pop         ecx
 004CDF19    pop         ecx
 004CDF1A    pop         ebp
 004CDF1B    ret
end;*}

//004CDF1C
procedure TControl.sub_004CDF1C;
begin
{*
 004CDF1C    push        ebp
 004CDF1D    mov         ebp,esp
 004CDF1F    push        ecx
 004CDF20    push        ebx
 004CDF21    mov         dword ptr [ebp-4],eax
 004CDF24    mov         eax,dword ptr [ebp-4]
 004CDF27    test        byte ptr [eax+1C],1;TControl.FComponentState:TComponentState
>004CDF2B    jne         004CDF52
 004CDF2D    mov         eax,dword ptr [ebp-4]
 004CDF30    mov         eax,dword ptr [eax+48];TControl.Width:Integer
 004CDF33    push        eax
 004CDF34    mov         eax,dword ptr [ebp-4]
 004CDF37    mov         eax,dword ptr [eax+4C];TControl.Height:Integer
 004CDF3A    push        eax
 004CDF3B    mov         eax,dword ptr [ebp-4]
 004CDF3E    mov         ecx,dword ptr [eax+44];TControl.Top:Integer
 004CDF41    mov         eax,dword ptr [ebp-4]
 004CDF44    mov         edx,dword ptr [eax+40];TControl.Left:Integer
 004CDF47    mov         eax,dword ptr [ebp-4]
 004CDF4A    mov         ebx,dword ptr [eax]
 004CDF4C    call        dword ptr [ebx+84];TControl.sub_004CA110
 004CDF52    pop         ebx
 004CDF53    pop         ecx
 004CDF54    pop         ebp
 004CDF55    ret
*}
end;

//004CDF58
{*function sub_004CDF58(?:TControl; ?:?):?;
begin
 004CDF58    push        ebp
 004CDF59    mov         ebp,esp
 004CDF5B    add         esp,0FFFFFFF4
 004CDF5E    push        esi
 004CDF5F    mov         dword ptr [ebp-8],edx
 004CDF62    mov         dword ptr [ebp-4],eax
 004CDF65    mov         eax,dword ptr [ebp-8]
 004CDF68    mov         dword ptr [ebp-0C],eax
 004CDF6B    mov         eax,dword ptr [ebp-4]
 004CDF6E    mov         si,0FFC8
 004CDF72    call        @CallDynaInst;TControl.sub_004CB93C
 004CDF77    test        al,al
>004CDF79    je          004CDF99
 004CDF7B    mov         eax,dword ptr [ebp-0C]
 004CDF7E    and         eax,2
 004CDF81    cmp         eax,2
>004CDF84    jne         004CDF8C
 004CDF86    and         dword ptr [ebp-0C],0FFFFFFFD
>004CDF8A    jmp         004CDF99
 004CDF8C    mov         eax,dword ptr [ebp-0C]
 004CDF8F    and         eax,1
 004CDF92    dec         eax
>004CDF93    je          004CDF99
 004CDF95    or          dword ptr [ebp-0C],2
 004CDF99    mov         eax,dword ptr [ebp-4]
 004CDF9C    call        004CDFAC
 004CDFA1    or          dword ptr [ebp-0C],eax
 004CDFA4    mov         eax,dword ptr [ebp-0C]
 004CDFA7    pop         esi
 004CDFA8    mov         esp,ebp
 004CDFAA    pop         ebp
 004CDFAB    ret
end;*}

//004CDFAC
{*function sub_004CDFAC(?:TControl):?;
begin
 004CDFAC    push        ebp
 004CDFAD    mov         ebp,esp
 004CDFAF    add         esp,0FFFFFFF8
 004CDFB2    mov         dword ptr [ebp-4],eax
 004CDFB5    mov         eax,dword ptr [ebp-4]
 004CDFB8    call        004CB90C
 004CDFBD    test        al,al
>004CDFBF    je          004CDFCA
 004CDFC1    mov         dword ptr [ebp-8],20000
>004CDFC8    jmp         004CDFCF
 004CDFCA    xor         eax,eax
 004CDFCC    mov         dword ptr [ebp-8],eax
 004CDFCF    mov         eax,dword ptr [ebp-8]
 004CDFD2    pop         ecx
 004CDFD3    pop         ecx
 004CDFD4    pop         ebp
 004CDFD5    ret
end;*}

//004CDFD8
procedure sub_004CDFD8;
begin
{*
 004CDFD8    push        ebp
 004CDFD9    mov         ebp,esp
 004CDFDB    push        ecx
 004CDFDC    mov         dword ptr [ebp-4],eax
 004CDFDF    mov         eax,dword ptr [ebp-4]
 004CDFE2    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>004CDFE6    je          004CDFF3
 004CDFE8    mov         eax,dword ptr [ebp-4]
 004CDFEB    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 004CDFEE    mov         edx,dword ptr [eax]
 004CDFF0    call        dword ptr [edx+1C];TControlActionLink.sub_00483D14
 004CDFF3    pop         ecx
 004CDFF4    pop         ebp
 004CDFF5    ret
*}
end;

//004CDFF8
{*procedure TControl.CMHintShow(?:?);
begin
 004CDFF8    push        ebp
 004CDFF9    mov         ebp,esp
 004CDFFB    add         esp,0FFFFFFF8
 004CDFFE    mov         dword ptr [ebp-8],edx
 004CE001    mov         dword ptr [ebp-4],eax
 004CE004    mov         eax,dword ptr [ebp-4]
 004CE007    cmp         dword ptr [eax+6C],0;TControl.FActionLink:TControlActionLink
>004CE00B    je          004CE02F
 004CE00D    mov         eax,dword ptr [ebp-8]
 004CE010    mov         eax,dword ptr [eax+8]
 004CE013    lea         edx,[eax+38]
 004CE016    mov         eax,dword ptr [ebp-4]
 004CE019    mov         eax,dword ptr [eax+6C];TControl.FActionLink:TControlActionLink
 004CE01C    mov         ecx,dword ptr [eax]
 004CE01E    call        dword ptr [ecx+78];TControlActionLink.sub_004C95A0
 004CE021    test        al,al
>004CE023    jne         004CE02F
 004CE025    mov         eax,dword ptr [ebp-8]
 004CE028    mov         dword ptr [eax+0C],1
 004CE02F    pop         ecx
 004CE030    pop         ecx
 004CE031    pop         ebp
 004CE032    ret
end;*}

//004CE034
{*procedure TControl.WMContextMenu(?:?);
begin
 004CE034    push        ebp
 004CE035    mov         ebp,esp
 004CE037    add         esp,0FFFFFFC8
 004CE03A    push        ebx
 004CE03B    push        esi
 004CE03C    mov         dword ptr [ebp-8],edx
 004CE03F    mov         dword ptr [ebp-4],eax
 004CE042    mov         eax,dword ptr [ebp-8]
 004CE045    cmp         dword ptr [eax+0C],0
>004CE049    jne         004CE17A
 004CE04F    mov         eax,dword ptr [ebp-4]
 004CE052    test        byte ptr [eax+1C],10;TControl.FComponentState:TComponentState
>004CE056    je          004CE068
 004CE058    mov         edx,dword ptr [ebp-8]
 004CE05B    mov         eax,dword ptr [ebp-4]
 004CE05E    mov         ecx,dword ptr [eax]
 004CE060    call        dword ptr [ecx-10];TControl.DefaultHandler
>004CE063    jmp         004CE17A
 004CE068    lea         edx,[ebp-10]
 004CE06B    mov         eax,dword ptr [ebp-8]
 004CE06E    mov         eax,dword ptr [eax+8]
 004CE071    call        00408250
 004CE076    lea         eax,[ebp-10]
 004CE079    call        00476D40
 004CE07E    test        al,al
>004CE080    je          004CE090
 004CE082    mov         eax,dword ptr [ebp-10]
 004CE085    mov         dword ptr [ebp-18],eax
 004CE088    mov         eax,dword ptr [ebp-0C]
 004CE08B    mov         dword ptr [ebp-14],eax
>004CE08E    jmp         004CE0CC
 004CE090    lea         ecx,[ebp-18]
 004CE093    lea         edx,[ebp-10]
 004CE096    mov         eax,dword ptr [ebp-4]
 004CE099    call        TControl.ScreenToClient
 004CE09E    push        dword ptr [ebp-14]
 004CE0A1    push        dword ptr [ebp-18]
 004CE0A4    lea         edx,[ebp-30]
 004CE0A7    mov         eax,dword ptr [ebp-4]
 004CE0AA    mov         ecx,dword ptr [eax]
 004CE0AC    call        dword ptr [ecx+44];TControl.sub_004CA73C
 004CE0AF    lea         eax,[ebp-30]
 004CE0B2    push        eax
 004CE0B3    call        user32.PtInRect
 004CE0B8    test        eax,eax
>004CE0BA    jne         004CE0CC
 004CE0BC    mov         edx,dword ptr [ebp-8]
 004CE0BF    mov         eax,dword ptr [ebp-4]
 004CE0C2    mov         ecx,dword ptr [eax]
 004CE0C4    call        dword ptr [ecx-10];TControl.DefaultHandler
>004CE0C7    jmp         004CE17A
 004CE0CC    mov         byte ptr [ebp-19],0
 004CE0D0    lea         ecx,[ebp-19]
 004CE0D3    lea         edx,[ebp-18]
 004CE0D6    mov         eax,dword ptr [ebp-4]
 004CE0D9    mov         si,0FFE6
 004CE0DD    call        @CallDynaInst;TControl.sub_004CE180
 004CE0E2    xor         eax,eax
 004CE0E4    mov         al,byte ptr [ebp-19]
 004CE0E7    mov         edx,dword ptr [ebp-8]
 004CE0EA    mov         dword ptr [edx+0C],eax
 004CE0ED    cmp         byte ptr [ebp-19],0
>004CE0F1    jne         004CE17A
 004CE0F7    mov         eax,dword ptr [ebp-4]
 004CE0FA    mov         si,0FFD6
 004CE0FE    call        @CallDynaInst;TControl.sub_004CCF44
 004CE103    mov         dword ptr [ebp-20],eax
 004CE106    cmp         dword ptr [ebp-20],0
>004CE10A    je          004CE166
 004CE10C    mov         eax,dword ptr [ebp-20]
 004CE10F    cmp         byte ptr [eax+61],0
>004CE113    je          004CE166
 004CE115    xor         edx,edx
 004CE117    mov         eax,dword ptr [ebp-4]
 004CE11A    call        004CA938
 004CE11F    mov         eax,dword ptr [ebp-20]
 004CE122    mov         edx,dword ptr [ebp-4]
 004CE125    mov         dword ptr [eax+64],edx
 004CE128    lea         eax,[ebp-10]
 004CE12B    call        00476D40
 004CE130    test        al,al
>004CE132    je          004CE14E
 004CE134    lea         ecx,[ebp-38]
 004CE137    xor         edx,edx
 004CE139    xor         eax,eax
 004CE13B    call        Point
 004CE140    lea         edx,[ebp-38]
 004CE143    lea         ecx,[ebp-10]
 004CE146    mov         eax,dword ptr [ebp-4]
 004CE149    call        TControl.ClientToScreen
 004CE14E    mov         ecx,dword ptr [ebp-0C]
 004CE151    mov         edx,dword ptr [ebp-10]
 004CE154    mov         eax,dword ptr [ebp-20]
 004CE157    mov         ebx,dword ptr [eax]
 004CE159    call        dword ptr [ebx+40]
 004CE15C    mov         eax,dword ptr [ebp-8]
 004CE15F    mov         dword ptr [eax+0C],1
 004CE166    mov         eax,dword ptr [ebp-8]
 004CE169    cmp         dword ptr [eax+0C],0
>004CE16D    jne         004CE17A
 004CE16F    mov         edx,dword ptr [ebp-8]
 004CE172    mov         eax,dword ptr [ebp-4]
 004CE175    mov         ecx,dword ptr [eax]
 004CE177    call        dword ptr [ecx-10];TControl.DefaultHandler
 004CE17A    pop         esi
 004CE17B    pop         ebx
 004CE17C    mov         esp,ebp
 004CE17E    pop         ebp
 004CE17F    ret
end;*}

//004CE180
{*procedure TControl.sub_004CE180(?:?; ?:?);
begin
 004CE180    push        ebp
 004CE181    mov         ebp,esp
 004CE183    add         esp,0FFFFFFF0
 004CE186    push        ebx
 004CE187    push        esi
 004CE188    push        edi
 004CE189    mov         esi,edx
 004CE18B    lea         edi,[ebp-0C]
 004CE18E    movs        dword ptr [edi],dword ptr [esi]
 004CE18F    movs        dword ptr [edi],dword ptr [esi]
 004CE190    mov         dword ptr [ebp-10],ecx
 004CE193    mov         dword ptr [ebp-4],eax
 004CE196    mov         eax,dword ptr [ebp-4]
 004CE199    cmp         word ptr [eax+132],0;TControl.?f132:word
>004CE1A1    je          004CE1BC
 004CE1A3    mov         eax,dword ptr [ebp-10]
 004CE1A6    push        eax
 004CE1A7    mov         ebx,dword ptr [ebp-4]
 004CE1AA    lea         ecx,[ebp-0C]
 004CE1AD    mov         edx,dword ptr [ebp-4]
 004CE1B0    mov         eax,dword ptr [ebx+134];TControl.?f134:dword
 004CE1B6    call        dword ptr [ebx+130];TControl.FOnContextPopup
 004CE1BC    pop         edi
 004CE1BD    pop         esi
 004CE1BE    pop         ebx
 004CE1BF    mov         esp,ebp
 004CE1C1    pop         ebp
 004CE1C2    ret
end;*}

//004CE1C4
procedure TImage.SetConstraints(Value:TSizeConstraints);
begin
{*
 004CE1C4    push        ebp
 004CE1C5    mov         ebp,esp
 004CE1C7    add         esp,0FFFFFFF8
 004CE1CA    mov         dword ptr [ebp-8],edx
 004CE1CD    mov         dword ptr [ebp-4],eax
 004CE1D0    mov         edx,dword ptr [ebp-8]
 004CE1D3    mov         eax,dword ptr [ebp-4]
 004CE1D6    mov         eax,dword ptr [eax+74];TImage.FConstraints:TSizeConstraints
 004CE1D9    mov         ecx,dword ptr [eax]
 004CE1DB    call        dword ptr [ecx+8];TSizeConstraints.sub_004790A8
 004CE1DE    pop         ecx
 004CE1DF    pop         ecx
 004CE1E0    pop         ebp
 004CE1E1    ret
*}
end;

//004CE1E4
{*procedure sub_004CE1E4(?:TCustomStatusBar; ?:?; ?:?; ?:?);
begin
 004CE1E4    push        ebp
 004CE1E5    mov         ebp,esp
 004CE1E7    add         esp,0FFFFFFE0
 004CE1EA    push        ebx
 004CE1EB    xor         ebx,ebx
 004CE1ED    mov         dword ptr [ebp-20],ebx
 004CE1F0    mov         dword ptr [ebp-1C],ebx
 004CE1F3    mov         dword ptr [ebp-0C],ecx
 004CE1F6    mov         dword ptr [ebp-8],edx
 004CE1F9    mov         dword ptr [ebp-4],eax
 004CE1FC    xor         eax,eax
 004CE1FE    push        ebp
 004CE1FF    push        4CE315
 004CE204    push        dword ptr fs:[eax]
 004CE207    mov         dword ptr fs:[eax],esp
 004CE20A    cmp         dword ptr [ebp-0C],0
>004CE20E    jne         004CE219
 004CE210    mov         eax,dword ptr [ebp-4]
 004CE213    mov         eax,dword ptr [eax+30];TCustomStatusBar.FParent:TWinControl
 004CE216    mov         dword ptr [ebp-0C],eax
 004CE219    cmp         dword ptr [ebp-0C],0
>004CE21D    jne         004CE253
 004CE21F    mov         eax,dword ptr [ebp-4]
 004CE222    mov         eax,dword ptr [eax+8];TCustomStatusBar.Name:TComponentName
 004CE225    mov         dword ptr [ebp-18],eax
 004CE228    mov         byte ptr [ebp-14],0B
 004CE22C    lea         eax,[ebp-18]
 004CE22F    push        eax
 004CE230    push        0
 004CE232    lea         edx,[ebp-1C]
 004CE235    mov         eax,[0055B530];^SParentRequired:TResStringRec
 004CE23A    call        LoadResString
 004CE23F    mov         ecx,dword ptr [ebp-1C]
 004CE242    mov         dl,1
 004CE244    mov         eax,[00475960];EInvalidOperation
 004CE249    call        Exception.CreateFmt;EInvalidOperation.Create
 004CE24E    call        @RaiseExcept
 004CE253    mov         eax,dword ptr [ebp+8]
 004CE256    mov         edx,dword ptr [ebp-8]
 004CE259    mov         ecx,dword ptr [edx]
 004CE25B    mov         dword ptr [eax],ecx
 004CE25D    mov         ecx,dword ptr [edx+4]
 004CE260    mov         dword ptr [eax+4],ecx
 004CE263    mov         eax,dword ptr [ebp-4]
 004CE266    mov         eax,dword ptr [eax+40];TCustomStatusBar.Left:Integer
 004CE269    mov         edx,dword ptr [ebp+8]
 004CE26C    add         dword ptr [edx],eax
 004CE26E    mov         eax,dword ptr [ebp-4]
 004CE271    mov         eax,dword ptr [eax+44];TCustomStatusBar.Top:Integer
 004CE274    mov         edx,dword ptr [ebp+8]
 004CE277    add         dword ptr [edx+4],eax
 004CE27A    mov         eax,dword ptr [ebp-4]
 004CE27D    mov         eax,dword ptr [eax+30];TCustomStatusBar.FParent:TWinControl
 004CE280    mov         dword ptr [ebp-10],eax
 004CE283    cmp         dword ptr [ebp-10],0
>004CE287    je          004CE2C0
 004CE289    mov         eax,dword ptr [ebp-10]
 004CE28C    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004CE290    je          004CE2A9
 004CE292    mov         eax,dword ptr [ebp+8]
 004CE295    mov         edx,dword ptr [ebp-10]
 004CE298    mov         edx,dword ptr [edx+40];TWinControl.Left:Integer
 004CE29B    add         dword ptr [eax],edx
 004CE29D    mov         eax,dword ptr [ebp+8]
 004CE2A0    mov         edx,dword ptr [ebp-10]
 004CE2A3    mov         edx,dword ptr [edx+44];TWinControl.Top:Integer
 004CE2A6    add         dword ptr [eax+4],edx
 004CE2A9    mov         eax,dword ptr [ebp-10]
 004CE2AC    cmp         eax,dword ptr [ebp-0C]
>004CE2AF    je          004CE2C0
 004CE2B1    mov         eax,dword ptr [ebp-10]
 004CE2B4    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004CE2B7    mov         dword ptr [ebp-10],eax
 004CE2BA    cmp         dword ptr [ebp-10],0
>004CE2BE    jne         004CE289
 004CE2C0    cmp         dword ptr [ebp-10],0
>004CE2C4    jne         004CE2FA
 004CE2C6    mov         eax,dword ptr [ebp-4]
 004CE2C9    mov         eax,dword ptr [eax+8];TCustomStatusBar.Name:TComponentName
 004CE2CC    mov         dword ptr [ebp-18],eax
 004CE2CF    mov         byte ptr [ebp-14],0B
 004CE2D3    lea         eax,[ebp-18]
 004CE2D6    push        eax
 004CE2D7    push        0
 004CE2D9    lea         edx,[ebp-20]
 004CE2DC    mov         eax,[0055B33C];^SParentGivenNotAParent:TResStringRec
 004CE2E1    call        LoadResString
 004CE2E6    mov         ecx,dword ptr [ebp-20]
 004CE2E9    mov         dl,1
 004CE2EB    mov         eax,[00475960];EInvalidOperation
 004CE2F0    call        Exception.CreateFmt;EInvalidOperation.Create
 004CE2F5    call        @RaiseExcept
 004CE2FA    xor         eax,eax
 004CE2FC    pop         edx
 004CE2FD    pop         ecx
 004CE2FE    pop         ecx
 004CE2FF    mov         dword ptr fs:[eax],edx
 004CE302    push        4CE31C
 004CE307    lea         eax,[ebp-20]
 004CE30A    mov         edx,2
 004CE30F    call        @LStrArrayClr
 004CE314    ret
>004CE315    jmp         @HandleFinally
>004CE31A    jmp         004CE307
 004CE31C    pop         ebx
 004CE31D    mov         esp,ebp
 004CE31F    pop         ebp
 004CE320    ret         4
end;*}

//004CE324
{*procedure sub_004CE324(?:?);
begin
 004CE324    push        ebp
 004CE325    mov         ebp,esp
 004CE327    add         esp,0FFFFFFF8
 004CE32A    mov         dword ptr [ebp-8],edx
 004CE32D    mov         dword ptr [ebp-4],eax
 004CE330    mov         edx,dword ptr [ebp-8]
 004CE333    mov         eax,dword ptr [ebp-4]
 004CE336    call        004C957C
 004CE33B    mov         eax,dword ptr [ebp-8]
 004CE33E    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004CE344    call        @AsClass
 004CE349    mov         edx,dword ptr [ebp-4]
 004CE34C    mov         dword ptr [edx+20],eax;TWinControlActionLink.............................FClient:TWinCon...
 004CE34F    pop         ecx
 004CE350    pop         ecx
 004CE351    pop         ebp
 004CE352    ret
end;*}

//004CE354
{*function sub_004CE354:?;
begin
 004CE354    push        ebp
 004CE355    mov         ebp,esp
 004CE357    add         esp,0FFFFFFF8
 004CE35A    mov         dword ptr [ebp-4],eax
 004CE35D    mov         eax,dword ptr [ebp-4]
 004CE360    mov         edx,dword ptr [eax]
 004CE362    call        dword ptr [edx+34];TWinControlActionLink.sub_004C9928
 004CE365    mov         byte ptr [ebp-5],al
 004CE368    mov         al,byte ptr [ebp-5]
 004CE36B    pop         ecx
 004CE36C    pop         ecx
 004CE36D    pop         ebp
 004CE36E    ret
end;*}

//004CE370
{*procedure sub_004CE370(?:?);
begin
 004CE370    push        ebp
 004CE371    mov         ebp,esp
 004CE373    add         esp,0FFFFFFF8
 004CE376    mov         dword ptr [ebp-8],edx
 004CE379    mov         dword ptr [ebp-4],eax
 004CE37C    mov         edx,dword ptr [ebp-8]
 004CE37F    mov         eax,dword ptr [ebp-4]
 004CE382    call        004C99D8
 004CE387    pop         ecx
 004CE388    pop         ecx
 004CE389    pop         ebp
 004CE38A    ret
end;*}

//004CE38C
constructor TWinControl.Create(AOwner:TComponent);
begin
{*
 004CE38C    push        ebp
 004CE38D    mov         ebp,esp
 004CE38F    add         esp,0FFFFFFF0
 004CE392    push        ebx
 004CE393    xor         ebx,ebx
 004CE395    mov         dword ptr [ebp-10],ebx
 004CE398    test        dl,dl
>004CE39A    je          004CE3A4
 004CE39C    add         esp,0FFFFFFF0
 004CE39F    call        @ClassCreate
 004CE3A4    mov         dword ptr [ebp-0C],ecx
 004CE3A7    mov         byte ptr [ebp-5],dl
 004CE3AA    mov         dword ptr [ebp-4],eax
 004CE3AD    xor         eax,eax
 004CE3AF    push        ebp
 004CE3B0    push        4CE4BC
 004CE3B5    push        dword ptr fs:[eax]
 004CE3B8    mov         dword ptr fs:[eax],esp
 004CE3BB    mov         ecx,dword ptr [ebp-0C]
 004CE3BE    xor         edx,edx
 004CE3C0    mov         eax,dword ptr [ebp-4]
 004CE3C3    call        004C9A30
 004CE3C8    mov         eax,dword ptr [ebp-4]
 004CE3CB    push        eax
 004CE3CC    push        4D03D4
 004CE3D1    call        00484700
 004CE3D6    mov         edx,dword ptr [ebp-4]
 004CE3D9    mov         dword ptr [edx+18C],eax
 004CE3DF    mov         dl,1
 004CE3E1    mov         eax,[00485498];TBrush
 004CE3E6    call        TBrush.Create
 004CE3EB    mov         edx,dword ptr [ebp-4]
 004CE3EE    mov         dword ptr [edx+170],eax
 004CE3F4    mov         eax,dword ptr [ebp-4]
 004CE3F7    mov         edx,dword ptr [eax+70]
 004CE3FA    mov         eax,dword ptr [ebp-4]
 004CE3FD    mov         eax,dword ptr [eax+170]
 004CE403    call        TBrush.SetColor
 004CE408    mov         eax,dword ptr [ebp-4]
 004CE40B    mov         byte ptr [eax+1A9],1
 004CE412    mov         eax,dword ptr [ebp-4]
 004CE415    mov         dword ptr [eax+1A0],0FFFFFFFF
 004CE41F    mov         eax,dword ptr [ebp-4]
 004CE422    mov         byte ptr [eax+184],3
 004CE429    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004CE42E    cmp         dword ptr [eax+4],11
>004CE432    jne         004CE443
 004CE434    mov         eax,dword ptr [ebp-4]
 004CE437    add         eax,188
 004CE43C    call        @LStrClr
>004CE441    jmp         004CE462
 004CE443    lea         edx,[ebp-10]
 004CE446    mov         eax,[0055B6D8];^Screen:TScreen
 004CE44B    mov         eax,dword ptr [eax]
 004CE44D    call        004F06CC
 004CE452    mov         edx,dword ptr [ebp-10]
 004CE455    mov         eax,dword ptr [ebp-4]
 004CE458    add         eax,188
 004CE45D    call        @LStrAsg
 004CE462    mov         eax,dword ptr [ebp-4]
 004CE465    mov         byte ptr [eax+1A7],0
 004CE46C    mov         eax,dword ptr [ebp-4]
 004CE46F    mov         dl,byte ptr ds:[4CE4E4]
 004CE475    mov         byte ptr [eax+162],dl
 004CE47B    mov         eax,dword ptr [ebp-4]
 004CE47E    mov         byte ptr [eax+163],2
 004CE485    mov         eax,dword ptr [ebp-4]
 004CE488    mov         byte ptr [eax+164],1
 004CE48F    mov         eax,dword ptr [ebp-4]
 004CE492    mov         dword ptr [eax+168],1
 004CE49C    mov         eax,dword ptr [ebp-4]
 004CE49F    mov         byte ptr [eax+150],1
 004CE4A6    xor         eax,eax
 004CE4A8    pop         edx
 004CE4A9    pop         ecx
 004CE4AA    pop         ecx
 004CE4AB    mov         dword ptr fs:[eax],edx
 004CE4AE    push        4CE4C3
 004CE4B3    lea         eax,[ebp-10]
 004CE4B6    call        @LStrClr
 004CE4BB    ret
>004CE4BC    jmp         @HandleFinally
>004CE4C1    jmp         004CE4B3
 004CE4C3    mov         eax,dword ptr [ebp-4]
 004CE4C6    cmp         byte ptr [ebp-5],0
>004CE4CA    je          004CE4DB
 004CE4CC    call        @AfterConstruction
 004CE4D1    pop         dword ptr fs:[0]
 004CE4D8    add         esp,0C
 004CE4DB    mov         eax,dword ptr [ebp-4]
 004CE4DE    pop         ebx
 004CE4DF    mov         esp,ebp
 004CE4E1    pop         ebp
 004CE4E2    ret
*}
end;

//004CE4E8
{*function sub_004CE4E8(?:TCustomActionBar):?;
begin
 004CE4E8    push        ebp
 004CE4E9    mov         ebp,esp
 004CE4EB    add         esp,0FFFFFFF8
 004CE4EE    mov         dword ptr [ebp-4],eax
 004CE4F1    mov         eax,dword ptr [ebp-4]
 004CE4F4    cmp         word ptr [eax+160],0
 004CE4FC    seta        byte ptr [ebp-5]
 004CE500    mov         al,byte ptr [ebp-5]
 004CE503    pop         ecx
 004CE504    pop         ecx
 004CE505    pop         ebp
 004CE506    ret
end;*}

//004CE508
destructor TWinControl.Destroy;
begin
{*
 004CE508    push        ebp
 004CE509    mov         ebp,esp
 004CE50B    add         esp,0FFFFFFF0
 004CE50E    call        @BeforeDestruction
 004CE513    mov         byte ptr [ebp-5],dl
 004CE516    mov         dword ptr [ebp-4],eax
 004CE519    mov         eax,dword ptr [ebp-4]
 004CE51C    call        004832CC
 004CE521    mov         eax,dword ptr [ebp-4]
 004CE524    cmp         byte ptr [eax+1A8],0
>004CE52B    je          004CE541
 004CE52D    mov         eax,dword ptr [ebp-4]
 004CE530    mov         byte ptr [eax+1A8],0
 004CE537    xor         edx,edx
 004CE539    mov         eax,dword ptr [ebp-4]
 004CE53C    call        004C81B8
 004CE541    mov         eax,dword ptr [ebp-4]
 004CE544    add         eax,17C
 004CE549    call        @IntfClear
 004CE54E    mov         eax,dword ptr [ebp-4]
 004CE551    mov         eax,dword ptr [eax+178]
 004CE557    call        TObject.Free
 004CE55C    mov         eax,dword ptr [ebp-4]
 004CE55F    cmp         dword ptr [eax+30],0
>004CE563    je          004CE56F
 004CE565    mov         dl,1
 004CE567    mov         eax,dword ptr [ebp-4]
 004CE56A    call        004CF340
 004CE56F    mov         eax,dword ptr [ebp-4]
 004CE572    cmp         dword ptr [eax+180],0
>004CE579    je          004CE586
 004CE57B    mov         eax,dword ptr [ebp-4]
 004CE57E    mov         edx,dword ptr [eax]
 004CE580    call        dword ptr [edx+0AC]
 004CE586    mov         eax,dword ptr [ebp-4]
 004CE589    call        004CF618
 004CE58E    mov         dword ptr [ebp-0C],eax
 004CE591    cmp         dword ptr [ebp-0C],0
>004CE595    je          004CE5CC
 004CE597    mov         edx,dword ptr [ebp-0C]
 004CE59A    dec         edx
 004CE59B    mov         eax,dword ptr [ebp-4]
 004CE59E    call        004CF5AC
 004CE5A3    mov         dword ptr [ebp-10],eax
 004CE5A6    mov         edx,dword ptr [ebp-10]
 004CE5A9    mov         eax,dword ptr [ebp-4]
 004CE5AC    call        004CF3D4
 004CE5B1    mov         dl,1
 004CE5B3    mov         eax,dword ptr [ebp-10]
 004CE5B6    mov         ecx,dword ptr [eax]
 004CE5B8    call        dword ptr [ecx-4]
 004CE5BB    mov         eax,dword ptr [ebp-4]
 004CE5BE    call        004CF618
 004CE5C3    mov         dword ptr [ebp-0C],eax
 004CE5C6    cmp         dword ptr [ebp-0C],0
>004CE5CA    jne         004CE597
 004CE5CC    mov         eax,dword ptr [ebp-4]
 004CE5CF    mov         eax,dword ptr [eax+170]
 004CE5D5    call        TObject.Free
 004CE5DA    mov         eax,dword ptr [ebp-4]
 004CE5DD    cmp         dword ptr [eax+18C],0
>004CE5E4    je          004CE5F4
 004CE5E6    mov         eax,dword ptr [ebp-4]
 004CE5E9    mov         eax,dword ptr [eax+18C]
 004CE5EF    call        004847E0
 004CE5F4    mov         dl,byte ptr [ebp-5]
 004CE5F7    and         dl,0FC
 004CE5FA    mov         eax,dword ptr [ebp-4]
 004CE5FD    call        TControl.Destroy
 004CE602    cmp         byte ptr [ebp-5],0
>004CE606    jle         004CE610
 004CE608    mov         eax,dword ptr [ebp-4]
 004CE60B    call        @ClassDestroy
 004CE610    mov         esp,ebp
 004CE612    pop         ebp
 004CE613    ret
*}
end;

//004CE614
procedure sub_004CE614(?:TWinControl);
begin
{*
 004CE614    push        ebp
 004CE615    mov         ebp,esp
 004CE617    add         esp,0FFFFFFE4
 004CE61A    mov         dword ptr [ebp-4],eax
 004CE61D    mov         eax,dword ptr [ebp-4]
 004CE620    cmp         dword ptr [eax+19C],0
>004CE627    je          004CE713
 004CE62D    mov         dl,1
 004CE62F    mov         eax,[004759C0];TList
 004CE634    call        TObject.Create;TList.Create
 004CE639    mov         dword ptr [ebp-14],eax
 004CE63C    xor         eax,eax
 004CE63E    push        ebp
 004CE63F    push        4CE70C
 004CE644    push        dword ptr fs:[eax]
 004CE647    mov         dword ptr fs:[eax],esp
 004CE64A    mov         eax,dword ptr [ebp-4]
 004CE64D    mov         eax,dword ptr [eax+19C]
 004CE653    mov         eax,dword ptr [eax+8]
 004CE656    mov         dword ptr [ebp-8],eax
 004CE659    mov         edx,dword ptr [ebp-8]
 004CE65C    mov         eax,dword ptr [ebp-14]
 004CE65F    call        00478B54
 004CE664    mov         eax,dword ptr [ebp-8]
 004CE667    dec         eax
 004CE668    test        eax,eax
>004CE66A    jl          004CE6BB
 004CE66C    inc         eax
 004CE66D    mov         dword ptr [ebp-1C],eax
 004CE670    mov         dword ptr [ebp-0C],0
 004CE677    mov         eax,dword ptr [ebp-4]
 004CE67A    mov         eax,dword ptr [eax+19C]
 004CE680    mov         edx,dword ptr [ebp-0C]
 004CE683    call        TList.Get
 004CE688    mov         dword ptr [ebp-18],eax
 004CE68B    mov         eax,dword ptr [ebp-18]
 004CE68E    mov         eax,dword ptr [eax+1A0]
 004CE694    mov         dword ptr [ebp-10],eax
 004CE697    cmp         dword ptr [ebp-10],0
>004CE69B    jl          004CE6B3
 004CE69D    mov         eax,dword ptr [ebp-10]
 004CE6A0    cmp         eax,dword ptr [ebp-8]
>004CE6A3    jge         004CE6B3
 004CE6A5    mov         ecx,dword ptr [ebp-18]
 004CE6A8    mov         edx,dword ptr [ebp-10]
 004CE6AB    mov         eax,dword ptr [ebp-14]
 004CE6AE    call        00478A34
 004CE6B3    inc         dword ptr [ebp-0C]
 004CE6B6    dec         dword ptr [ebp-1C]
>004CE6B9    jne         004CE677
 004CE6BB    mov         eax,dword ptr [ebp-8]
 004CE6BE    dec         eax
 004CE6BF    test        eax,eax
>004CE6C1    jl          004CE6F6
 004CE6C3    inc         eax
 004CE6C4    mov         dword ptr [ebp-1C],eax
 004CE6C7    mov         dword ptr [ebp-0C],0
 004CE6CE    mov         edx,dword ptr [ebp-0C]
 004CE6D1    mov         eax,dword ptr [ebp-14]
 004CE6D4    call        TList.Get
 004CE6D9    mov         dword ptr [ebp-18],eax
 004CE6DC    cmp         dword ptr [ebp-18],0
>004CE6E0    je          004CE6EE
 004CE6E2    mov         dx,word ptr [ebp-0C]
 004CE6E6    mov         eax,dword ptr [ebp-18]
 004CE6E9    call        004D3BC4
 004CE6EE    inc         dword ptr [ebp-0C]
 004CE6F1    dec         dword ptr [ebp-1C]
>004CE6F4    jne         004CE6CE
 004CE6F6    xor         eax,eax
 004CE6F8    pop         edx
 004CE6F9    pop         ecx
 004CE6FA    pop         ecx
 004CE6FB    mov         dword ptr fs:[eax],edx
 004CE6FE    push        4CE713
 004CE703    mov         eax,dword ptr [ebp-14]
 004CE706    call        TObject.Free
 004CE70B    ret
>004CE70C    jmp         @HandleFinally
>004CE711    jmp         004CE703
 004CE713    mov         esp,ebp
 004CE715    pop         ebp
 004CE716    ret
*}
end;

//004CE718
{*procedure sub_004CE718(?:?);
begin
 004CE718    push        ebp
 004CE719    mov         ebp,esp
 004CE71B    add         esp,0FFFFFFF8
 004CE71E    mov         dword ptr [ebp-8],edx
 004CE721    mov         dword ptr [ebp-4],eax
 004CE724    mov         eax,dword ptr [ebp-4]
 004CE727    call        TWinControl.DisableAlign
 004CE72C    xor         eax,eax
 004CE72E    push        ebp
 004CE72F    push        4CE75B
 004CE734    push        dword ptr fs:[eax]
 004CE737    mov         dword ptr fs:[eax],esp
 004CE73A    mov         edx,dword ptr [ebp-8]
 004CE73D    mov         eax,dword ptr [ebp-4]
 004CE740    call        004C9F28
 004CE745    xor         eax,eax
 004CE747    pop         edx
 004CE748    pop         ecx
 004CE749    pop         ecx
 004CE74A    mov         dword ptr fs:[eax],edx
 004CE74D    push        4CE762
 004CE752    mov         eax,dword ptr [ebp-4]
 004CE755    call        TWinControl.EnableAlign
 004CE75A    ret
>004CE75B    jmp         @HandleFinally
>004CE760    jmp         004CE752
 004CE762    mov         eax,dword ptr [ebp-4]
 004CE765    call        004CE614
 004CE76A    mov         eax,dword ptr [ebp-4]
 004CE76D    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004CE771    je          004CE784
 004CE773    push        0
 004CE775    xor         ecx,ecx
 004CE777    mov         edx,0B011
 004CE77C    mov         eax,dword ptr [ebp-4]
 004CE77F    call        004CC7DC
 004CE784    mov         eax,dword ptr [ebp-4]
 004CE787    call        004D02BC
 004CE78C    pop         ecx
 004CE78D    pop         ecx
 004CE78E    pop         ebp
 004CE78F    ret
end;*}

//004CE790
{*procedure sub_004CE790(?:?);
begin
 004CE790    push        ebp
 004CE791    mov         ebp,esp
 004CE793    add         esp,0FFFFFFF8
 004CE796    mov         dword ptr [ebp-8],edx
 004CE799    mov         dword ptr [ebp-4],eax
 004CE79C    pop         ecx
 004CE79D    pop         ecx
 004CE79E    pop         ebp
 004CE79F    ret
end;*}

//004CE7A0
{*function sub_004CE7A0(?:?; ?:?; ?:?; ?:?):?;
begin
 004CE7A0    push        ebp
 004CE7A1    mov         ebp,esp
 004CE7A3    add         esp,0FFFFFFF4
 004CE7A6    push        ebx
 004CE7A7    mov         byte ptr [ebp-9],cl
 004CE7AA    mov         dword ptr [ebp-8],edx
 004CE7AD    mov         dword ptr [ebp-4],eax
 004CE7B0    mov         byte ptr [ebp-0A],0
 004CE7B4    xor         eax,eax
 004CE7B6    mov         al,byte ptr [ebp-9]
 004CE7B9    cmp         eax,6
>004CE7BC    ja          004CE860
 004CE7C2    jmp         dword ptr [eax*4+4CE7C9]
 004CE7C2    dd          004CE860
 004CE7C2    dd          004CE7E5
 004CE7C2    dd          004CE7F7
 004CE7C2    dd          004CE817
 004CE7C2    dd          004CE829
 004CE7C2    dd          004CE860
 004CE7C2    dd          004CE849
 004CE7E5    mov         eax,dword ptr [ebp-8]
 004CE7E8    mov         eax,dword ptr [eax+44]
 004CE7EB    mov         edx,dword ptr [ebp-4]
 004CE7EE    cmp         eax,dword ptr [edx+44]
 004CE7F1    setg        byte ptr [ebp-0A]
>004CE7F5    jmp         004CE860
 004CE7F7    mov         eax,dword ptr [ebp-8]
 004CE7FA    mov         eax,dword ptr [eax+44]
 004CE7FD    mov         edx,dword ptr [ebp-8]
 004CE800    add         eax,dword ptr [edx+4C]
 004CE803    mov         edx,dword ptr [ebp-4]
 004CE806    mov         edx,dword ptr [edx+44]
 004CE809    mov         ecx,dword ptr [ebp-4]
 004CE80C    add         edx,dword ptr [ecx+4C]
 004CE80F    cmp         eax,edx
 004CE811    setle       byte ptr [ebp-0A]
>004CE815    jmp         004CE860
 004CE817    mov         eax,dword ptr [ebp-8]
 004CE81A    mov         eax,dword ptr [eax+40]
 004CE81D    mov         edx,dword ptr [ebp-4]
 004CE820    cmp         eax,dword ptr [edx+40]
 004CE823    setg        byte ptr [ebp-0A]
>004CE827    jmp         004CE860
 004CE829    mov         eax,dword ptr [ebp-8]
 004CE82C    mov         eax,dword ptr [eax+40]
 004CE82F    mov         edx,dword ptr [ebp-8]
 004CE832    add         eax,dword ptr [edx+48]
 004CE835    mov         edx,dword ptr [ebp-4]
 004CE838    mov         edx,dword ptr [edx+40]
 004CE83B    mov         ecx,dword ptr [ebp-4]
 004CE83E    add         edx,dword ptr [ecx+48]
 004CE841    cmp         eax,edx
 004CE843    setle       byte ptr [ebp-0A]
>004CE847    jmp         004CE860
 004CE849    mov         eax,dword ptr [ebp+8]
 004CE84C    mov         eax,dword ptr [eax-4]
 004CE84F    mov         ecx,dword ptr [ebp-8]
 004CE852    mov         edx,dword ptr [ebp-4]
 004CE855    mov         ebx,dword ptr [eax]
 004CE857    call        dword ptr [ebx+0A4]
 004CE85D    mov         byte ptr [ebp-0A],al
 004CE860    mov         al,byte ptr [ebp-0A]
 004CE863    pop         ebx
 004CE864    mov         esp,ebp
 004CE866    pop         ebp
 004CE867    ret
end;*}

//004CE868
{*procedure sub_004CE868(?:?; ?:?; ?:?; ?:?);
begin
 004CE868    push        ebp
 004CE869    mov         ebp,esp
 004CE86B    add         esp,0FFFFFFC0
 004CE86E    push        ebx
 004CE86F    push        esi
 004CE870    push        edi
 004CE871    mov         esi,ecx
 004CE873    lea         edi,[ebp-30]
 004CE876    movs        dword ptr [edi],dword ptr [esi]
 004CE877    movs        dword ptr [edi],dword ptr [esi]
 004CE878    movs        dword ptr [edi],dword ptr [esi]
 004CE879    movs        dword ptr [edi],dword ptr [esi]
 004CE87A    mov         byte ptr [ebp-5],dl
 004CE87D    mov         dword ptr [ebp-4],eax
 004CE880    cmp         byte ptr [ebp-5],0
>004CE884    je          004CE89D
 004CE886    xor         eax,eax
 004CE888    mov         al,byte ptr [ebp-5]
 004CE88B    mov         al,byte ptr [eax+541684]
 004CE891    mov         edx,dword ptr [ebp-4]
 004CE894    cmp         al,byte ptr [edx+61]
>004CE897    je          004CEA78
 004CE89D    mov         eax,dword ptr [ebp-4]
 004CE8A0    cmp         dword ptr [eax+90],0
>004CE8A7    je          004CEA6E
 004CE8AD    mov         eax,dword ptr [ebp-4]
 004CE8B0    cmp         dword ptr [eax+94],0
>004CE8B7    je          004CEA6E
 004CE8BD    mov         eax,dword ptr [ebp-4]
 004CE8C0    mov         eax,dword ptr [eax+40]
 004CE8C3    mov         dword ptr [ebp-0C],eax
 004CE8C6    mov         eax,dword ptr [ebp-4]
 004CE8C9    mov         eax,dword ptr [eax+44]
 004CE8CC    mov         dword ptr [ebp-10],eax
 004CE8CF    mov         eax,dword ptr [ebp-4]
 004CE8D2    mov         eax,dword ptr [eax+48]
 004CE8D5    mov         dword ptr [ebp-14],eax
 004CE8D8    mov         eax,dword ptr [ebp-4]
 004CE8DB    mov         eax,dword ptr [eax+4C]
 004CE8DE    mov         dword ptr [ebp-18],eax
 004CE8E1    mov         eax,dword ptr [ebp-4]
 004CE8E4    mov         eax,dword ptr [eax+30]
 004CE8E7    call        TWinControl.HandleAllocated
 004CE8EC    test        al,al
>004CE8EE    je          004CE90C
 004CE8F0    lea         edx,[ebp-40]
 004CE8F3    mov         eax,dword ptr [ebp-4]
 004CE8F6    mov         eax,dword ptr [eax+30]
 004CE8F9    mov         ecx,dword ptr [eax]
 004CE8FB    call        dword ptr [ecx+44]
 004CE8FE    mov         eax,dword ptr [ebp-38]
 004CE901    mov         dword ptr [ebp-20],eax
 004CE904    mov         eax,dword ptr [ebp-34]
 004CE907    mov         dword ptr [ebp-1C],eax
>004CE90A    jmp         004CE926
 004CE90C    lea         ecx,[ebp-20]
 004CE90F    mov         eax,dword ptr [ebp-4]
 004CE912    mov         eax,dword ptr [eax+30]
 004CE915    mov         edx,dword ptr [eax+4C]
 004CE918    mov         eax,dword ptr [ebp-4]
 004CE91B    mov         eax,dword ptr [eax+30]
 004CE91E    mov         eax,dword ptr [eax+48]
 004CE921    call        Point
 004CE926    mov         eax,dword ptr [ebp-4]
 004CE929    test        byte ptr [eax+61],4
>004CE92D    je          004CE970
 004CE92F    mov         eax,dword ptr [ebp-4]
 004CE932    test        byte ptr [eax+61],1
>004CE936    je          004CE954
 004CE938    mov         eax,dword ptr [ebp-4]
 004CE93B    mov         eax,dword ptr [eax+90]
 004CE941    mov         edx,dword ptr [ebp-4]
 004CE944    sub         eax,dword ptr [edx+88]
 004CE94A    mov         edx,dword ptr [ebp-20]
 004CE94D    sub         edx,eax
 004CE94F    mov         dword ptr [ebp-14],edx
>004CE952    jmp         004CE9A5
 004CE954    mov         eax,dword ptr [ebp-4]
 004CE957    mov         eax,dword ptr [eax+90]
 004CE95D    mov         edx,dword ptr [ebp-4]
 004CE960    sub         eax,dword ptr [edx+88]
 004CE966    mov         edx,dword ptr [ebp-20]
 004CE969    sub         edx,eax
 004CE96B    mov         dword ptr [ebp-0C],edx
>004CE96E    jmp         004CE9A5
 004CE970    mov         eax,dword ptr [ebp-4]
 004CE973    test        byte ptr [eax+61],1
>004CE977    jne         004CE9A5
 004CE979    mov         eax,dword ptr [ebp-4]
 004CE97C    mov         eax,dword ptr [eax+90]
 004CE982    push        eax
 004CE983    mov         eax,dword ptr [ebp-20]
 004CE986    push        eax
 004CE987    mov         eax,dword ptr [ebp-4]
 004CE98A    mov         eax,dword ptr [eax+88]
 004CE990    push        eax
 004CE991    call        kernel32.MulDiv
 004CE996    mov         edx,dword ptr [ebp-14]
 004CE999    sar         edx,1
>004CE99B    jns         004CE9A0
 004CE99D    adc         edx,0
 004CE9A0    sub         eax,edx
 004CE9A2    mov         dword ptr [ebp-0C],eax
 004CE9A5    mov         eax,dword ptr [ebp-4]
 004CE9A8    test        byte ptr [eax+61],8
>004CE9AC    je          004CE9EF
 004CE9AE    mov         eax,dword ptr [ebp-4]
 004CE9B1    test        byte ptr [eax+61],2
>004CE9B5    je          004CE9D3
 004CE9B7    mov         eax,dword ptr [ebp-4]
 004CE9BA    mov         eax,dword ptr [eax+94]
 004CE9C0    mov         edx,dword ptr [ebp-4]
 004CE9C3    sub         eax,dword ptr [edx+8C]
 004CE9C9    mov         edx,dword ptr [ebp-1C]
 004CE9CC    sub         edx,eax
 004CE9CE    mov         dword ptr [ebp-18],edx
>004CE9D1    jmp         004CEA24
 004CE9D3    mov         eax,dword ptr [ebp-4]
 004CE9D6    mov         eax,dword ptr [eax+94]
 004CE9DC    mov         edx,dword ptr [ebp-4]
 004CE9DF    sub         eax,dword ptr [edx+8C]
 004CE9E5    mov         edx,dword ptr [ebp-1C]
 004CE9E8    sub         edx,eax
 004CE9EA    mov         dword ptr [ebp-10],edx
>004CE9ED    jmp         004CEA24
 004CE9EF    mov         eax,dword ptr [ebp-4]
 004CE9F2    test        byte ptr [eax+61],2
>004CE9F6    jne         004CEA24
 004CE9F8    mov         eax,dword ptr [ebp-4]
 004CE9FB    mov         eax,dword ptr [eax+94]
 004CEA01    push        eax
 004CEA02    mov         eax,dword ptr [ebp-1C]
 004CEA05    push        eax
 004CEA06    mov         eax,dword ptr [ebp-4]
 004CEA09    mov         eax,dword ptr [eax+8C]
 004CEA0F    push        eax
 004CEA10    call        kernel32.MulDiv
 004CEA15    mov         edx,dword ptr [ebp-18]
 004CEA18    sar         edx,1
>004CEA1A    jns         004CEA1F
 004CEA1C    adc         edx,0
 004CEA1F    sub         eax,edx
 004CEA21    mov         dword ptr [ebp-10],eax
 004CEA24    mov         eax,dword ptr [ebp-4]
 004CEA27    mov         byte ptr [eax+62],1
 004CEA2B    xor         eax,eax
 004CEA2D    push        ebp
 004CEA2E    push        4CEA67
 004CEA33    push        dword ptr fs:[eax]
 004CEA36    mov         dword ptr fs:[eax],esp
 004CEA39    mov         eax,dword ptr [ebp-14]
 004CEA3C    push        eax
 004CEA3D    mov         eax,dword ptr [ebp-18]
 004CEA40    push        eax
 004CEA41    mov         ecx,dword ptr [ebp-10]
 004CEA44    mov         edx,dword ptr [ebp-0C]
 004CEA47    mov         eax,dword ptr [ebp-4]
 004CEA4A    mov         ebx,dword ptr [eax]
 004CEA4C    call        dword ptr [ebx+84]
 004CEA52    xor         eax,eax
 004CEA54    pop         edx
 004CEA55    pop         ecx
 004CEA56    pop         ecx
 004CEA57    mov         dword ptr fs:[eax],edx
 004CEA5A    push        4CEA6E
 004CEA5F    mov         eax,dword ptr [ebp-4]
 004CEA62    mov         byte ptr [eax+62],0
 004CEA66    ret
>004CEA67    jmp         @HandleFinally
>004CEA6C    jmp         004CEA5F
 004CEA6E    cmp         byte ptr [ebp-5],0
>004CEA72    je          004CECB0
 004CEA78    mov         eax,dword ptr [ebp+8]
 004CEA7B    mov         eax,dword ptr [eax-8]
 004CEA7E    mov         eax,dword ptr [eax+8]
 004CEA81    mov         edx,dword ptr [ebp+8]
 004CEA84    mov         edx,dword ptr [edx-8]
 004CEA87    sub         eax,dword ptr [edx]
 004CEA89    mov         dword ptr [ebp-14],eax
 004CEA8C    cmp         dword ptr [ebp-14],0
>004CEA90    jl          004CEA9F
 004CEA92    mov         al,byte ptr [ebp-5]
 004CEA95    add         al,0FD
 004CEA97    sub         al,2
>004CEA99    jb          004CEA9F
 004CEA9B    sub         al,1
>004CEA9D    jne         004CEAA8
 004CEA9F    mov         eax,dword ptr [ebp-4]
 004CEAA2    mov         eax,dword ptr [eax+48]
 004CEAA5    mov         dword ptr [ebp-14],eax
 004CEAA8    mov         eax,dword ptr [ebp+8]
 004CEAAB    mov         eax,dword ptr [eax-8]
 004CEAAE    mov         eax,dword ptr [eax+0C]
 004CEAB1    mov         edx,dword ptr [ebp+8]
 004CEAB4    mov         edx,dword ptr [edx-8]
 004CEAB7    sub         eax,dword ptr [edx+4]
 004CEABA    mov         dword ptr [ebp-18],eax
 004CEABD    cmp         dword ptr [ebp-18],0
>004CEAC1    jl          004CEACF
 004CEAC3    mov         al,byte ptr [ebp-5]
 004CEAC6    dec         eax
 004CEAC7    sub         al,2
>004CEAC9    jb          004CEACF
 004CEACB    sub         al,3
>004CEACD    jne         004CEAD8
 004CEACF    mov         eax,dword ptr [ebp-4]
 004CEAD2    mov         eax,dword ptr [eax+4C]
 004CEAD5    mov         dword ptr [ebp-18],eax
 004CEAD8    mov         eax,dword ptr [ebp+8]
 004CEADB    mov         eax,dword ptr [eax-8]
 004CEADE    mov         eax,dword ptr [eax]
 004CEAE0    mov         dword ptr [ebp-0C],eax
 004CEAE3    mov         eax,dword ptr [ebp+8]
 004CEAE6    mov         eax,dword ptr [eax-8]
 004CEAE9    mov         eax,dword ptr [eax+4]
 004CEAEC    mov         dword ptr [ebp-10],eax
 004CEAEF    xor         eax,eax
 004CEAF1    mov         al,byte ptr [ebp-5]
 004CEAF4    cmp         eax,6
>004CEAF7    ja          004CEBAC
 004CEAFD    jmp         dword ptr [eax*4+4CEB04]
 004CEAFD    dd          004CEBAC
 004CEAFD    dd          004CEB20
 004CEAFD    dd          004CEB2E
 004CEAFD    dd          004CEB48
 004CEAFD    dd          004CEB55
 004CEAFD    dd          004CEBAC
 004CEAFD    dd          004CEB6F
 004CEB20    mov         eax,dword ptr [ebp+8]
 004CEB23    mov         eax,dword ptr [eax-8]
 004CEB26    mov         edx,dword ptr [ebp-18]
 004CEB29    add         dword ptr [eax+4],edx
>004CEB2C    jmp         004CEBAC
 004CEB2E    mov         eax,dword ptr [ebp+8]
 004CEB31    mov         eax,dword ptr [eax-8]
 004CEB34    mov         edx,dword ptr [ebp-18]
 004CEB37    sub         dword ptr [eax+0C],edx
 004CEB3A    mov         eax,dword ptr [ebp+8]
 004CEB3D    mov         eax,dword ptr [eax-8]
 004CEB40    mov         eax,dword ptr [eax+0C]
 004CEB43    mov         dword ptr [ebp-10],eax
>004CEB46    jmp         004CEBAC
 004CEB48    mov         eax,dword ptr [ebp+8]
 004CEB4B    mov         eax,dword ptr [eax-8]
 004CEB4E    mov         edx,dword ptr [ebp-14]
 004CEB51    add         dword ptr [eax],edx
>004CEB53    jmp         004CEBAC
 004CEB55    mov         eax,dword ptr [ebp+8]
 004CEB58    mov         eax,dword ptr [eax-8]
 004CEB5B    mov         edx,dword ptr [ebp-14]
 004CEB5E    sub         dword ptr [eax+8],edx
 004CEB61    mov         eax,dword ptr [ebp+8]
 004CEB64    mov         eax,dword ptr [eax-8]
 004CEB67    mov         eax,dword ptr [eax+8]
 004CEB6A    mov         dword ptr [ebp-0C],eax
>004CEB6D    jmp         004CEBAC
 004CEB6F    mov         eax,dword ptr [ebp-4]
 004CEB72    mov         eax,dword ptr [eax+40]
 004CEB75    mov         dword ptr [ebp-0C],eax
 004CEB78    mov         eax,dword ptr [ebp-4]
 004CEB7B    mov         eax,dword ptr [eax+44]
 004CEB7E    mov         dword ptr [ebp-10],eax
 004CEB81    lea         eax,[ebp-10]
 004CEB84    push        eax
 004CEB85    lea         eax,[ebp-14]
 004CEB88    push        eax
 004CEB89    lea         eax,[ebp-18]
 004CEB8C    push        eax
 004CEB8D    mov         eax,dword ptr [ebp+8]
 004CEB90    mov         eax,dword ptr [eax-8]
 004CEB93    push        eax
 004CEB94    lea         eax,[ebp-30]
 004CEB97    push        eax
 004CEB98    lea         ecx,[ebp-0C]
 004CEB9B    mov         eax,dword ptr [ebp+8]
 004CEB9E    mov         eax,dword ptr [eax-4]
 004CEBA1    mov         edx,dword ptr [ebp-4]
 004CEBA4    mov         ebx,dword ptr [eax]
 004CEBA6    call        dword ptr [ebx+0A8]
 004CEBAC    mov         eax,dword ptr [ebp-4]
 004CEBAF    mov         byte ptr [eax+62],1
 004CEBB3    xor         eax,eax
 004CEBB5    push        ebp
 004CEBB6    push        4CEBEF
 004CEBBB    push        dword ptr fs:[eax]
 004CEBBE    mov         dword ptr fs:[eax],esp
 004CEBC1    mov         eax,dword ptr [ebp-14]
 004CEBC4    push        eax
 004CEBC5    mov         eax,dword ptr [ebp-18]
 004CEBC8    push        eax
 004CEBC9    mov         ecx,dword ptr [ebp-10]
 004CEBCC    mov         edx,dword ptr [ebp-0C]
 004CEBCF    mov         eax,dword ptr [ebp-4]
 004CEBD2    mov         ebx,dword ptr [eax]
 004CEBD4    call        dword ptr [ebx+84]
 004CEBDA    xor         eax,eax
 004CEBDC    pop         edx
 004CEBDD    pop         ecx
 004CEBDE    pop         ecx
 004CEBDF    mov         dword ptr fs:[eax],edx
 004CEBE2    push        4CEBF6
 004CEBE7    mov         eax,dword ptr [ebp-4]
 004CEBEA    mov         byte ptr [eax+62],0
 004CEBEE    ret
>004CEBEF    jmp         @HandleFinally
>004CEBF4    jmp         004CEBE7
 004CEBF6    mov         eax,dword ptr [ebp-4]
 004CEBF9    mov         eax,dword ptr [eax+48]
 004CEBFC    cmp         eax,dword ptr [ebp-14]
>004CEBFF    jne         004CEC10
 004CEC01    mov         eax,dword ptr [ebp-4]
 004CEC04    mov         eax,dword ptr [eax+4C]
 004CEC07    cmp         eax,dword ptr [ebp-18]
>004CEC0A    je          004CECB0
 004CEC10    xor         eax,eax
 004CEC12    mov         al,byte ptr [ebp-5]
 004CEC15    cmp         eax,5
>004CEC18    ja          004CECB0
 004CEC1E    jmp         dword ptr [eax*4+4CEC25]
 004CEC1E    dd          004CECB0
 004CEC1E    dd          004CEC3D
 004CEC1E    dd          004CEC51
 004CEC1E    dd          004CEC65
 004CEC1E    dd          004CEC78
 004CEC1E    dd          004CEC8C
 004CEC3D    mov         eax,dword ptr [ebp-4]
 004CEC40    mov         edx,dword ptr [ebp-18]
 004CEC43    sub         edx,dword ptr [eax+4C]
 004CEC46    mov         eax,dword ptr [ebp+8]
 004CEC49    mov         eax,dword ptr [eax-8]
 004CEC4C    sub         dword ptr [eax+4],edx
>004CEC4F    jmp         004CECB0
 004CEC51    mov         eax,dword ptr [ebp-4]
 004CEC54    mov         edx,dword ptr [ebp-18]
 004CEC57    sub         edx,dword ptr [eax+4C]
 004CEC5A    mov         eax,dword ptr [ebp+8]
 004CEC5D    mov         eax,dword ptr [eax-8]
 004CEC60    add         dword ptr [eax+0C],edx
>004CEC63    jmp         004CECB0
 004CEC65    mov         eax,dword ptr [ebp-4]
 004CEC68    mov         edx,dword ptr [ebp-14]
 004CEC6B    sub         edx,dword ptr [eax+48]
 004CEC6E    mov         eax,dword ptr [ebp+8]
 004CEC71    mov         eax,dword ptr [eax-8]
 004CEC74    sub         dword ptr [eax],edx
>004CEC76    jmp         004CECB0
 004CEC78    mov         eax,dword ptr [ebp-4]
 004CEC7B    mov         edx,dword ptr [ebp-14]
 004CEC7E    sub         edx,dword ptr [eax+48]
 004CEC81    mov         eax,dword ptr [ebp+8]
 004CEC84    mov         eax,dword ptr [eax-8]
 004CEC87    add         dword ptr [eax+8],edx
>004CEC8A    jmp         004CECB0
 004CEC8C    mov         eax,dword ptr [ebp-4]
 004CEC8F    mov         edx,dword ptr [ebp-14]
 004CEC92    sub         edx,dword ptr [eax+48]
 004CEC95    mov         eax,dword ptr [ebp+8]
 004CEC98    mov         eax,dword ptr [eax-8]
 004CEC9B    add         dword ptr [eax+8],edx
 004CEC9E    mov         eax,dword ptr [ebp-4]
 004CECA1    mov         edx,dword ptr [ebp-18]
 004CECA4    sub         edx,dword ptr [eax+4C]
 004CECA7    mov         eax,dword ptr [ebp+8]
 004CECAA    mov         eax,dword ptr [eax-8]
 004CECAD    add         dword ptr [eax+0C],edx
 004CECB0    pop         edi
 004CECB1    pop         esi
 004CECB2    pop         ebx
 004CECB3    mov         esp,ebp
 004CECB5    pop         ebp
 004CECB6    ret
end;*}

//004CECB8
procedure DoAlign(AAlign:TAlign);
begin
{*
 004CECB8    push        ebp
 004CECB9    mov         ebp,esp
 004CECBB    add         esp,0FFFFFFDC
 004CECBE    mov         byte ptr [ebp-1],al
 004CECC1    mov         eax,dword ptr [ebp+8]
 004CECC4    mov         eax,dword ptr [eax-0C]
 004CECC7    mov         edx,dword ptr [eax]
 004CECC9    call        dword ptr [edx+8]
 004CECCC    mov         eax,dword ptr [ebp+8]
 004CECCF    cmp         dword ptr [eax-10],0
>004CECD3    je          004CED1E
 004CECD5    cmp         byte ptr [ebp-1],0
>004CECD9    je          004CECFF
 004CECDB    mov         eax,dword ptr [ebp+8]
 004CECDE    mov         eax,dword ptr [eax-10]
 004CECE1    cmp         byte ptr [eax+57],0
>004CECE5    jne         004CECFF
 004CECE7    mov         eax,dword ptr [ebp+8]
 004CECEA    mov         eax,dword ptr [eax-10]
 004CECED    test        byte ptr [eax+1C],10
>004CECF1    je          004CED1E
 004CECF3    mov         eax,dword ptr [ebp+8]
 004CECF6    mov         eax,dword ptr [eax-10]
 004CECF9    test        byte ptr [eax+51],4
>004CECFD    jne         004CED1E
 004CECFF    mov         eax,dword ptr [ebp+8]
 004CED02    mov         eax,dword ptr [eax-10]
 004CED05    mov         al,byte ptr [eax+5B]
 004CED08    cmp         al,byte ptr [ebp-1]
>004CED0B    jne         004CED1E
 004CED0D    mov         eax,dword ptr [ebp+8]
 004CED10    mov         edx,dword ptr [eax-10]
 004CED13    mov         eax,dword ptr [ebp+8]
 004CED16    mov         eax,dword ptr [eax-0C]
 004CED19    call        TList.Add
 004CED1E    mov         eax,dword ptr [ebp+8]
 004CED21    mov         eax,dword ptr [eax-4]
 004CED24    call        004CF618
 004CED29    dec         eax
 004CED2A    test        eax,eax
>004CED2C    jl          004CEDF7
 004CED32    inc         eax
 004CED33    mov         dword ptr [ebp-14],eax
 004CED36    mov         dword ptr [ebp-8],0
 004CED3D    mov         eax,dword ptr [ebp+8]
 004CED40    mov         eax,dword ptr [eax-4]
 004CED43    mov         edx,dword ptr [ebp-8]
 004CED46    call        004CF5AC
 004CED4B    mov         dword ptr [ebp-10],eax
 004CED4E    mov         eax,dword ptr [ebp-10]
 004CED51    mov         al,byte ptr [eax+5B]
 004CED54    cmp         al,byte ptr [ebp-1]
>004CED57    jne         004CEDEB
 004CED5D    cmp         byte ptr [ebp-1],0
>004CED61    je          004CED93
 004CED63    mov         eax,dword ptr [ebp-10]
 004CED66    cmp         byte ptr [eax+57],0
>004CED6A    jne         004CED93
 004CED6C    mov         eax,[004CEE50]
 004CED71    mov         edx,dword ptr [ebp-10]
 004CED74    and         eax,dword ptr [edx+50]
 004CED77    mov         edx,dword ptr ds:[4CEE50]
 004CED7D    cmp         edx,eax
>004CED7F    je          004CED93
 004CED81    mov         eax,dword ptr [ebp-10]
 004CED84    test        byte ptr [eax+1C],10
>004CED88    je          004CEDEB
 004CED8A    mov         eax,dword ptr [ebp-10]
 004CED8D    test        byte ptr [eax+51],4
>004CED91    jne         004CEDEB
 004CED93    mov         eax,dword ptr [ebp+8]
 004CED96    mov         eax,dword ptr [eax-10]
 004CED99    cmp         eax,dword ptr [ebp-10]
>004CED9C    je          004CEDEB
 004CED9E    xor         eax,eax
 004CEDA0    mov         dword ptr [ebp-0C],eax
>004CEDA3    jmp         004CEDA8
 004CEDA5    inc         dword ptr [ebp-0C]
 004CEDA8    mov         eax,dword ptr [ebp+8]
 004CEDAB    mov         eax,dword ptr [eax-0C]
 004CEDAE    mov         eax,dword ptr [eax+8]
 004CEDB1    cmp         eax,dword ptr [ebp-0C]
>004CEDB4    jle         004CEDDA
 004CEDB6    mov         eax,dword ptr [ebp+8]
 004CEDB9    push        eax
 004CEDBA    mov         eax,dword ptr [ebp+8]
 004CEDBD    mov         eax,dword ptr [eax-0C]
 004CEDC0    mov         edx,dword ptr [ebp-0C]
 004CEDC3    call        TList.Get
 004CEDC8    mov         edx,eax
 004CEDCA    mov         cl,byte ptr [ebp-1]
 004CEDCD    mov         eax,dword ptr [ebp-10]
 004CEDD0    call        004CE7A0
 004CEDD5    pop         ecx
 004CEDD6    test        al,al
>004CEDD8    je          004CEDA5
 004CEDDA    mov         eax,dword ptr [ebp+8]
 004CEDDD    mov         eax,dword ptr [eax-0C]
 004CEDE0    mov         ecx,dword ptr [ebp-10]
 004CEDE3    mov         edx,dword ptr [ebp-0C]
 004CEDE6    call        004788DC
 004CEDEB    inc         dword ptr [ebp-8]
 004CEDEE    dec         dword ptr [ebp-14]
>004CEDF1    jne         004CED3D
 004CEDF7    mov         eax,dword ptr [ebp+8]
 004CEDFA    mov         eax,dword ptr [eax-0C]
 004CEDFD    mov         eax,dword ptr [eax+8]
 004CEE00    dec         eax
 004CEE01    test        eax,eax
>004CEE03    jl          004CEE4B
 004CEE05    inc         eax
 004CEE06    mov         dword ptr [ebp-14],eax
 004CEE09    mov         dword ptr [ebp-8],0
 004CEE10    mov         eax,dword ptr [ebp+8]
 004CEE13    mov         eax,dword ptr [eax-0C]
 004CEE16    mov         dword ptr [ebp-24],eax
 004CEE19    mov         eax,dword ptr [ebp-8]
 004CEE1C    mov         dword ptr [ebp-20],eax
 004CEE1F    mov         al,byte ptr [ebp-1]
 004CEE22    mov         byte ptr [ebp-1C],al
 004CEE25    mov         eax,dword ptr [ebp+8]
 004CEE28    push        eax
 004CEE29    mov         eax,dword ptr [ebp+8]
 004CEE2C    mov         eax,dword ptr [eax-0C]
 004CEE2F    mov         edx,dword ptr [ebp-8]
 004CEE32    call        TList.Get
 004CEE37    lea         ecx,[ebp-24]
 004CEE3A    mov         dl,byte ptr [ebp-1]
 004CEE3D    call        004CE868
 004CEE42    pop         ecx
 004CEE43    inc         dword ptr [ebp-8]
 004CEE46    dec         dword ptr [ebp-14]
>004CEE49    jne         004CEE10
 004CEE4B    mov         esp,ebp
 004CEE4D    pop         ebp
 004CEE4E    ret
*}
end;

//004CEE54
function AlignWork:Boolean;
begin
{*
 004CEE54    push        ebp
 004CEE55    mov         ebp,esp
 004CEE57    add         esp,0FFFFFFF8
 004CEE5A    mov         byte ptr [ebp-1],1
 004CEE5E    mov         eax,dword ptr [ebp+8]
 004CEE61    mov         eax,dword ptr [eax-4]
 004CEE64    call        004CF618
 004CEE69    dec         eax
 004CEE6A    cmp         eax,0
>004CEE6D    jl          004CEEA8
 004CEE6F    mov         dword ptr [ebp-8],eax
 004CEE72    mov         eax,dword ptr [ebp+8]
 004CEE75    mov         eax,dword ptr [eax-4]
 004CEE78    mov         edx,dword ptr [ebp-8]
 004CEE7B    call        004CF5AC
 004CEE80    cmp         byte ptr [eax+5B],0
>004CEE84    jne         004CEEAC
 004CEE86    mov         eax,dword ptr [ebp+8]
 004CEE89    mov         eax,dword ptr [eax-4]
 004CEE8C    mov         edx,dword ptr [ebp-8]
 004CEE8F    call        004CF5AC
 004CEE94    mov         dl,byte ptr ds:[4CEEB4]
 004CEE9A    cmp         dl,byte ptr [eax+61]
>004CEE9D    jne         004CEEAC
 004CEE9F    dec         dword ptr [ebp-8]
 004CEEA2    cmp         dword ptr [ebp-8],0FFFFFFFF
>004CEEA6    jne         004CEE72
 004CEEA8    mov         byte ptr [ebp-1],0
 004CEEAC    mov         al,byte ptr [ebp-1]
 004CEEAF    pop         ecx
 004CEEB0    pop         ecx
 004CEEB1    pop         ebp
 004CEEB2    ret
*}
end;

//004CEEB8
procedure TWinControl.AlignControls(AControl:TControl; var Rect:TRect);
begin
{*
 004CEEB8    push        ebp
 004CEEB9    mov         ebp,esp
 004CEEBB    add         esp,0FFFFFFF0
 004CEEBE    push        esi
 004CEEBF    mov         dword ptr [ebp-8],ecx
 004CEEC2    mov         dword ptr [ebp-10],edx
 004CEEC5    mov         dword ptr [ebp-4],eax
 004CEEC8    mov         eax,dword ptr [ebp-4]
 004CEECB    cmp         byte ptr [eax+1A8],0
>004CEED2    je          004CEEFC
 004CEED4    mov         eax,dword ptr [ebp-4]
 004CEED7    cmp         byte ptr [eax+1A7],0
>004CEEDE    je          004CEEFC
 004CEEE0    mov         eax,dword ptr [ebp-4]
 004CEEE3    cmp         dword ptr [eax+17C],0
>004CEEEA    je          004CEEFC
 004CEEEC    mov         eax,dword ptr [ebp-4]
 004CEEEF    mov         eax,dword ptr [eax+17C]
 004CEEF5    xor         edx,edx
 004CEEF7    mov         ecx,dword ptr [eax]
 004CEEF9    call        dword ptr [ecx+2C]
 004CEEFC    push        ebp
 004CEEFD    call        AlignWork
 004CEF02    pop         ecx
 004CEF03    test        al,al
>004CEF05    je          004CEF9E
 004CEF0B    mov         edx,dword ptr [ebp-8]
 004CEF0E    mov         eax,dword ptr [ebp-4]
 004CEF11    mov         ecx,dword ptr [eax]
 004CEF13    call        dword ptr [ecx+8C]
 004CEF19    mov         dl,1
 004CEF1B    mov         eax,[004759C0];TList
 004CEF20    call        TObject.Create
 004CEF25    mov         dword ptr [ebp-0C],eax
 004CEF28    xor         eax,eax
 004CEF2A    push        ebp
 004CEF2B    push        4CEF97
 004CEF30    push        dword ptr fs:[eax]
 004CEF33    mov         dword ptr fs:[eax],esp
 004CEF36    push        ebp
 004CEF37    mov         al,1
 004CEF39    call        DoAlign
 004CEF3E    pop         ecx
 004CEF3F    push        ebp
 004CEF40    mov         al,2
 004CEF42    call        DoAlign
 004CEF47    pop         ecx
 004CEF48    push        ebp
 004CEF49    mov         al,3
 004CEF4B    call        DoAlign
 004CEF50    pop         ecx
 004CEF51    push        ebp
 004CEF52    mov         al,4
 004CEF54    call        DoAlign
 004CEF59    pop         ecx
 004CEF5A    push        ebp
 004CEF5B    mov         al,5
 004CEF5D    call        DoAlign
 004CEF62    pop         ecx
 004CEF63    push        ebp
 004CEF64    mov         al,6
 004CEF66    call        DoAlign
 004CEF6B    pop         ecx
 004CEF6C    push        ebp
 004CEF6D    xor         eax,eax
 004CEF6F    call        DoAlign
 004CEF74    pop         ecx
 004CEF75    mov         eax,dword ptr [ebp-4]
 004CEF78    mov         si,0FFC7
 004CEF7C    call        @CallDynaInst
 004CEF81    xor         eax,eax
 004CEF83    pop         edx
 004CEF84    pop         ecx
 004CEF85    pop         ecx
 004CEF86    mov         dword ptr fs:[eax],edx
 004CEF89    push        4CEF9E
 004CEF8E    mov         eax,dword ptr [ebp-0C]
 004CEF91    call        TObject.Free
 004CEF96    ret
>004CEF97    jmp         @HandleFinally
>004CEF9C    jmp         004CEF8E
 004CEF9E    mov         eax,dword ptr [ebp-4]
 004CEFA1    cmp         byte ptr [eax+1A6],0
>004CEFA8    je          004CEFB6
 004CEFAA    mov         eax,dword ptr [ebp-4]
 004CEFAD    mov         si,0FFEE
 004CEFB1    call        @CallDynaInst
 004CEFB6    pop         esi
 004CEFB7    mov         esp,ebp
 004CEFB9    pop         ebp
 004CEFBA    ret
*}
end;

//004CEFBC
procedure sub_004CEFBC(?:TWinControl; ?:TControl);
begin
{*
 004CEFBC    push        ebp
 004CEFBD    mov         ebp,esp
 004CEFBF    add         esp,0FFFFFFE8
 004CEFC2    push        ebx
 004CEFC3    mov         dword ptr [ebp-8],edx
 004CEFC6    mov         dword ptr [ebp-4],eax
 004CEFC9    mov         eax,dword ptr [ebp-4]
 004CEFCC    call        TWinControl.HandleAllocated
 004CEFD1    test        al,al
>004CEFD3    je          004CF04C
 004CEFD5    mov         eax,dword ptr [ebp-4]
 004CEFD8    test        byte ptr [eax+1C],8;TWinControl.FComponentState:TComponentState
>004CEFDC    jne         004CF04C
 004CEFDE    mov         eax,dword ptr [ebp-4]
 004CEFE1    cmp         word ptr [eax+160],0;TWinControl.FAlignLevel:Word
>004CEFE9    je          004CEFF5
 004CEFEB    mov         eax,dword ptr [ebp-4]
 004CEFEE    or          word ptr [eax+54],10;TWinControl.FControlState:TControlState
>004CEFF3    jmp         004CF04C
 004CEFF5    mov         eax,dword ptr [ebp-4]
 004CEFF8    call        TWinControl.DisableAlign
 004CEFFD    xor         eax,eax
 004CEFFF    push        ebp
 004CF000    push        4CF045
 004CF005    push        dword ptr fs:[eax]
 004CF008    mov         dword ptr fs:[eax],esp
 004CF00B    lea         edx,[ebp-18]
 004CF00E    mov         eax,dword ptr [ebp-4]
 004CF011    mov         ecx,dword ptr [eax]
 004CF013    call        dword ptr [ecx+44];TWinControl.sub_004D3A1C
 004CF016    lea         ecx,[ebp-18]
 004CF019    mov         edx,dword ptr [ebp-8]
 004CF01C    mov         eax,dword ptr [ebp-4]
 004CF01F    mov         ebx,dword ptr [eax]
 004CF021    call        dword ptr [ebx+90];TWinControl.AlignControls
 004CF027    xor         eax,eax
 004CF029    pop         edx
 004CF02A    pop         ecx
 004CF02B    pop         ecx
 004CF02C    mov         dword ptr fs:[eax],edx
 004CF02F    push        4CF04C
 004CF034    mov         eax,dword ptr [ebp-4]
 004CF037    and         word ptr [eax+54],0FFFFFFEF;TWinControl.FControlState:TControlState
 004CF03C    mov         eax,dword ptr [ebp-4]
 004CF03F    call        TWinControl.EnableAlign
 004CF044    ret
>004CF045    jmp         @HandleFinally
>004CF04A    jmp         004CF034
 004CF04C    pop         ebx
 004CF04D    mov         esp,ebp
 004CF04F    pop         ebp
 004CF050    ret
*}
end;

//004CF054
procedure TWinControl.DisableAlign;
begin
{*
 004CF054    push        ebp
 004CF055    mov         ebp,esp
 004CF057    push        ecx
 004CF058    mov         dword ptr [ebp-4],eax
 004CF05B    mov         eax,dword ptr [ebp-4]
 004CF05E    inc         word ptr [eax+160]
 004CF065    pop         ecx
 004CF066    pop         ebp
 004CF067    ret
*}
end;

//004CF068
procedure TWinControl.EnableAlign;
begin
{*
 004CF068    push        ebp
 004CF069    mov         ebp,esp
 004CF06B    push        ecx
 004CF06C    mov         dword ptr [ebp-4],eax
 004CF06F    mov         eax,dword ptr [ebp-4]
 004CF072    dec         word ptr [eax+160]
 004CF079    mov         eax,dword ptr [ebp-4]
 004CF07C    cmp         word ptr [eax+160],0
>004CF084    jne         004CF097
 004CF086    mov         eax,dword ptr [ebp-4]
 004CF089    test        byte ptr [eax+54],10
>004CF08D    je          004CF097
 004CF08F    mov         eax,dword ptr [ebp-4]
 004CF092    call        004CF09C
 004CF097    pop         ecx
 004CF098    pop         ebp
 004CF099    ret
*}
end;

//004CF09C
procedure sub_004CF09C(?:TWinControl);
begin
{*
 004CF09C    push        ebp
 004CF09D    mov         ebp,esp
 004CF09F    push        ecx
 004CF0A0    mov         dword ptr [ebp-4],eax
 004CF0A3    xor         edx,edx
 004CF0A5    mov         eax,dword ptr [ebp-4]
 004CF0A8    call        004CEFBC
 004CF0AD    pop         ecx
 004CF0AE    pop         ebp
 004CF0AF    ret
*}
end;

//004CF0B0
procedure TWinControl.sub_004CF0B0;
begin
{*
 004CF0B0    push        ebp
 004CF0B1    mov         ebp,esp
 004CF0B3    add         esp,0FFFFFFE8
 004CF0B6    mov         dword ptr [ebp-4],eax
 004CF0B9    mov         dl,1
 004CF0BB    mov         eax,[004759C0];TList
 004CF0C0    call        TObject.Create;TList.Create
 004CF0C5    mov         dword ptr [ebp-10],eax
 004CF0C8    xor         eax,eax
 004CF0CA    push        ebp
 004CF0CB    push        4CF196
 004CF0D0    push        dword ptr fs:[eax]
 004CF0D3    mov         dword ptr fs:[eax],esp
 004CF0D6    mov         eax,dword ptr [ebp-4]
 004CF0D9    call        TControl.GetClientWidth
 004CF0DE    mov         dword ptr [ebp-0C],eax
 004CF0E1    mov         eax,dword ptr [ebp-4]
 004CF0E4    call        004CF618
 004CF0E9    dec         eax
 004CF0EA    test        eax,eax
>004CF0EC    jl          004CF149
 004CF0EE    inc         eax
 004CF0EF    mov         dword ptr [ebp-14],eax
 004CF0F2    mov         dword ptr [ebp-8],0
 004CF0F9    mov         edx,dword ptr [ebp-8]
 004CF0FC    mov         eax,dword ptr [ebp-4]
 004CF0FF    call        004CF5AC
 004CF104    mov         dword ptr [ebp-18],eax
 004CF107    mov         eax,dword ptr [ebp-18]
 004CF10A    mov         eax,dword ptr [eax+4]
 004CF10D    mov         edx,dword ptr [ebp-4]
 004CF110    cmp         eax,dword ptr [edx+4];TWinControl.FOwner:TComponent
>004CF113    jne         004CF141
 004CF115    mov         edx,dword ptr [ebp-8]
 004CF118    mov         eax,dword ptr [ebp-4]
 004CF11B    call        004CF5AC
 004CF120    mov         edx,eax
 004CF122    mov         eax,dword ptr [ebp-10]
 004CF125    call        TList.Add
 004CF12A    mov         eax,dword ptr [ebp-18]
 004CF12D    mov         edx,dword ptr [ebp-0C]
 004CF130    sub         edx,dword ptr [eax+48]
 004CF133    mov         eax,dword ptr [ebp-18]
 004CF136    sub         edx,dword ptr [eax+40]
 004CF139    mov         eax,dword ptr [ebp-18]
 004CF13C    call        TTabSheet.SetLeft
 004CF141    inc         dword ptr [ebp-8]
 004CF144    dec         dword ptr [ebp-14]
>004CF147    jne         004CF0F9
 004CF149    mov         eax,dword ptr [ebp-10]
 004CF14C    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004CF14F    dec         eax
 004CF150    test        eax,eax
>004CF152    jl          004CF180
 004CF154    inc         eax
 004CF155    mov         dword ptr [ebp-14],eax
 004CF158    mov         dword ptr [ebp-8],0
 004CF15F    push        0
 004CF161    mov         edx,dword ptr [ebp-8]
 004CF164    mov         eax,dword ptr [ebp-10]
 004CF167    call        TList.Get
 004CF16C    xor         ecx,ecx
 004CF16E    mov         edx,0B03E
 004CF173    call        004CC7DC
 004CF178    inc         dword ptr [ebp-8]
 004CF17B    dec         dword ptr [ebp-14]
>004CF17E    jne         004CF15F
 004CF180    xor         eax,eax
 004CF182    pop         edx
 004CF183    pop         ecx
 004CF184    pop         ecx
 004CF185    mov         dword ptr fs:[eax],edx
 004CF188    push        4CF19D
 004CF18D    mov         eax,dword ptr [ebp-10]
 004CF190    call        TObject.Free
 004CF195    ret
>004CF196    jmp         @HandleFinally
>004CF19B    jmp         004CF18D
 004CF19D    mov         esp,ebp
 004CF19F    pop         ebp
 004CF1A0    ret
*}
end;

//004CF1A4
{*procedure TWinControl.sub_004CF1A4(?:?);
begin
 004CF1A4    push        ebp
 004CF1A5    mov         ebp,esp
 004CF1A7    add         esp,0FFFFFFE4
 004CF1AA    push        esi
 004CF1AB    mov         byte ptr [ebp-5],dl
 004CF1AE    mov         dword ptr [ebp-4],eax
 004CF1B1    mov         eax,dword ptr [ebp-4]
 004CF1B4    call        004CF618
 004CF1B9    test        eax,eax
>004CF1BB    je          004CF307
 004CF1C1    mov         dl,1
 004CF1C3    mov         eax,[004759C0];TList
 004CF1C8    call        TObject.Create;TList.Create
 004CF1CD    mov         dword ptr [ebp-10],eax
 004CF1D0    mov         eax,dword ptr [ebp-4]
 004CF1D3    call        TWinControl.DisableAlign
 004CF1D8    xor         eax,eax
 004CF1DA    push        ebp
 004CF1DB    push        4CF2AA
 004CF1E0    push        dword ptr fs:[eax]
 004CF1E3    mov         dword ptr fs:[eax],esp
 004CF1E6    mov         eax,dword ptr [ebp-4]
 004CF1E9    call        004CF618
 004CF1EE    dec         eax
 004CF1EF    test        eax,eax
>004CF1F1    jl          004CF235
 004CF1F3    inc         eax
 004CF1F4    mov         dword ptr [ebp-14],eax
 004CF1F7    mov         dword ptr [ebp-0C],0
 004CF1FE    mov         edx,dword ptr [ebp-0C]
 004CF201    mov         eax,dword ptr [ebp-4]
 004CF204    call        004CF5AC
 004CF209    mov         dword ptr [ebp-18],eax
 004CF20C    mov         eax,dword ptr [ebp-18]
 004CF20F    mov         al,byte ptr [eax+5B]
 004CF212    add         al,0FD
 004CF214    sub         al,2
>004CF216    jae         004CF22D
 004CF218    mov         edx,dword ptr [ebp-0C]
 004CF21B    mov         eax,dword ptr [ebp-4]
 004CF21E    call        004CF5AC
 004CF223    mov         edx,eax
 004CF225    mov         eax,dword ptr [ebp-10]
 004CF228    call        TList.Add
 004CF22D    inc         dword ptr [ebp-0C]
 004CF230    dec         dword ptr [ebp-14]
>004CF233    jne         004CF1FE
 004CF235    mov         eax,dword ptr [ebp-4]
 004CF238    mov         si,0FFC0
 004CF23C    call        @CallDynaInst;TWinControl.sub_004CF0B0
 004CF241    xor         eax,eax
 004CF243    pop         edx
 004CF244    pop         ecx
 004CF245    pop         ecx
 004CF246    mov         dword ptr fs:[eax],edx
 004CF249    push        4CF2B1
>004CF24E    jmp         004CF290
 004CF250    mov         eax,dword ptr [ebp-10]
 004CF253    mov         edx,dword ptr [eax+8];TList.FCount:Integer
 004CF256    dec         edx
 004CF257    mov         eax,dword ptr [ebp-10]
 004CF25A    call        TList.Get
 004CF25F    mov         dword ptr [ebp-1C],eax
 004CF262    mov         eax,dword ptr [ebp-1C]
 004CF265    cmp         byte ptr [eax+5B],3
>004CF269    jne         004CF277
 004CF26B    mov         dl,4
 004CF26D    mov         eax,dword ptr [ebp-1C]
 004CF270    call        TImage.SetAlign
>004CF275    jmp         004CF281
 004CF277    mov         dl,3
 004CF279    mov         eax,dword ptr [ebp-1C]
 004CF27C    call        TImage.SetAlign
 004CF281    mov         eax,dword ptr [ebp-10]
 004CF284    mov         edx,dword ptr [eax+8];TList.FCount:Integer
 004CF287    dec         edx
 004CF288    mov         eax,dword ptr [ebp-10]
 004CF28B    call        00478668
 004CF290    mov         eax,dword ptr [ebp-10]
 004CF293    cmp         dword ptr [eax+8],0;TList.FCount:Integer
>004CF297    jg          004CF250
 004CF299    mov         eax,dword ptr [ebp-10]
 004CF29C    call        TObject.Free
 004CF2A1    mov         eax,dword ptr [ebp-4]
 004CF2A4    call        TWinControl.EnableAlign
 004CF2A9    ret
>004CF2AA    jmp         @HandleFinally
>004CF2AF    jmp         004CF290
 004CF2B1    cmp         byte ptr [ebp-5],0
>004CF2B5    je          004CF307
 004CF2B7    mov         eax,dword ptr [ebp-4]
 004CF2BA    call        004CF618
 004CF2BF    dec         eax
 004CF2C0    test        eax,eax
>004CF2C2    jl          004CF307
 004CF2C4    inc         eax
 004CF2C5    mov         dword ptr [ebp-14],eax
 004CF2C8    mov         dword ptr [ebp-0C],0
 004CF2CF    mov         edx,dword ptr [ebp-0C]
 004CF2D2    mov         eax,dword ptr [ebp-4]
 004CF2D5    call        004CF5AC
 004CF2DA    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004CF2E0    call        @IsClass
 004CF2E5    test        al,al
>004CF2E7    je          004CF2FF
 004CF2E9    mov         edx,dword ptr [ebp-0C]
 004CF2EC    mov         eax,dword ptr [ebp-4]
 004CF2EF    call        004CF5AC
 004CF2F4    mov         dl,1
 004CF2F6    mov         si,0FFB6
 004CF2FA    call        @CallDynaInst
 004CF2FF    inc         dword ptr [ebp-0C]
 004CF302    dec         dword ptr [ebp-14]
>004CF305    jne         004CF2CF
 004CF307    pop         esi
 004CF308    mov         esp,ebp
 004CF30A    pop         ebp
 004CF30B    ret
end;*}

//004CF30C
{*function sub_004CF30C(?:TWinControl; ?:?):?;
begin
 004CF30C    push        ebp
 004CF30D    mov         ebp,esp
 004CF30F    add         esp,0FFFFFFF4
 004CF312    mov         dword ptr [ebp-8],edx
 004CF315    mov         dword ptr [ebp-4],eax
>004CF318    jmp         004CF323
 004CF31A    mov         eax,dword ptr [ebp-8]
 004CF31D    mov         eax,dword ptr [eax+30]
 004CF320    mov         dword ptr [ebp-8],eax
 004CF323    cmp         dword ptr [ebp-8],0
>004CF327    je          004CF331
 004CF329    mov         eax,dword ptr [ebp-8]
 004CF32C    cmp         eax,dword ptr [ebp-4]
>004CF32F    jne         004CF31A
 004CF331    cmp         dword ptr [ebp-8],0
 004CF335    setne       byte ptr [ebp-9]
 004CF339    mov         al,byte ptr [ebp-9]
 004CF33C    mov         esp,ebp
 004CF33E    pop         ebp
 004CF33F    ret
end;*}

//004CF340
{*procedure sub_004CF340(?:TControl; ?:?);
begin
 004CF340    push        ebp
 004CF341    mov         ebp,esp
 004CF343    add         esp,0FFFFFFF4
 004CF346    mov         byte ptr [ebp-5],dl
 004CF349    mov         dword ptr [ebp-4],eax
 004CF34C    mov         eax,dword ptr [ebp-4]
 004CF34F    call        004E7ED8
 004CF354    mov         dword ptr [ebp-0C],eax
 004CF357    cmp         dword ptr [ebp-0C],0
>004CF35B    je          004CF36B
 004CF35D    mov         cl,byte ptr [ebp-5]
 004CF360    mov         edx,dword ptr [ebp-4]
 004CF363    mov         eax,dword ptr [ebp-0C]
 004CF366    call        004ECAF8
 004CF36B    mov         esp,ebp
 004CF36D    pop         ebp
 004CF36E    ret
end;*}

//004CF370
{*procedure sub_004CF370(?:?; ?:TControl);
begin
 004CF370    push        ebp
 004CF371    mov         ebp,esp
 004CF373    add         esp,0FFFFFFF8
 004CF376    mov         dword ptr [ebp-8],edx
 004CF379    mov         dword ptr [ebp-4],eax
 004CF37C    cmp         dword ptr [ebp-8],0
>004CF380    je          004CF3CF
 004CF382    mov         eax,dword ptr [ebp-8]
 004CF385    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004CF38B    call        @IsClass
 004CF390    test        al,al
>004CF392    je          004CF3B6
 004CF394    mov         eax,dword ptr [ebp-4]
 004CF397    add         eax,19C
 004CF39C    mov         edx,dword ptr [ebp-8]
 004CF39F    call        004C8FD4
 004CF3A4    mov         eax,dword ptr [ebp-4]
 004CF3A7    add         eax,194
 004CF3AC    mov         edx,dword ptr [ebp-8]
 004CF3AF    call        004C8FD4
>004CF3B4    jmp         004CF3C6
 004CF3B6    mov         eax,dword ptr [ebp-4]
 004CF3B9    add         eax,198
 004CF3BE    mov         edx,dword ptr [ebp-8]
 004CF3C1    call        004C8FD4
 004CF3C6    mov         eax,dword ptr [ebp-4]
 004CF3C9    mov         edx,dword ptr [ebp-8]
 004CF3CC    mov         dword ptr [edx+30],eax
 004CF3CF    pop         ecx
 004CF3D0    pop         ecx
 004CF3D1    pop         ebp
 004CF3D2    ret
end;*}

//004CF3D4
procedure sub_004CF3D4(?:TWinControl; ?:TControl);
begin
{*
 004CF3D4    push        ebp
 004CF3D5    mov         ebp,esp
 004CF3D7    add         esp,0FFFFFFF8
 004CF3DA    mov         dword ptr [ebp-8],edx
 004CF3DD    mov         dword ptr [ebp-4],eax
 004CF3E0    mov         eax,dword ptr [ebp-8]
 004CF3E3    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004CF3E9    call        @IsClass
 004CF3EE    test        al,al
>004CF3F0    je          004CF414
 004CF3F2    mov         eax,dword ptr [ebp-4]
 004CF3F5    add         eax,194
 004CF3FA    mov         edx,dword ptr [ebp-8]
 004CF3FD    call        004C900C
 004CF402    mov         eax,dword ptr [ebp-4]
 004CF405    add         eax,19C
 004CF40A    mov         edx,dword ptr [ebp-8]
 004CF40D    call        004C900C
>004CF412    jmp         004CF424
 004CF414    mov         eax,dword ptr [ebp-4]
 004CF417    add         eax,198
 004CF41C    mov         edx,dword ptr [ebp-8]
 004CF41F    call        004C900C
 004CF424    mov         eax,dword ptr [ebp-8]
 004CF427    xor         edx,edx
 004CF429    mov         dword ptr [eax+30],edx
 004CF42C    pop         ecx
 004CF42D    pop         ecx
 004CF42E    pop         ebp
 004CF42F    ret
*}
end;

//004CF430
{*procedure sub_004CF430(?:?; ?:TControl);
begin
 004CF430    push        ebp
 004CF431    mov         ebp,esp
 004CF433    add         esp,0FFFFFFF8
 004CF436    push        esi
 004CF437    mov         dword ptr [ebp-8],edx
 004CF43A    mov         dword ptr [ebp-4],eax
 004CF43D    mov         edx,dword ptr [ebp-4]
 004CF440    mov         eax,dword ptr [ebp-8]
 004CF443    mov         si,0FFF5
 004CF447    call        @CallDynaInst;TComponent.sub_004836AC
 004CF44C    push        1
 004CF44E    mov         ecx,dword ptr [ebp-8]
 004CF451    mov         edx,0B02C
 004CF456    mov         eax,dword ptr [ebp-4]
 004CF459    call        004CC7DC
 004CF45E    mov         edx,dword ptr [ebp-8]
 004CF461    mov         eax,dword ptr [ebp-4]
 004CF464    call        004CF370
 004CF469    mov         eax,dword ptr [ebp-8]
 004CF46C    test        byte ptr [eax+1C],2;TControl.FComponentState:TComponentState
>004CF470    jne         004CF506
 004CF476    push        0
 004CF478    xor         ecx,ecx
 004CF47A    mov         edx,0B009
 004CF47F    mov         eax,dword ptr [ebp-8]
 004CF482    call        004CC7DC
 004CF487    push        0
 004CF489    xor         ecx,ecx
 004CF48B    mov         edx,0B008
 004CF490    mov         eax,dword ptr [ebp-8]
 004CF493    call        004CC7DC
 004CF498    push        0
 004CF49A    xor         ecx,ecx
 004CF49C    mov         edx,0B023
 004CF4A1    mov         eax,dword ptr [ebp-8]
 004CF4A4    call        004CC7DC
 004CF4A9    push        0
 004CF4AB    xor         ecx,ecx
 004CF4AD    mov         edx,0B03D
 004CF4B2    mov         eax,dword ptr [ebp-8]
 004CF4B5    call        004CC7DC
 004CF4BA    mov         eax,dword ptr [ebp-8]
 004CF4BD    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004CF4C3    call        @IsClass
 004CF4C8    test        al,al
>004CF4CA    je          004CF4E7
 004CF4CC    push        0
 004CF4CE    xor         ecx,ecx
 004CF4D0    mov         edx,0B011
 004CF4D5    mov         eax,dword ptr [ebp-8]
 004CF4D8    call        004CC7DC
 004CF4DD    mov         eax,dword ptr [ebp-4]
 004CF4E0    call        004D02BC
>004CF4E5    jmp         004CF4FB
 004CF4E7    mov         eax,dword ptr [ebp-4]
 004CF4EA    call        TWinControl.HandleAllocated
 004CF4EF    test        al,al
>004CF4F1    je          004CF4FB
 004CF4F3    mov         eax,dword ptr [ebp-8]
 004CF4F6    mov         edx,dword ptr [eax]
 004CF4F8    call        dword ptr [edx+7C];TControl.sub_004CB6E8
 004CF4FB    mov         edx,dword ptr [ebp-8]
 004CF4FE    mov         eax,dword ptr [ebp-4]
 004CF501    call        004CEFBC
 004CF506    push        1
 004CF508    mov         ecx,dword ptr [ebp-8]
 004CF50B    mov         edx,0B036
 004CF510    mov         eax,dword ptr [ebp-4]
 004CF513    call        004CC7DC
 004CF518    pop         esi
 004CF519    pop         ecx
 004CF51A    pop         ecx
 004CF51B    pop         ebp
 004CF51C    ret
end;*}

//004CF520
procedure sub_004CF520(?:TWinControl; ?:TControl);
begin
{*
 004CF520    push        ebp
 004CF521    mov         ebp,esp
 004CF523    add         esp,0FFFFFFF8
 004CF526    mov         dword ptr [ebp-8],edx
 004CF529    mov         dword ptr [ebp-4],eax
 004CF52C    push        0
 004CF52E    mov         ecx,dword ptr [ebp-8]
 004CF531    mov         edx,0B036
 004CF536    mov         eax,dword ptr [ebp-4]
 004CF539    call        004CC7DC
 004CF53E    mov         eax,dword ptr [ebp-8]
 004CF541    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004CF547    call        @IsClass
 004CF54C    test        al,al
>004CF54E    je          004CF564
 004CF550    mov         dl,1
 004CF552    mov         eax,dword ptr [ebp-8]
 004CF555    call        004CF340
 004CF55A    mov         eax,dword ptr [ebp-8]
 004CF55D    call        004D00C4
>004CF562    jmp         004CF580
 004CF564    mov         eax,dword ptr [ebp-4]
 004CF567    call        TWinControl.HandleAllocated
 004CF56C    test        al,al
>004CF56E    je          004CF580
 004CF570    xor         ecx,ecx
 004CF572    mov         eax,dword ptr [ebp-8]
 004CF575    mov         dl,byte ptr [eax+57];TControl.FVisible:Boolean
 004CF578    mov         eax,dword ptr [ebp-8]
 004CF57B    call        004CB65C
 004CF580    mov         edx,dword ptr [ebp-8]
 004CF583    mov         eax,dword ptr [ebp-4]
 004CF586    call        004CF3D4
 004CF58B    push        0
 004CF58D    mov         ecx,dword ptr [ebp-8]
 004CF590    mov         edx,0B02C
 004CF595    mov         eax,dword ptr [ebp-4]
 004CF598    call        004CC7DC
 004CF59D    mov         eax,dword ptr [ebp-4]
 004CF5A0    call        004CF09C
 004CF5A5    pop         ecx
 004CF5A6    pop         ecx
 004CF5A7    pop         ebp
 004CF5A8    ret
*}
end;

//004CF5AC
{*function sub_004CF5AC(?:TWinControl; ?:?):?;
begin
 004CF5AC    push        ebp
 004CF5AD    mov         ebp,esp
 004CF5AF    add         esp,0FFFFFFF0
 004CF5B2    mov         dword ptr [ebp-8],edx
 004CF5B5    mov         dword ptr [ebp-4],eax
 004CF5B8    mov         eax,dword ptr [ebp-4]
 004CF5BB    cmp         dword ptr [eax+198],0;TWinControl.FControls:TList
>004CF5C2    je          004CF5D5
 004CF5C4    mov         eax,dword ptr [ebp-4]
 004CF5C7    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 004CF5CD    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004CF5D0    mov         dword ptr [ebp-10],eax
>004CF5D3    jmp         004CF5DA
 004CF5D5    xor         eax,eax
 004CF5D7    mov         dword ptr [ebp-10],eax
 004CF5DA    mov         eax,dword ptr [ebp-8]
 004CF5DD    cmp         eax,dword ptr [ebp-10]
>004CF5E0    jge         004CF5F8
 004CF5E2    mov         edx,dword ptr [ebp-8]
 004CF5E5    mov         eax,dword ptr [ebp-4]
 004CF5E8    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 004CF5EE    call        TList.Get
 004CF5F3    mov         dword ptr [ebp-0C],eax
>004CF5F6    jmp         004CF60F
 004CF5F8    mov         edx,dword ptr [ebp-8]
 004CF5FB    sub         edx,dword ptr [ebp-10]
 004CF5FE    mov         eax,dword ptr [ebp-4]
 004CF601    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 004CF607    call        TList.Get
 004CF60C    mov         dword ptr [ebp-0C],eax
 004CF60F    mov         eax,dword ptr [ebp-0C]
 004CF612    mov         esp,ebp
 004CF614    pop         ebp
 004CF615    ret
end;*}

//004CF618
{*function sub_004CF618(?:TWinControl):?;
begin
 004CF618    push        ebp
 004CF619    mov         ebp,esp
 004CF61B    add         esp,0FFFFFFF8
 004CF61E    mov         dword ptr [ebp-4],eax
 004CF621    xor         eax,eax
 004CF623    mov         dword ptr [ebp-8],eax
 004CF626    mov         eax,dword ptr [ebp-4]
 004CF629    cmp         dword ptr [eax+198],0;TWinControl.FControls:TList
>004CF630    je          004CF641
 004CF632    mov         eax,dword ptr [ebp-4]
 004CF635    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 004CF63B    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004CF63E    add         dword ptr [ebp-8],eax
 004CF641    mov         eax,dword ptr [ebp-4]
 004CF644    cmp         dword ptr [eax+19C],0;TWinControl.FWinControls:TList
>004CF64B    je          004CF65C
 004CF64D    mov         eax,dword ptr [ebp-4]
 004CF650    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 004CF656    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004CF659    add         dword ptr [ebp-8],eax
 004CF65C    mov         eax,dword ptr [ebp-8]
 004CF65F    pop         ecx
 004CF660    pop         ecx
 004CF661    pop         ebp
 004CF662    ret
end;*}

//004CF664
{*procedure sub_004CF664(?:TWinControl; ?:?);
begin
 004CF664    push        ebp
 004CF665    mov         ebp,esp
 004CF667    add         esp,0FFFFFFF0
 004CF66A    push        ebx
 004CF66B    mov         dword ptr [ebp-8],edx
 004CF66E    mov         dword ptr [ebp-4],eax
 004CF671    mov         eax,dword ptr [ebp-4]
 004CF674    call        004CF618
 004CF679    dec         eax
 004CF67A    test        eax,eax
>004CF67C    jl          004CF6B0
 004CF67E    inc         eax
 004CF67F    mov         dword ptr [ebp-10],eax
 004CF682    mov         dword ptr [ebp-0C],0
 004CF689    mov         edx,dword ptr [ebp-0C]
 004CF68C    mov         eax,dword ptr [ebp-4]
 004CF68F    call        004CF5AC
 004CF694    mov         ebx,eax
 004CF696    mov         edx,dword ptr [ebp-8]
 004CF699    mov         eax,dword ptr [ebx+3C]
 004CF69C    call        dword ptr [ebx+38]
 004CF69F    mov         eax,dword ptr [ebp-8]
 004CF6A2    cmp         dword ptr [eax+0C],0
>004CF6A6    jne         004CF6B0
 004CF6A8    inc         dword ptr [ebp-0C]
 004CF6AB    dec         dword ptr [ebp-10]
>004CF6AE    jne         004CF689
 004CF6B0    pop         ebx
 004CF6B1    mov         esp,ebp
 004CF6B3    pop         ebp
 004CF6B4    ret
end;*}

//004CF6B8
{*procedure sub_004CF6B8(?:TWinControl; ?:?);
begin
 004CF6B8    push        ebp
 004CF6B9    mov         ebp,esp
 004CF6BB    add         esp,0FFFFFFE8
 004CF6BE    mov         word ptr [ebp-6],dx
 004CF6C2    mov         dword ptr [ebp-4],eax
 004CF6C5    movzx       eax,word ptr [ebp-6]
 004CF6C9    mov         dword ptr [ebp-16],eax
 004CF6CC    xor         eax,eax
 004CF6CE    mov         dword ptr [ebp-12],eax
 004CF6D1    xor         eax,eax
 004CF6D3    mov         dword ptr [ebp-0E],eax
 004CF6D6    xor         eax,eax
 004CF6D8    mov         dword ptr [ebp-0A],eax
 004CF6DB    lea         edx,[ebp-16]
 004CF6DE    mov         eax,dword ptr [ebp-4]
 004CF6E1    call        004CF664
 004CF6E6    mov         esp,ebp
 004CF6E8    pop         ebp
 004CF6E9    ret
end;*}

//004CF6EC
{*procedure sub_004CF6EC(?:TWinControl; ?:?; ?:?);
begin
 004CF6EC    push        ebp
 004CF6ED    mov         ebp,esp
 004CF6EF    add         esp,0FFFFFFF0
 004CF6F2    mov         dword ptr [ebp-0C],ecx
 004CF6F5    mov         dword ptr [ebp-8],edx
 004CF6F8    mov         dword ptr [ebp-4],eax
 004CF6FB    cmp         dword ptr [ebp-0C],0
>004CF6FF    je          004CF78E
 004CF705    mov         eax,dword ptr [ebp-8]
 004CF708    mov         eax,dword ptr [eax+34]
 004CF70B    mov         dword ptr [ebp-10],eax
 004CF70E    mov         eax,dword ptr [ebp-8]
 004CF711    add         eax,24
 004CF714    push        eax
 004CF715    mov         eax,dword ptr [ebp-0C]
 004CF718    push        eax
 004CF719    mov         eax,[0055C664];gvar_0055C664
 004CF71E    push        eax
 004CF71F    call        user32.GetClassInfoA
 004CF724    test        eax,eax
>004CF726    jne         004CF771
 004CF728    mov         eax,dword ptr [ebp-8]
 004CF72B    add         eax,24
 004CF72E    push        eax
 004CF72F    mov         eax,dword ptr [ebp-0C]
 004CF732    push        eax
 004CF733    push        0
 004CF735    call        user32.GetClassInfoA
 004CF73A    test        eax,eax
>004CF73C    jne         004CF771
 004CF73E    mov         eax,dword ptr [ebp-8]
 004CF741    add         eax,24
 004CF744    push        eax
 004CF745    mov         eax,dword ptr [ebp-0C]
 004CF748    push        eax
 004CF749    mov         eax,[0055B29C];^gvar_0055C02C
 004CF74E    mov         eax,dword ptr [eax]
 004CF750    push        eax
 004CF751    call        user32.GetClassInfoA
 004CF756    test        eax,eax
>004CF758    jne         004CF771
 004CF75A    mov         eax,dword ptr [ebp-8]
 004CF75D    add         eax,24
 004CF760    push        eax
 004CF761    mov         eax,dword ptr [ebp-0C]
 004CF764    push        eax
 004CF765    mov         eax,dword ptr [ebp-8]
 004CF768    mov         eax,dword ptr [eax+34]
 004CF76B    push        eax
 004CF76C    call        user32.GetClassInfoA
 004CF771    mov         eax,dword ptr [ebp-8]
 004CF774    mov         edx,dword ptr [ebp-10]
 004CF777    mov         dword ptr [eax+34],edx
 004CF77A    mov         eax,dword ptr [ebp-8]
 004CF77D    mov         eax,dword ptr [eax+24]
 004CF780    and         eax,0FFFFBF1F
 004CF785    or          eax,3
 004CF788    mov         edx,dword ptr [ebp-8]
 004CF78B    mov         dword ptr [edx+24],eax
 004CF78E    mov         esp,ebp
 004CF790    pop         ebp
 004CF791    ret
end;*}

//004CF794
{*procedure sub_004CF794(?:TWinControl; ?:?);
begin
 004CF794    push        ebp
 004CF795    mov         ebp,esp
 004CF797    add         esp,0FFFFFFF8
 004CF79A    push        esi
 004CF79B    mov         dword ptr [ebp-8],edx
 004CF79E    mov         dword ptr [ebp-4],eax
 004CF7A1    mov         eax,dword ptr [ebp-4]
 004CF7A4    call        004CB90C
 004CF7A9    test        al,al
>004CF7AB    je          004CF7B6
 004CF7AD    mov         eax,dword ptr [ebp-8]
 004CF7B0    or          dword ptr [eax],2000
 004CF7B6    mov         eax,dword ptr [ebp-4]
 004CF7B9    call        004CB96C
 004CF7BE    test        al,al
>004CF7C0    je          004CF7CB
 004CF7C2    mov         eax,dword ptr [ebp-8]
 004CF7C5    or          dword ptr [eax],4000
 004CF7CB    mov         eax,dword ptr [ebp-4]
 004CF7CE    mov         si,0FFC8
 004CF7D2    call        @CallDynaInst
 004CF7D7    test        al,al
>004CF7D9    je          004CF80C
 004CF7DB    mov         eax,dword ptr [ebp-4]
 004CF7DE    mov         si,0FFCA
 004CF7E2    call        @CallDynaInst
 004CF7E7    test        al,al
>004CF7E9    jne         004CF7F6
 004CF7EB    mov         eax,dword ptr [ebp-8]
 004CF7EE    or          dword ptr [eax],1000
>004CF7F4    jmp         004CF80C
 004CF7F6    mov         eax,dword ptr [ebp-4]
 004CF7F9    mov         si,0FFCA
 004CF7FD    call        @CallDynaInst
 004CF802    cmp         al,1
>004CF804    jne         004CF80C
 004CF806    mov         eax,dword ptr [ebp-8]
 004CF809    or          dword ptr [eax],0
 004CF80C    pop         esi
 004CF80D    pop         ecx
 004CF80E    pop         ecx
 004CF80F    pop         ebp
 004CF810    ret
end;*}

//004CF814
{*procedure sub_004CF814(?:?);
begin
 004CF814    push        ebp
 004CF815    mov         ebp,esp
 004CF817    add         esp,0FFFFFEF4
 004CF81D    xor         ecx,ecx
 004CF81F    mov         dword ptr [ebp-0C],ecx
 004CF822    mov         dword ptr [ebp-8],edx
 004CF825    mov         dword ptr [ebp-4],eax
 004CF828    xor         eax,eax
 004CF82A    push        ebp
 004CF82B    push        4CF992
 004CF830    push        dword ptr fs:[eax]
 004CF833    mov         dword ptr fs:[eax],esp
 004CF836    mov         eax,dword ptr [ebp-8]
 004CF839    xor         ecx,ecx
 004CF83B    mov         edx,8C
 004CF840    call        @FillChar
 004CF845    mov         eax,dword ptr [ebp-8]
 004CF848    mov         edx,dword ptr [ebp-4]
 004CF84B    mov         edx,dword ptr [edx+64];TWinControl.FText:PChar
 004CF84E    mov         dword ptr [eax],edx
 004CF850    mov         eax,dword ptr [ebp-8]
 004CF853    mov         dword ptr [eax+4],44000000
 004CF85A    mov         edx,dword ptr [ebp-8]
 004CF85D    add         edx,8
 004CF860    mov         eax,dword ptr [ebp-4]
 004CF863    call        004CF794
 004CF868    mov         eax,dword ptr [ebp-4]
 004CF86B    test        byte ptr [eax+50],1;TWinControl.FControlStyle:TControlStyle
>004CF86F    je          004CF885
 004CF871    mov         eax,dword ptr [ebp-8]
 004CF874    or          dword ptr [eax+4],2000000
 004CF87B    mov         eax,dword ptr [ebp-8]
 004CF87E    or          dword ptr [eax+8],10000
 004CF885    mov         eax,dword ptr [ebp-4]
 004CF888    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004CF88C    jne         004CF8A4
 004CF88E    mov         eax,dword ptr [ebp-4]
 004CF891    mov         edx,dword ptr [eax]
 004CF893    call        dword ptr [edx+50];TImage.GetEnabled
 004CF896    test        al,al
>004CF898    jne         004CF8A4
 004CF89A    mov         eax,dword ptr [ebp-8]
 004CF89D    or          dword ptr [eax+4],8000000
 004CF8A4    mov         eax,dword ptr [ebp-4]
 004CF8A7    cmp         byte ptr [eax+1A4],0;TWinControl.FTabStop:Boolean
>004CF8AE    je          004CF8BA
 004CF8B0    mov         eax,dword ptr [ebp-8]
 004CF8B3    or          dword ptr [eax+4],10000
 004CF8BA    mov         eax,dword ptr [ebp-8]
 004CF8BD    mov         edx,dword ptr [ebp-4]
 004CF8C0    mov         edx,dword ptr [edx+40];TWinControl.Left:Integer
 004CF8C3    mov         dword ptr [eax+0C],edx
 004CF8C6    mov         eax,dword ptr [ebp-8]
 004CF8C9    mov         edx,dword ptr [ebp-4]
 004CF8CC    mov         edx,dword ptr [edx+44];TWinControl.Top:Integer
 004CF8CF    mov         dword ptr [eax+10],edx
 004CF8D2    mov         eax,dword ptr [ebp-8]
 004CF8D5    mov         edx,dword ptr [ebp-4]
 004CF8D8    mov         edx,dword ptr [edx+48];TWinControl.Width:Integer
 004CF8DB    mov         dword ptr [eax+14],edx
 004CF8DE    mov         eax,dword ptr [ebp-8]
 004CF8E1    mov         edx,dword ptr [ebp-4]
 004CF8E4    mov         edx,dword ptr [edx+4C];TWinControl.Height:Integer
 004CF8E7    mov         dword ptr [eax+18],edx
 004CF8EA    mov         eax,dword ptr [ebp-4]
 004CF8ED    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004CF8F1    je          004CF906
 004CF8F3    mov         eax,dword ptr [ebp-4]
 004CF8F6    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004CF8F9    call        TWinControl.GetHandle
 004CF8FE    mov         edx,dword ptr [ebp-8]
 004CF901    mov         dword ptr [edx+1C],eax
>004CF904    jmp         004CF915
 004CF906    mov         eax,dword ptr [ebp-8]
 004CF909    mov         edx,dword ptr [ebp-4]
 004CF90C    mov         edx,dword ptr [edx+190];TWinControl.FParentWindow:HWND
 004CF912    mov         dword ptr [eax+1C],edx
 004CF915    mov         eax,dword ptr [ebp-8]
 004CF918    mov         dword ptr [eax+24],0B
 004CF91F    mov         eax,407AE4;user32.DefWindowProcA:Longint
 004CF924    mov         edx,dword ptr [ebp-8]
 004CF927    mov         dword ptr [edx+28],eax
 004CF92A    push        7F00
 004CF92F    push        0
 004CF931    call        user32.LoadCursorA
 004CF936    mov         edx,dword ptr [ebp-8]
 004CF939    mov         dword ptr [edx+3C],eax
 004CF93C    mov         eax,dword ptr [ebp-8]
 004CF93F    xor         edx,edx
 004CF941    mov         dword ptr [eax+40],edx
 004CF944    mov         eax,dword ptr [ebp-8]
 004CF947    mov         edx,dword ptr ds:[55C664];gvar_0055C664
 004CF94D    mov         dword ptr [eax+34],edx
 004CF950    lea         edx,[ebp-10C]
 004CF956    mov         eax,dword ptr [ebp-4]
 004CF959    mov         eax,dword ptr [eax]
 004CF95B    call        TObject.ClassName
 004CF960    lea         edx,[ebp-10C]
 004CF966    lea         eax,[ebp-0C]
 004CF969    call        @LStrFromString
 004CF96E    mov         edx,dword ptr [ebp-0C]
 004CF971    mov         eax,dword ptr [ebp-8]
 004CF974    add         eax,4C
 004CF977    call        004672D8
 004CF97C    xor         eax,eax
 004CF97E    pop         edx
 004CF97F    pop         ecx
 004CF980    pop         ecx
 004CF981    mov         dword ptr fs:[eax],edx
 004CF984    push        4CF999
 004CF989    lea         eax,[ebp-0C]
 004CF98C    call        @LStrClr
 004CF991    ret
>004CF992    jmp         @HandleFinally
>004CF997    jmp         004CF989
 004CF999    mov         esp,ebp
 004CF99B    pop         ebp
 004CF99C    ret
end;*}

//004CF9A0
procedure TWinControl.CreateWnd;
begin
{*
 004CF9A0    push        ebp
 004CF9A1    mov         ebp,esp
 004CF9A3    add         esp,0FFFFFF38
 004CF9A9    push        esi
 004CF9AA    xor         edx,edx
 004CF9AC    mov         dword ptr [ebp-0C8],edx
 004CF9B2    mov         dword ptr [ebp-4],eax
 004CF9B5    xor         eax,eax
 004CF9B7    push        ebp
 004CF9B8    push        4CFBAA
 004CF9BD    push        dword ptr fs:[eax]
 004CF9C0    mov         dword ptr fs:[eax],esp
 004CF9C3    lea         edx,[ebp-94]
 004CF9C9    mov         eax,dword ptr [ebp-4]
 004CF9CC    mov         ecx,dword ptr [eax]
 004CF9CE    call        dword ptr [ecx+98]
 004CF9D4    cmp         dword ptr [ebp-78],0
>004CF9D8    jne         004CFA64
 004CF9DE    test        byte ptr [ebp-8D],40
>004CF9E5    je          004CFA64
 004CF9E7    mov         eax,dword ptr [ebp-4]
 004CF9EA    cmp         dword ptr [eax+4],0
>004CF9EE    je          004CFA21
 004CF9F0    mov         eax,dword ptr [ebp-4]
 004CF9F3    mov         eax,dword ptr [eax+4]
 004CF9F6    test        byte ptr [eax+1C],2
>004CF9FA    je          004CFA21
 004CF9FC    mov         eax,dword ptr [ebp-4]
 004CF9FF    mov         eax,dword ptr [eax+4]
 004CFA02    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004CFA08    call        @IsClass
 004CFA0D    test        al,al
>004CFA0F    je          004CFA21
 004CFA11    mov         eax,dword ptr [ebp-4]
 004CFA14    mov         eax,dword ptr [eax+4]
 004CFA17    call        TWinControl.GetHandle
 004CFA1C    mov         dword ptr [ebp-78],eax
>004CFA1F    jmp         004CFA64
 004CFA21    mov         eax,dword ptr [ebp-4]
 004CFA24    mov         eax,dword ptr [eax+8]
 004CFA27    mov         dword ptr [ebp-0C4],eax
 004CFA2D    mov         byte ptr [ebp-0C0],0B
 004CFA34    lea         eax,[ebp-0C4]
 004CFA3A    push        eax
 004CFA3B    push        0
 004CFA3D    lea         edx,[ebp-0C8]
 004CFA43    mov         eax,[0055B530];^SParentRequired:TResStringRec
 004CFA48    call        LoadResString
 004CFA4D    mov         ecx,dword ptr [ebp-0C8]
 004CFA53    mov         dl,1
 004CFA55    mov         eax,[00475960];EInvalidOperation
 004CFA5A    call        Exception.CreateFmt
 004CFA5F    call        @RaiseExcept
 004CFA64    mov         eax,dword ptr [ebp-6C]
 004CFA67    mov         edx,dword ptr [ebp-4]
 004CFA6A    mov         dword ptr [edx+174],eax
 004CFA70    lea         eax,[ebp-0BC]
 004CFA76    push        eax
 004CFA77    lea         eax,[ebp-48]
 004CFA7A    push        eax
 004CFA7B    mov         eax,dword ptr [ebp-60]
 004CFA7E    push        eax
 004CFA7F    call        user32.GetClassInfoA
 004CFA84    cmp         eax,1
 004CFA87    sbb         eax,eax
 004CFA89    inc         eax
 004CFA8A    mov         byte ptr [ebp-5],al
 004CFA8D    cmp         byte ptr [ebp-5],0
>004CFA91    je          004CFAA0
 004CFA93    mov         eax,4C6E80;sub_004C6E80
 004CFA98    cmp         eax,dword ptr [ebp-0B8]
>004CFA9E    je          004CFAD3
 004CFAA0    cmp         byte ptr [ebp-5],0
>004CFAA4    je          004CFAB3
 004CFAA6    mov         eax,dword ptr [ebp-60]
 004CFAA9    push        eax
 004CFAAA    lea         eax,[ebp-48]
 004CFAAD    push        eax
 004CFAAE    call        user32.UnregisterClassA
 004CFAB3    mov         dword ptr [ebp-6C],4C6E80;sub_004C6E80
 004CFABA    lea         eax,[ebp-48]
 004CFABD    mov         dword ptr [ebp-4C],eax
 004CFAC0    lea         eax,[ebp-70]
 004CFAC3    push        eax
 004CFAC4    call        user32.RegisterClassA
 004CFAC9    test        ax,ax
>004CFACC    jne         004CFAD3
 004CFACE    call        RaiseLastOSError
 004CFAD3    mov         eax,dword ptr [ebp-4]
 004CFAD6    mov         [0054167C],eax;gvar_0054167C
 004CFADB    lea         edx,[ebp-94]
 004CFAE1    mov         eax,dword ptr [ebp-4]
 004CFAE4    mov         ecx,dword ptr [eax]
 004CFAE6    call        dword ptr [ecx+9C]
 004CFAEC    mov         eax,dword ptr [ebp-4]
 004CFAEF    cmp         dword ptr [eax+180],0
>004CFAF6    jne         004CFAFD
 004CFAF8    call        RaiseLastOSError
 004CFAFD    push        0F0
 004CFAFF    mov         eax,dword ptr [ebp-4]
 004CFB02    mov         eax,dword ptr [eax+180]
 004CFB08    push        eax
 004CFB09    call        user32.GetWindowLongA
 004CFB0E    test        eax,40000000
>004CFB13    je          004CFB45
 004CFB15    push        0F4
 004CFB17    mov         eax,dword ptr [ebp-4]
 004CFB1A    mov         eax,dword ptr [eax+180]
 004CFB20    push        eax
 004CFB21    call        user32.GetWindowLongA
 004CFB26    test        eax,eax
>004CFB28    jne         004CFB45
 004CFB2A    mov         eax,dword ptr [ebp-4]
 004CFB2D    mov         eax,dword ptr [eax+180]
 004CFB33    push        eax
 004CFB34    push        0F4
 004CFB36    mov         eax,dword ptr [ebp-4]
 004CFB39    mov         eax,dword ptr [eax+180]
 004CFB3F    push        eax
 004CFB40    call        user32.SetWindowLongA
 004CFB45    mov         eax,dword ptr [ebp-4]
 004CFB48    mov         eax,dword ptr [eax+64]
 004CFB4B    call        00467520
 004CFB50    mov         eax,dword ptr [ebp-4]
 004CFB53    xor         edx,edx
 004CFB55    mov         dword ptr [eax+64],edx
 004CFB58    mov         eax,dword ptr [ebp-4]
 004CFB5B    call        004D3DB8
 004CFB60    push        1
 004CFB62    mov         eax,dword ptr [ebp-4]
 004CFB65    mov         eax,dword ptr [eax+68]
 004CFB68    call        TFont.GetHandle
 004CFB6D    mov         ecx,eax
 004CFB6F    mov         edx,30
 004CFB74    mov         eax,dword ptr [ebp-4]
 004CFB77    call        004CC7DC
 004CFB7C    mov         eax,dword ptr [ebp-4]
 004CFB7F    cmp         byte ptr [eax+5C],0
>004CFB83    je          004CFB91
 004CFB85    mov         eax,dword ptr [ebp-4]
 004CFB88    mov         si,0FFEE
 004CFB8C    call        @CallDynaInst
 004CFB91    xor         eax,eax
 004CFB93    pop         edx
 004CFB94    pop         ecx
 004CFB95    pop         ecx
 004CFB96    mov         dword ptr fs:[eax],edx
 004CFB99    push        4CFBB1
 004CFB9E    lea         eax,[ebp-0C8]
 004CFBA4    call        @LStrClr
 004CFBA9    ret
>004CFBAA    jmp         @HandleFinally
>004CFBAF    jmp         004CFB9E
 004CFBB1    pop         esi
 004CFBB2    mov         esp,ebp
 004CFBB4    pop         ebp
 004CFBB5    ret
*}
end;

//004CFBB8
{*procedure sub_004CFBB8(?:?);
begin
 004CFBB8    push        ebp
 004CFBB9    mov         ebp,esp
 004CFBBB    add         esp,0FFFFFFF8
 004CFBBE    mov         dword ptr [ebp-8],edx
 004CFBC1    mov         dword ptr [ebp-4],eax
 004CFBC4    mov         eax,dword ptr [ebp-8]
 004CFBC7    mov         eax,dword ptr [eax+4]
 004CFBCA    push        eax
 004CFBCB    mov         eax,dword ptr [ebp-8]
 004CFBCE    mov         eax,dword ptr [eax+0C]
 004CFBD1    push        eax
 004CFBD2    mov         eax,dword ptr [ebp-8]
 004CFBD5    mov         eax,dword ptr [eax+10]
 004CFBD8    push        eax
 004CFBD9    mov         eax,dword ptr [ebp-8]
 004CFBDC    mov         eax,dword ptr [eax+14]
 004CFBDF    push        eax
 004CFBE0    mov         eax,dword ptr [ebp-8]
 004CFBE3    mov         eax,dword ptr [eax+18]
 004CFBE6    push        eax
 004CFBE7    mov         eax,dword ptr [ebp-8]
 004CFBEA    mov         eax,dword ptr [eax+1C]
 004CFBED    push        eax
 004CFBEE    push        0
 004CFBF0    mov         eax,dword ptr [ebp-8]
 004CFBF3    mov         eax,dword ptr [eax+34]
 004CFBF6    push        eax
 004CFBF7    mov         eax,dword ptr [ebp-8]
 004CFBFA    mov         eax,dword ptr [eax+20]
 004CFBFD    push        eax
 004CFBFE    mov         ecx,dword ptr [ebp-8]
 004CFC01    mov         ecx,dword ptr [ecx]
 004CFC03    mov         edx,dword ptr [ebp-8]
 004CFC06    add         edx,4C
 004CFC09    mov         eax,dword ptr [ebp-8]
 004CFC0C    mov         eax,dword ptr [eax+8]
 004CFC0F    call        00408304
 004CFC14    mov         edx,dword ptr [ebp-4]
 004CFC17    mov         dword ptr [edx+180],eax;TWinControl.FHandle:HWND
 004CFC1D    pop         ecx
 004CFC1E    pop         ecx
 004CFC1F    pop         ebp
 004CFC20    ret
end;*}

//004CFC24
procedure TWinControl.ReadDesignSize(Reader:TReader);
begin
{*
 004CFC24    push        ebp
 004CFC25    mov         ebp,esp
 004CFC27    add         esp,0FFFFFFF8
 004CFC2A    mov         dword ptr [ebp-8],edx
 004CFC2D    mov         dword ptr [ebp-4],eax
 004CFC30    mov         eax,dword ptr [ebp-8]
 004CFC33    call        TReader.ReadListBegin
 004CFC38    mov         eax,dword ptr [ebp-8]
 004CFC3B    call        0047E504
 004CFC40    mov         edx,dword ptr [ebp-4]
 004CFC43    mov         dword ptr [edx+1FA],eax
 004CFC49    mov         eax,dword ptr [ebp-8]
 004CFC4C    call        0047E504
 004CFC51    mov         edx,dword ptr [ebp-4]
 004CFC54    mov         dword ptr [edx+1FE],eax
 004CFC5A    mov         eax,dword ptr [ebp-4]
 004CFC5D    or          byte ptr [eax+98],20
 004CFC64    mov         eax,dword ptr [ebp-8]
 004CFC67    call        TReader.ReadListEnd
 004CFC6C    pop         ecx
 004CFC6D    pop         ecx
 004CFC6E    pop         ebp
 004CFC6F    ret
*}
end;

//004CFC70
procedure TWinControl.WriteDesignSize(Writer:TWriter);
begin
{*
 004CFC70    push        ebp
 004CFC71    mov         ebp,esp
 004CFC73    add         esp,0FFFFFFE8
 004CFC76    mov         dword ptr [ebp-8],edx
 004CFC79    mov         dword ptr [ebp-4],eax
 004CFC7C    lea         edx,[ebp-18]
 004CFC7F    mov         eax,dword ptr [ebp-4]
 004CFC82    mov         ecx,dword ptr [eax]
 004CFC84    call        dword ptr [ecx+44]
 004CFC87    mov         eax,dword ptr [ebp-4]
 004CFC8A    mov         edx,dword ptr [ebp-10]
 004CFC8D    mov         dword ptr [eax+1FA],edx
 004CFC93    mov         edx,dword ptr [ebp-0C]
 004CFC96    mov         dword ptr [eax+1FE],edx
 004CFC9C    mov         eax,dword ptr [ebp-8]
 004CFC9F    call        00480AFC
 004CFCA4    mov         eax,dword ptr [ebp-4]
 004CFCA7    mov         edx,dword ptr [eax+1FA]
 004CFCAD    mov         eax,dword ptr [ebp-8]
 004CFCB0    call        00480A20
 004CFCB5    mov         eax,dword ptr [ebp-4]
 004CFCB8    mov         edx,dword ptr [eax+1FE]
 004CFCBE    mov         eax,dword ptr [ebp-8]
 004CFCC1    call        00480A20
 004CFCC6    mov         eax,dword ptr [ebp-8]
 004CFCC9    call        00480B10
 004CFCCE    mov         esp,ebp
 004CFCD0    pop         ebp
 004CFCD1    ret
*}
end;

//004CFCD4
{*function sub_004CFCD4(?:?; ?:?):?;
begin
 004CFCD4    push        ebp
 004CFCD5    mov         ebp,esp
 004CFCD7    add         esp,0FFFFFFF4
 004CFCDA    mov         dword ptr [ebp-8],edx
 004CFCDD    mov         dword ptr [ebp-4],eax
 004CFCE0    mov         eax,dword ptr [ebp-4]
 004CFCE3    mov         eax,dword ptr [eax]
 004CFCE5    mov         edx,dword ptr [ebp-8]
 004CFCE8    cmp         eax,dword ptr [edx]
>004CFCEA    jne         004CFCFA
 004CFCEC    mov         eax,dword ptr [ebp-4]
 004CFCEF    mov         eax,dword ptr [eax+4]
 004CFCF2    mov         edx,dword ptr [ebp-8]
 004CFCF5    cmp         eax,dword ptr [edx+4]
>004CFCF8    je          004CFCFE
 004CFCFA    xor         eax,eax
>004CFCFC    jmp         004CFD00
 004CFCFE    mov         al,1
 004CFD00    mov         byte ptr [ebp-9],al
 004CFD03    mov         al,byte ptr [ebp-9]
 004CFD06    mov         esp,ebp
 004CFD08    pop         ebp
 004CFD09    ret
end;*}

//004CFD0C
function DoWriteDesignSize:Boolean;
begin
{*
 004CFD0C    push        ebp
 004CFD0D    mov         ebp,esp
 004CFD0F    add         esp,0FFFFFFEC
 004CFD12    mov         byte ptr [ebp-1],1
 004CFD16    mov         eax,dword ptr [ebp+8]
 004CFD19    mov         eax,dword ptr [eax-4]
 004CFD1C    cmp         dword ptr [eax+20],0
>004CFD20    je          004CFD4E
 004CFD22    mov         eax,dword ptr [ebp+8]
 004CFD25    push        eax
 004CFD26    mov         eax,dword ptr [ebp+8]
 004CFD29    mov         eax,dword ptr [eax-4]
 004CFD2C    mov         eax,dword ptr [eax+20]
 004CFD2F    lea         edx,[eax+1FA]
 004CFD35    mov         eax,dword ptr [ebp+8]
 004CFD38    mov         eax,dword ptr [eax-8]
 004CFD3B    add         eax,1FA
 004CFD40    call        004CFCD4
 004CFD45    pop         ecx
 004CFD46    test        al,al
>004CFD48    jne         004CFE16
 004CFD4E    mov         eax,dword ptr [ebp+8]
 004CFD51    mov         eax,dword ptr [eax-8]
 004CFD54    cmp         dword ptr [eax+198],0
>004CFD5B    je          004CFDB2
 004CFD5D    mov         eax,dword ptr [ebp+8]
 004CFD60    mov         eax,dword ptr [eax-8]
 004CFD63    mov         eax,dword ptr [eax+198]
 004CFD69    mov         eax,dword ptr [eax+8]
 004CFD6C    dec         eax
 004CFD6D    test        eax,eax
>004CFD6F    jl          004CFDB2
 004CFD71    inc         eax
 004CFD72    mov         dword ptr [ebp-0C],eax
 004CFD75    mov         dword ptr [ebp-8],0
 004CFD7C    mov         eax,dword ptr [ebp+8]
 004CFD7F    mov         eax,dword ptr [eax-8]
 004CFD82    mov         eax,dword ptr [eax+198]
 004CFD88    mov         edx,dword ptr [ebp-8]
 004CFD8B    call        TList.Get
 004CFD90    mov         dword ptr [ebp-10],eax
 004CFD93    mov         eax,dword ptr [ebp-10]
 004CFD96    cmp         byte ptr [eax+5B],0
>004CFD9A    jne         004CFDAA
 004CFD9C    mov         eax,dword ptr [ebp-10]
 004CFD9F    mov         dl,byte ptr ds:[4CFE24]
 004CFDA5    cmp         dl,byte ptr [eax+61]
>004CFDA8    jne         004CFE1A
 004CFDAA    inc         dword ptr [ebp-8]
 004CFDAD    dec         dword ptr [ebp-0C]
>004CFDB0    jne         004CFD7C
 004CFDB2    mov         eax,dword ptr [ebp+8]
 004CFDB5    mov         eax,dword ptr [eax-8]
 004CFDB8    cmp         dword ptr [eax+19C],0
>004CFDBF    je          004CFE16
 004CFDC1    mov         eax,dword ptr [ebp+8]
 004CFDC4    mov         eax,dword ptr [eax-8]
 004CFDC7    mov         eax,dword ptr [eax+19C]
 004CFDCD    mov         eax,dword ptr [eax+8]
 004CFDD0    dec         eax
 004CFDD1    test        eax,eax
>004CFDD3    jl          004CFE16
 004CFDD5    inc         eax
 004CFDD6    mov         dword ptr [ebp-0C],eax
 004CFDD9    mov         dword ptr [ebp-8],0
 004CFDE0    mov         eax,dword ptr [ebp+8]
 004CFDE3    mov         eax,dword ptr [eax-8]
 004CFDE6    mov         eax,dword ptr [eax+19C]
 004CFDEC    mov         edx,dword ptr [ebp-8]
 004CFDEF    call        TList.Get
 004CFDF4    mov         dword ptr [ebp-14],eax
 004CFDF7    mov         eax,dword ptr [ebp-14]
 004CFDFA    cmp         byte ptr [eax+5B],0
>004CFDFE    jne         004CFE0E
 004CFE00    mov         eax,dword ptr [ebp-14]
 004CFE03    mov         dl,byte ptr ds:[4CFE24]
 004CFE09    cmp         dl,byte ptr [eax+61]
>004CFE0C    jne         004CFE1A
 004CFE0E    inc         dword ptr [ebp-8]
 004CFE11    dec         dword ptr [ebp-0C]
>004CFE14    jne         004CFDE0
 004CFE16    mov         byte ptr [ebp-1],0
 004CFE1A    mov         al,byte ptr [ebp-1]
 004CFE1D    mov         esp,ebp
 004CFE1F    pop         ebp
 004CFE20    ret
*}
end;

//004CFE28
procedure TWinControl.DefineProperties(Filer:TFiler);
begin
{*
 004CFE28    push        ebp
 004CFE29    mov         ebp,esp
 004CFE2B    add         esp,0FFFFFFF8
 004CFE2E    push        ebx
 004CFE2F    mov         dword ptr [ebp-4],edx
 004CFE32    mov         dword ptr [ebp-8],eax
 004CFE35    mov         edx,dword ptr [ebp-4]
 004CFE38    mov         eax,dword ptr [ebp-8]
 004CFE3B    call        TControl.DefineProperties
 004CFE40    mov         eax,dword ptr [ebp-8]
 004CFE43    push        eax
 004CFE44    push        4CFC24;TWinControl.ReadDesignSize
 004CFE49    mov         eax,dword ptr [ebp-8]
 004CFE4C    push        eax
 004CFE4D    push        4CFC70;TWinControl.WriteDesignSize
 004CFE52    push        ebp
 004CFE53    call        DoWriteDesignSize
 004CFE58    pop         ecx
 004CFE59    mov         ecx,eax
 004CFE5B    mov         edx,4CFE78;'DesignSize'
 004CFE60    mov         eax,dword ptr [ebp-4]
 004CFE63    mov         ebx,dword ptr [eax]
 004CFE65    call        dword ptr [ebx+4]
 004CFE68    pop         ebx
 004CFE69    pop         ecx
 004CFE6A    pop         ecx
 004CFE6B    pop         ebp
 004CFE6C    ret
*}
end;

//004CFE84
procedure sub_004CFE84;
begin
{*
 004CFE84    push        ebp
 004CFE85    mov         ebp,esp
 004CFE87    add         esp,0FFFFFFF8
 004CFE8A    mov         dword ptr [ebp-4],eax
 004CFE8D    mov         eax,dword ptr [ebp-4]
 004CFE90    call        004CAE74
 004CFE95    mov         dword ptr [ebp-8],eax
 004CFE98    cmp         dword ptr [ebp-8],1
>004CFE9C    jge         004CFEB0
 004CFE9E    mov         eax,4CFEF0;'
 004CFEA3    call        004674E0
 004CFEA8    mov         edx,dword ptr [ebp-4]
 004CFEAB    mov         dword ptr [edx+64],eax;TWinControl.FText:PChar
>004CFEAE    jmp         004CFEDA
 004CFEB0    mov         eax,dword ptr [ebp-8]
 004CFEB3    inc         eax
 004CFEB4    call        0046748C
 004CFEB9    mov         edx,dword ptr [ebp-4]
 004CFEBC    mov         dword ptr [edx+64],eax;TWinControl.FText:PChar
 004CFEBF    mov         eax,dword ptr [ebp-4]
 004CFEC2    mov         eax,dword ptr [eax+64];TWinControl.FText:PChar
 004CFEC5    call        004674B8
 004CFECA    mov         ecx,eax
 004CFECC    mov         eax,dword ptr [ebp-4]
 004CFECF    mov         edx,dword ptr [eax+64];TWinControl.FText:PChar
 004CFED2    mov         eax,dword ptr [ebp-4]
 004CFED5    call        004CAE98
 004CFEDA    call        FreeDeviceContexts
 004CFEDF    mov         eax,dword ptr [ebp-4]
 004CFEE2    mov         edx,dword ptr [eax]
 004CFEE4    call        dword ptr [edx+0AC];TWinControl.DestroyWindowHandle
 004CFEEA    pop         ecx
 004CFEEB    pop         ecx
 004CFEEC    pop         ebp
 004CFEED    ret
*}
end;

//004CFEF4
procedure TWinControl.DestroyWindowHandle;
begin
{*
 004CFEF4    push        ebp
 004CFEF5    mov         ebp,esp
 004CFEF7    push        ecx
 004CFEF8    mov         dword ptr [ebp-4],eax
 004CFEFB    mov         eax,dword ptr [ebp-4]
 004CFEFE    or          word ptr [eax+54],200
 004CFF04    xor         eax,eax
 004CFF06    push        ebp
 004CFF07    push        4CFF41
 004CFF0C    push        dword ptr fs:[eax]
 004CFF0F    mov         dword ptr fs:[eax],esp
 004CFF12    mov         eax,dword ptr [ebp-4]
 004CFF15    mov         eax,dword ptr [eax+180]
 004CFF1B    push        eax
 004CFF1C    call        user32.DestroyWindow
 004CFF21    test        eax,eax
>004CFF23    jne         004CFF2A
 004CFF25    call        RaiseLastOSError
 004CFF2A    xor         eax,eax
 004CFF2C    pop         edx
 004CFF2D    pop         ecx
 004CFF2E    pop         ecx
 004CFF2F    mov         dword ptr fs:[eax],edx
 004CFF32    push        4CFF48
 004CFF37    mov         eax,dword ptr [ebp-4]
 004CFF3A    and         word ptr [eax+54],0FDFF
 004CFF40    ret
>004CFF41    jmp         @HandleFinally
>004CFF46    jmp         004CFF37
 004CFF48    mov         eax,dword ptr [ebp-4]
 004CFF4B    xor         edx,edx
 004CFF4D    mov         dword ptr [eax+180],edx
 004CFF53    pop         ecx
 004CFF54    pop         ebp
 004CFF55    ret
*}
end;

//004CFF58
{*function sub_004CFF58(?:TWinControl; ?:TWinControl):?;
begin
 004CFF58    push        ebp
 004CFF59    mov         ebp,esp
 004CFF5B    add         esp,0FFFFFFEC
 004CFF5E    mov         dword ptr [ebp-8],edx
 004CFF61    mov         dword ptr [ebp-4],eax
 004CFF64    mov         eax,dword ptr [ebp-4]
 004CFF67    mov         eax,dword ptr [eax+19C]
 004CFF6D    mov         edx,dword ptr [ebp-8]
 004CFF70    call        00478890
 004CFF75    inc         eax
 004CFF76    mov         edx,dword ptr [ebp-4]
 004CFF79    mov         edx,dword ptr [edx+19C]
 004CFF7F    mov         edx,dword ptr [edx+8]
 004CFF82    dec         edx
 004CFF83    sub         edx,eax
>004CFF85    jl          004CFFB6
 004CFF87    inc         edx
 004CFF88    mov         dword ptr [ebp-14],edx
 004CFF8B    mov         dword ptr [ebp-10],eax
 004CFF8E    mov         eax,dword ptr [ebp-4]
 004CFF91    mov         eax,dword ptr [eax+19C]
 004CFF97    mov         edx,dword ptr [ebp-10]
 004CFF9A    call        TList.Get
 004CFF9F    mov         eax,dword ptr [eax+180]
 004CFFA5    mov         dword ptr [ebp-0C],eax
 004CFFA8    cmp         dword ptr [ebp-0C],0
>004CFFAC    jne         004CFFBB
 004CFFAE    inc         dword ptr [ebp-10]
 004CFFB1    dec         dword ptr [ebp-14]
>004CFFB4    jne         004CFF8E
 004CFFB6    xor         eax,eax
 004CFFB8    mov         dword ptr [ebp-0C],eax
 004CFFBB    mov         eax,dword ptr [ebp-0C]
 004CFFBE    mov         esp,ebp
 004CFFC0    pop         ebp
 004CFFC1    ret
end;*}

//004CFFC4
procedure sub_004CFFC4;
begin
{*
 004CFFC4    push        ebp
 004CFFC5    mov         ebp,esp
 004CFFC7    add         esp,0FFFFFFF4
 004CFFCA    mov         dword ptr [ebp-4],eax
 004CFFCD    mov         eax,dword ptr [ebp-4]
 004CFFD0    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>004CFFD7    jne         004D007F
 004CFFDD    mov         eax,dword ptr [ebp-4]
 004CFFE0    mov         edx,dword ptr [eax]
 004CFFE2    call        dword ptr [edx+0A0];TWinControl.CreateWnd
 004CFFE8    mov         eax,dword ptr [ebp-4]
 004CFFEB    push        eax
 004CFFEC    movzx       eax,word ptr ds:[55DDBA];gvar_0055DDBA
 004CFFF3    push        eax
 004CFFF4    mov         eax,dword ptr [ebp-4]
 004CFFF7    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004CFFFD    push        eax
 004CFFFE    call        user32.SetPropA
 004D0003    mov         eax,dword ptr [ebp-4]
 004D0006    push        eax
 004D0007    movzx       eax,word ptr ds:[55DDB8];gvar_0055DDB8
 004D000E    push        eax
 004D000F    mov         eax,dword ptr [ebp-4]
 004D0012    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D0018    push        eax
 004D0019    call        user32.SetPropA
 004D001E    mov         eax,dword ptr [ebp-4]
 004D0021    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D0025    je          004D004F
 004D0027    push        13
 004D0029    push        0
 004D002B    push        0
 004D002D    push        0
 004D002F    push        0
 004D0031    mov         edx,dword ptr [ebp-4]
 004D0034    mov         eax,dword ptr [ebp-4]
 004D0037    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D003A    call        004CFF58
 004D003F    push        eax
 004D0040    mov         eax,dword ptr [ebp-4]
 004D0043    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D0049    push        eax
 004D004A    call        user32.SetWindowPos
 004D004F    mov         eax,dword ptr [ebp-4]
 004D0052    call        004CF618
 004D0057    dec         eax
 004D0058    test        eax,eax
>004D005A    jl          004D007F
 004D005C    inc         eax
 004D005D    mov         dword ptr [ebp-0C],eax
 004D0060    mov         dword ptr [ebp-8],0
 004D0067    mov         edx,dword ptr [ebp-8]
 004D006A    mov         eax,dword ptr [ebp-4]
 004D006D    call        004CF5AC
 004D0072    call        004CA1E0
 004D0077    inc         dword ptr [ebp-8]
 004D007A    dec         dword ptr [ebp-0C]
>004D007D    jne         004D0067
 004D007F    mov         esp,ebp
 004D0081    pop         ebp
 004D0082    ret
*}
end;

//004D0084
{*function sub_004D0084(?:?; ?:?):?;
begin
 004D0084    push        ebp
 004D0085    mov         ebp,esp
 004D0087    add         esp,0FFFFFFF0
 004D008A    mov         dword ptr [ebp-10],ecx
 004D008D    mov         dword ptr [ebp-0C],edx
 004D0090    mov         dword ptr [ebp-4],eax
 004D0093    mov         byte ptr [ebp-5],0
 004D0097    mov         al,byte ptr [ebp-5]
 004D009A    mov         esp,ebp
 004D009C    pop         ebp
 004D009D    ret
end;*}

//004D00A0
{*procedure sub_004D00A0(?:?; ?:?; ?:?);
begin
 004D00A0    push        ebp
 004D00A1    mov         ebp,esp
 004D00A3    add         esp,0FFFFFFE4
 004D00A6    push        esi
 004D00A7    push        edi
 004D00A8    mov         esi,dword ptr [ebp+8]
 004D00AB    lea         edi,[ebp-1C]
 004D00AE    movs        dword ptr [edi],dword ptr [esi]
 004D00AF    movs        dword ptr [edi],dword ptr [esi]
 004D00B0    movs        dword ptr [edi],dword ptr [esi]
 004D00B1    movs        dword ptr [edi],dword ptr [esi]
 004D00B2    mov         dword ptr [ebp-0C],ecx
 004D00B5    mov         dword ptr [ebp-8],edx
 004D00B8    mov         dword ptr [ebp-4],eax
 004D00BB    pop         edi
 004D00BC    pop         esi
 004D00BD    mov         esp,ebp
 004D00BF    pop         ebp
 004D00C0    ret         14
end;*}

//004D00C4
procedure sub_004D00C4(?:TControl);
begin
{*
 004D00C4    push        ebp
 004D00C5    mov         ebp,esp
 004D00C7    add         esp,0FFFFFFF4
 004D00CA    mov         dword ptr [ebp-4],eax
 004D00CD    mov         eax,dword ptr [ebp-4]
 004D00D0    cmp         dword ptr [eax+180],0
>004D00D7    je          004D012A
 004D00D9    mov         eax,dword ptr [ebp-4]
 004D00DC    cmp         dword ptr [eax+19C],0
>004D00E3    je          004D011F
 004D00E5    mov         eax,dword ptr [ebp-4]
 004D00E8    mov         eax,dword ptr [eax+19C]
 004D00EE    mov         eax,dword ptr [eax+8]
 004D00F1    dec         eax
 004D00F2    test        eax,eax
>004D00F4    jl          004D011F
 004D00F6    inc         eax
 004D00F7    mov         dword ptr [ebp-0C],eax
 004D00FA    mov         dword ptr [ebp-8],0
 004D0101    mov         edx,dword ptr [ebp-8]
 004D0104    mov         eax,dword ptr [ebp-4]
 004D0107    mov         eax,dword ptr [eax+19C]
 004D010D    call        TList.Get
 004D0112    call        004D00C4
 004D0117    inc         dword ptr [ebp-8]
 004D011A    dec         dword ptr [ebp-0C]
>004D011D    jne         004D0101
 004D011F    mov         eax,dword ptr [ebp-4]
 004D0122    mov         edx,dword ptr [eax]
 004D0124    call        dword ptr [edx+0B0]
 004D012A    mov         esp,ebp
 004D012C    pop         ebp
 004D012D    ret
*}
end;

//004D0130
procedure TWinControl.RecreateWnd;
begin
{*
 004D0130    push        ebp
 004D0131    mov         ebp,esp
 004D0133    push        ecx
 004D0134    mov         dword ptr [ebp-4],eax
 004D0137    mov         eax,dword ptr [ebp-4]
 004D013A    cmp         dword ptr [eax+180],0
>004D0141    je          004D0154
 004D0143    push        0
 004D0145    xor         ecx,ecx
 004D0147    mov         edx,0B033
 004D014C    mov         eax,dword ptr [ebp-4]
 004D014F    call        004CC7DC
 004D0154    pop         ecx
 004D0155    pop         ebp
 004D0156    ret
*}
end;

//004D0158
{*procedure TWinControl.CMRecreateWnd(?:?);
begin
 004D0158    push        ebp
 004D0159    mov         ebp,esp
 004D015B    add         esp,0FFFFFFF4
 004D015E    push        esi
 004D015F    mov         dword ptr [ebp-0C],edx
 004D0162    mov         dword ptr [ebp-4],eax
 004D0165    mov         eax,dword ptr [ebp-4]
 004D0168    mov         si,0FFB5
 004D016C    call        @CallDynaInst;TWinControl.sub_004D3858
 004D0171    mov         byte ptr [ebp-5],al
 004D0174    mov         eax,dword ptr [ebp-4]
 004D0177    call        004D00C4
 004D017C    mov         eax,dword ptr [ebp-4]
 004D017F    call        004D02BC
 004D0184    cmp         byte ptr [ebp-5],0
>004D0188    je          004D01A5
 004D018A    mov         eax,dword ptr [ebp-4]
 004D018D    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>004D0194    je          004D01A5
 004D0196    mov         eax,dword ptr [ebp-4]
 004D0199    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D019F    push        eax
 004D01A0    call        user32.SetFocus
 004D01A5    pop         esi
 004D01A6    mov         esp,ebp
 004D01A8    pop         ebp
 004D01A9    ret
end;*}

//004D01AC
procedure sub_004D01AC(?:Pointer);
begin
{*
 004D01AC    push        ebp
 004D01AD    mov         ebp,esp
 004D01AF    add         esp,0FFFFFFF0
 004D01B2    push        ebx
 004D01B3    push        esi
 004D01B4    push        edi
 004D01B5    mov         dword ptr [ebp-4],eax
 004D01B8    mov         eax,dword ptr [ebp-4]
 004D01BB    cmp         byte ptr [eax+57],0
>004D01BF    jne         004D01D3
 004D01C1    mov         eax,dword ptr [ebp-4]
 004D01C4    test        byte ptr [eax+1C],10
>004D01C8    je          004D01DC
 004D01CA    mov         eax,dword ptr [ebp-4]
 004D01CD    test        byte ptr [eax+51],4
>004D01D1    jne         004D01DC
 004D01D3    mov         eax,dword ptr [ebp-4]
 004D01D6    test        byte ptr [eax+54],8
>004D01DA    je          004D01E0
 004D01DC    xor         eax,eax
>004D01DE    jmp         004D01E2
 004D01E0    mov         al,1
 004D01E2    mov         byte ptr [ebp-5],al
 004D01E5    cmp         byte ptr [ebp-5],0
>004D01E9    je          004D0248
 004D01EB    mov         eax,dword ptr [ebp-4]
 004D01EE    cmp         dword ptr [eax+180],0
>004D01F5    jne         004D0202
 004D01F7    mov         eax,dword ptr [ebp-4]
 004D01FA    mov         edx,dword ptr [eax]
 004D01FC    call        dword ptr [edx+94]
 004D0202    mov         eax,dword ptr [ebp-4]
 004D0205    cmp         dword ptr [eax+19C],0
>004D020C    je          004D0248
 004D020E    mov         eax,dword ptr [ebp-4]
 004D0211    mov         eax,dword ptr [eax+19C]
 004D0217    mov         eax,dword ptr [eax+8]
 004D021A    dec         eax
 004D021B    test        eax,eax
>004D021D    jl          004D0248
 004D021F    inc         eax
 004D0220    mov         dword ptr [ebp-10],eax
 004D0223    mov         dword ptr [ebp-0C],0
 004D022A    mov         eax,dword ptr [ebp-4]
 004D022D    mov         eax,dword ptr [eax+19C]
 004D0233    mov         edx,dword ptr [ebp-0C]
 004D0236    call        TList.Get
 004D023B    call        004D01AC
 004D0240    inc         dword ptr [ebp-0C]
 004D0243    dec         dword ptr [ebp-10]
>004D0246    jne         004D022A
 004D0248    mov         eax,dword ptr [ebp-4]
 004D024B    cmp         dword ptr [eax+180],0
>004D0252    je          004D02B4
 004D0254    mov         eax,dword ptr [ebp-4]
 004D0257    mov         al,byte ptr [eax+1A6]
 004D025D    cmp         al,byte ptr [ebp-5]
>004D0260    je          004D02B4
 004D0262    mov         eax,dword ptr [ebp-4]
 004D0265    mov         dl,byte ptr [ebp-5]
 004D0268    mov         byte ptr [eax+1A6],dl
 004D026E    xor         eax,eax
 004D0270    push        ebp
 004D0271    push        4D0297
 004D0276    push        dword ptr fs:[eax]
 004D0279    mov         dword ptr fs:[eax],esp
 004D027C    push        0
 004D027E    xor         ecx,ecx
 004D0280    mov         edx,0B019
 004D0285    mov         eax,dword ptr [ebp-4]
 004D0288    call        004CC7DC
 004D028D    xor         eax,eax
 004D028F    pop         edx
 004D0290    pop         ecx
 004D0291    pop         ecx
 004D0292    mov         dword ptr fs:[eax],edx
>004D0295    jmp         004D02B4
>004D0297    jmp         @HandleAnyException
 004D029C    mov         al,byte ptr [ebp-5]
 004D029F    xor         al,1
 004D02A1    mov         edx,dword ptr [ebp-4]
 004D02A4    mov         byte ptr [edx+1A6],al
 004D02AA    call        @RaiseAgain
 004D02AF    call        @DoneExcept
 004D02B4    pop         edi
 004D02B5    pop         esi
 004D02B6    pop         ebx
 004D02B7    mov         esp,ebp
 004D02B9    pop         ebp
 004D02BA    ret
*}
end;

//004D02BC
procedure sub_004D02BC(?:TWinControl);
begin
{*
 004D02BC    push        ebp
 004D02BD    mov         ebp,esp
 004D02BF    add         esp,0FFFFFFF8
 004D02C2    mov         dword ptr [ebp-4],eax
 004D02C5    mov         eax,dword ptr [ebp-4]
 004D02C8    mov         dword ptr [ebp-8],eax
>004D02CB    jmp         004D02E2
 004D02CD    mov         eax,dword ptr [ebp-8]
 004D02D0    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D02D3    mov         dword ptr [ebp-8],eax
 004D02D6    mov         eax,dword ptr [ebp-8]
 004D02D9    cmp         byte ptr [eax+1A6],0;TWinControl.FShowing:Boolean
>004D02E0    je          004D0311
 004D02E2    mov         eax,dword ptr [ebp-8]
 004D02E5    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D02E9    jne         004D02CD
 004D02EB    mov         eax,dword ptr [ebp-8]
 004D02EE    mov         edx,dword ptr ds:[4E6404];TCustomForm
 004D02F4    call        @IsClass
 004D02F9    test        al,al
>004D02FB    jne         004D0309
 004D02FD    mov         eax,dword ptr [ebp-8]
 004D0300    cmp         dword ptr [eax+190],0;TWinControl.FParentWindow:HWND
>004D0307    je          004D0311
 004D0309    mov         eax,dword ptr [ebp-4]
 004D030C    call        004D01AC
 004D0311    pop         ecx
 004D0312    pop         ecx
 004D0313    pop         ebp
 004D0314    ret
*}
end;

//004D0318
procedure sub_004D0318(?:TWinControl; ?:HWND);
begin
{*
 004D0318    push        ebp
 004D0319    mov         ebp,esp
 004D031B    add         esp,0FFFFFFF8
 004D031E    mov         dword ptr [ebp-8],edx
 004D0321    mov         dword ptr [ebp-4],eax
 004D0324    mov         eax,dword ptr [ebp-4]
 004D0327    cmp         dword ptr [eax+30],0
>004D032B    jne         004D03D0
 004D0331    mov         eax,dword ptr [ebp-4]
 004D0334    mov         eax,dword ptr [eax+190]
 004D033A    cmp         eax,dword ptr [ebp-8]
>004D033D    je          004D03D0
 004D0343    mov         eax,dword ptr [ebp-4]
 004D0346    cmp         dword ptr [eax+180],0
>004D034D    je          004D03B4
 004D034F    mov         eax,dword ptr [ebp-4]
 004D0352    cmp         dword ptr [eax+190],0
>004D0359    je          004D03B4
 004D035B    cmp         dword ptr [ebp-8],0
>004D035F    je          004D03B4
 004D0361    mov         eax,dword ptr [ebp-8]
 004D0364    mov         edx,dword ptr [ebp-4]
 004D0367    mov         dword ptr [edx+190],eax
 004D036D    mov         eax,dword ptr [ebp-8]
 004D0370    push        eax
 004D0371    mov         eax,dword ptr [ebp-4]
 004D0374    mov         eax,dword ptr [eax+180]
 004D037A    push        eax
 004D037B    call        user32.SetParent
 004D0380    mov         eax,[0055B2A4];^gvar_00540938
 004D0385    cmp         dword ptr [eax],5
>004D0388    jl          004D03C8
 004D038A    mov         eax,[0055B700];^gvar_00540934
 004D038F    cmp         dword ptr [eax],2
>004D0392    jne         004D03C8
 004D0394    push        0
 004D0396    mov         dx,3
 004D039A    mov         ax,3
 004D039E    call        0040829C
 004D03A3    mov         ecx,eax
 004D03A5    mov         edx,127
 004D03AA    mov         eax,dword ptr [ebp-4]
 004D03AD    call        004CC7DC
>004D03B2    jmp         004D03C8
 004D03B4    mov         eax,dword ptr [ebp-4]
 004D03B7    call        004D00C4
 004D03BC    mov         eax,dword ptr [ebp-8]
 004D03BF    mov         edx,dword ptr [ebp-4]
 004D03C2    mov         dword ptr [edx+190],eax
 004D03C8    mov         eax,dword ptr [ebp-4]
 004D03CB    call        004D02BC
 004D03D0    pop         ecx
 004D03D1    pop         ecx
 004D03D2    pop         ebp
 004D03D3    ret
*}
end;

//004D0454
{*function sub_004D0454(?:Pointer; ?:?):?;
begin
 004D0454    push        ebp
 004D0455    mov         ebp,esp
 004D0457    add         esp,0FFFFFFE0
 004D045A    push        ebx
 004D045B    mov         dword ptr [ebp-4],eax
 004D045E    lea         ecx,[ebp-10]
 004D0461    mov         eax,dword ptr [ebp+8]
 004D0464    mov         edx,dword ptr [eax-4]
 004D0467    mov         edx,dword ptr [edx+4]
 004D046A    mov         eax,dword ptr [ebp-4]
 004D046D    sub         edx,dword ptr [eax+44]
 004D0470    mov         eax,dword ptr [ebp+8]
 004D0473    mov         eax,dword ptr [eax-4]
 004D0476    mov         eax,dword ptr [eax]
 004D0478    mov         ebx,dword ptr [ebp-4]
 004D047B    sub         eax,dword ptr [ebx+40]
 004D047E    call        Point
 004D0483    mov         eax,dword ptr [ebp+8]
 004D0486    mov         edx,dword ptr [ebp-10]
 004D0489    mov         dword ptr [eax-0C],edx
 004D048C    mov         edx,dword ptr [ebp-0C]
 004D048F    mov         dword ptr [eax-8],edx
 004D0492    mov         eax,dword ptr [ebp+8]
 004D0495    push        dword ptr [eax-8]
 004D0498    push        dword ptr [eax-0C]
 004D049B    lea         edx,[ebp-20]
 004D049E    mov         eax,dword ptr [ebp-4]
 004D04A1    mov         ecx,dword ptr [eax]
 004D04A3    call        dword ptr [ecx+44]
 004D04A6    lea         eax,[ebp-20]
 004D04A9    push        eax
 004D04AA    call        user32.PtInRect
 004D04AF    test        eax,eax
>004D04B1    je          004D050B
 004D04B3    mov         eax,dword ptr [ebp-4]
 004D04B6    test        byte ptr [eax+1C],10
>004D04BA    je          004D04CE
 004D04BC    mov         eax,dword ptr [ebp-4]
 004D04BF    cmp         byte ptr [eax+57],0
>004D04C3    jne         004D050F
 004D04C5    mov         eax,dword ptr [ebp-4]
 004D04C8    test        byte ptr [eax+51],4
>004D04CC    je          004D050F
 004D04CE    mov         eax,dword ptr [ebp-4]
 004D04D1    cmp         byte ptr [eax+57],0
>004D04D5    je          004D050B
 004D04D7    mov         eax,dword ptr [ebp-4]
 004D04DA    mov         edx,dword ptr [eax]
 004D04DC    call        dword ptr [edx+50]
 004D04DF    test        al,al
>004D04E1    jne         004D04EC
 004D04E3    mov         eax,dword ptr [ebp+8]
 004D04E6    cmp         byte ptr [eax-0D],0
>004D04EA    je          004D050B
 004D04EC    mov         eax,dword ptr [ebp+8]
 004D04EF    add         eax,0FFFFFFF4
 004D04F2    call        00408274
 004D04F7    push        eax
 004D04F8    xor         ecx,ecx
 004D04FA    mov         edx,0B00A
 004D04FF    mov         eax,dword ptr [ebp-4]
 004D0502    call        004CC7DC
 004D0507    test        eax,eax
>004D0509    jne         004D050F
 004D050B    xor         eax,eax
>004D050D    jmp         004D0511
 004D050F    mov         al,1
 004D0511    mov         byte ptr [ebp-5],al
 004D0514    cmp         byte ptr [ebp-5],0
>004D0518    je          004D0523
 004D051A    mov         eax,dword ptr [ebp+8]
 004D051D    mov         edx,dword ptr [ebp-4]
 004D0520    mov         dword ptr [eax-14],edx
 004D0523    mov         al,byte ptr [ebp-5]
 004D0526    pop         ebx
 004D0527    mov         esp,ebp
 004D0529    pop         ebp
 004D052A    ret
end;*}

//004D052C
{*function sub_004D052C(?:TWinControl; ?:?; ?:?; ?:?):?;
begin
 004D052C    push        ebp
 004D052D    mov         ebp,esp
 004D052F    add         esp,0FFFFFFE0
 004D0532    mov         byte ptr [ebp-0D],cl
 004D0535    mov         dword ptr [ebp-4],edx
 004D0538    mov         dword ptr [ebp-18],eax
 004D053B    xor         eax,eax
 004D053D    mov         dword ptr [ebp-14],eax
 004D0540    cmp         byte ptr [ebp+8],0
>004D0544    je          004D058C
 004D0546    mov         eax,dword ptr [ebp-18]
 004D0549    cmp         dword ptr [eax+19C],0
>004D0550    je          004D058C
 004D0552    mov         eax,dword ptr [ebp-18]
 004D0555    mov         eax,dword ptr [eax+19C]
 004D055B    mov         eax,dword ptr [eax+8]
 004D055E    dec         eax
 004D055F    cmp         eax,0
>004D0562    jl          004D058C
 004D0564    mov         dword ptr [ebp-20],eax
 004D0567    push        ebp
 004D0568    mov         edx,dword ptr [ebp-20]
 004D056B    mov         eax,dword ptr [ebp-18]
 004D056E    mov         eax,dword ptr [eax+19C]
 004D0574    call        TList.Get
 004D0579    call        004D0454
 004D057E    pop         ecx
 004D057F    test        al,al
>004D0581    jne         004D058C
 004D0583    dec         dword ptr [ebp-20]
 004D0586    cmp         dword ptr [ebp-20],0FFFFFFFF
>004D058A    jne         004D0567
 004D058C    mov         eax,dword ptr [ebp-18]
 004D058F    cmp         dword ptr [eax+198],0
>004D0596    je          004D05D8
 004D0598    cmp         dword ptr [ebp-14],0
>004D059C    jne         004D05D8
 004D059E    mov         eax,dword ptr [ebp-18]
 004D05A1    mov         eax,dword ptr [eax+198]
 004D05A7    mov         eax,dword ptr [eax+8]
 004D05AA    dec         eax
 004D05AB    cmp         eax,0
>004D05AE    jl          004D05D8
 004D05B0    mov         dword ptr [ebp-20],eax
 004D05B3    push        ebp
 004D05B4    mov         edx,dword ptr [ebp-20]
 004D05B7    mov         eax,dword ptr [ebp-18]
 004D05BA    mov         eax,dword ptr [eax+198]
 004D05C0    call        TList.Get
 004D05C5    call        004D0454
 004D05CA    pop         ecx
 004D05CB    test        al,al
>004D05CD    jne         004D05D8
 004D05CF    dec         dword ptr [ebp-20]
 004D05D2    cmp         dword ptr [ebp-20],0FFFFFFFF
>004D05D6    jne         004D05B3
 004D05D8    mov         eax,dword ptr [ebp-14]
 004D05DB    mov         dword ptr [ebp-1C],eax
 004D05DE    mov         eax,dword ptr [ebp-1C]
 004D05E1    mov         esp,ebp
 004D05E3    pop         ebp
 004D05E4    ret         4
end;*}

//004D05E8
{*function sub_004D05E8(?:TWinControl; ?:?):?;
begin
 004D05E8    push        ebp
 004D05E9    mov         ebp,esp
 004D05EB    add         esp,0FFFFFFE0
 004D05EE    push        ebx
 004D05EF    mov         dword ptr [ebp-8],edx
 004D05F2    mov         dword ptr [ebp-4],eax
 004D05F5    mov         eax,dword ptr [ebp-4]
 004D05F8    call        TWinControl.GetHandle
 004D05FD    mov         ebx,eax
 004D05FF    call        user32.GetCapture
 004D0604    cmp         ebx,eax
>004D0606    jne         004D062F
 004D0608    cmp         dword ptr ds:[54173C],0;gvar_0054173C
>004D060F    je          004D0628
 004D0611    mov         eax,[0054173C];0x0 gvar_0054173C
 004D0616    mov         eax,dword ptr [eax+30]
 004D0619    cmp         eax,dword ptr [ebp-4]
>004D061C    jne         004D0628
 004D061E    mov         eax,[0054173C];0x0 gvar_0054173C
 004D0623    mov         dword ptr [ebp-10],eax
>004D0626    jmp         004D064F
 004D0628    xor         eax,eax
 004D062A    mov         dword ptr [ebp-10],eax
>004D062D    jmp         004D064F
 004D062F    push        0
 004D0631    lea         edx,[ebp-20]
 004D0634    mov         eax,dword ptr [ebp-8]
 004D0637    mov         eax,dword ptr [eax+8]
 004D063A    call        00408250
 004D063F    lea         edx,[ebp-20]
 004D0642    xor         ecx,ecx
 004D0644    mov         eax,dword ptr [ebp-4]
 004D0647    call        004D052C
 004D064C    mov         dword ptr [ebp-10],eax
 004D064F    mov         byte ptr [ebp-9],0
 004D0653    cmp         dword ptr [ebp-10],0
>004D0657    je          004D069F
 004D0659    mov         eax,dword ptr [ebp-8]
 004D065C    movsx       eax,word ptr [eax+8]
 004D0660    mov         edx,dword ptr [ebp-10]
 004D0663    sub         eax,dword ptr [edx+40]
 004D0666    mov         dword ptr [ebp-18],eax
 004D0669    mov         eax,dword ptr [ebp-8]
 004D066C    movsx       eax,word ptr [eax+0A]
 004D0670    mov         edx,dword ptr [ebp-10]
 004D0673    sub         eax,dword ptr [edx+44]
 004D0676    mov         dword ptr [ebp-14],eax
 004D0679    lea         eax,[ebp-18]
 004D067C    call        00408274
 004D0681    push        eax
 004D0682    mov         ecx,dword ptr [ebp-8]
 004D0685    mov         ecx,dword ptr [ecx+4]
 004D0688    mov         edx,dword ptr [ebp-8]
 004D068B    mov         edx,dword ptr [edx]
 004D068D    mov         eax,dword ptr [ebp-10]
 004D0690    call        004CC7DC
 004D0695    mov         edx,dword ptr [ebp-8]
 004D0698    mov         dword ptr [edx+0C],eax
 004D069B    mov         byte ptr [ebp-9],1
 004D069F    mov         al,byte ptr [ebp-9]
 004D06A2    pop         ebx
 004D06A3    mov         esp,ebp
 004D06A5    pop         ebp
 004D06A6    ret
end;*}

//004D06A8
{*procedure sub_004D06A8(?:?);
begin
 004D06A8    push        ebp
 004D06A9    mov         ebp,esp
 004D06AB    add         esp,0FFFFFFE4
 004D06AE    push        ebx
 004D06AF    mov         dword ptr [ebp-8],edx
 004D06B2    mov         dword ptr [ebp-4],eax
 004D06B5    mov         eax,dword ptr [ebp-8]
 004D06B8    mov         eax,dword ptr [eax]
 004D06BA    cmp         eax,84
>004D06BF    jg          004D06D9
>004D06C1    je          004D073C
 004D06C3    sub         eax,7
>004D06C6    je          004D06FA
 004D06C8    dec         eax
>004D06C9    je          004D072A
 004D06CB    sub         eax,17
>004D06CE    je          004D07F4
>004D06D4    jmp         004D0830
 004D06D9    add         eax,0FFFFFF00
 004D06DE    sub         eax,9
>004D06E1    jb          004D07E6
 004D06E7    add         eax,0FFFFFF09
 004D06EC    sub         eax,0B
>004D06EF    jb          004D0796
>004D06F5    jmp         004D0830
 004D06FA    mov         eax,dword ptr [ebp-4]
 004D06FD    call        004E7ED8
 004D0702    mov         dword ptr [ebp-0C],eax
 004D0705    cmp         dword ptr [ebp-0C],0
>004D0709    je          004D0830
 004D070F    mov         edx,dword ptr [ebp-4]
 004D0712    mov         eax,dword ptr [ebp-0C]
 004D0715    mov         ecx,dword ptr [eax]
 004D0717    call        dword ptr [ecx+0E8]
 004D071D    test        al,al
>004D071F    je          004D083B
>004D0725    jmp         004D0830
 004D072A    mov         eax,dword ptr [ebp-4]
 004D072D    test        byte ptr [eax+54],20;TWinControl.FControlState:TControlState
>004D0731    jne         004D083B
>004D0737    jmp         004D0830
 004D073C    mov         edx,dword ptr [ebp-8]
 004D073F    mov         eax,dword ptr [ebp-4]
 004D0742    call        004CC928
 004D0747    mov         eax,dword ptr [ebp-8]
 004D074A    cmp         dword ptr [eax+0C],0FFFFFFFF
>004D074E    jne         004D083B
 004D0754    push        0
 004D0756    lea         edx,[ebp-1C]
 004D0759    mov         eax,dword ptr [ebp-8]
 004D075C    mov         eax,dword ptr [eax+8]
 004D075F    call        00408250
 004D0764    lea         edx,[ebp-1C]
 004D0767    lea         ecx,[ebp-14]
 004D076A    mov         eax,dword ptr [ebp-4]
 004D076D    call        TControl.ScreenToClient
 004D0772    lea         edx,[ebp-14]
 004D0775    xor         ecx,ecx
 004D0777    mov         eax,dword ptr [ebp-4]
 004D077A    call        004D052C
 004D077F    test        eax,eax
>004D0781    je          004D083B
 004D0787    mov         eax,dword ptr [ebp-8]
 004D078A    mov         dword ptr [eax+0C],1
>004D0791    jmp         004D083B
 004D0796    mov         edx,dword ptr [ebp-8]
 004D0799    mov         eax,dword ptr [ebp-4]
 004D079C    call        004D05E8
 004D07A1    test        al,al
>004D07A3    je          004D0830
 004D07A9    mov         eax,dword ptr [ebp-8]
 004D07AC    cmp         dword ptr [eax+0C],0
>004D07B0    jne         004D083B
 004D07B6    mov         eax,dword ptr [ebp-4]
 004D07B9    call        TWinControl.HandleAllocated
 004D07BE    test        al,al
>004D07C0    je          004D083B
 004D07C2    mov         eax,dword ptr [ebp-8]
 004D07C5    mov         eax,dword ptr [eax+8]
 004D07C8    push        eax
 004D07C9    mov         eax,dword ptr [ebp-8]
 004D07CC    mov         eax,dword ptr [eax+4]
 004D07CF    push        eax
 004D07D0    mov         eax,dword ptr [ebp-8]
 004D07D3    mov         eax,dword ptr [eax]
 004D07D5    push        eax
 004D07D6    mov         eax,dword ptr [ebp-4]
 004D07D9    call        TWinControl.GetHandle
 004D07DE    push        eax
 004D07DF    call        user32.DefWindowProcA
>004D07E4    jmp         004D083B
 004D07E6    mov         eax,dword ptr [ebp-4]
 004D07E9    call        004CBAA4
 004D07EE    test        al,al
>004D07F0    jne         004D083B
>004D07F2    jmp         004D0830
 004D07F4    mov         eax,dword ptr [ebp-4]
 004D07F7    call        TWinControl.GetHandle
 004D07FC    mov         ebx,eax
 004D07FE    call        user32.GetCapture
 004D0803    cmp         ebx,eax
>004D0805    jne         004D0830
 004D0807    cmp         dword ptr ds:[54173C],0;gvar_0054173C
>004D080E    je          004D0830
 004D0810    mov         eax,[0054173C];0x0 gvar_0054173C
 004D0815    mov         eax,dword ptr [eax+30]
 004D0818    cmp         eax,dword ptr [ebp-4]
>004D081B    jne         004D0830
 004D081D    push        0
 004D081F    xor         ecx,ecx
 004D0821    mov         edx,1F
 004D0826    mov         eax,[0054173C];0x0 gvar_0054173C
 004D082B    call        004CC7DC
 004D0830    mov         edx,dword ptr [ebp-8]
 004D0833    mov         eax,dword ptr [ebp-4]
 004D0836    call        004CC928
 004D083B    pop         ebx
 004D083C    mov         esp,ebp
 004D083E    pop         ebp
 004D083F    ret
end;*}

//004D0840
procedure TWinControl.DefaultHandler(var Message:void );
begin
{*
 004D0840    push        ebp
 004D0841    mov         ebp,esp
 004D0843    add         esp,0FFFFFFF8
 004D0846    mov         dword ptr [ebp-8],edx
 004D0849    mov         dword ptr [ebp-4],eax
 004D084C    mov         eax,dword ptr [ebp-4]
 004D084F    cmp         dword ptr [eax+180],0
>004D0856    je          004D09AB
 004D085C    mov         eax,dword ptr [ebp-8]
 004D085F    cmp         dword ptr [eax],7B
>004D0862    jne         004D089D
 004D0864    mov         eax,dword ptr [ebp-4]
 004D0867    cmp         dword ptr [eax+30],0
>004D086B    je          004D089D
 004D086D    mov         eax,dword ptr [ebp-8];{TControl.Perform}
 004D0870    mov         eax,dword ptr [eax+8]
 004D0873    push        eax
 004D0874    mov         ecx,dword ptr [ebp-8]
 004D0877    mov         ecx,dword ptr [ecx+4]
 004D087A    mov         edx,dword ptr [ebp-8]
 004D087D    mov         edx,dword ptr [edx]
 004D087F    mov         eax,dword ptr [ebp-4]
 004D0882    mov         eax,dword ptr [eax+30]
 004D0885    call        004CC7DC
 004D088A    mov         edx,dword ptr [ebp-8]
 004D088D    mov         dword ptr [edx+0C],eax
 004D0890    mov         eax,dword ptr [ebp-8]
 004D0893    cmp         dword ptr [eax+0C],0
>004D0897    jne         004D09B6
 004D089D    mov         eax,dword ptr [ebp-8]
 004D08A0    mov         eax,dword ptr [eax]
 004D08A2    add         eax,0FFFFFECE
 004D08A7    sub         eax,7
>004D08AA    jb          004D08BB
 004D08AC    add         eax,0FFFF4407
 004D08B1    sub         eax,7
>004D08B4    jb          004D08EB
>004D08B6    jmp         004D093C
 004D08BB    mov         eax,dword ptr [ebp-8]
 004D08BE    mov         eax,dword ptr [eax+8]
 004D08C1    push        eax
 004D08C2    mov         eax,dword ptr [ebp-8]
 004D08C5    mov         eax,dword ptr [eax+4]
 004D08C8    push        eax
 004D08C9    mov         eax,dword ptr [ebp-8]
 004D08CC    mov         eax,dword ptr [eax]
 004D08CE    add         eax,0BC00;{TBrush.GetColor}
 004D08D3    push        eax
 004D08D4    mov         eax,dword ptr [ebp-8];{ColorToRGB}
 004D08D7    mov         eax,dword ptr [eax+8]
 004D08DA    push        eax
 004D08DB    call        user32.SendMessageA
 004D08E0    mov         edx,dword ptr [ebp-8]
 004D08E3    mov         dword ptr [edx+0C],eax
>004D08E6    jmp         004D0987
 004D08EB    mov         eax,dword ptr [ebp-4]
 004D08EE    mov         eax,dword ptr [eax+68]
 004D08F1    mov         eax,dword ptr [eax+18]
 004D08F4    call        00486830
 004D08F9    push        eax
 004D08FA    mov         eax,dword ptr [ebp-8]
 004D08FD    mov         eax,dword ptr [eax+4]
 004D0900    push        eax
 004D0901    call        gdi32.SetTextColor
 004D0906    mov         eax,dword ptr [ebp-4]
 004D0909    mov         eax,dword ptr [eax+170]
 004D090F    call        TBrush.GetColor
 004D0914    call        00486830
 004D0919    push        eax
 004D091A    mov         eax,dword ptr [ebp-8]
 004D091D    mov         eax,dword ptr [eax+4]
 004D0920    push        eax
 004D0921    call        gdi32.SetBkColor
 004D0926    mov         eax,dword ptr [ebp-4]
 004D0929    mov         eax,dword ptr [eax+170]
 004D092F    call        TBrush.GetHandle
 004D0934    mov         edx,dword ptr [ebp-8]
 004D0937    mov         dword ptr [edx+0C],eax
>004D093A    jmp         004D0987
 004D093C    mov         eax,dword ptr [ebp-8];{TControl.DefaultHandler}
 004D093F    mov         eax,dword ptr [eax]
 004D0941    cmp         eax,dword ptr ds:[55DDC4];gvar_0055DDC4
>004D0947    jne         004D0954
 004D0949    mov         eax,dword ptr [ebp-8]
 004D094C    mov         edx,dword ptr [ebp-4]
 004D094F    mov         dword ptr [eax+0C],edx
>004D0952    jmp         004D0987
 004D0954    mov         eax,dword ptr [ebp-8]
 004D0957    mov         eax,dword ptr [eax+8]
 004D095A    push        eax
 004D095B    mov         eax,dword ptr [ebp-8]
 004D095E    mov         eax,dword ptr [eax+4]
 004D0961    push        eax
 004D0962    mov         eax,dword ptr [ebp-8]
 004D0965    mov         eax,dword ptr [eax]
 004D0967    push        eax
 004D0968    mov         eax,dword ptr [ebp-4]
 004D096B    mov         eax,dword ptr [eax+180]
 004D0971    push        eax
 004D0972    mov         eax,dword ptr [ebp-4]
 004D0975    mov         eax,dword ptr [eax+174]
 004D097B    push        eax
 004D097C    call        user32.CallWindowProcA
 004D0981    mov         edx,dword ptr [ebp-8]
 004D0984    mov         dword ptr [edx+0C],eax
 004D0987    mov         eax,dword ptr [ebp-8]
 004D098A    cmp         dword ptr [eax],0C
>004D098D    jne         004D09B6
 004D098F    mov         eax,dword ptr [ebp-8]
 004D0992    mov         eax,dword ptr [eax+8]
 004D0995    push        eax
 004D0996    mov         ecx,dword ptr [ebp-8]
 004D0999    mov         ecx,dword ptr [ecx+4]
 004D099C    mov         edx,dword ptr [ebp-8]
 004D099F    mov         edx,dword ptr [edx]
 004D09A1    mov         eax,dword ptr [ebp-4]
 004D09A4    call        004CA980
>004D09A9    jmp         004D09B6
 004D09AB    mov         edx,dword ptr [ebp-8]
 004D09AE    mov         eax,dword ptr [ebp-4]
 004D09B1    call        TControl.DefaultHandler
 004D09B6    pop         ecx
 004D09B7    pop         ecx
 004D09B8    pop         ebp
 004D09B9    ret
*}
end;

//004D09BC
{*function sub_004D09BC(?:?; ?:?):?;
begin
 004D09BC    push        ebp
 004D09BD    mov         ebp,esp
 004D09BF    add         esp,0FFFFFFF0
 004D09C2    mov         dword ptr [ebp-8],edx
 004D09C5    mov         dword ptr [ebp-4],eax
 004D09C8    mov         byte ptr [ebp-9],0
 004D09CC    mov         eax,dword ptr [ebp-4]
 004D09CF    call        004C6F7C
 004D09D4    mov         dword ptr [ebp-10],eax
 004D09D7    cmp         dword ptr [ebp-10],0
>004D09DB    je          004D0A07
 004D09DD    mov         eax,dword ptr [ebp-8]
 004D09E0    mov         eax,dword ptr [eax+8]
 004D09E3    push        eax
 004D09E4    mov         ecx,dword ptr [ebp-8]
 004D09E7    mov         ecx,dword ptr [ecx+4]
 004D09EA    mov         edx,dword ptr [ebp-8]
 004D09ED    mov         edx,dword ptr [edx]
 004D09EF    add         edx,0BC00
 004D09F5    mov         eax,dword ptr [ebp-10]
 004D09F8    call        004CC7DC
 004D09FD    mov         edx,dword ptr [ebp-8]
 004D0A00    mov         dword ptr [edx+0C],eax
 004D0A03    mov         byte ptr [ebp-9],1
 004D0A07    mov         al,byte ptr [ebp-9]
 004D0A0A    mov         esp,ebp
 004D0A0C    pop         ebp
 004D0A0D    ret
end;*}

//004D0A10
procedure TWinControl.PaintHandler(var Message:TWMPaint);
begin
{*
 004D0A10    push        ebp
 004D0A11    mov         ebp,esp
 004D0A13    add         esp,0FFFFFFA0
 004D0A16    mov         dword ptr [ebp-8],edx
 004D0A19    mov         dword ptr [ebp-4],eax
 004D0A1C    mov         eax,dword ptr [ebp-8]
 004D0A1F    mov         eax,dword ptr [eax+4]
 004D0A22    mov         dword ptr [ebp-18],eax
 004D0A25    cmp         dword ptr [ebp-18],0
>004D0A29    jne         004D0A40
 004D0A2B    lea         eax,[ebp-60]
 004D0A2E    push        eax
 004D0A2F    mov         eax,dword ptr [ebp-4]
 004D0A32    call        TWinControl.GetHandle
 004D0A37    push        eax
 004D0A38    call        user32.BeginPaint
 004D0A3D    mov         dword ptr [ebp-18],eax
 004D0A40    xor         eax,eax
 004D0A42    push        ebp
 004D0A43    push        4D0B71
 004D0A48    push        dword ptr fs:[eax]
 004D0A4B    mov         dword ptr fs:[eax],esp
 004D0A4E    mov         eax,dword ptr [ebp-4]
 004D0A51    cmp         dword ptr [eax+198],0
>004D0A58    jne         004D0A6D
 004D0A5A    mov         edx,dword ptr [ebp-18]
 004D0A5D    mov         eax,dword ptr [ebp-4]
 004D0A60    mov         ecx,dword ptr [eax]
 004D0A62    call        dword ptr [ecx+0B8]
>004D0A68    jmp         004D0B3B
 004D0A6D    mov         eax,dword ptr [ebp-18]
 004D0A70    push        eax
 004D0A71    call        gdi32.SaveDC
 004D0A76    mov         dword ptr [ebp-14],eax
 004D0A79    mov         dword ptr [ebp-10],2
 004D0A80    mov         eax,dword ptr [ebp-4]
 004D0A83    mov         eax,dword ptr [eax+198]
 004D0A89    mov         eax,dword ptr [eax+8]
 004D0A8C    dec         eax
 004D0A8D    test        eax,eax
>004D0A8F    jl          004D0B1A
 004D0A95    inc         eax
 004D0A96    mov         dword ptr [ebp-1C],eax
 004D0A99    mov         dword ptr [ebp-0C],0
 004D0AA0    mov         eax,dword ptr [ebp-4]
 004D0AA3    mov         eax,dword ptr [eax+198]
 004D0AA9    mov         edx,dword ptr [ebp-0C]
 004D0AAC    call        TList.Get
 004D0AB1    mov         dword ptr [ebp-20],eax
 004D0AB4    mov         eax,dword ptr [ebp-20]
 004D0AB7    cmp         byte ptr [eax+57],0
>004D0ABB    jne         004D0ACF
 004D0ABD    mov         eax,dword ptr [ebp-20]
 004D0AC0    test        byte ptr [eax+1C],10
>004D0AC4    je          004D0B12
 004D0AC6    mov         eax,dword ptr [ebp-20]
 004D0AC9    test        byte ptr [eax+51],4
>004D0ACD    jne         004D0B12
 004D0ACF    mov         eax,dword ptr [ebp-20]
 004D0AD2    test        byte ptr [eax+50],40
>004D0AD6    je          004D0B12
 004D0AD8    mov         eax,dword ptr [ebp-20]
 004D0ADB    mov         eax,dword ptr [eax+44]
 004D0ADE    mov         edx,dword ptr [ebp-20]
 004D0AE1    add         eax,dword ptr [edx+4C]
 004D0AE4    push        eax
 004D0AE5    mov         eax,dword ptr [ebp-20]
 004D0AE8    mov         eax,dword ptr [eax+40]
 004D0AEB    mov         edx,dword ptr [ebp-20]
 004D0AEE    add         eax,dword ptr [edx+48]
 004D0AF1    push        eax
 004D0AF2    mov         eax,dword ptr [ebp-20]
 004D0AF5    mov         eax,dword ptr [eax+44]
 004D0AF8    push        eax
 004D0AF9    mov         eax,dword ptr [ebp-20]
 004D0AFC    mov         eax,dword ptr [eax+40]
 004D0AFF    push        eax
 004D0B00    mov         eax,dword ptr [ebp-18]
 004D0B03    push        eax
 004D0B04    call        gdi32.ExcludeClipRect
 004D0B09    mov         dword ptr [ebp-10],eax
 004D0B0C    cmp         dword ptr [ebp-10],1
>004D0B10    je          004D0B1A
 004D0B12    inc         dword ptr [ebp-0C]
 004D0B15    dec         dword ptr [ebp-1C]
>004D0B18    jne         004D0AA0
 004D0B1A    cmp         dword ptr [ebp-10],1
>004D0B1E    je          004D0B2E
 004D0B20    mov         edx,dword ptr [ebp-18]
 004D0B23    mov         eax,dword ptr [ebp-4]
 004D0B26    mov         ecx,dword ptr [eax]
 004D0B28    call        dword ptr [ecx+0B8]
 004D0B2E    mov         eax,dword ptr [ebp-14]
 004D0B31    push        eax
 004D0B32    mov         eax,dword ptr [ebp-18]
 004D0B35    push        eax
 004D0B36    call        gdi32.RestoreDC
 004D0B3B    xor         ecx,ecx
 004D0B3D    mov         edx,dword ptr [ebp-18]
 004D0B40    mov         eax,dword ptr [ebp-4]
 004D0B43    call        004D0BB0
 004D0B48    xor         eax,eax
 004D0B4A    pop         edx
 004D0B4B    pop         ecx
 004D0B4C    pop         ecx
 004D0B4D    mov         dword ptr fs:[eax],edx
 004D0B50    push        4D0B78
 004D0B55    mov         eax,dword ptr [ebp-8]
 004D0B58    cmp         dword ptr [eax+4],0
>004D0B5C    jne         004D0B70
 004D0B5E    lea         eax,[ebp-60]
 004D0B61    push        eax
 004D0B62    mov         eax,dword ptr [ebp-4]
 004D0B65    call        TWinControl.GetHandle
 004D0B6A    push        eax
 004D0B6B    call        user32.EndPaint
 004D0B70    ret
>004D0B71    jmp         @HandleFinally
>004D0B76    jmp         004D0B55
 004D0B78    mov         esp,ebp
 004D0B7A    pop         ebp
 004D0B7B    ret
*}
end;

//004D0B7C
{*procedure sub_004D0B7C(?:?);
begin
 004D0B7C    push        ebp
 004D0B7D    mov         ebp,esp
 004D0B7F    add         esp,0FFFFFFE8
 004D0B82    mov         dword ptr [ebp-8],edx
 004D0B85    mov         dword ptr [ebp-4],eax
 004D0B88    mov         dword ptr [ebp-18],0F
 004D0B8F    mov         eax,dword ptr [ebp-8]
 004D0B92    mov         dword ptr [ebp-14],eax
 004D0B95    xor         eax,eax
 004D0B97    mov         dword ptr [ebp-10],eax
 004D0B9A    xor         eax,eax
 004D0B9C    mov         dword ptr [ebp-0C],eax
 004D0B9F    lea         edx,[ebp-18]
 004D0BA2    mov         eax,dword ptr [ebp-4]
 004D0BA5    mov         ecx,dword ptr [eax]
 004D0BA7    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D0BAA    mov         esp,ebp
 004D0BAC    pop         ebp
 004D0BAD    ret
end;*}

//004D0BB0
{*procedure sub_004D0BB0(?:TWinControl; ?:HDC; ?:?);
begin
 004D0BB0    push        ebp
 004D0BB1    mov         ebp,esp
 004D0BB3    add         esp,0FFFFFFC8
 004D0BB6    mov         dword ptr [ebp-0C],ecx
 004D0BB9    mov         dword ptr [ebp-8],edx
 004D0BBC    mov         dword ptr [ebp-4],eax
 004D0BBF    mov         eax,dword ptr [ebp-4]
 004D0BC2    cmp         byte ptr [eax+1A8],0;TWinControl.FDockSite:Boolean
>004D0BC9    je          004D0BF4
 004D0BCB    mov         eax,dword ptr [ebp-4]
 004D0BCE    cmp         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
>004D0BD5    je          004D0BF4
 004D0BD7    mov         eax,dword ptr [ebp-4]
 004D0BDA    cmp         dword ptr [eax+17C],0;TWinControl.FDockManager:IDockManager
>004D0BE1    je          004D0BF4
 004D0BE3    mov         eax,dword ptr [ebp-4]
 004D0BE6    mov         eax,dword ptr [eax+17C];TWinControl.FDockManager:IDockManager
 004D0BEC    mov         edx,dword ptr [ebp-8]
 004D0BEF    mov         ecx,dword ptr [eax]
 004D0BF1    call        dword ptr [ecx+20]
 004D0BF4    mov         eax,dword ptr [ebp-4]
 004D0BF7    cmp         dword ptr [eax+198],0;TWinControl.FControls:TList
>004D0BFE    je          004D0D43
 004D0C04    xor         eax,eax
 004D0C06    mov         dword ptr [ebp-10],eax
 004D0C09    cmp         dword ptr [ebp-0C],0
>004D0C0D    je          004D0C2E
 004D0C0F    mov         eax,dword ptr [ebp-4]
 004D0C12    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 004D0C18    mov         edx,dword ptr [ebp-0C]
 004D0C1B    call        00478890
 004D0C20    mov         dword ptr [ebp-10],eax
 004D0C23    cmp         dword ptr [ebp-10],0
>004D0C27    jge         004D0C2E
 004D0C29    xor         eax,eax
 004D0C2B    mov         dword ptr [ebp-10],eax
 004D0C2E    mov         eax,dword ptr [ebp-4]
 004D0C31    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 004D0C37    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D0C3A    mov         dword ptr [ebp-14],eax
 004D0C3D    mov         eax,dword ptr [ebp-10]
 004D0C40    cmp         eax,dword ptr [ebp-14]
>004D0C43    jge         004D0D43
 004D0C49    mov         eax,dword ptr [ebp-4]
 004D0C4C    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 004D0C52    mov         edx,dword ptr [ebp-10]
 004D0C55    call        TList.Get
 004D0C5A    mov         dword ptr [ebp-20],eax
 004D0C5D    mov         eax,dword ptr [ebp-20]
 004D0C60    cmp         byte ptr [eax+57],0
>004D0C64    jne         004D0C80
 004D0C66    mov         eax,dword ptr [ebp-20]
 004D0C69    test        byte ptr [eax+1C],10
>004D0C6D    je          004D0D34
 004D0C73    mov         eax,dword ptr [ebp-20]
 004D0C76    test        byte ptr [eax+51],4
>004D0C7A    jne         004D0D34
 004D0C80    mov         eax,dword ptr [ebp-20]
 004D0C83    mov         eax,dword ptr [eax+44]
 004D0C86    mov         edx,dword ptr [ebp-20]
 004D0C89    add         eax,dword ptr [edx+4C]
 004D0C8C    push        eax
 004D0C8D    lea         eax,[ebp-38]
 004D0C90    push        eax
 004D0C91    mov         eax,dword ptr [ebp-20]
 004D0C94    mov         ecx,dword ptr [eax+40]
 004D0C97    mov         eax,dword ptr [ebp-20]
 004D0C9A    add         ecx,dword ptr [eax+48]
 004D0C9D    mov         eax,dword ptr [ebp-20]
 004D0CA0    mov         edx,dword ptr [eax+44]
 004D0CA3    mov         eax,dword ptr [ebp-20]
 004D0CA6    mov         eax,dword ptr [eax+40]
 004D0CA9    call        Rect
 004D0CAE    lea         eax,[ebp-38]
 004D0CB1    push        eax
 004D0CB2    mov         eax,dword ptr [ebp-8]
 004D0CB5    push        eax
 004D0CB6    call        gdi32.RectVisible
 004D0CBB    test        eax,eax
>004D0CBD    je          004D0D34
 004D0CBF    mov         eax,dword ptr [ebp-4]
 004D0CC2    test        byte ptr [eax+54],80;TWinControl.FControlState:TControlState
>004D0CC6    je          004D0CD1
 004D0CC8    mov         eax,dword ptr [ebp-20]
 004D0CCB    or          word ptr [eax+54],80
 004D0CD1    mov         eax,dword ptr [ebp-8]
 004D0CD4    push        eax
 004D0CD5    call        gdi32.SaveDC
 004D0CDA    mov         dword ptr [ebp-18],eax
 004D0CDD    mov         eax,dword ptr [ebp-20]
 004D0CE0    mov         ecx,dword ptr [eax+44]
 004D0CE3    mov         eax,dword ptr [ebp-20]
 004D0CE6    mov         edx,dword ptr [eax+40]
 004D0CE9    mov         eax,dword ptr [ebp-8]
 004D0CEC    call        MoveWindowOrg
 004D0CF1    mov         eax,dword ptr [ebp-20]
 004D0CF4    mov         eax,dword ptr [eax+4C]
 004D0CF7    push        eax
 004D0CF8    mov         eax,dword ptr [ebp-20]
 004D0CFB    mov         eax,dword ptr [eax+48]
 004D0CFE    push        eax
 004D0CFF    push        0
 004D0D01    push        0
 004D0D03    mov         eax,dword ptr [ebp-8]
 004D0D06    push        eax
 004D0D07    call        gdi32.IntersectClipRect
 004D0D0C    push        0
 004D0D0E    mov         ecx,dword ptr [ebp-8]
 004D0D11    mov         edx,0F
 004D0D16    mov         eax,dword ptr [ebp-20]
 004D0D19    call        004CC7DC
 004D0D1E    mov         eax,dword ptr [ebp-18]
 004D0D21    push        eax
 004D0D22    mov         eax,dword ptr [ebp-8]
 004D0D25    push        eax
 004D0D26    call        gdi32.RestoreDC
 004D0D2B    mov         eax,dword ptr [ebp-20]
 004D0D2E    and         word ptr [eax+54],0FF7F
 004D0D34    inc         dword ptr [ebp-10]
 004D0D37    mov         eax,dword ptr [ebp-10]
 004D0D3A    cmp         eax,dword ptr [ebp-14]
>004D0D3D    jl          004D0C49
 004D0D43    mov         eax,dword ptr [ebp-4]
 004D0D46    cmp         dword ptr [eax+19C],0;TWinControl.FWinControls:TList
>004D0D4D    je          004D0E8D
 004D0D53    mov         eax,dword ptr [ebp-4]
 004D0D56    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 004D0D5C    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D0D5F    dec         eax
 004D0D60    test        eax,eax
>004D0D62    jl          004D0E8D
 004D0D68    inc         eax
 004D0D69    mov         dword ptr [ebp-24],eax
 004D0D6C    mov         dword ptr [ebp-10],0
 004D0D73    mov         eax,dword ptr [ebp-4]
 004D0D76    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 004D0D7C    mov         edx,dword ptr [ebp-10]
 004D0D7F    call        TList.Get
 004D0D84    mov         dword ptr [ebp-28],eax
 004D0D87    mov         eax,dword ptr [ebp-28]
 004D0D8A    cmp         byte ptr [eax+1A5],0
>004D0D91    je          004D0E81
 004D0D97    mov         eax,dword ptr [ebp-28]
 004D0D9A    test        byte ptr [eax+50],10
>004D0D9E    je          004D0E81
 004D0DA4    mov         eax,dword ptr [ebp-28]
 004D0DA7    cmp         byte ptr [eax+57],0
>004D0DAB    jne         004D0DC7
 004D0DAD    mov         eax,dword ptr [ebp-28]
 004D0DB0    test        byte ptr [eax+1C],10
>004D0DB4    je          004D0E81
 004D0DBA    mov         eax,dword ptr [ebp-28]
 004D0DBD    test        byte ptr [eax+51],4
>004D0DC1    jne         004D0E81
 004D0DC7    mov         eax,0FF000010
 004D0DCC    call        00486830
 004D0DD1    push        eax
 004D0DD2    call        gdi32.CreateSolidBrush
 004D0DD7    mov         dword ptr [ebp-1C],eax
 004D0DDA    mov         eax,dword ptr [ebp-1C]
 004D0DDD    push        eax
 004D0DDE    mov         eax,dword ptr [ebp-28]
 004D0DE1    mov         eax,dword ptr [eax+44]
 004D0DE4    mov         edx,dword ptr [ebp-28]
 004D0DE7    add         eax,dword ptr [edx+4C]
 004D0DEA    push        eax
 004D0DEB    lea         eax,[ebp-38]
 004D0DEE    push        eax
 004D0DEF    mov         eax,dword ptr [ebp-28]
 004D0DF2    mov         ecx,dword ptr [eax+40]
 004D0DF5    mov         eax,dword ptr [ebp-28]
 004D0DF8    add         ecx,dword ptr [eax+48]
 004D0DFB    mov         eax,dword ptr [ebp-28]
 004D0DFE    mov         edx,dword ptr [eax+44]
 004D0E01    dec         edx
 004D0E02    mov         eax,dword ptr [ebp-28]
 004D0E05    mov         eax,dword ptr [eax+40]
 004D0E08    dec         eax
 004D0E09    call        Rect
 004D0E0E    lea         eax,[ebp-38]
 004D0E11    push        eax
 004D0E12    mov         eax,dword ptr [ebp-8]
 004D0E15    push        eax
 004D0E16    call        user32.FrameRect
 004D0E1B    mov         eax,dword ptr [ebp-1C]
 004D0E1E    push        eax
 004D0E1F    call        gdi32.DeleteObject
 004D0E24    mov         eax,0FF000014
 004D0E29    call        00486830
 004D0E2E    push        eax
 004D0E2F    call        gdi32.CreateSolidBrush
 004D0E34    mov         dword ptr [ebp-1C],eax
 004D0E37    mov         eax,dword ptr [ebp-1C]
 004D0E3A    push        eax
 004D0E3B    mov         eax,dword ptr [ebp-28]
 004D0E3E    mov         eax,dword ptr [eax+44]
 004D0E41    mov         edx,dword ptr [ebp-28]
 004D0E44    add         eax,dword ptr [edx+4C]
 004D0E47    inc         eax
 004D0E48    push        eax
 004D0E49    lea         eax,[ebp-38]
 004D0E4C    push        eax
 004D0E4D    mov         eax,dword ptr [ebp-28]
 004D0E50    mov         ecx,dword ptr [eax+40]
 004D0E53    mov         eax,dword ptr [ebp-28]
 004D0E56    add         ecx,dword ptr [eax+48]
 004D0E59    inc         ecx
 004D0E5A    mov         eax,dword ptr [ebp-28]
 004D0E5D    mov         edx,dword ptr [eax+44]
 004D0E60    mov         eax,dword ptr [ebp-28]
 004D0E63    mov         eax,dword ptr [eax+40]
 004D0E66    call        Rect
 004D0E6B    lea         eax,[ebp-38]
 004D0E6E    push        eax
 004D0E6F    mov         eax,dword ptr [ebp-8]
 004D0E72    push        eax
 004D0E73    call        user32.FrameRect
 004D0E78    mov         eax,dword ptr [ebp-1C]
 004D0E7B    push        eax
 004D0E7C    call        gdi32.DeleteObject
 004D0E81    inc         dword ptr [ebp-10]
 004D0E84    dec         dword ptr [ebp-24]
>004D0E87    jne         004D0D73
 004D0E8D    mov         esp,ebp
 004D0E8F    pop         ebp
 004D0E90    ret
end;*}

//004D0E94
{*procedure sub_004D0E94(?:Pointer; ?:?; ?:?; ?:?);
begin
 004D0E94    push        ebp
 004D0E95    mov         ebp,esp
 004D0E97    add         esp,0FFFFFFCC
 004D0E9A    mov         dword ptr [ebp-0C],ecx
 004D0E9D    mov         dword ptr [ebp-8],edx
 004D0EA0    mov         dword ptr [ebp-4],eax
 004D0EA3    mov         eax,dword ptr [ebp-4]
 004D0EA6    or          word ptr [eax+54],80
 004D0EAC    mov         eax,dword ptr [ebp-8]
 004D0EAF    push        eax
 004D0EB0    call        gdi32.SaveDC
 004D0EB5    mov         dword ptr [ebp-1C],eax
 004D0EB8    mov         ecx,dword ptr [ebp+8]
 004D0EBB    mov         edx,dword ptr [ebp-0C]
 004D0EBE    mov         eax,dword ptr [ebp-8]
 004D0EC1    call        MoveWindowOrg
 004D0EC6    mov         eax,dword ptr [ebp-4]
 004D0EC9    mov         eax,dword ptr [eax+4C]
 004D0ECC    push        eax
 004D0ECD    mov         eax,dword ptr [ebp-4]
 004D0ED0    mov         eax,dword ptr [eax+48]
 004D0ED3    push        eax
 004D0ED4    push        0
 004D0ED6    push        0
 004D0ED8    mov         eax,dword ptr [ebp-8]
 004D0EDB    push        eax
 004D0EDC    call        gdi32.IntersectClipRect
 004D0EE1    xor         eax,eax
 004D0EE3    mov         dword ptr [ebp-18],eax
 004D0EE6    xor         eax,eax
 004D0EE8    mov         dword ptr [ebp-14],eax
 004D0EEB    push        0EC
 004D0EED    mov         eax,dword ptr [ebp-4]
 004D0EF0    call        TWinControl.GetHandle
 004D0EF5    push        eax
 004D0EF6    call        user32.GetWindowLongA
 004D0EFB    test        ah,2
>004D0EFE    je          004D0F10
 004D0F00    mov         dword ptr [ebp-14],0A
 004D0F07    mov         dword ptr [ebp-18],200F
>004D0F0E    jmp         004D0F35
 004D0F10    push        0F0
 004D0F12    mov         eax,dword ptr [ebp-4]
 004D0F15    call        TWinControl.GetHandle
 004D0F1A    push        eax
 004D0F1B    call        user32.GetWindowLongA
 004D0F20    test        eax,800000
>004D0F25    je          004D0F35
 004D0F27    mov         dword ptr [ebp-14],3
 004D0F2E    mov         dword ptr [ebp-18],0A00F
 004D0F35    cmp         dword ptr [ebp-18],0
>004D0F39    je          004D0F94
 004D0F3B    mov         eax,dword ptr [ebp-4]
 004D0F3E    mov         eax,dword ptr [eax+4C]
 004D0F41    push        eax
 004D0F42    mov         eax,dword ptr [ebp-4]
 004D0F45    mov         eax,dword ptr [eax+48]
 004D0F48    push        eax
 004D0F49    push        0
 004D0F4B    push        0
 004D0F4D    lea         eax,[ebp-34]
 004D0F50    push        eax
 004D0F51    call        user32.SetRect
 004D0F56    mov         eax,dword ptr [ebp-18]
 004D0F59    push        eax
 004D0F5A    mov         eax,dword ptr [ebp-14]
 004D0F5D    push        eax
 004D0F5E    lea         eax,[ebp-34]
 004D0F61    push        eax
 004D0F62    mov         eax,dword ptr [ebp-8]
 004D0F65    push        eax
 004D0F66    call        user32.DrawEdge
 004D0F6B    mov         ecx,dword ptr [ebp-30]
 004D0F6E    mov         edx,dword ptr [ebp-34]
 004D0F71    mov         eax,dword ptr [ebp-8]
 004D0F74    call        MoveWindowOrg
 004D0F79    mov         eax,dword ptr [ebp-28]
 004D0F7C    sub         eax,dword ptr [ebp-30]
 004D0F7F    push        eax
 004D0F80    mov         eax,dword ptr [ebp-2C]
 004D0F83    sub         eax,dword ptr [ebp-34]
 004D0F86    push        eax
 004D0F87    push        0
 004D0F89    push        0
 004D0F8B    mov         eax,dword ptr [ebp-8]
 004D0F8E    push        eax
 004D0F8F    call        gdi32.IntersectClipRect
 004D0F94    push        0
 004D0F96    mov         ecx,dword ptr [ebp-8]
 004D0F99    mov         edx,14
 004D0F9E    mov         eax,dword ptr [ebp-4]
 004D0FA1    call        004CC7DC
 004D0FA6    push        0
 004D0FA8    mov         ecx,dword ptr [ebp-8]
 004D0FAB    mov         edx,0F
 004D0FB0    mov         eax,dword ptr [ebp-4]
 004D0FB3    call        004CC7DC
 004D0FB8    mov         eax,dword ptr [ebp-4]
 004D0FBB    cmp         dword ptr [eax+19C],0
>004D0FC2    je          004D101D
 004D0FC4    mov         eax,dword ptr [ebp-4]
 004D0FC7    mov         eax,dword ptr [eax+19C]
 004D0FCD    mov         eax,dword ptr [eax+8]
 004D0FD0    dec         eax
 004D0FD1    test        eax,eax
>004D0FD3    jl          004D101D
 004D0FD5    inc         eax
 004D0FD6    mov         dword ptr [ebp-20],eax
 004D0FD9    mov         dword ptr [ebp-10],0
 004D0FE0    mov         edx,dword ptr [ebp-10]
 004D0FE3    mov         eax,dword ptr [ebp-4]
 004D0FE6    mov         eax,dword ptr [eax+19C]
 004D0FEC    call        TList.Get
 004D0FF1    mov         dword ptr [ebp-24],eax
 004D0FF4    mov         eax,dword ptr [ebp-24]
 004D0FF7    cmp         byte ptr [eax+57],0
>004D0FFB    je          004D1015
 004D0FFD    mov         eax,dword ptr [ebp-24]
 004D1000    mov         eax,dword ptr [eax+44]
 004D1003    push        eax
 004D1004    mov         eax,dword ptr [ebp-24]
 004D1007    mov         ecx,dword ptr [eax+40]
 004D100A    mov         edx,dword ptr [ebp-8]
 004D100D    mov         eax,dword ptr [ebp-24]
 004D1010    call        004D0E94
 004D1015    inc         dword ptr [ebp-10]
 004D1018    dec         dword ptr [ebp-20]
>004D101B    jne         004D0FE0
 004D101D    mov         eax,dword ptr [ebp-1C]
 004D1020    push        eax
 004D1021    mov         eax,dword ptr [ebp-8]
 004D1024    push        eax
 004D1025    call        gdi32.RestoreDC
 004D102A    mov         eax,dword ptr [ebp-4]
 004D102D    and         word ptr [eax+54],0FF7F
 004D1033    mov         esp,ebp
 004D1035    pop         ebp
 004D1036    ret         4
end;*}

//004D103C
procedure TWinControl.WMPaint(var Message:TWMPaint);
begin
{*
 004D103C    push        ebp
 004D103D    mov         ebp,esp
 004D103F    add         esp,0FFFFFF88
 004D1042    mov         dword ptr [ebp-8],edx
 004D1045    mov         dword ptr [ebp-4],eax
 004D1048    mov         eax,dword ptr [ebp-4]
 004D104B    cmp         byte ptr [eax+1F8],0
>004D1052    je          004D105D
 004D1054    mov         eax,dword ptr [ebp-8]
 004D1057    cmp         dword ptr [eax+4],0
>004D105B    je          004D1092
 004D105D    mov         eax,dword ptr [ebp-4]
 004D1060    test        byte ptr [eax+55],1
>004D1064    jne         004D1082
 004D1066    mov         eax,dword ptr [ebp-4]
 004D1069    call        004CF618
 004D106E    test        eax,eax
>004D1070    jne         004D1082
 004D1072    mov         edx,dword ptr [ebp-8]
 004D1075    mov         eax,dword ptr [ebp-4]
 004D1078    mov         ecx,dword ptr [eax]
 004D107A    call        dword ptr [ecx-10]
>004D107D    jmp         004D11BC
 004D1082    mov         edx,dword ptr [ebp-8]
 004D1085    mov         eax,dword ptr [ebp-4]
 004D1088    call        TWinControl.PaintHandler
>004D108D    jmp         004D11BC
 004D1092    push        0
 004D1094    call        user32.GetDC
 004D1099    mov         dword ptr [ebp-0C],eax
 004D109C    lea         edx,[ebp-68]
 004D109F    mov         eax,dword ptr [ebp-4]
 004D10A2    mov         ecx,dword ptr [eax]
 004D10A4    call        dword ptr [ecx+44]
 004D10A7    mov         eax,dword ptr [ebp-5C]
 004D10AA    push        eax
 004D10AB    lea         edx,[ebp-78]
 004D10AE    mov         eax,dword ptr [ebp-4]
 004D10B1    mov         ecx,dword ptr [eax]
 004D10B3    call        dword ptr [ecx+44]
 004D10B6    mov         eax,dword ptr [ebp-70]
 004D10B9    push        eax
 004D10BA    mov         eax,dword ptr [ebp-0C]
 004D10BD    push        eax
 004D10BE    call        gdi32.CreateCompatibleBitmap
 004D10C3    mov         dword ptr [ebp-14],eax
 004D10C6    mov         eax,dword ptr [ebp-0C]
 004D10C9    push        eax
 004D10CA    push        0
 004D10CC    call        user32.ReleaseDC
 004D10D1    push        0
 004D10D3    call        gdi32.CreateCompatibleDC
 004D10D8    mov         dword ptr [ebp-10],eax
 004D10DB    mov         eax,dword ptr [ebp-14]
 004D10DE    push        eax
 004D10DF    mov         eax,dword ptr [ebp-10]
 004D10E2    push        eax
 004D10E3    call        gdi32.SelectObject
 004D10E8    mov         dword ptr [ebp-18],eax
 004D10EB    xor         eax,eax
 004D10ED    push        ebp
 004D10EE    push        4D11B5
 004D10F3    push        dword ptr fs:[eax]
 004D10F6    mov         dword ptr fs:[eax],esp
 004D10F9    lea         eax,[ebp-58]
 004D10FC    push        eax
 004D10FD    mov         eax,dword ptr [ebp-4]
 004D1100    call        TWinControl.GetHandle
 004D1105    push        eax
 004D1106    call        user32.BeginPaint
 004D110B    mov         dword ptr [ebp-0C],eax
 004D110E    mov         eax,dword ptr [ebp-10]
 004D1111    push        eax
 004D1112    mov         ecx,dword ptr [ebp-10]
 004D1115    mov         edx,14
 004D111A    mov         eax,dword ptr [ebp-4]
 004D111D    call        004CC7DC
 004D1122    mov         eax,dword ptr [ebp-8]
 004D1125    mov         edx,dword ptr [ebp-10]
 004D1128    mov         dword ptr [eax+4],edx
 004D112B    mov         edx,dword ptr [ebp-8]
 004D112E    mov         eax,dword ptr [ebp-4]
 004D1131    call        TWinControl.WMPaint
 004D1136    mov         eax,dword ptr [ebp-8]
 004D1139    xor         edx,edx
 004D113B    mov         dword ptr [eax+4],edx
 004D113E    push        0CC0020
 004D1143    push        0
 004D1145    push        0
 004D1147    mov         eax,dword ptr [ebp-10]
 004D114A    push        eax
 004D114B    lea         edx,[ebp-68]
 004D114E    mov         eax,dword ptr [ebp-4]
 004D1151    mov         ecx,dword ptr [eax]
 004D1153    call        dword ptr [ecx+44]
 004D1156    mov         eax,dword ptr [ebp-5C]
 004D1159    push        eax
 004D115A    lea         edx,[ebp-78]
 004D115D    mov         eax,dword ptr [ebp-4]
 004D1160    mov         ecx,dword ptr [eax]
 004D1162    call        dword ptr [ecx+44]
 004D1165    mov         eax,dword ptr [ebp-70]
 004D1168    push        eax
 004D1169    push        0
 004D116B    push        0
 004D116D    mov         eax,dword ptr [ebp-0C]
 004D1170    push        eax
 004D1171    call        gdi32.BitBlt
 004D1176    lea         eax,[ebp-58]
 004D1179    push        eax
 004D117A    mov         eax,dword ptr [ebp-4]
 004D117D    call        TWinControl.GetHandle
 004D1182    push        eax
 004D1183    call        user32.EndPaint
 004D1188    xor         eax,eax
 004D118A    pop         edx
 004D118B    pop         ecx
 004D118C    pop         ecx
 004D118D    mov         dword ptr fs:[eax],edx
 004D1190    push        4D11BC
 004D1195    mov         eax,dword ptr [ebp-18]
 004D1198    push        eax
 004D1199    mov         eax,dword ptr [ebp-10]
 004D119C    push        eax
 004D119D    call        gdi32.SelectObject
 004D11A2    mov         eax,dword ptr [ebp-10]
 004D11A5    push        eax
 004D11A6    call        gdi32.DeleteDC
 004D11AB    mov         eax,dword ptr [ebp-14]
 004D11AE    push        eax
 004D11AF    call        gdi32.DeleteObject
 004D11B4    ret
>004D11B5    jmp         @HandleFinally
>004D11BA    jmp         004D1195
 004D11BC    mov         esp,ebp
 004D11BE    pop         ebp
 004D11BF    ret
*}
end;

//004D11C0
{*procedure TWinControl.WMCommand(?:?);
begin
 004D11C0    push        ebp
 004D11C1    mov         ebp,esp
 004D11C3    add         esp,0FFFFFFF8
 004D11C6    mov         dword ptr [ebp-8],edx
 004D11C9    mov         dword ptr [ebp-4],eax
 004D11CC    mov         edx,dword ptr [ebp-8]
 004D11CF    mov         eax,dword ptr [ebp-8]
 004D11D2    mov         eax,dword ptr [eax+8]
 004D11D5    call        004D09BC
 004D11DA    test        al,al
>004D11DC    jne         004D11E9
 004D11DE    mov         edx,dword ptr [ebp-8]
 004D11E1    mov         eax,dword ptr [ebp-4]
 004D11E4    mov         ecx,dword ptr [eax]
 004D11E6    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D11E9    pop         ecx
 004D11EA    pop         ecx
 004D11EB    pop         ebp
 004D11EC    ret
end;*}

//004D11F0
{*procedure TWinControl.WMNotify(?:?);
begin
 004D11F0    push        ebp
 004D11F1    mov         ebp,esp
 004D11F3    add         esp,0FFFFFFF8
 004D11F6    mov         dword ptr [ebp-8],edx
 004D11F9    mov         dword ptr [ebp-4],eax
 004D11FC    mov         edx,dword ptr [ebp-8]
 004D11FF    mov         eax,dword ptr [ebp-8]
 004D1202    mov         eax,dword ptr [eax+8]
 004D1205    mov         eax,dword ptr [eax]
 004D1207    call        004D09BC
 004D120C    test        al,al
>004D120E    jne         004D121B
 004D1210    mov         edx,dword ptr [ebp-8]
 004D1213    mov         eax,dword ptr [ebp-4]
 004D1216    mov         ecx,dword ptr [eax]
 004D1218    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D121B    pop         ecx
 004D121C    pop         ecx
 004D121D    pop         ebp
 004D121E    ret
end;*}

//004D1220
{*procedure TWinControl.WMSysColorChange(?:?);
begin
 004D1220    push        ebp
 004D1221    mov         ebp,esp
 004D1223    add         esp,0FFFFFFF8
 004D1226    mov         dword ptr [ebp-8],edx
 004D1229    mov         dword ptr [ebp-4],eax
 004D122C    call        00486334
 004D1231    push        0
 004D1233    xor         ecx,ecx
 004D1235    mov         edx,0B024
 004D123A    mov         eax,dword ptr [ebp-4]
 004D123D    call        004CC7DC
 004D1242    pop         ecx
 004D1243    pop         ecx
 004D1244    pop         ebp
 004D1245    ret
end;*}

//004D1248
{*procedure TWinControl.WMSettingChange(?:?);
begin
 004D1248    push        ebp
 004D1249    mov         ebp,esp
 004D124B    add         esp,0FFFFFFF8
 004D124E    mov         dword ptr [ebp-8],edx
 004D1251    mov         dword ptr [ebp-4],eax
 004D1254    mov         eax,dword ptr [ebp-8]
 004D1257    mov         eax,dword ptr [eax+8]
 004D125A    push        eax
 004D125B    mov         ecx,dword ptr [ebp-8]
 004D125E    mov         ecx,dword ptr [ecx+4]
 004D1261    mov         edx,0B025
 004D1266    mov         eax,dword ptr [ebp-4]
 004D1269    call        004CC7DC
 004D126E    pop         ecx
 004D126F    pop         ecx
 004D1270    pop         ebp
 004D1271    ret
end;*}

//004D1274
{*procedure TWinControl.WMFontChange(?:?);
begin
 004D1274    push        ebp
 004D1275    mov         ebp,esp
 004D1277    add         esp,0FFFFFFF8
 004D127A    mov         dword ptr [ebp-8],edx
 004D127D    mov         dword ptr [ebp-4],eax
 004D1280    push        0
 004D1282    xor         ecx,ecx
 004D1284    mov         edx,0B026
 004D1289    mov         eax,dword ptr [ebp-4]
 004D128C    call        004CC7DC
 004D1291    pop         ecx
 004D1292    pop         ecx
 004D1293    pop         ebp
 004D1294    ret
end;*}

//004D1298
{*procedure TWinControl.WMTimeChange(?:?);
begin
 004D1298    push        ebp
 004D1299    mov         ebp,esp
 004D129B    add         esp,0FFFFFFF8
 004D129E    mov         dword ptr [ebp-8],edx
 004D12A1    mov         dword ptr [ebp-4],eax
 004D12A4    push        0
 004D12A6    xor         ecx,ecx
 004D12A8    mov         edx,0B027
 004D12AD    mov         eax,dword ptr [ebp-4]
 004D12B0    call        004CC7DC
 004D12B5    pop         ecx
 004D12B6    pop         ecx
 004D12B7    pop         ebp
 004D12B8    ret
end;*}

//004D12BC
{*procedure TWinControl.WMHScroll(?:?);
begin
 004D12BC    push        ebp
 004D12BD    mov         ebp,esp
 004D12BF    add         esp,0FFFFFFF8
 004D12C2    mov         dword ptr [ebp-8],edx
 004D12C5    mov         dword ptr [ebp-4],eax
 004D12C8    mov         edx,dword ptr [ebp-8]
 004D12CB    mov         eax,dword ptr [ebp-8]
 004D12CE    mov         eax,dword ptr [eax+8]
 004D12D1    call        004D09BC
 004D12D6    test        al,al
>004D12D8    jne         004D12E5
 004D12DA    mov         edx,dword ptr [ebp-8]
 004D12DD    mov         eax,dword ptr [ebp-4]
 004D12E0    mov         ecx,dword ptr [eax]
 004D12E2    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D12E5    pop         ecx
 004D12E6    pop         ecx
 004D12E7    pop         ebp
 004D12E8    ret
end;*}

//004D12EC
{*procedure TWinControl.WMVScroll(?:?);
begin
 004D12EC    push        ebp
 004D12ED    mov         ebp,esp
 004D12EF    add         esp,0FFFFFFF8
 004D12F2    mov         dword ptr [ebp-8],edx
 004D12F5    mov         dword ptr [ebp-4],eax
 004D12F8    mov         edx,dword ptr [ebp-8]
 004D12FB    mov         eax,dword ptr [ebp-8]
 004D12FE    mov         eax,dword ptr [eax+8]
 004D1301    call        004D09BC
 004D1306    test        al,al
>004D1308    jne         004D1315
 004D130A    mov         edx,dword ptr [ebp-8]
 004D130D    mov         eax,dword ptr [ebp-4]
 004D1310    mov         ecx,dword ptr [eax]
 004D1312    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D1315    pop         ecx
 004D1316    pop         ecx
 004D1317    pop         ebp
 004D1318    ret
end;*}

//004D131C
{*procedure TWinControl.WMCompareItem(?:?);
begin
 004D131C    push        ebp
 004D131D    mov         ebp,esp
 004D131F    add         esp,0FFFFFFF8
 004D1322    mov         dword ptr [ebp-8],edx
 004D1325    mov         dword ptr [ebp-4],eax
 004D1328    mov         edx,dword ptr [ebp-8]
 004D132B    mov         eax,dword ptr [ebp-8]
 004D132E    mov         eax,dword ptr [eax+8]
 004D1331    mov         eax,dword ptr [eax+4]
 004D1334    call        004D09BC
 004D1339    test        al,al
>004D133B    jne         004D1348
 004D133D    mov         edx,dword ptr [ebp-8]
 004D1340    mov         eax,dword ptr [ebp-4]
 004D1343    mov         ecx,dword ptr [eax]
 004D1345    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D1348    pop         ecx
 004D1349    pop         ecx
 004D134A    pop         ebp
 004D134B    ret
end;*}

//004D134C
{*procedure TWinControl.WMDeleteItem(?:?);
begin
 004D134C    push        ebp
 004D134D    mov         ebp,esp
 004D134F    add         esp,0FFFFFFF8
 004D1352    mov         dword ptr [ebp-8],edx
 004D1355    mov         dword ptr [ebp-4],eax
 004D1358    mov         edx,dword ptr [ebp-8]
 004D135B    mov         eax,dword ptr [ebp-8]
 004D135E    mov         eax,dword ptr [eax+8]
 004D1361    mov         eax,dword ptr [eax+4]
 004D1364    call        004D09BC
 004D1369    test        al,al
>004D136B    jne         004D1378
 004D136D    mov         edx,dword ptr [ebp-8]
 004D1370    mov         eax,dword ptr [ebp-4]
 004D1373    mov         ecx,dword ptr [eax]
 004D1375    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D1378    pop         ecx
 004D1379    pop         ecx
 004D137A    pop         ebp
 004D137B    ret
end;*}

//004D137C
{*procedure TWinControl.WMDrawItem(?:?);
begin
 004D137C    push        ebp
 004D137D    mov         ebp,esp
 004D137F    add         esp,0FFFFFFF8
 004D1382    mov         dword ptr [ebp-8],edx
 004D1385    mov         dword ptr [ebp-4],eax
 004D1388    mov         edx,dword ptr [ebp-8]
 004D138B    mov         eax,dword ptr [ebp-8]
 004D138E    mov         eax,dword ptr [eax+8]
 004D1391    mov         eax,dword ptr [eax+4]
 004D1394    call        004D09BC
 004D1399    test        al,al
>004D139B    jne         004D13A8
 004D139D    mov         edx,dword ptr [ebp-8]
 004D13A0    mov         eax,dword ptr [ebp-4]
 004D13A3    mov         ecx,dword ptr [eax]
 004D13A5    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D13A8    pop         ecx
 004D13A9    pop         ecx
 004D13AA    pop         ebp
 004D13AB    ret
end;*}

//004D13AC
{*procedure TWinControl.WMMeasureItem(?:?);
begin
 004D13AC    push        ebp
 004D13AD    mov         ebp,esp
 004D13AF    add         esp,0FFFFFFF8
 004D13B2    mov         dword ptr [ebp-8],edx
 004D13B5    mov         dword ptr [ebp-4],eax
 004D13B8    mov         edx,dword ptr [ebp-8]
 004D13BB    mov         eax,dword ptr [ebp-8]
 004D13BE    mov         eax,dword ptr [eax+8]
 004D13C1    mov         eax,dword ptr [eax+4]
 004D13C4    call        004D09BC
 004D13C9    test        al,al
>004D13CB    jne         004D13D8
 004D13CD    mov         edx,dword ptr [ebp-8]
 004D13D0    mov         eax,dword ptr [ebp-4]
 004D13D3    mov         ecx,dword ptr [eax]
 004D13D5    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D13D8    pop         ecx
 004D13D9    pop         ecx
 004D13DA    pop         ebp
 004D13DB    ret
end;*}

//004D13DC
{*procedure TWinControl.WMEraseBkgnd(?:?);
begin
 004D13DC    push        ebp
 004D13DD    mov         ebp,esp
 004D13DF    add         esp,0FFFFFFE4
 004D13E2    mov         dword ptr [ebp-8],edx
 004D13E5    mov         dword ptr [ebp-4],eax
 004D13E8    call        ThemeServices
 004D13ED    mov         dword ptr [ebp-0C],eax
 004D13F0    mov         eax,dword ptr [ebp-0C]
 004D13F3    call        TThemeServices.GetThemesEnabled
 004D13F8    test        al,al
>004D13FA    je          004D142E
 004D13FC    mov         eax,dword ptr [ebp-4]
 004D13FF    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D1403    je          004D142E
 004D1405    mov         eax,dword ptr [ebp-4]
 004D1408    test        byte ptr [eax+52],4;TWinControl.?f52:byte
>004D140C    je          004D142E
 004D140E    push        0
 004D1410    push        0
 004D1412    push        0
 004D1414    mov         eax,dword ptr [ebp-4]
 004D1417    call        TWinControl.GetHandle
 004D141C    mov         edx,eax
 004D141E    mov         ecx,dword ptr [ebp-8]
 004D1421    mov         ecx,dword ptr [ecx+4]
 004D1424    mov         eax,dword ptr [ebp-0C]
 004D1427    call        004B6520
>004D142C    jmp         004D1472
 004D142E    mov         eax,dword ptr [ebp-4]
 004D1431    cmp         byte ptr [eax+1F8],0;TWinControl.FDoubleBuffered:Boolean
>004D1438    je          004D1448
 004D143A    mov         eax,dword ptr [ebp-8]
 004D143D    mov         eax,dword ptr [eax+4]
 004D1440    mov         edx,dword ptr [ebp-8]
 004D1443    cmp         eax,dword ptr [edx+8]
>004D1446    jne         004D1472
 004D1448    mov         eax,dword ptr [ebp-4]
 004D144B    mov         eax,dword ptr [eax+170];TWinControl.FBrush:TBrush
 004D1451    call        TBrush.GetHandle
 004D1456    push        eax
 004D1457    lea         edx,[ebp-1C]
 004D145A    mov         eax,dword ptr [ebp-4]
 004D145D    mov         ecx,dword ptr [eax]
 004D145F    call        dword ptr [ecx+44];TWinControl.sub_004D3A1C
 004D1462    lea         eax,[ebp-1C]
 004D1465    push        eax
 004D1466    mov         eax,dword ptr [ebp-8]
 004D1469    mov         eax,dword ptr [eax+4]
 004D146C    push        eax
 004D146D    call        user32.FillRect
 004D1472    mov         eax,dword ptr [ebp-8]
 004D1475    mov         dword ptr [eax+0C],1
 004D147C    mov         esp,ebp
 004D147E    pop         ebp
 004D147F    ret
end;*}

//004D1480
{*procedure TWinControl.WMWindowPosChangedMsg(?:?);
begin
 004D1480    push        ebp
 004D1481    mov         ebp,esp
 004D1483    add         esp,0FFFFFFF4
 004D1486    mov         dword ptr [ebp-8],edx
 004D1489    mov         dword ptr [ebp-4],eax
 004D148C    mov         eax,dword ptr [ebp-4]
 004D148F    cmp         byte ptr [eax+1A5],0;TWinControl.FCtl3D:Boolean
>004D1496    je          004D14B6
 004D1498    mov         eax,dword ptr [ebp-4]
 004D149B    test        byte ptr [eax+50],10;TWinControl.FControlStyle:TControlStyle
>004D149F    je          004D14B6
 004D14A1    mov         eax,dword ptr [ebp-4]
 004D14A4    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D14A8    je          004D14B6
 004D14AA    mov         eax,dword ptr [ebp-8]
 004D14AD    mov         eax,dword ptr [eax+8]
 004D14B0    test        byte ptr [eax+18],8
>004D14B4    je          004D14BA
 004D14B6    xor         eax,eax
>004D14B8    jmp         004D14BC
 004D14BA    mov         al,1
 004D14BC    mov         byte ptr [ebp-9],al
 004D14BF    mov         eax,dword ptr [ebp-8]
 004D14C2    mov         eax,dword ptr [eax+8]
 004D14C5    test        byte ptr [eax+18],2
>004D14C9    jne         004D14DE
 004D14CB    mov         eax,dword ptr [ebp-4]
 004D14CE    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D14D4    push        eax
 004D14D5    call        user32.IsWindowVisible
 004D14DA    test        eax,eax
>004D14DC    jne         004D14E2
 004D14DE    xor         eax,eax
>004D14E0    jmp         004D14E4
 004D14E2    mov         al,1
 004D14E4    mov         byte ptr [ebp-0A],al
 004D14E7    mov         eax,dword ptr [ebp-8]
 004D14EA    mov         eax,dword ptr [eax+8]
 004D14ED    test        byte ptr [eax+18],1
>004D14F1    jne         004D1506
 004D14F3    mov         eax,dword ptr [ebp-4]
 004D14F6    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D14FC    push        eax
 004D14FD    call        user32.IsWindowVisible
 004D1502    test        eax,eax
>004D1504    jne         004D150A
 004D1506    xor         eax,eax
>004D1508    jmp         004D150C
 004D150A    mov         al,1
 004D150C    mov         byte ptr [ebp-0B],al
 004D150F    cmp         byte ptr [ebp-9],0
>004D1513    je          004D1525
 004D1515    mov         al,byte ptr [ebp-0A]
 004D1518    or          al,byte ptr [ebp-0B]
>004D151B    je          004D1525
 004D151D    mov         eax,dword ptr [ebp-4]
 004D1520    call        004D3768
 004D1525    mov         eax,dword ptr [ebp-4]
 004D1528    test        byte ptr [eax+55],2;TWinControl.?f55:byte
>004D152C    jne         004D1536
 004D152E    mov         eax,dword ptr [ebp-4]
 004D1531    call        004D3DB8
 004D1536    mov         edx,dword ptr [ebp-8]
 004D1539    mov         eax,dword ptr [ebp-4]
 004D153C    call        TControl.WMWindowPosChangedMsg
 004D1541    cmp         byte ptr [ebp-9],0
>004D1545    je          004D1563
 004D1547    mov         al,byte ptr [ebp-0A]
 004D154A    or          al,byte ptr [ebp-0B]
>004D154D    jne         004D155B
 004D154F    mov         eax,dword ptr [ebp-8]
 004D1552    mov         eax,dword ptr [eax+8]
 004D1555    test        byte ptr [eax+18],0C0
>004D1559    je          004D1563
 004D155B    mov         eax,dword ptr [ebp-4]
 004D155E    call        004D3768
 004D1563    mov         esp,ebp
 004D1565    pop         ebp
 004D1566    ret
end;*}

//004D1568
{*procedure TWinControl.WMWindowPosChangingMsg(?:?);
begin
 004D1568    push        ebp
 004D1569    mov         ebp,esp
 004D156B    add         esp,0FFFFFFF4
 004D156E    mov         dword ptr [ebp-8],edx
 004D1571    mov         dword ptr [ebp-4],eax
 004D1574    mov         ax,[004D15D0];0xA gvar_004D15D0
 004D157A    mov         edx,dword ptr [ebp-4]
 004D157D    and         ax,word ptr [edx+1C];TWinControl.FComponentState:TComponentState
 004D1581    mov         dx,word ptr ds:[4D15D4];0x0 gvar_004D15D4
 004D1588    cmp         dx,ax
>004D158B    jne         004D15BE
 004D158D    mov         eax,dword ptr [ebp-8]
 004D1590    mov         eax,dword ptr [eax+8]
 004D1593    mov         dword ptr [ebp-0C],eax
 004D1596    mov         eax,dword ptr [ebp-0C]
 004D1599    test        byte ptr [eax+18],1
>004D159D    jne         004D15BE
 004D159F    mov         eax,dword ptr [ebp-0C]
 004D15A2    lea         ecx,[eax+14]
 004D15A5    mov         eax,dword ptr [ebp-0C]
 004D15A8    lea         edx,[eax+10]
 004D15AB    mov         eax,dword ptr [ebp-4]
 004D15AE    call        004CCF60
 004D15B3    test        al,al
>004D15B5    jne         004D15BE
 004D15B7    mov         eax,dword ptr [ebp-0C]
 004D15BA    or          dword ptr [eax+18],1
 004D15BE    mov         edx,dword ptr [ebp-8]
 004D15C1    mov         eax,dword ptr [ebp-4]
 004D15C4    mov         ecx,dword ptr [eax]
 004D15C6    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D15C9    mov         esp,ebp
 004D15CB    pop         ebp
 004D15CC    ret
end;*}

//004D15D8
procedure TWinControl.WMSize(var Message:TWMSize);
begin
{*
 004D15D8    push        ebp
 004D15D9    mov         ebp,esp
 004D15DB    add         esp,0FFFFFFF8
 004D15DE    push        esi
 004D15DF    mov         dword ptr [ebp-8],edx
 004D15E2    mov         dword ptr [ebp-4],eax
 004D15E5    mov         eax,dword ptr [ebp-4]
 004D15E8    call        004D3DB8
 004D15ED    mov         edx,dword ptr [ebp-8]
 004D15F0    mov         eax,dword ptr [ebp-4]
 004D15F3    mov         ecx,dword ptr [eax]
 004D15F5    call        dword ptr [ecx-10]
 004D15F8    mov         eax,dword ptr [ebp-4]
 004D15FB    call        004CF09C
 004D1600    mov         eax,dword ptr [ebp-4]
 004D1603    test        byte ptr [eax+1C],1
>004D1607    jne         004D1615
 004D1609    mov         eax,dword ptr [ebp-4]
 004D160C    mov         si,0FFCF
 004D1610    call        @CallDynaInst
 004D1615    pop         esi
 004D1616    pop         ecx
 004D1617    pop         ecx
 004D1618    pop         ebp
 004D1619    ret
*}
end;

//004D161C
{*procedure TWinControl.WMMove(?:?);
begin
 004D161C    push        ebp
 004D161D    mov         ebp,esp
 004D161F    add         esp,0FFFFFFF8
 004D1622    mov         dword ptr [ebp-8],edx
 004D1625    mov         dword ptr [ebp-4],eax
 004D1628    mov         edx,dword ptr [ebp-8]
 004D162B    mov         eax,dword ptr [ebp-4]
 004D162E    mov         ecx,dword ptr [eax]
 004D1630    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D1633    mov         eax,dword ptr [ebp-4]
 004D1636    call        004D3DB8
 004D163B    pop         ecx
 004D163C    pop         ecx
 004D163D    pop         ebp
 004D163E    ret
end;*}

//004D1640
{*procedure TWinControl.WMSetCursor(?:?);
begin
 004D1640    push        ebp
 004D1641    mov         ebp,esp
 004D1643    add         esp,0FFFFFFE0
 004D1646    push        ebx
 004D1647    mov         dword ptr [ebp-8],edx
 004D164A    mov         dword ptr [ebp-4],eax
 004D164D    mov         eax,dword ptr [ebp-8]
 004D1650    mov         eax,dword ptr [eax+4]
 004D1653    mov         edx,dword ptr [ebp-4]
 004D1656    cmp         eax,dword ptr [edx+180];TWinControl.FHandle:HWND
>004D165C    jne         004D176B
 004D1662    mov         eax,dword ptr [ebp-8]
 004D1665    mov         ax,word ptr [eax+8]
 004D1669    sub         ax,0FFFFFFFE
>004D166D    je          004D172A
 004D1673    sub         ax,3
>004D1677    jne         004D176B
 004D167D    mov         eax,[0055B6D8];^Screen:TScreen
 004D1682    mov         eax,dword ptr [eax]
 004D1684    mov         ax,word ptr [eax+44];TScreen.FCursor:TCursor
 004D1688    mov         word ptr [ebp-0A],ax
 004D168C    cmp         word ptr [ebp-0A],0
>004D1691    jne         004D1701
 004D1693    lea         eax,[ebp-18]
 004D1696    push        eax
 004D1697    call        user32.GetCursorPos
 004D169C    push        0
 004D169E    lea         ecx,[ebp-20]
 004D16A1    lea         edx,[ebp-18]
 004D16A4    mov         eax,dword ptr [ebp-4]
 004D16A7    call        TControl.ScreenToClient
 004D16AC    lea         edx,[ebp-20]
 004D16AF    xor         ecx,ecx
 004D16B1    mov         eax,dword ptr [ebp-4]
 004D16B4    call        004D052C
 004D16B9    mov         dword ptr [ebp-10],eax
 004D16BC    cmp         dword ptr [ebp-10],0
>004D16C0    je          004D16DE
 004D16C2    mov         eax,dword ptr [ebp-10]
 004D16C5    test        byte ptr [eax+1C],10
>004D16C9    je          004D16D3
 004D16CB    mov         word ptr [ebp-0A],0FFFE
>004D16D1    jmp         004D16DE
 004D16D3    mov         eax,dword ptr [ebp-10]
 004D16D6    mov         ax,word ptr [eax+78]
 004D16DA    mov         word ptr [ebp-0A],ax
 004D16DE    cmp         word ptr [ebp-0A],0
>004D16E3    jne         004D1701
 004D16E5    mov         eax,dword ptr [ebp-4]
 004D16E8    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D16EC    je          004D16F6
 004D16EE    mov         word ptr [ebp-0A],0FFFE
>004D16F4    jmp         004D1701
 004D16F6    mov         eax,dword ptr [ebp-4]
 004D16F9    mov         ax,word ptr [eax+78];TWinControl.Cursor:TCursor
 004D16FD    mov         word ptr [ebp-0A],ax
 004D1701    cmp         word ptr [ebp-0A],0
>004D1706    je          004D176B
 004D1708    movsx       edx,word ptr [ebp-0A]
 004D170C    mov         eax,[0055B6D8];^Screen:TScreen
 004D1711    mov         eax,dword ptr [eax]
 004D1713    call        004F0790
 004D1718    push        eax
 004D1719    call        user32.SetCursor
 004D171E    mov         eax,dword ptr [ebp-8]
 004D1721    mov         dword ptr [eax+0C],1
>004D1728    jmp         004D1776
 004D172A    mov         eax,dword ptr [ebp-8]
 004D172D    cmp         word ptr [eax+0A],201
>004D1733    jne         004D176B
 004D1735    mov         eax,[0055B4C8];^Application:TApplication
 004D173A    mov         eax,dword ptr [eax]
 004D173C    cmp         dword ptr [eax+30],0;TApplication.FHandle:HWND
>004D1740    je          004D176B
 004D1742    mov         eax,[0055B4C8];^Application:TApplication
 004D1747    mov         eax,dword ptr [eax]
 004D1749    mov         eax,dword ptr [eax+30];TApplication.FHandle:HWND
 004D174C    push        eax
 004D174D    call        user32.GetLastActivePopup
 004D1752    mov         ebx,eax
 004D1754    call        user32.GetForegroundWindow
 004D1759    cmp         ebx,eax
>004D175B    je          004D176B
 004D175D    mov         eax,[0055B4C8];^Application:TApplication
 004D1762    mov         eax,dword ptr [eax]
 004D1764    call        004F27FC
>004D1769    jmp         004D1776
 004D176B    mov         edx,dword ptr [ebp-8]
 004D176E    mov         eax,dword ptr [ebp-4]
 004D1771    mov         ecx,dword ptr [eax]
 004D1773    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D1776    pop         ebx
 004D1777    mov         esp,ebp
 004D1779    pop         ebp
 004D177A    ret
end;*}

//004D177C
{*procedure TWinControl.WMSetFocus(?:?);
begin
 004D177C    push        ebp
 004D177D    mov         ebp,esp
 004D177F    add         esp,0FFFFFFF8
 004D1782    mov         dword ptr [ebp-8],edx
 004D1785    mov         dword ptr [ebp-4],eax
 004D1788    mov         edx,dword ptr [ebp-8]
 004D178B    mov         eax,dword ptr [ebp-4]
 004D178E    mov         ecx,dword ptr [eax]
 004D1790    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D1793    mov         eax,dword ptr [ebp-4]
 004D1796    call        004D1814
 004D179B    pop         ecx
 004D179C    pop         ecx
 004D179D    pop         ebp
 004D179E    ret
end;*}

//004D17A0
{*procedure TWinControl.WMKillFocus(?:?);
begin
 004D17A0    push        ebp
 004D17A1    mov         ebp,esp
 004D17A3    add         esp,0FFFFFFF8
 004D17A6    mov         dword ptr [ebp-8],edx
 004D17A9    mov         dword ptr [ebp-4],eax
 004D17AC    mov         edx,dword ptr [ebp-8]
 004D17AF    mov         eax,dword ptr [ebp-4]
 004D17B2    mov         ecx,dword ptr [eax]
 004D17B4    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D17B7    mov         eax,dword ptr [ebp-4]
 004D17BA    call        004D1920
 004D17BF    pop         ecx
 004D17C0    pop         ecx
 004D17C1    pop         ebp
 004D17C2    ret
end;*}

//004D17C4
{*procedure TWinControl.sub_004D17C4(?:?);
begin
 004D17C4    push        ebp
 004D17C5    mov         ebp,esp
 004D17C7    add         esp,0FFFFFFF8
 004D17CA    mov         dword ptr [ebp-8],edx
 004D17CD    mov         dword ptr [ebp-4],eax
 004D17D0    mov         eax,dword ptr [ebp-4]
 004D17D3    mov         byte ptr [eax+1F9],1;TWinControl.FInImeComposition:Boolean
 004D17DA    mov         edx,dword ptr [ebp-8]
 004D17DD    mov         eax,dword ptr [ebp-4]
 004D17E0    mov         ecx,dword ptr [eax]
 004D17E2    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D17E5    pop         ecx
 004D17E6    pop         ecx
 004D17E7    pop         ebp
 004D17E8    ret
end;*}

//004D17EC
{*procedure TWinControl.sub_004D17EC(?:?);
begin
 004D17EC    push        ebp
 004D17ED    mov         ebp,esp
 004D17EF    add         esp,0FFFFFFF8
 004D17F2    mov         dword ptr [ebp-8],edx
 004D17F5    mov         dword ptr [ebp-4],eax
 004D17F8    mov         eax,dword ptr [ebp-4]
 004D17FB    mov         byte ptr [eax+1F9],0;TWinControl.FInImeComposition:Boolean
 004D1802    mov         edx,dword ptr [ebp-8]
 004D1805    mov         eax,dword ptr [ebp-4]
 004D1808    mov         ecx,dword ptr [eax]
 004D180A    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D180D    pop         ecx
 004D180E    pop         ecx
 004D180F    pop         ebp
 004D1810    ret
end;*}

//004D1814
procedure sub_004D1814(?:TWinControl);
begin
{*
 004D1814    push        ebp
 004D1815    mov         ebp,esp
 004D1817    add         esp,0FFFFFFF0
 004D181A    xor         edx,edx
 004D181C    mov         dword ptr [ebp-10],edx
 004D181F    mov         dword ptr [ebp-4],eax
 004D1822    xor         eax,eax
 004D1824    push        ebp
 004D1825    push        4D1912
 004D182A    push        dword ptr fs:[eax]
 004D182D    mov         dword ptr fs:[eax],esp
 004D1830    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004D1835    cmp         byte ptr [eax+0C],0
>004D1839    je          004D18FC
 004D183F    mov         eax,dword ptr [ebp-4]
 004D1842    cmp         dword ptr [eax+188],0;TWinControl.FImeName:TImeName
>004D1849    je          004D18E6
 004D184F    lea         edx,[ebp-10]
 004D1852    mov         eax,[0055B6D8];^Screen:TScreen
 004D1857    mov         eax,dword ptr [eax]
 004D1859    call        004F06CC
 004D185E    mov         edx,dword ptr [ebp-10]
 004D1861    mov         eax,dword ptr [ebp-4]
 004D1864    mov         eax,dword ptr [eax+188];TWinControl.FImeName:TImeName
 004D186A    call        00466420
 004D186F    test        eax,eax
>004D1871    je          004D18E6
 004D1873    mov         eax,[0055B6D8];^Screen:TScreen
 004D1878    mov         eax,dword ptr [eax]
 004D187A    call        004F04AC
 004D187F    mov         edx,dword ptr [eax]
 004D1881    call        dword ptr [edx+14]
 004D1884    test        eax,eax
>004D1886    je          004D18E6
 004D1888    mov         eax,[0055B6D8];^Screen:TScreen
 004D188D    mov         eax,dword ptr [eax]
 004D188F    mov         eax,dword ptr [eax+3C];TScreen.FDefaultKbLayout:HKL
 004D1892    mov         dword ptr [ebp-0C],eax
 004D1895    mov         eax,dword ptr [ebp-4]
 004D1898    cmp         byte ptr [eax+184],0;TWinControl.FImeMode:TImeMode
>004D189F    je          004D18DB
 004D18A1    mov         eax,[0055B6D8];^Screen:TScreen
 004D18A6    mov         eax,dword ptr [eax]
 004D18A8    call        004F04AC
 004D18AD    mov         edx,dword ptr [ebp-4]
 004D18B0    mov         edx,dword ptr [edx+188];TWinControl.FImeName:TImeName
 004D18B6    mov         ecx,dword ptr [eax]
 004D18B8    call        dword ptr [ecx+54]
 004D18BB    mov         dword ptr [ebp-8],eax
 004D18BE    cmp         dword ptr [ebp-8],0
>004D18C2    jl          004D18DB
 004D18C4    mov         eax,[0055B6D8];^Screen:TScreen
 004D18C9    mov         eax,dword ptr [eax]
 004D18CB    call        004F04AC
 004D18D0    mov         edx,dword ptr [ebp-8]
 004D18D3    mov         ecx,dword ptr [eax]
 004D18D5    call        dword ptr [ecx+18]
 004D18D8    mov         dword ptr [ebp-0C],eax
 004D18DB    push        1
 004D18DD    mov         eax,dword ptr [ebp-0C]
 004D18E0    push        eax
 004D18E1    call        user32.ActivateKeyboardLayout
 004D18E6    mov         eax,dword ptr [ebp-4]
 004D18E9    call        TWinControl.GetHandle
 004D18EE    mov         edx,dword ptr [ebp-4]
 004D18F1    mov         dl,byte ptr [edx+184];TWinControl.FImeMode:TImeMode
 004D18F7    call        004D99E8
 004D18FC    xor         eax,eax
 004D18FE    pop         edx
 004D18FF    pop         ecx
 004D1900    pop         ecx
 004D1901    mov         dword ptr fs:[eax],edx
 004D1904    push        4D1919
 004D1909    lea         eax,[ebp-10]
 004D190C    call        @LStrClr
 004D1911    ret
>004D1912    jmp         @HandleFinally
>004D1917    jmp         004D1909
 004D1919    mov         esp,ebp
 004D191B    pop         ebp
 004D191C    ret
*}
end;

//004D1920
procedure sub_004D1920(?:TWinControl);
begin
{*
 004D1920    push        ebp
 004D1921    mov         ebp,esp
 004D1923    add         esp,0FFFFFFF8
 004D1926    xor         edx,edx
 004D1928    mov         dword ptr [ebp-8],edx
 004D192B    mov         dword ptr [ebp-4],eax
 004D192E    xor         eax,eax
 004D1930    push        ebp
 004D1931    push        4D19BA
 004D1936    push        dword ptr fs:[eax]
 004D1939    mov         dword ptr fs:[eax],esp
 004D193C    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004D1941    cmp         byte ptr [eax+0C],0
>004D1945    je          004D19A4
 004D1947    mov         eax,dword ptr [ebp-4]
 004D194A    cmp         dword ptr [eax+188],0;TWinControl.FImeName:TImeName
>004D1951    je          004D1989
 004D1953    lea         edx,[ebp-8]
 004D1956    mov         eax,[0055B6D8];^Screen:TScreen
 004D195B    mov         eax,dword ptr [eax]
 004D195D    call        004F06CC
 004D1962    mov         edx,dword ptr [ebp-8]
 004D1965    mov         eax,dword ptr [ebp-4]
 004D1968    mov         eax,dword ptr [eax+188];TWinControl.FImeName:TImeName
 004D196E    call        00466420
 004D1973    test        eax,eax
>004D1975    je          004D1989
 004D1977    push        1
 004D1979    mov         eax,[0055B6D8];^Screen:TScreen
 004D197E    mov         eax,dword ptr [eax]
 004D1980    mov         eax,dword ptr [eax+3C];TScreen.FDefaultKbLayout:HKL
 004D1983    push        eax
 004D1984    call        user32.ActivateKeyboardLayout
 004D1989    mov         eax,dword ptr [ebp-4]
 004D198C    cmp         byte ptr [eax+184],0;TWinControl.FImeMode:TImeMode
>004D1993    jne         004D19A4
 004D1995    mov         eax,dword ptr [ebp-4]
 004D1998    call        TWinControl.GetHandle
 004D199D    mov         dl,1
 004D199F    call        004D99B0
 004D19A4    xor         eax,eax
 004D19A6    pop         edx
 004D19A7    pop         ecx
 004D19A8    pop         ecx
 004D19A9    mov         dword ptr fs:[eax],edx
 004D19AC    push        4D19C1
 004D19B1    lea         eax,[ebp-8]
 004D19B4    call        @LStrClr
 004D19B9    ret
>004D19BA    jmp         @HandleFinally
>004D19BF    jmp         004D19B1
 004D19C1    pop         ecx
 004D19C2    pop         ecx
 004D19C3    pop         ebp
 004D19C4    ret
*}
end;

//004D19C8
{*procedure TWinControl.sub_004D19C8(?:?; ?:?);
begin
 004D19C8    push        ebp
 004D19C9    mov         ebp,esp
 004D19CB    add         esp,0FFFFFFF4
 004D19CE    mov         dword ptr [ebp-0C],ecx
 004D19D1    mov         dword ptr [ebp-8],edx
 004D19D4    mov         dword ptr [ebp-4],eax
 004D19D7    mov         edx,dword ptr [ebp-4]
 004D19DA    mov         eax,dword ptr [ebp-8]
 004D19DD    mov         ecx,dword ptr [eax]
 004D19DF    call        dword ptr [ecx+68]
 004D19E2    mov         esp,ebp
 004D19E4    pop         ebp
 004D19E5    ret
end;*}

//004D19E8
{*procedure TWinControl.sub_004D19E8(?:?);
begin
 004D19E8    push        ebp
 004D19E9    mov         ebp,esp
 004D19EB    add         esp,0FFFFFFF8
 004D19EE    mov         dword ptr [ebp-8],edx
 004D19F1    mov         dword ptr [ebp-4],eax
 004D19F4    pop         ecx
 004D19F5    pop         ecx
 004D19F6    pop         ebp
 004D19F7    ret
end;*}

//004D19F8
procedure TWinControl.sub_004D19F8;
begin
{*
 004D19F8    push        ebp
 004D19F9    mov         ebp,esp
 004D19FB    push        ecx
 004D19FC    push        ebx
 004D19FD    mov         dword ptr [ebp-4],eax
 004D1A00    mov         eax,dword ptr [ebp-4]
 004D1A03    cmp         word ptr [eax+1C2],0;TWinControl.?f1C2:word
>004D1A0B    je          004D1A1F
 004D1A0D    mov         ebx,dword ptr [ebp-4]
 004D1A10    mov         edx,dword ptr [ebp-4]
 004D1A13    mov         eax,dword ptr [ebx+1C4];TWinControl.?f1C4:dword
 004D1A19    call        dword ptr [ebx+1C0];TWinControl.FOnEnter
 004D1A1F    pop         ebx
 004D1A20    pop         ecx
 004D1A21    pop         ebp
 004D1A22    ret
*}
end;

//004D1A24
procedure TWinControl.sub_004D1A24;
begin
{*
 004D1A24    push        ebp
 004D1A25    mov         ebp,esp
 004D1A27    push        ecx
 004D1A28    push        ebx
 004D1A29    mov         dword ptr [ebp-4],eax
 004D1A2C    mov         eax,dword ptr [ebp-4]
 004D1A2F    cmp         word ptr [eax+1CA],0;TWinControl.?f1CA:word
>004D1A37    je          004D1A4B
 004D1A39    mov         ebx,dword ptr [ebp-4]
 004D1A3C    mov         edx,dword ptr [ebp-4]
 004D1A3F    mov         eax,dword ptr [ebx+1CC];TWinControl.?f1CC:dword
 004D1A45    call        dword ptr [ebx+1C8];TWinControl.FOnExit
 004D1A4B    pop         ebx
 004D1A4C    pop         ecx
 004D1A4D    pop         ebp
 004D1A4E    ret
*}
end;

//004D1A50
{*procedure TWinControl.sub_004D1A50(?:?; ?:?; ?:?);
begin
 004D1A50    push        ebp
 004D1A51    mov         ebp,esp
 004D1A53    add         esp,0FFFFFFF4
 004D1A56    push        ebx
 004D1A57    mov         dword ptr [ebp-0C],ecx
 004D1A5A    mov         dword ptr [ebp-8],edx
 004D1A5D    mov         dword ptr [ebp-4],eax
 004D1A60    mov         dx,word ptr [ebp+8]
 004D1A64    mov         ax,word ptr [ebp-0C]
 004D1A68    call        00476C88
 004D1A6D    push        eax
 004D1A6E    mov         ecx,dword ptr [ebp-8]
 004D1A71    mov         edx,0B038
 004D1A76    mov         eax,dword ptr [ebp-4]
 004D1A79    call        004CC7DC
 004D1A7E    test        eax,eax
>004D1A80    jl          004D1AAC
 004D1A82    mov         eax,dword ptr [ebp-4]
 004D1A85    cmp         word ptr [eax+1B2],0;TWinControl.?f1B2:word
>004D1A8D    je          004D1AAC
 004D1A8F    mov         eax,dword ptr [ebp-0C]
 004D1A92    push        eax
 004D1A93    mov         eax,dword ptr [ebp+8]
 004D1A96    push        eax
 004D1A97    mov         ebx,dword ptr [ebp-4]
 004D1A9A    mov         ecx,dword ptr [ebp-8]
 004D1A9D    mov         edx,dword ptr [ebp-4]
 004D1AA0    mov         eax,dword ptr [ebx+1B4];TWinControl.?f1B4:dword
 004D1AA6    call        dword ptr [ebx+1B0];TWinControl.FOnDockDrop
 004D1AAC    pop         ebx
 004D1AAD    mov         esp,ebp
 004D1AAF    pop         ebp
 004D1AB0    ret         4
end;*}

//004D1AB4
{*procedure TWinControl.sub_004D1AB4(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004D1AB4    push        ebp
 004D1AB5    mov         ebp,esp
 004D1AB7    add         esp,0FFFFFFF4
 004D1ABA    push        ebx
 004D1ABB    mov         dword ptr [ebp-0C],ecx
 004D1ABE    mov         dword ptr [ebp-8],edx
 004D1AC1    mov         dword ptr [ebp-4],eax
 004D1AC4    mov         eax,dword ptr [ebp-4]
 004D1AC7    cmp         word ptr [eax+1BA],0;TWinControl.?f1BA:word
>004D1ACF    je          004D1AF6
 004D1AD1    mov         eax,dword ptr [ebp-0C]
 004D1AD4    push        eax
 004D1AD5    mov         eax,dword ptr [ebp+10]
 004D1AD8    push        eax
 004D1AD9    mov         al,byte ptr [ebp+0C]
 004D1ADC    push        eax
 004D1ADD    mov         eax,dword ptr [ebp+8]
 004D1AE0    push        eax
 004D1AE1    mov         ebx,dword ptr [ebp-4]
 004D1AE4    mov         ecx,dword ptr [ebp-8]
 004D1AE7    mov         edx,dword ptr [ebp-4]
 004D1AEA    mov         eax,dword ptr [ebx+1BC];TWinControl.?f1BC:dword
 004D1AF0    call        dword ptr [ebx+1B8];TWinControl.FOnDockOver
 004D1AF6    pop         ebx
 004D1AF7    mov         esp,ebp
 004D1AF9    pop         ebp
 004D1AFA    ret         0C
end;*}

//004D1B00
{*procedure TWinControl.sub_004D1B00(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004D1B00    push        ebp
 004D1B01    mov         ebp,esp
 004D1B03    add         esp,0FFFFFFF4
 004D1B06    push        esi
 004D1B07    mov         dword ptr [ebp-0C],ecx
 004D1B0A    mov         dword ptr [ebp-8],edx
 004D1B0D    mov         dword ptr [ebp-4],eax
 004D1B10    mov         edx,dword ptr [ebp-8]
 004D1B13    mov         eax,dword ptr [ebp-4]
 004D1B16    mov         si,0FFD2
 004D1B1A    call        @CallDynaInst;TControl.sub_004CBBD4
 004D1B1F    mov         eax,dword ptr [ebp+10]
 004D1B22    push        eax
 004D1B23    mov         al,byte ptr [ebp+0C]
 004D1B26    push        eax
 004D1B27    mov         eax,dword ptr [ebp+8]
 004D1B2A    push        eax
 004D1B2B    mov         ecx,dword ptr [ebp-0C]
 004D1B2E    mov         edx,dword ptr [ebp-8]
 004D1B31    mov         eax,dword ptr [ebp-4]
 004D1B34    mov         si,0FFC3
 004D1B38    call        @CallDynaInst;TWinControl.sub_004D1AB4
 004D1B3D    pop         esi
 004D1B3E    mov         esp,ebp
 004D1B40    pop         ebp
 004D1B41    ret         0C
end;*}

//004D1B44
{*procedure TWinControl.sub_004D1B44(?:?; ?:?);
begin
 004D1B44    push        ebp
 004D1B45    mov         ebp,esp
 004D1B47    add         esp,0FFFFFFF0
 004D1B4A    push        ebx
 004D1B4B    mov         dword ptr [ebp-0C],ecx
 004D1B4E    mov         dword ptr [ebp-8],edx
 004D1B51    mov         dword ptr [ebp-4],eax
 004D1B54    mov         byte ptr [ebp-0D],1
 004D1B58    mov         eax,dword ptr [ebp-4]
 004D1B5B    cmp         word ptr [eax+1F2],0;TWinControl.?f1F2:word
>004D1B63    je          004D1B82
 004D1B65    mov         eax,dword ptr [ebp-8]
 004D1B68    push        eax
 004D1B69    lea         eax,[ebp-0D]
 004D1B6C    push        eax
 004D1B6D    mov         ebx,dword ptr [ebp-4]
 004D1B70    mov         ecx,dword ptr [ebp-0C]
 004D1B73    mov         edx,dword ptr [ebp-4]
 004D1B76    mov         eax,dword ptr [ebx+1F4];TWinControl.?f1F4:dword
 004D1B7C    call        dword ptr [ebx+1F0];TWinControl.FOnUnDock
 004D1B82    cmp         byte ptr [ebp-0D],0
>004D1B86    je          004D1BA0
 004D1B88    mov         eax,dword ptr [ebp-0C]
 004D1B8B    push        eax
 004D1B8C    mov         ecx,dword ptr [ebp-8]
 004D1B8F    mov         edx,0B039
 004D1B94    mov         eax,dword ptr [ebp-4]
 004D1B97    call        004CC7DC
 004D1B9C    test        eax,eax
>004D1B9E    je          004D1BA4
 004D1BA0    xor         eax,eax
>004D1BA2    jmp         004D1BA6
 004D1BA4    mov         al,1
 004D1BA6    mov         byte ptr [ebp-0D],al
 004D1BA9    mov         al,byte ptr [ebp-0D]
 004D1BAC    pop         ebx
 004D1BAD    mov         esp,ebp
 004D1BAF    pop         ebp
 004D1BB0    ret
end;*}

//004D1BB4
{*procedure TWinControl.sub_004D1BB4(?:?; ?:?);
begin
 004D1BB4    push        ebp
 004D1BB5    mov         ebp,esp
 004D1BB7    add         esp,0FFFFFFF4
 004D1BBA    mov         dword ptr [ebp-0C],ecx
 004D1BBD    mov         dword ptr [ebp-8],edx
 004D1BC0    mov         dword ptr [ebp-4],eax
 004D1BC3    mov         edx,dword ptr [ebp-8]
 004D1BC6    mov         eax,dword ptr [ebp-4]
 004D1BC9    mov         eax,dword ptr [eax+4];TWinControl.FOwner:TComponent
 004D1BCC    call        004836E0
 004D1BD1    mov         edx,dword ptr ds:[4C5774];TControl
 004D1BD7    call        @AsClass
 004D1BDC    mov         edx,dword ptr [ebp-0C]
 004D1BDF    mov         dword ptr [edx],eax
 004D1BE1    mov         esp,ebp
 004D1BE3    pop         ebp
 004D1BE4    ret
end;*}

//004D1BE8
{*function sub_004D1BE8(?:TWinControl):?;
begin
 004D1BE8    push        ebp
 004D1BE9    mov         ebp,esp
 004D1BEB    add         esp,0FFFFFFF8
 004D1BEE    mov         dword ptr [ebp-4],eax
 004D1BF1    mov         eax,dword ptr [ebp-4]
 004D1BF4    cmp         dword ptr [eax+178],0;TToolDockForm.FDockClients:TList
>004D1BFB    je          004D1C0E
 004D1BFD    mov         eax,dword ptr [ebp-4]
 004D1C00    mov         eax,dword ptr [eax+178];TToolDockForm.FDockClients:TList
 004D1C06    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D1C09    mov         dword ptr [ebp-8],eax
>004D1C0C    jmp         004D1C13
 004D1C0E    xor         eax,eax
 004D1C10    mov         dword ptr [ebp-8],eax
 004D1C13    mov         eax,dword ptr [ebp-8]
 004D1C16    pop         ecx
 004D1C17    pop         ecx
 004D1C18    pop         ebp
 004D1C19    ret
end;*}

//004D1C1C
{*function sub_004D1C1C(?:TWinControl; ?:?):?;
begin
 004D1C1C    push        ebp
 004D1C1D    mov         ebp,esp
 004D1C1F    add         esp,0FFFFFFF4
 004D1C22    mov         dword ptr [ebp-8],edx
 004D1C25    mov         dword ptr [ebp-4],eax
 004D1C28    mov         eax,dword ptr [ebp-4]
 004D1C2B    cmp         dword ptr [eax+178],0;TToolDockForm.FDockClients:TList
>004D1C32    je          004D1C4A
 004D1C34    mov         edx,dword ptr [ebp-8]
 004D1C37    mov         eax,dword ptr [ebp-4]
 004D1C3A    mov         eax,dword ptr [eax+178];TToolDockForm.FDockClients:TList
 004D1C40    call        TList.Get
 004D1C45    mov         dword ptr [ebp-0C],eax
>004D1C48    jmp         004D1C4F
 004D1C4A    xor         eax,eax
 004D1C4C    mov         dword ptr [ebp-0C],eax
 004D1C4F    mov         eax,dword ptr [ebp-0C]
 004D1C52    mov         esp,ebp
 004D1C54    pop         ebp
 004D1C55    ret
end;*}

//004D1C58
{*procedure TWinControl.sub_004D1C58(?:?; ?:?; ?:?; ?:?);
begin
 004D1C58    push        ebp
 004D1C59    mov         ebp,esp
 004D1C5B    add         esp,0FFFFFFEC
 004D1C5E    push        ebx
 004D1C5F    push        esi
 004D1C60    push        edi
 004D1C61    mov         esi,dword ptr [ebp+0C]
 004D1C64    lea         edi,[ebp-14]
 004D1C67    movs        dword ptr [edi],dword ptr [esi]
 004D1C68    movs        dword ptr [edi],dword ptr [esi]
 004D1C69    mov         dword ptr [ebp-0C],ecx
 004D1C6C    mov         dword ptr [ebp-8],edx
 004D1C6F    mov         dword ptr [ebp-4],eax
 004D1C72    mov         eax,dword ptr [ebp-0C]
 004D1C75    push        eax
 004D1C76    mov         eax,dword ptr [ebp-4]
 004D1C79    call        TWinControl.GetHandle
 004D1C7E    push        eax
 004D1C7F    call        user32.GetWindowRect
 004D1C84    push        0A
 004D1C86    push        0A
 004D1C88    mov         eax,dword ptr [ebp-0C]
 004D1C8B    push        eax
 004D1C8C    call        user32.InflateRect
 004D1C91    mov         eax,dword ptr [ebp-4]
 004D1C94    cmp         word ptr [eax+1D2],0;TWinControl.?f1D2:word
>004D1C9C    je          004D1CBF
 004D1C9E    mov         eax,dword ptr [ebp-0C]
 004D1CA1    push        eax
 004D1CA2    lea         eax,[ebp-14]
 004D1CA5    push        eax
 004D1CA6    mov         eax,dword ptr [ebp+8]
 004D1CA9    push        eax
 004D1CAA    mov         ebx,dword ptr [ebp-4]
 004D1CAD    mov         ecx,dword ptr [ebp-8]
 004D1CB0    mov         edx,dword ptr [ebp-4]
 004D1CB3    mov         eax,dword ptr [ebx+1D4];TWinControl.?f1D4:dword
 004D1CB9    call        dword ptr [ebx+1D0];TWinControl.FOnGetSiteInfo
 004D1CBF    pop         edi
 004D1CC0    pop         esi
 004D1CC1    pop         ebx
 004D1CC2    mov         esp,ebp
 004D1CC4    pop         ebp
 004D1CC5    ret         8
end;*}

//004D1CC8
{*function sub_004D1CC8(?:Pointer):?;
begin
 004D1CC8    push        ebp
 004D1CC9    mov         ebp,esp
 004D1CCB    add         esp,0FFFFFFF4
 004D1CCE    mov         dword ptr [ebp-4],eax
 004D1CD1    mov         eax,dword ptr [ebp-4]
 004D1CD4    call        004D1BE8
 004D1CD9    mov         dword ptr [ebp-8],eax
 004D1CDC    cmp         dword ptr [ebp-8],0
>004D1CE0    jle         004D1D11
 004D1CE2    mov         eax,dword ptr [ebp-8]
 004D1CE5    dec         eax
 004D1CE6    cmp         eax,0
>004D1CE9    jl          004D1D11
 004D1CEB    mov         dword ptr [ebp-0C],eax
 004D1CEE    mov         edx,dword ptr [ebp-0C]
 004D1CF1    mov         eax,dword ptr [ebp-4]
 004D1CF4    mov         eax,dword ptr [eax+178]
 004D1CFA    call        TList.Get
 004D1CFF    cmp         byte ptr [eax+57],0
>004D1D03    jne         004D1D08
 004D1D05    dec         dword ptr [ebp-8]
 004D1D08    dec         dword ptr [ebp-0C]
 004D1D0B    cmp         dword ptr [ebp-0C],0FFFFFFFF
>004D1D0F    jne         004D1CEE
 004D1D11    mov         eax,dword ptr [ebp-8]
 004D1D14    mov         esp,ebp
 004D1D16    pop         ebp
 004D1D17    ret
end;*}

//004D1D18
procedure TWinControl.sub_004D1D18;
begin
{*
 004D1D18    push        ebp
 004D1D19    mov         ebp,esp
 004D1D1B    push        ecx
 004D1D1C    mov         dword ptr [ebp-4],eax
 004D1D1F    pop         ecx
 004D1D20    pop         ebp
 004D1D21    ret
*}
end;

//004D1D24
{*procedure TWinControl.sub_004D1D24(?:?);
begin
 004D1D24    push        ebp
 004D1D25    mov         ebp,esp
 004D1D27    add         esp,0FFFFFFF8
 004D1D2A    mov         dword ptr [ebp-8],edx
 004D1D2D    mov         dword ptr [ebp-4],eax
 004D1D30    mov         eax,dword ptr [ebp-4]
 004D1D33    cmp         dword ptr [eax+17C],0;TWinControl.FDockManager:IDockManager
>004D1D3A    jne         004D1D74
 004D1D3C    mov         eax,dword ptr [ebp-4]
 004D1D3F    cmp         byte ptr [eax+1A8],0;TWinControl.FDockSite:Boolean
>004D1D46    je          004D1D74
 004D1D48    mov         eax,dword ptr [ebp-4]
 004D1D4B    cmp         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
>004D1D52    je          004D1D74
 004D1D54    mov         ecx,dword ptr [ebp-4]
 004D1D57    mov         dl,1
 004D1D59    mov         eax,[00541680];^gvar_004C6AB0
 004D1D5E    call        dword ptr [eax+24]
 004D1D61    mov         edx,eax
 004D1D63    test        edx,edx
>004D1D65    je          004D1D6A
 004D1D67    sub         edx,0FFFFFF8C
 004D1D6A    mov         eax,dword ptr [ebp-8]
 004D1D6D    call        @IntfCopy
>004D1D72    jmp         004D1D85
 004D1D74    mov         eax,dword ptr [ebp-8]
 004D1D77    mov         edx,dword ptr [ebp-4]
 004D1D7A    mov         edx,dword ptr [edx+17C];TWinControl.FDockManager:IDockManager
 004D1D80    call        @IntfCopy
 004D1D85    mov         eax,dword ptr [ebp-4]
 004D1D88    cmp         byte ptr [eax+1F8],0;TWinControl.FDoubleBuffered:Boolean
>004D1D8F    jne         004D1D9D
 004D1D91    mov         eax,dword ptr [ebp-8]
 004D1D94    cmp         dword ptr [eax],0
>004D1D97    jne         004D1D9D
 004D1D99    xor         eax,eax
>004D1D9B    jmp         004D1D9F
 004D1D9D    mov         al,1
 004D1D9F    mov         edx,dword ptr [ebp-4]
 004D1DA2    mov         byte ptr [edx+1F8],al;TWinControl.FDoubleBuffered:Boolean
 004D1DA8    pop         ecx
 004D1DA9    pop         ecx
 004D1DAA    pop         ebp
 004D1DAB    ret
end;*}

//004D1DAC
procedure TPanel.SetDockSite(Value:Boolean);
begin
{*
 004D1DAC    push        ebp
 004D1DAD    mov         ebp,esp
 004D1DAF    add         esp,0FFFFFFF4
 004D1DB2    push        esi
 004D1DB3    xor         ecx,ecx
 004D1DB5    mov         dword ptr [ebp-0C],ecx
 004D1DB8    mov         byte ptr [ebp-5],dl
 004D1DBB    mov         dword ptr [ebp-4],eax
 004D1DBE    xor         eax,eax
 004D1DC0    push        ebp
 004D1DC1    push        4D1E82
 004D1DC6    push        dword ptr fs:[eax]
 004D1DC9    mov         dword ptr fs:[eax],esp
 004D1DCC    mov         al,byte ptr [ebp-5]
 004D1DCF    mov         edx,dword ptr [ebp-4]
 004D1DD2    cmp         al,byte ptr [edx+1A8];TPanel.FDockSite:Boolean
>004D1DD8    je          004D1E6C
 004D1DDE    mov         al,byte ptr [ebp-5]
 004D1DE1    mov         edx,dword ptr [ebp-4]
 004D1DE4    mov         byte ptr [edx+1A8],al;TPanel.FDockSite:Boolean
 004D1DEA    mov         eax,dword ptr [ebp-4]
 004D1DED    test        byte ptr [eax+1C],10;TPanel.FComponentState:TComponentState
>004D1DF1    jne         004D1E6C
 004D1DF3    mov         dl,byte ptr [ebp-5]
 004D1DF6    mov         eax,dword ptr [ebp-4]
 004D1DF9    call        004C81B8
 004D1DFE    cmp         byte ptr [ebp-5],0
>004D1E02    jne         004D1E2C
 004D1E04    mov         eax,dword ptr [ebp-4]
 004D1E07    mov         eax,dword ptr [eax+178];TPanel.FDockClients:TList
 004D1E0D    call        TObject.Free
 004D1E12    mov         eax,dword ptr [ebp-4]
 004D1E15    xor         edx,edx
 004D1E17    mov         dword ptr [eax+178],edx;TPanel.FDockClients:TList
 004D1E1D    mov         eax,dword ptr [ebp-4]
 004D1E20    add         eax,17C;TPanel.FDockManager:IDockManager
 004D1E25    call        @IntfClear
>004D1E2A    jmp         004D1E6C
 004D1E2C    mov         eax,dword ptr [ebp-4]
 004D1E2F    cmp         dword ptr [eax+178],0;TPanel.FDockClients:TList
>004D1E36    jne         004D1E4D
 004D1E38    mov         dl,1
 004D1E3A    mov         eax,[004759C0];TList
 004D1E3F    call        TObject.Create;TList.Create
 004D1E44    mov         edx,dword ptr [ebp-4]
 004D1E47    mov         dword ptr [edx+178],eax;TPanel.FDockClients:TList
 004D1E4D    lea         edx,[ebp-0C]
 004D1E50    mov         eax,dword ptr [ebp-4]
 004D1E53    mov         si,0FFC6
 004D1E57    call        @CallDynaInst;TWinControl.sub_004D1D24
 004D1E5C    mov         edx,dword ptr [ebp-0C]
 004D1E5F    mov         eax,dword ptr [ebp-4]
 004D1E62    add         eax,17C;TPanel.FDockManager:IDockManager
 004D1E67    call        @IntfCopy
 004D1E6C    xor         eax,eax
 004D1E6E    pop         edx
 004D1E6F    pop         ecx
 004D1E70    pop         ecx
 004D1E71    mov         dword ptr fs:[eax],edx
 004D1E74    push        4D1E89
 004D1E79    lea         eax,[ebp-0C]
 004D1E7C    call        @IntfClear
 004D1E81    ret
>004D1E82    jmp         @HandleFinally
>004D1E87    jmp         004D1E79
 004D1E89    pop         esi
 004D1E8A    mov         esp,ebp
 004D1E8C    pop         ebp
 004D1E8D    ret
*}
end;

//004D1E90
{*procedure TWinControl.CMDockClient(?:?);
begin
 004D1E90    push        ebp
 004D1E91    mov         ebp,esp
 004D1E93    add         esp,0FFFFFFE4
 004D1E96    push        ebx
 004D1E97    push        esi
 004D1E98    push        edi
 004D1E99    mov         dword ptr [ebp-8],edx
 004D1E9C    mov         dword ptr [ebp-4],eax
 004D1E9F    mov         eax,dword ptr [ebp-8]
 004D1EA2    cmp         dword ptr [eax+0C],0
>004D1EA6    jne         004D1F82
 004D1EAC    mov         eax,dword ptr [ebp-8]
 004D1EAF    mov         eax,dword ptr [eax+4]
 004D1EB2    lea         esi,[eax+44]
 004D1EB5    lea         edi,[ebp-1C]
 004D1EB8    movs        dword ptr [edi],dword ptr [esi]
 004D1EB9    movs        dword ptr [edi],dword ptr [esi]
 004D1EBA    movs        dword ptr [edi],dword ptr [esi]
 004D1EBB    movs        dword ptr [edi],dword ptr [esi]
 004D1EBC    push        2
 004D1EBE    lea         eax,[ebp-1C]
 004D1EC1    push        eax
 004D1EC2    mov         eax,dword ptr [ebp-4]
 004D1EC5    call        TWinControl.GetHandle
 004D1ECA    push        eax
 004D1ECB    push        0
 004D1ECD    call        user32.MapWindowPoints
 004D1ED2    mov         eax,dword ptr [ebp-4]
 004D1ED5    call        TWinControl.DisableAlign
 004D1EDA    xor         eax,eax
 004D1EDC    push        ebp
 004D1EDD    push        4D1F58
 004D1EE2    push        dword ptr fs:[eax]
 004D1EE5    mov         dword ptr fs:[eax],esp
 004D1EE8    mov         eax,dword ptr [ebp-8]
 004D1EEB    mov         eax,dword ptr [eax+4]
 004D1EEE    mov         eax,dword ptr [eax+38]
 004D1EF1    lea         ecx,[ebp-1C]
 004D1EF4    mov         edx,dword ptr [ebp-4]
 004D1EF7    mov         si,0FFCC
 004D1EFB    call        @CallDynaInst
 004D1F00    mov         eax,dword ptr [ebp-4]
 004D1F03    cmp         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
>004D1F0A    je          004D1F42
 004D1F0C    mov         eax,dword ptr [ebp-4]
 004D1F0F    cmp         dword ptr [eax+17C],0;TWinControl.FDockManager:IDockManager
>004D1F16    je          004D1F42
 004D1F18    mov         eax,dword ptr [ebp-8]
 004D1F1B    mov         eax,dword ptr [eax+4]
 004D1F1E    mov         eax,dword ptr [eax+58]
 004D1F21    push        eax
 004D1F22    mov         eax,dword ptr [ebp-8]
 004D1F25    mov         eax,dword ptr [eax+4]
 004D1F28    mov         cl,byte ptr [eax+54]
 004D1F2B    mov         eax,dword ptr [ebp-8]
 004D1F2E    mov         eax,dword ptr [eax+4]
 004D1F31    mov         edx,dword ptr [eax+38]
 004D1F34    mov         eax,dword ptr [ebp-4]
 004D1F37    mov         eax,dword ptr [eax+17C];TWinControl.FDockManager:IDockManager
 004D1F3D    mov         ebx,dword ptr [eax]
 004D1F3F    call        dword ptr [ebx+18]
 004D1F42    xor         eax,eax
 004D1F44    pop         edx
 004D1F45    pop         ecx
 004D1F46    pop         ecx
 004D1F47    mov         dword ptr fs:[eax],edx
 004D1F4A    push        4D1F5F
 004D1F4F    mov         eax,dword ptr [ebp-4]
 004D1F52    call        TWinControl.EnableAlign
 004D1F57    ret
>004D1F58    jmp         @HandleFinally
>004D1F5D    jmp         004D1F4F
 004D1F5F    mov         eax,dword ptr [ebp-4]
 004D1F62    call        004E7ED8
 004D1F67    mov         dword ptr [ebp-0C],eax
 004D1F6A    cmp         dword ptr [ebp-0C],0
>004D1F6E    je          004D1F78
 004D1F70    mov         eax,dword ptr [ebp-0C]
 004D1F73    call        004CB3C4
 004D1F78    mov         eax,dword ptr [ebp-8]
 004D1F7B    mov         dword ptr [eax+0C],1
 004D1F82    pop         edi
 004D1F83    pop         esi
 004D1F84    pop         ebx
 004D1F85    mov         esp,ebp
 004D1F87    pop         ebp
 004D1F88    ret
end;*}

//004D1F8C
{*procedure TWinControl.CMUndockClient(?:?);
begin
 004D1F8C    push        ebp
 004D1F8D    mov         ebp,esp
 004D1F8F    add         esp,0FFFFFFF8
 004D1F92    mov         dword ptr [ebp-8],edx
 004D1F95    mov         dword ptr [ebp-4],eax
 004D1F98    mov         eax,dword ptr [ebp-8]
 004D1F9B    xor         edx,edx
 004D1F9D    mov         dword ptr [eax+0C],edx
 004D1FA0    mov         eax,dword ptr [ebp-4]
 004D1FA3    cmp         byte ptr [eax+1A7],0;TWinControl.FUseDockManager:Boolean
>004D1FAA    je          004D1FCC
 004D1FAC    mov         eax,dword ptr [ebp-4]
 004D1FAF    cmp         dword ptr [eax+17C],0;TWinControl.FDockManager:IDockManager
>004D1FB6    je          004D1FCC
 004D1FB8    mov         edx,dword ptr [ebp-8]
 004D1FBB    mov         edx,dword ptr [edx+8]
 004D1FBE    mov         eax,dword ptr [ebp-4]
 004D1FC1    mov         eax,dword ptr [eax+17C];TWinControl.FDockManager:IDockManager
 004D1FC7    mov         ecx,dword ptr [eax]
 004D1FC9    call        dword ptr [ecx+28]
 004D1FCC    pop         ecx
 004D1FCD    pop         ecx
 004D1FCE    pop         ebp
 004D1FCF    ret
end;*}

//004D1FD0
{*procedure TWinControl.CMFloat(?:?);
begin
 004D1FD0    push        ebp
 004D1FD1    mov         ebp,esp
 004D1FD3    add         esp,0FFFFFFF4
 004D1FD6    push        ebx
 004D1FD7    push        esi
 004D1FD8    mov         dword ptr [ebp-8],edx
 004D1FDB    mov         dword ptr [ebp-4],eax
 004D1FDE    mov         eax,dword ptr [ebp-4]
 004D1FE1    mov         edx,dword ptr [eax]
 004D1FE3    call        dword ptr [edx+58];TWinControl.sub_004CDF00
 004D1FE6    mov         ebx,eax
 004D1FE8    mov         eax,dword ptr [ebp-4]
 004D1FEB    call        TObject.ClassType
 004D1FF0    cmp         ebx,eax
>004D1FF2    jne         004D2045
 004D1FF4    mov         eax,dword ptr [ebp-4]
 004D1FF7    mov         al,byte ptr [eax+57];TWinControl.FVisible:Boolean
 004D1FFA    mov         byte ptr [ebp-9],al
 004D1FFD    xor         eax,eax
 004D1FFF    push        ebp
 004D2000    push        4D203E
 004D2005    push        dword ptr fs:[eax]
 004D2008    mov         dword ptr fs:[eax],esp
 004D200B    mov         eax,dword ptr [ebp-8]
 004D200E    mov         eax,dword ptr [eax+8]
 004D2011    lea         ecx,[eax+44]
 004D2014    xor         edx,edx
 004D2016    mov         eax,dword ptr [ebp-4]
 004D2019    mov         si,0FFCC
 004D201D    call        @CallDynaInst;TControl.sub_004CA46C
 004D2022    xor         eax,eax
 004D2024    pop         edx
 004D2025    pop         ecx
 004D2026    pop         ecx
 004D2027    mov         dword ptr fs:[eax],edx
 004D202A    push        4D2050
 004D202F    cmp         byte ptr [ebp-9],0
>004D2033    je          004D203D
 004D2035    mov         eax,dword ptr [ebp-4]
 004D2038    call        004CB3C4
 004D203D    ret
>004D203E    jmp         @HandleFinally
>004D2043    jmp         004D202F
 004D2045    mov         edx,dword ptr [ebp-8]
 004D2048    mov         eax,dword ptr [ebp-4]
 004D204B    call        TControl.CMFloat
 004D2050    pop         esi
 004D2051    pop         ebx
 004D2052    mov         esp,ebp
 004D2054    pop         ebp
 004D2055    ret
end;*}

//004D2058
procedure TWinControl.KeyDown(var Key:Word; Shift:TShiftState);
begin
{*
 004D2058    push        ebp
 004D2059    mov         ebp,esp
 004D205B    add         esp,0FFFFFFF4
 004D205E    push        ebx
 004D205F    mov         byte ptr [ebp-9],cl
 004D2062    mov         dword ptr [ebp-8],edx
 004D2065    mov         dword ptr [ebp-4],eax
 004D2068    mov         eax,dword ptr [ebp-4]
 004D206B    cmp         word ptr [eax+1DA],0
>004D2073    je          004D208E
 004D2075    mov         al,byte ptr [ebp-9]
 004D2078    push        eax
 004D2079    mov         ecx,dword ptr [ebp-8]
 004D207C    mov         ebx,dword ptr [ebp-4]
 004D207F    mov         edx,dword ptr [ebp-4]
 004D2082    mov         eax,dword ptr [ebx+1DC]
 004D2088    call        dword ptr [ebx+1D8]
 004D208E    pop         ebx
 004D208F    mov         esp,ebp
 004D2091    pop         ebp
 004D2092    ret
*}
end;

//004D2094
{*function sub_004D2094(?:TWinControl; ?:?):?;
begin
 004D2094    push        ebp
 004D2095    mov         ebp,esp
 004D2097    add         esp,0FFFFFFF0
 004D209A    push        esi
 004D209B    mov         dword ptr [ebp-8],edx
 004D209E    mov         dword ptr [ebp-4],eax
 004D20A1    mov         byte ptr [ebp-9],1
 004D20A5    mov         eax,dword ptr [ebp-4]
 004D20A8    call        004E7ED8
 004D20AD    mov         dword ptr [ebp-10],eax
 004D20B0    cmp         dword ptr [ebp-10],0
>004D20B4    je          004D20D9
 004D20B6    mov         eax,dword ptr [ebp-10]
 004D20B9    cmp         eax,dword ptr [ebp-4]
>004D20BC    je          004D20D9
 004D20BE    mov         eax,dword ptr [ebp-10]
 004D20C1    cmp         byte ptr [eax+22D],0
>004D20C8    je          004D20D9
 004D20CA    mov         edx,dword ptr [ebp-8]
 004D20CD    mov         eax,dword ptr [ebp-10]
 004D20D0    call        004D2094
 004D20D5    test        al,al
>004D20D7    jne         004D2113
 004D20D9    mov         eax,dword ptr [ebp-8]
 004D20DC    mov         eax,dword ptr [eax+8]
 004D20DF    call        004E7D80
 004D20E4    mov         byte ptr [ebp-0A],al
 004D20E7    mov         eax,dword ptr [ebp-4]
 004D20EA    test        byte ptr [eax+51],10;TCustomCombo.?f51:byte
>004D20EE    jne         004D210F
 004D20F0    mov         edx,dword ptr [ebp-8]
 004D20F3    add         edx,4
 004D20F6    mov         cl,byte ptr [ebp-0A]
 004D20F9    mov         eax,dword ptr [ebp-4]
 004D20FC    mov         si,0FFBC
 004D2100    call        @CallDynaInst;TWinControl.KeyDown
 004D2105    mov         eax,dword ptr [ebp-8]
 004D2108    cmp         word ptr [eax+4],0
>004D210D    je          004D2113
 004D210F    mov         byte ptr [ebp-9],0
 004D2113    mov         al,byte ptr [ebp-9]
 004D2116    pop         esi
 004D2117    mov         esp,ebp
 004D2119    pop         ebp
 004D211A    ret
end;*}

//004D211C
{*procedure TWinControl.WMKeyDown(?:?);
begin
 004D211C    push        ebp
 004D211D    mov         ebp,esp
 004D211F    add         esp,0FFFFFFF8
 004D2122    mov         dword ptr [ebp-8],edx
 004D2125    mov         dword ptr [ebp-4],eax
 004D2128    mov         edx,dword ptr [ebp-8]
 004D212B    mov         eax,dword ptr [ebp-4]
 004D212E    call        004D2094
 004D2133    test        al,al
>004D2135    jne         004D2142
 004D2137    mov         edx,dword ptr [ebp-8]
 004D213A    mov         eax,dword ptr [ebp-4]
 004D213D    mov         ecx,dword ptr [eax]
 004D213F    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D2142    mov         edx,dword ptr [ebp-8]
 004D2145    mov         dx,word ptr [edx+4]
 004D2149    mov         eax,dword ptr [ebp-4]
 004D214C    call        004D4EE4
 004D2151    pop         ecx
 004D2152    pop         ecx
 004D2153    pop         ebp
 004D2154    ret
end;*}

//004D2158
{*procedure TWinControl.WMSysKeyDown(?:?);
begin
 004D2158    push        ebp
 004D2159    mov         ebp,esp
 004D215B    add         esp,0FFFFFFF8
 004D215E    mov         dword ptr [ebp-8],edx
 004D2161    mov         dword ptr [ebp-4],eax
 004D2164    mov         edx,dword ptr [ebp-8]
 004D2167    mov         eax,dword ptr [ebp-4]
 004D216A    call        004D2094
 004D216F    test        al,al
>004D2171    jne         004D217E
 004D2173    mov         edx,dword ptr [ebp-8]
 004D2176    mov         eax,dword ptr [ebp-4]
 004D2179    mov         ecx,dword ptr [eax]
 004D217B    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D217E    mov         edx,dword ptr [ebp-8]
 004D2181    mov         dx,word ptr [edx+4]
 004D2185    mov         eax,dword ptr [ebp-4]
 004D2188    call        004D4EE4
 004D218D    pop         ecx
 004D218E    pop         ecx
 004D218F    pop         ebp
 004D2190    ret
end;*}

//004D2194
{*procedure TWinControl.sub_004D2194(?:?; ?:?);
begin
 004D2194    push        ebp
 004D2195    mov         ebp,esp
 004D2197    add         esp,0FFFFFFF4
 004D219A    push        ebx
 004D219B    mov         byte ptr [ebp-9],cl
 004D219E    mov         dword ptr [ebp-8],edx
 004D21A1    mov         dword ptr [ebp-4],eax
 004D21A4    mov         eax,dword ptr [ebp-4]
 004D21A7    cmp         word ptr [eax+1EA],0;TWinControl.?f1EA:word
>004D21AF    je          004D21CA
 004D21B1    mov         al,byte ptr [ebp-9]
 004D21B4    push        eax
 004D21B5    mov         ecx,dword ptr [ebp-8]
 004D21B8    mov         ebx,dword ptr [ebp-4]
 004D21BB    mov         edx,dword ptr [ebp-4]
 004D21BE    mov         eax,dword ptr [ebx+1EC];TWinControl.?f1EC:dword
 004D21C4    call        dword ptr [ebx+1E8];TWinControl.FOnKeyUp
 004D21CA    pop         ebx
 004D21CB    mov         esp,ebp
 004D21CD    pop         ebp
 004D21CE    ret
end;*}

//004D21D0
{*function sub_004D21D0(?:TWinControl; ?:?):?;
begin
 004D21D0    push        ebp
 004D21D1    mov         ebp,esp
 004D21D3    add         esp,0FFFFFFF0
 004D21D6    push        esi
 004D21D7    mov         dword ptr [ebp-8],edx
 004D21DA    mov         dword ptr [ebp-4],eax
 004D21DD    mov         byte ptr [ebp-9],1
 004D21E1    mov         eax,dword ptr [ebp-4]
 004D21E4    call        004E7ED8
 004D21E9    mov         dword ptr [ebp-10],eax
 004D21EC    cmp         dword ptr [ebp-10],0
>004D21F0    je          004D2215
 004D21F2    mov         eax,dword ptr [ebp-10]
 004D21F5    cmp         eax,dword ptr [ebp-4]
>004D21F8    je          004D2215
 004D21FA    mov         eax,dword ptr [ebp-10]
 004D21FD    cmp         byte ptr [eax+22D],0
>004D2204    je          004D2215
 004D2206    mov         edx,dword ptr [ebp-8]
 004D2209    mov         eax,dword ptr [ebp-10]
 004D220C    call        004D21D0
 004D2211    test        al,al
>004D2213    jne         004D224F
 004D2215    mov         eax,dword ptr [ebp-8]
 004D2218    mov         eax,dword ptr [eax+8]
 004D221B    call        004E7D80
 004D2220    mov         byte ptr [ebp-0A],al
 004D2223    mov         eax,dword ptr [ebp-4]
 004D2226    test        byte ptr [eax+51],10;TCustomCombo.?f51:byte
>004D222A    jne         004D224B
 004D222C    mov         edx,dword ptr [ebp-8]
 004D222F    add         edx,4
 004D2232    mov         cl,byte ptr [ebp-0A]
 004D2235    mov         eax,dword ptr [ebp-4]
 004D2238    mov         si,0FFBB
 004D223C    call        @CallDynaInst;TWinControl.sub_004D2194
 004D2241    mov         eax,dword ptr [ebp-8]
 004D2244    cmp         word ptr [eax+4],0
>004D2249    je          004D224F
 004D224B    mov         byte ptr [ebp-9],0
 004D224F    mov         al,byte ptr [ebp-9]
 004D2252    pop         esi
 004D2253    mov         esp,ebp
 004D2255    pop         ebp
 004D2256    ret
end;*}

//004D2258
{*procedure TWinControl.WMKeyUp(?:?);
begin
 004D2258    push        ebp
 004D2259    mov         ebp,esp
 004D225B    add         esp,0FFFFFFF8
 004D225E    mov         dword ptr [ebp-8],edx
 004D2261    mov         dword ptr [ebp-4],eax
 004D2264    mov         edx,dword ptr [ebp-8]
 004D2267    mov         eax,dword ptr [ebp-4]
 004D226A    call        004D21D0
 004D226F    test        al,al
>004D2271    jne         004D227E
 004D2273    mov         edx,dword ptr [ebp-8]
 004D2276    mov         eax,dword ptr [ebp-4]
 004D2279    mov         ecx,dword ptr [eax]
 004D227B    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D227E    pop         ecx
 004D227F    pop         ecx
 004D2280    pop         ebp
 004D2281    ret
end;*}

//004D2284
{*procedure TWinControl.WMSysKeyUp(?:?);
begin
 004D2284    push        ebp
 004D2285    mov         ebp,esp
 004D2287    add         esp,0FFFFFFF8
 004D228A    mov         dword ptr [ebp-8],edx
 004D228D    mov         dword ptr [ebp-4],eax
 004D2290    mov         edx,dword ptr [ebp-8]
 004D2293    mov         eax,dword ptr [ebp-4]
 004D2296    call        004D21D0
 004D229B    test        al,al
>004D229D    jne         004D22AA
 004D229F    mov         edx,dword ptr [ebp-8]
 004D22A2    mov         eax,dword ptr [ebp-4]
 004D22A5    mov         ecx,dword ptr [eax]
 004D22A7    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D22AA    pop         ecx
 004D22AB    pop         ecx
 004D22AC    pop         ebp
 004D22AD    ret
end;*}

//004D22B0
procedure TWinControl.KeyPress(var Key:Char);
begin
{*
 004D22B0    push        ebp
 004D22B1    mov         ebp,esp
 004D22B3    add         esp,0FFFFFFF8
 004D22B6    push        ebx
 004D22B7    mov         dword ptr [ebp-8],edx
 004D22BA    mov         dword ptr [ebp-4],eax
 004D22BD    mov         eax,dword ptr [ebp-4]
 004D22C0    cmp         word ptr [eax+1E2],0
>004D22C8    je          004D22DF
 004D22CA    mov         ecx,dword ptr [ebp-8]
 004D22CD    mov         ebx,dword ptr [ebp-4]
 004D22D0    mov         edx,dword ptr [ebp-4]
 004D22D3    mov         eax,dword ptr [ebx+1E4]
 004D22D9    call        dword ptr [ebx+1E0]
 004D22DF    pop         ebx
 004D22E0    pop         ecx
 004D22E1    pop         ecx
 004D22E2    pop         ebp
 004D22E3    ret
*}
end;

//004D22E4
{*function sub_004D22E4(?:TWinControl; ?:?):?;
begin
 004D22E4    push        ebp
 004D22E5    mov         ebp,esp
 004D22E7    add         esp,0FFFFFFEC
 004D22EA    push        esi
 004D22EB    mov         dword ptr [ebp-8],edx
 004D22EE    mov         dword ptr [ebp-4],eax
 004D22F1    mov         byte ptr [ebp-9],1
 004D22F5    mov         eax,dword ptr [ebp-4]
 004D22F8    call        004E7ED8
 004D22FD    mov         dword ptr [ebp-10],eax
 004D2300    cmp         dword ptr [ebp-10],0
>004D2304    je          004D2329
 004D2306    mov         eax,dword ptr [ebp-10]
 004D2309    cmp         eax,dword ptr [ebp-4]
>004D230C    je          004D2329
 004D230E    mov         eax,dword ptr [ebp-10]
 004D2311    cmp         byte ptr [eax+22D],0
>004D2318    je          004D2329
 004D231A    mov         edx,dword ptr [ebp-8]
 004D231D    mov         eax,dword ptr [ebp-10]
 004D2320    call        004D22E4
 004D2325    test        al,al
>004D2327    jne         004D2363
 004D2329    mov         eax,dword ptr [ebp-4]
 004D232C    test        byte ptr [eax+51],10;TCustomCombo.?f51:byte
>004D2330    jne         004D235F
 004D2332    mov         eax,dword ptr [ebp-8]
 004D2335    mov         al,byte ptr [eax+4]
 004D2338    mov         byte ptr [ebp-11],al
 004D233B    lea         edx,[ebp-11]
 004D233E    mov         eax,dword ptr [ebp-4]
 004D2341    mov         si,0FFBA
 004D2345    call        @CallDynaInst;TWinControl.KeyPress
 004D234A    xor         eax,eax
 004D234C    mov         al,byte ptr [ebp-11]
 004D234F    mov         edx,dword ptr [ebp-8]
 004D2352    mov         word ptr [edx+4],ax
 004D2356    mov         eax,dword ptr [ebp-8]
 004D2359    cmp         byte ptr [eax+4],0
>004D235D    je          004D2363
 004D235F    mov         byte ptr [ebp-9],0
 004D2363    mov         al,byte ptr [ebp-9]
 004D2366    pop         esi
 004D2367    mov         esp,ebp
 004D2369    pop         ebp
 004D236A    ret
end;*}

//004D236C
{*procedure TWinControl.WMChar(?:?);
begin
 004D236C    push        ebp
 004D236D    mov         ebp,esp
 004D236F    add         esp,0FFFFFFF8
 004D2372    mov         dword ptr [ebp-8],edx
 004D2375    mov         dword ptr [ebp-4],eax
 004D2378    mov         edx,dword ptr [ebp-8]
 004D237B    mov         eax,dword ptr [ebp-4]
 004D237E    call        004D22E4
 004D2383    test        al,al
>004D2385    jne         004D2392
 004D2387    mov         edx,dword ptr [ebp-8]
 004D238A    mov         eax,dword ptr [ebp-4]
 004D238D    mov         ecx,dword ptr [eax]
 004D238F    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D2392    pop         ecx
 004D2393    pop         ecx
 004D2394    pop         ebp
 004D2395    ret
end;*}

//004D2398
{*function sub_004D2398(?:TWinControl; ?:?):?;
begin
 004D2398    push        ebp
 004D2399    mov         ebp,esp
 004D239B    add         esp,0FFFFFFEC
 004D239E    mov         dword ptr [ebp-4],eax
 004D23A1    mov         byte ptr [ebp-5],0
 004D23A5    mov         eax,dword ptr [ebp-4]
 004D23A8    cmp         byte ptr [eax+1A6],0
>004D23AF    je          004D2456
 004D23B5    mov         eax,dword ptr [ebp-4]
 004D23B8    call        004CF618
 004D23BD    dec         eax
 004D23BE    test        eax,eax
>004D23C0    jl          004D2456
 004D23C6    inc         eax
 004D23C7    mov         dword ptr [ebp-14],eax
 004D23CA    mov         dword ptr [ebp-0C],0
 004D23D1    mov         edx,dword ptr [ebp-0C]
 004D23D4    mov         eax,dword ptr [ebp-4]
 004D23D7    call        004CF5AC
 004D23DC    mov         dword ptr [ebp-10],eax
 004D23DF    mov         eax,dword ptr [ebp-10]
 004D23E2    cmp         byte ptr [eax+57],0
>004D23E6    je          004D244A
 004D23E8    mov         eax,dword ptr [ebp-10]
 004D23EB    mov         edx,dword ptr [eax]
 004D23ED    call        dword ptr [edx+50]
 004D23F0    test        al,al
>004D23F2    je          004D244A
 004D23F4    mov         eax,dword ptr [ebp-10]
 004D23F7    test        byte ptr [eax+52],1
>004D23FB    je          004D2421
 004D23FD    mov         eax,dword ptr [ebp+8]
 004D2400    mov         eax,dword ptr [eax-4]
 004D2403    mov         eax,dword ptr [eax+8]
 004D2406    push        eax
 004D2407    mov         eax,dword ptr [ebp+8]
 004D240A    mov         ecx,dword ptr [eax-4]
 004D240D    mov         ecx,dword ptr [ecx+4]
 004D2410    mov         edx,112
 004D2415    mov         eax,dword ptr [ebp-10]
 004D2418    call        004CC7DC
 004D241D    test        eax,eax
>004D241F    jne         004D2444
 004D2421    mov         eax,dword ptr [ebp-10]
 004D2424    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004D242A    call        @IsClass
 004D242F    test        al,al
>004D2431    je          004D244A
 004D2433    mov         eax,dword ptr [ebp+8]
 004D2436    push        eax
 004D2437    mov         eax,dword ptr [ebp-10]
 004D243A    call        004D2398
 004D243F    pop         ecx
 004D2440    test        al,al
>004D2442    je          004D244A
 004D2444    mov         byte ptr [ebp-5],1
>004D2448    jmp         004D2456
 004D244A    inc         dword ptr [ebp-0C]
 004D244D    dec         dword ptr [ebp-14]
>004D2450    jne         004D23D1
 004D2456    mov         al,byte ptr [ebp-5]
 004D2459    mov         esp,ebp
 004D245B    pop         ebp
 004D245C    ret
end;*}

//004D2460
{*procedure TWinControl.WMSysCommand(?:?);
begin
 004D2460    push        ebp
 004D2461    mov         ebp,esp
 004D2463    add         esp,0FFFFFFF4
 004D2466    mov         dword ptr [ebp-4],edx
 004D2469    mov         dword ptr [ebp-8],eax
 004D246C    mov         eax,dword ptr [ebp-4]
 004D246F    mov         eax,dword ptr [eax+4]
 004D2472    and         eax,0FFF0
 004D2477    cmp         eax,0F100
>004D247C    jne         004D24E5
 004D247E    mov         eax,dword ptr [ebp-4]
 004D2481    cmp         word ptr [eax+8],20
>004D2486    je          004D24E5
 004D2488    mov         eax,dword ptr [ebp-4]
 004D248B    cmp         word ptr [eax+8],2D
>004D2490    je          004D24E5
 004D2492    mov         eax,dword ptr [ebp-8]
 004D2495    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D249B    push        eax
 004D249C    call        user32.IsIconic
 004D24A1    test        eax,eax
>004D24A3    jne         004D24E5
 004D24A5    call        user32.GetCapture
 004D24AA    test        eax,eax
>004D24AC    jne         004D24E5
 004D24AE    mov         eax,[0055B4C8];^Application:TApplication
 004D24B3    mov         eax,dword ptr [eax]
 004D24B5    mov         eax,dword ptr [eax+44];TApplication.FMainForm:TForm
 004D24B8    cmp         eax,dword ptr [ebp-8]
>004D24BB    je          004D24E5
 004D24BD    mov         eax,dword ptr [ebp-8]
 004D24C0    call        004E7ED8
 004D24C5    mov         dword ptr [ebp-0C],eax
 004D24C8    cmp         dword ptr [ebp-0C],0
>004D24CC    je          004D24E5
 004D24CE    mov         eax,dword ptr [ebp-4]
 004D24D1    push        eax
 004D24D2    xor         ecx,ecx
 004D24D4    mov         edx,0B017
 004D24D9    mov         eax,dword ptr [ebp-0C]
 004D24DC    call        004CC7DC
 004D24E1    test        eax,eax
>004D24E3    jne         004D2510
 004D24E5    mov         eax,dword ptr [ebp-4]
 004D24E8    mov         eax,dword ptr [eax+4]
 004D24EB    and         eax,0FFF0
 004D24F0    cmp         eax,0F100
>004D24F5    jne         004D2505
 004D24F7    push        ebp
 004D24F8    mov         eax,dword ptr [ebp-8]
 004D24FB    call        004D2398
 004D2500    pop         ecx
 004D2501    test        al,al
>004D2503    jne         004D2510
 004D2505    mov         edx,dword ptr [ebp-4]
 004D2508    mov         eax,dword ptr [ebp-8]
 004D250B    mov         ecx,dword ptr [eax]
 004D250D    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D2510    mov         esp,ebp
 004D2512    pop         ebp
 004D2513    ret
end;*}

//004D2514
{*procedure TWinControl.WMCharToItem(?:?);
begin
 004D2514    push        ebp
 004D2515    mov         ebp,esp
 004D2517    add         esp,0FFFFFFF8
 004D251A    mov         dword ptr [ebp-8],edx
 004D251D    mov         dword ptr [ebp-4],eax
 004D2520    mov         edx,dword ptr [ebp-8]
 004D2523    mov         eax,dword ptr [ebp-8]
 004D2526    mov         eax,dword ptr [eax+8]
 004D2529    call        004D09BC
 004D252E    test        al,al
>004D2530    jne         004D253D
 004D2532    mov         edx,dword ptr [ebp-8]
 004D2535    mov         eax,dword ptr [ebp-4]
 004D2538    mov         ecx,dword ptr [eax]
 004D253A    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D253D    pop         ecx
 004D253E    pop         ecx
 004D253F    pop         ebp
 004D2540    ret
end;*}

//004D2544
{*procedure TWinControl.WMParentNotify(?:?);
begin
 004D2544    push        ebp
 004D2545    mov         ebp,esp
 004D2547    add         esp,0FFFFFFF8
 004D254A    mov         dword ptr [ebp-8],edx
 004D254D    mov         dword ptr [ebp-4],eax
 004D2550    mov         eax,dword ptr [ebp-8]
 004D2553    cmp         word ptr [eax+4],1
>004D2558    je          004D2564
 004D255A    mov         eax,dword ptr [ebp-8]
 004D255D    cmp         word ptr [eax+4],2
>004D2562    jne         004D2576
 004D2564    mov         edx,dword ptr [ebp-8]
 004D2567    mov         eax,dword ptr [ebp-8]
 004D256A    mov         eax,dword ptr [eax+8]
 004D256D    call        004D09BC
 004D2572    test        al,al
>004D2574    jne         004D2581
 004D2576    mov         edx,dword ptr [ebp-8]
 004D2579    mov         eax,dword ptr [ebp-4]
 004D257C    mov         ecx,dword ptr [eax]
 004D257E    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D2581    pop         ecx
 004D2582    pop         ecx
 004D2583    pop         ebp
 004D2584    ret
end;*}

//004D2588
{*procedure TWinControl.WMVKeyToItem(?:?);
begin
 004D2588    push        ebp
 004D2589    mov         ebp,esp
 004D258B    add         esp,0FFFFFFF8
 004D258E    mov         dword ptr [ebp-8],edx
 004D2591    mov         dword ptr [ebp-4],eax
 004D2594    mov         edx,dword ptr [ebp-8]
 004D2597    mov         eax,dword ptr [ebp-8]
 004D259A    mov         eax,dword ptr [eax+8]
 004D259D    call        004D09BC
 004D25A2    test        al,al
>004D25A4    jne         004D25B1
 004D25A6    mov         edx,dword ptr [ebp-8]
 004D25A9    mov         eax,dword ptr [ebp-4]
 004D25AC    mov         ecx,dword ptr [eax]
 004D25AE    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D25B1    pop         ecx
 004D25B2    pop         ecx
 004D25B3    pop         ebp
 004D25B4    ret
end;*}

//004D25B8
{*procedure TWinControl.WMDestroy(?:?);
begin
 004D25B8    push        ebp
 004D25B9    mov         ebp,esp
 004D25BB    add         esp,0FFFFFFF8
 004D25BE    mov         dword ptr [ebp-8],edx
 004D25C1    mov         dword ptr [ebp-4],eax
 004D25C4    mov         edx,dword ptr [ebp-8]
 004D25C7    mov         eax,dword ptr [ebp-4]
 004D25CA    mov         ecx,dword ptr [eax]
 004D25CC    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D25CF    movzx       eax,word ptr ds:[55DDBA];gvar_0055DDBA
 004D25D6    push        eax
 004D25D7    mov         eax,dword ptr [ebp-4]
 004D25DA    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D25E0    push        eax
 004D25E1    call        user32.RemovePropA
 004D25E6    movzx       eax,word ptr ds:[55DDB8];gvar_0055DDB8
 004D25ED    push        eax
 004D25EE    mov         eax,dword ptr [ebp-4]
 004D25F1    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D25F7    push        eax
 004D25F8    call        user32.RemovePropA
 004D25FD    pop         ecx
 004D25FE    pop         ecx
 004D25FF    pop         ebp
 004D2600    ret
end;*}

//004D2604
{*procedure TWinControl.WMNCDestroy(?:?);
begin
 004D2604    push        ebp
 004D2605    mov         ebp,esp
 004D2607    add         esp,0FFFFFFF8
 004D260A    mov         dword ptr [ebp-8],edx
 004D260D    mov         dword ptr [ebp-4],eax
 004D2610    mov         edx,dword ptr [ebp-8]
 004D2613    mov         eax,dword ptr [ebp-4]
 004D2616    mov         ecx,dword ptr [eax]
 004D2618    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D261B    mov         eax,dword ptr [ebp-4]
 004D261E    xor         edx,edx
 004D2620    mov         dword ptr [eax+180],edx;TWinControl.FHandle:HWND
 004D2626    mov         eax,dword ptr [ebp-4]
 004D2629    mov         byte ptr [eax+1A6],0;TWinControl.FShowing:Boolean
 004D2630    pop         ecx
 004D2631    pop         ecx
 004D2632    pop         ebp
 004D2633    ret
end;*}

//004D2634
{*procedure TWinControl.WMNCHitTest(?:?);
begin
 004D2634    push        ebp
 004D2635    mov         ebp,esp
 004D2637    add         esp,0FFFFFFF8
 004D263A    mov         dword ptr [ebp-8],edx
 004D263D    mov         dword ptr [ebp-4],eax
 004D2640    mov         eax,dword ptr [ebp-4]
 004D2643    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D2647    je          004D265E
 004D2649    mov         eax,dword ptr [ebp-4]
 004D264C    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D2650    je          004D265E
 004D2652    mov         eax,dword ptr [ebp-8]
 004D2655    mov         dword ptr [eax+0C],1
>004D265C    jmp         004D2669
 004D265E    mov         edx,dword ptr [ebp-8]
 004D2661    mov         eax,dword ptr [ebp-4]
 004D2664    mov         ecx,dword ptr [eax]
 004D2666    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D2669    pop         ecx
 004D266A    pop         ecx
 004D266B    pop         ebp
 004D266C    ret
end;*}

//004D2670
{*procedure TWinControl.sub_004C9CFC(?:?);
begin
 004D2670    push        ebp
 004D2671    mov         ebp,esp
 004D2673    add         esp,0FFFFFFF4
 004D2676    push        esi
 004D2677    mov         byte ptr [ebp-5],dl
 004D267A    mov         dword ptr [ebp-4],eax
 004D267D    mov         dl,byte ptr [ebp-5]
 004D2680    mov         eax,dword ptr [ebp-4]
 004D2683    call        TControl.sub_004C9CFC
 004D2688    mov         byte ptr [ebp-6],al
 004D268B    mov         eax,dword ptr [ebp-4]
 004D268E    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>004D2692    je          004D26D3
 004D2694    mov         eax,dword ptr [ebp-4]
 004D2697    call        004CF618
 004D269C    dec         eax
 004D269D    cmp         eax,0
>004D26A0    jl          004D26D3
 004D26A2    mov         dword ptr [ebp-0C],eax
 004D26A5    mov         al,byte ptr [ebp-5]
 004D26A8    and         al,byte ptr [ebp-6]
>004D26AB    jne         004D26D3
 004D26AD    mov         edx,dword ptr [ebp-0C]
 004D26B0    mov         eax,dword ptr [ebp-4]
 004D26B3    call        004CF5AC
 004D26B8    mov         dl,byte ptr [ebp-5]
 004D26BB    mov         si,0FFD1
 004D26BF    call        @CallDynaInst
 004D26C4    or          al,byte ptr [ebp-6]
 004D26C7    mov         byte ptr [ebp-6],al
 004D26CA    dec         dword ptr [ebp-0C]
 004D26CD    cmp         dword ptr [ebp-0C],0FFFFFFFF
>004D26D1    jne         004D26A5
 004D26D3    mov         al,byte ptr [ebp-6]
 004D26D6    pop         esi
 004D26D7    mov         esp,ebp
 004D26D9    pop         ebp
 004D26DA    ret
end;*}

//004D26DC
{*procedure TWinControl.WMQueryNewPalette(?:?);
begin
 004D26DC    push        ebp
 004D26DD    mov         ebp,esp
 004D26DF    add         esp,0FFFFFFF8
 004D26E2    push        esi
 004D26E3    mov         dword ptr [ebp-8],edx
 004D26E6    mov         dword ptr [ebp-4],eax
 004D26E9    mov         eax,dword ptr [ebp-4]
 004D26EC    or          word ptr [eax+54],4;TWinControl.FControlState:TControlState
 004D26F1    mov         dl,1
 004D26F3    mov         eax,dword ptr [ebp-4]
 004D26F6    mov         si,0FFD1
 004D26FA    call        @CallDynaInst;TWinControl.sub_004C9CFC
 004D26FF    and         eax,7F
 004D2702    mov         edx,dword ptr [ebp-8]
 004D2705    mov         dword ptr [edx+0C],eax
 004D2708    pop         esi
 004D2709    pop         ecx
 004D270A    pop         ecx
 004D270B    pop         ebp
 004D270C    ret
end;*}

//004D2710
{*procedure TWinControl.WMPaletteChanged(?:?);
begin
 004D2710    push        ebp
 004D2711    mov         ebp,esp
 004D2713    add         esp,0FFFFFFF8
 004D2716    push        esi
 004D2717    mov         dword ptr [ebp-8],edx
 004D271A    mov         dword ptr [ebp-4],eax
 004D271D    xor         edx,edx
 004D271F    mov         eax,dword ptr [ebp-4]
 004D2722    mov         si,0FFD1
 004D2726    call        @CallDynaInst;TWinControl.sub_004C9CFC
 004D272B    and         eax,7F
 004D272E    mov         edx,dword ptr [ebp-8]
 004D2731    mov         dword ptr [edx+0C],eax
 004D2734    pop         esi
 004D2735    pop         ecx
 004D2736    pop         ecx
 004D2737    pop         ebp
 004D2738    ret
end;*}

//004D273C
{*procedure TWinControl.CMShowHintChanged(?:?);
begin
 004D273C    push        ebp
 004D273D    mov         ebp,esp
 004D273F    add         esp,0FFFFFFF8
 004D2742    mov         dword ptr [ebp-8],edx
 004D2745    mov         dword ptr [ebp-4],eax
 004D2748    mov         edx,dword ptr [ebp-8]
 004D274B    mov         eax,dword ptr [ebp-4]
 004D274E    mov         ecx,dword ptr [eax]
 004D2750    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D2753    mov         dx,0B023
 004D2757    mov         eax,dword ptr [ebp-4]
 004D275A    call        004CF6B8
 004D275F    pop         ecx
 004D2760    pop         ecx
 004D2761    pop         ebp
 004D2762    ret
end;*}

//004D2764
procedure TWinControl.CMBiDiModeChanged(var Message:TMessage);
begin
{*
 004D2764    push        ebp
 004D2765    mov         ebp,esp
 004D2767    add         esp,0FFFFFFF8
 004D276A    mov         dword ptr [ebp-8],edx
 004D276D    mov         dword ptr [ebp-4],eax
 004D2770    mov         edx,dword ptr [ebp-8]
 004D2773    mov         eax,dword ptr [ebp-4]
 004D2776    call        TControl.CMBiDiModeChanged
 004D277B    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004D2780    cmp         byte ptr [eax+0D],0
>004D2784    je          004D2797
 004D2786    mov         eax,dword ptr [ebp-8]
 004D2789    cmp         dword ptr [eax+4],0
>004D278D    jne         004D2797
 004D278F    mov         eax,dword ptr [ebp-4]
 004D2792    call        TWinControl.RecreateWnd
 004D2797    mov         dx,0B03D
 004D279B    mov         eax,dword ptr [ebp-4]
 004D279E    call        004CF6B8
 004D27A3    pop         ecx
 004D27A4    pop         ecx
 004D27A5    pop         ebp
 004D27A6    ret
*}
end;

//004D27A8
{*procedure TWinControl.CMEnter(?:?);
begin
 004D27A8    push        ebp
 004D27A9    mov         ebp,esp
 004D27AB    add         esp,0FFFFFFF8
 004D27AE    push        esi
 004D27AF    mov         dword ptr [ebp-8],edx
 004D27B2    mov         dword ptr [ebp-4],eax
 004D27B5    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004D27BA    cmp         byte ptr [eax+0D],0
>004D27BE    je          004D2816
 004D27C0    mov         eax,dword ptr [ebp-4]
 004D27C3    call        004CB90C
 004D27C8    test        al,al
>004D27CA    je          004D27F2
 004D27CC    mov         eax,[0055B4C8];^Application:TApplication
 004D27D1    mov         eax,dword ptr [eax]
 004D27D3    cmp         dword ptr [eax+38],0;TApplication.FBiDiKeyboard:String
>004D27D7    je          004D2816
 004D27D9    push        1
 004D27DB    mov         eax,[0055B4C8];^Application:TApplication
 004D27E0    mov         eax,dword ptr [eax]
 004D27E2    mov         eax,dword ptr [eax+38];TApplication.FBiDiKeyboard:String
 004D27E5    call        @LStrToPChar
 004D27EA    push        eax
 004D27EB    call        user32.LoadKeyboardLayoutA
>004D27F0    jmp         004D2816
 004D27F2    mov         eax,[0055B4C8];^Application:TApplication
 004D27F7    mov         eax,dword ptr [eax]
 004D27F9    cmp         dword ptr [eax+3C],0;TApplication.FNonBiDiKeyboard:String
>004D27FD    je          004D2816
 004D27FF    push        1
 004D2801    mov         eax,[0055B4C8];^Application:TApplication
 004D2806    mov         eax,dword ptr [eax]
 004D2808    mov         eax,dword ptr [eax+3C];TApplication.FNonBiDiKeyboard:String
 004D280B    call        @LStrToPChar
 004D2810    push        eax
 004D2811    call        user32.LoadKeyboardLayoutA
 004D2816    mov         eax,dword ptr [ebp-4]
 004D2819    mov         si,0FFC2
 004D281D    call        @CallDynaInst;TWinControl.sub_004D19F8
 004D2822    pop         esi
 004D2823    pop         ecx
 004D2824    pop         ecx
 004D2825    pop         ebp
 004D2826    ret
end;*}

//004D2828
procedure TWinControl.CMExit(var Message:TWMNoParams);
begin
{*
 004D2828    push        ebp
 004D2829    mov         ebp,esp
 004D282B    add         esp,0FFFFFFF8
 004D282E    push        esi
 004D282F    mov         dword ptr [ebp-8],edx
 004D2832    mov         dword ptr [ebp-4],eax
 004D2835    mov         eax,dword ptr [ebp-4]
 004D2838    mov         si,0FFC1
 004D283C    call        @CallDynaInst
 004D2841    pop         esi
 004D2842    pop         ecx
 004D2843    pop         ecx
 004D2844    pop         ebp
 004D2845    ret
*}
end;

//004D2848
{*procedure TWinControl.CMDesignHitTest(?:?);
begin
 004D2848    push        ebp
 004D2849    mov         ebp,esp
 004D284B    add         esp,0FFFFFFF8
 004D284E    mov         dword ptr [ebp-8],edx
 004D2851    mov         dword ptr [ebp-4],eax
 004D2854    mov         edx,dword ptr [ebp-8]
 004D2857    mov         eax,dword ptr [ebp-4]
 004D285A    call        004D05E8
 004D285F    test        al,al
>004D2861    jne         004D286E
 004D2863    mov         edx,dword ptr [ebp-8]
 004D2866    mov         eax,dword ptr [ebp-4]
 004D2869    call        TControl.CMDesignHitTest
 004D286E    pop         ecx
 004D286F    pop         ecx
 004D2870    pop         ebp
 004D2871    ret
end;*}

//004D2874
{*procedure TWinControl.CMChanged(?:?);
begin
 004D2874    push        ebp
 004D2875    mov         ebp,esp
 004D2877    add         esp,0FFFFFFF8
 004D287A    push        ebx
 004D287B    mov         dword ptr [ebp-8],edx
 004D287E    mov         dword ptr [ebp-4],eax
 004D2881    mov         eax,dword ptr [ebp-4]
 004D2884    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D2888    je          004D2899
 004D288A    mov         edx,dword ptr [ebp-8]
 004D288D    mov         eax,dword ptr [ebp-4]
 004D2890    mov         ebx,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D2893    mov         eax,dword ptr [ebx+3C];TWinControl.?f3C:TControl
 004D2896    call        dword ptr [ebx+38];TWinControl.FWindowProc
 004D2899    pop         ebx
 004D289A    pop         ecx
 004D289B    pop         ecx
 004D289C    pop         ebp
 004D289D    ret
end;*}

//004D28A0
{*procedure TWinControl.CMChildKey(?:?);
begin
 004D28A0    push        ebp
 004D28A1    mov         ebp,esp
 004D28A3    add         esp,0FFFFFFF8
 004D28A6    push        ebx
 004D28A7    mov         dword ptr [ebp-8],edx
 004D28AA    mov         dword ptr [ebp-4],eax
 004D28AD    mov         eax,dword ptr [ebp-4]
 004D28B0    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D28B4    je          004D28C5
 004D28B6    mov         edx,dword ptr [ebp-8]
 004D28B9    mov         eax,dword ptr [ebp-4]
 004D28BC    mov         ebx,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D28BF    mov         eax,dword ptr [ebx+3C];TWinControl.?f3C:TControl
 004D28C2    call        dword ptr [ebx+38];TWinControl.FWindowProc
 004D28C5    pop         ebx
 004D28C6    pop         ecx
 004D28C7    pop         ecx
 004D28C8    pop         ebp
 004D28C9    ret
end;*}

//004D28CC
{*procedure TWinControl.CMDialogKey(?:?);
begin
 004D28CC    push        ebp
 004D28CD    mov         ebp,esp
 004D28CF    add         esp,0FFFFFFF8
 004D28D2    mov         dword ptr [ebp-8],edx
 004D28D5    mov         dword ptr [ebp-4],eax
 004D28D8    mov         edx,dword ptr [ebp-8]
 004D28DB    mov         eax,dword ptr [ebp-4]
 004D28DE    call        004CF664
 004D28E3    pop         ecx
 004D28E4    pop         ecx
 004D28E5    pop         ebp
 004D28E6    ret
end;*}

//004D28E8
{*procedure TWinControl.CMDialogChar(?:?);
begin
 004D28E8    push        ebp
 004D28E9    mov         ebp,esp
 004D28EB    add         esp,0FFFFFFF8
 004D28EE    mov         dword ptr [ebp-8],edx
 004D28F1    mov         dword ptr [ebp-4],eax
 004D28F4    mov         edx,dword ptr [ebp-8]
 004D28F7    mov         eax,dword ptr [ebp-4]
 004D28FA    call        004CF664
 004D28FF    pop         ecx
 004D2900    pop         ecx
 004D2901    pop         ebp
 004D2902    ret
end;*}

//004D2904
{*procedure TWinControl.CMFocusChenged(?:?);
begin
 004D2904    push        ebp
 004D2905    mov         ebp,esp
 004D2907    add         esp,0FFFFFFF8
 004D290A    mov         dword ptr [ebp-8],edx
 004D290D    mov         dword ptr [ebp-4],eax
 004D2910    mov         edx,dword ptr [ebp-8]
 004D2913    mov         eax,dword ptr [ebp-4]
 004D2916    call        004CF664
 004D291B    pop         ecx
 004D291C    pop         ecx
 004D291D    pop         ebp
 004D291E    ret
end;*}

//004D2920
{*procedure TWinControl.CMVisibleChanged(?:?);
begin
 004D2920    push        ebp
 004D2921    mov         ebp,esp
 004D2923    add         esp,0FFFFFFF8
 004D2926    mov         dword ptr [ebp-8],edx
 004D2929    mov         dword ptr [ebp-4],eax
 004D292C    mov         eax,dword ptr [ebp-4]
 004D292F    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>004D2933    jne         004D2948
 004D2935    mov         eax,dword ptr [ebp-4]
 004D2938    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D293C    je          004D2948
 004D293E    xor         edx,edx
 004D2940    mov         eax,dword ptr [ebp-4]
 004D2943    call        004CF340
 004D2948    mov         eax,dword ptr [ebp-4]
 004D294B    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D294F    je          004D295A
 004D2951    mov         eax,dword ptr [ebp-4]
 004D2954    test        byte ptr [eax+51],4;TWinControl.?f51:byte
>004D2958    je          004D2962
 004D295A    mov         eax,dword ptr [ebp-4]
 004D295D    call        004D02BC
 004D2962    pop         ecx
 004D2963    pop         ecx
 004D2964    pop         ebp
 004D2965    ret
end;*}

//004D2968
{*procedure TWinControl.CMShowingChanged(?:?);
begin
 004D2968    push        ebp
 004D2969    mov         ebp,esp
 004D296B    add         esp,0FFFFFFF8
 004D296E    mov         dword ptr [ebp-8],edx
 004D2971    mov         dword ptr [ebp-4],eax
 004D2974    mov         eax,dword ptr [ebp-4]
 004D2977    movzx       eax,byte ptr [eax+1A6];TWinControl.FShowing:Boolean
 004D297E    movzx       eax,word ptr [eax*2+541740]
 004D2986    push        eax
 004D2987    push        0
 004D2989    push        0
 004D298B    push        0
 004D298D    push        0
 004D298F    push        0
 004D2991    mov         eax,dword ptr [ebp-4]
 004D2994    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D299A    push        eax
 004D299B    call        user32.SetWindowPos
 004D29A0    pop         ecx
 004D29A1    pop         ecx
 004D29A2    pop         ebp
 004D29A3    ret
end;*}

//004D29A4
{*procedure TWinControl.CMEnabledChanged(?:?);
begin
 004D29A4    push        ebp
 004D29A5    mov         ebp,esp
 004D29A7    add         esp,0FFFFFFF8
 004D29AA    mov         dword ptr [ebp-8],edx
 004D29AD    mov         dword ptr [ebp-4],eax
 004D29B0    mov         eax,dword ptr [ebp-4]
 004D29B3    mov         edx,dword ptr [eax]
 004D29B5    call        dword ptr [edx+50];TImage.GetEnabled
 004D29B8    test        al,al
>004D29BA    jne         004D29CF
 004D29BC    mov         eax,dword ptr [ebp-4]
 004D29BF    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D29C3    je          004D29CF
 004D29C5    xor         edx,edx
 004D29C7    mov         eax,dword ptr [ebp-4]
 004D29CA    call        004CF340
 004D29CF    mov         eax,dword ptr [ebp-4]
 004D29D2    call        TWinControl.HandleAllocated
 004D29D7    test        al,al
>004D29D9    je          004D2A00
 004D29DB    mov         eax,dword ptr [ebp-4]
 004D29DE    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D29E2    jne         004D2A00
 004D29E4    mov         eax,dword ptr [ebp-4]
 004D29E7    mov         edx,dword ptr [eax]
 004D29E9    call        dword ptr [edx+50];TImage.GetEnabled
 004D29EC    neg         al
 004D29EE    sbb         eax,eax
 004D29F0    push        eax
 004D29F1    mov         eax,dword ptr [ebp-4]
 004D29F4    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D29FA    push        eax
 004D29FB    call        user32.EnableWindow
 004D2A00    pop         ecx
 004D2A01    pop         ecx
 004D2A02    pop         ebp
 004D2A03    ret
end;*}

//004D2A04
{*procedure TWinControl.CMColorChanged(?:?);
begin
 004D2A04    push        ebp
 004D2A05    mov         ebp,esp
 004D2A07    add         esp,0FFFFFFF8
 004D2A0A    mov         dword ptr [ebp-8],edx
 004D2A0D    mov         dword ptr [ebp-4],eax
 004D2A10    mov         edx,dword ptr [ebp-8]
 004D2A13    mov         eax,dword ptr [ebp-4]
 004D2A16    call        TControl.CMColorChanged
 004D2A1B    mov         eax,dword ptr [ebp-4]
 004D2A1E    mov         edx,dword ptr [eax+70];TWinControl.FColor:TColor
 004D2A21    mov         eax,dword ptr [ebp-4]
 004D2A24    mov         eax,dword ptr [eax+170];TWinControl.FBrush:TBrush
 004D2A2A    call        TBrush.SetColor
 004D2A2F    mov         dx,0B009
 004D2A33    mov         eax,dword ptr [ebp-4]
 004D2A36    call        004CF6B8
 004D2A3B    pop         ecx
 004D2A3C    pop         ecx
 004D2A3D    pop         ebp
 004D2A3E    ret
end;*}

//004D2A40
{*procedure TWinControl.CMFontChanged(?:?);
begin
 004D2A40    push        ebp
 004D2A41    mov         ebp,esp
 004D2A43    add         esp,0FFFFFFF8
 004D2A46    mov         dword ptr [ebp-8],edx
 004D2A49    mov         dword ptr [ebp-4],eax
 004D2A4C    mov         edx,dword ptr [ebp-8]
 004D2A4F    mov         eax,dword ptr [ebp-4]
 004D2A52    call        TControl.CMFontChanged
 004D2A57    mov         eax,dword ptr [ebp-4]
 004D2A5A    call        TWinControl.HandleAllocated
 004D2A5F    test        al,al
>004D2A61    je          004D2A7F
 004D2A63    push        0
 004D2A65    mov         eax,dword ptr [ebp-4]
 004D2A68    mov         eax,dword ptr [eax+68];TWinControl.FFont:TFont
 004D2A6B    call        TFont.GetHandle
 004D2A70    mov         ecx,eax
 004D2A72    mov         edx,30
 004D2A77    mov         eax,dword ptr [ebp-4]
 004D2A7A    call        004CC7DC
 004D2A7F    mov         dx,0B008
 004D2A83    mov         eax,dword ptr [ebp-4]
 004D2A86    call        004CF6B8
 004D2A8B    pop         ecx
 004D2A8C    pop         ecx
 004D2A8D    pop         ebp
 004D2A8E    ret
end;*}

//004D2A90
{*procedure TWinControl.CMCursorChanged(?:?);
begin
 004D2A90    push        ebp
 004D2A91    mov         ebp,esp
 004D2A93    add         esp,0FFFFFFF0
 004D2A96    mov         dword ptr [ebp-10],edx
 004D2A99    mov         dword ptr [ebp-4],eax
 004D2A9C    call        user32.GetCapture
 004D2AA1    test        eax,eax
>004D2AA3    jne         004D2AD6
 004D2AA5    lea         eax,[ebp-0C]
 004D2AA8    push        eax
 004D2AA9    call        user32.GetCursorPos
 004D2AAE    lea         eax,[ebp-0C]
 004D2AB1    xor         edx,edx
 004D2AB3    call        004C8F78
 004D2AB8    cmp         eax,dword ptr [ebp-4]
>004D2ABB    jne         004D2AD6
 004D2ABD    push        1
 004D2ABF    mov         eax,dword ptr [ebp-4]
 004D2AC2    call        TWinControl.GetHandle
 004D2AC7    mov         ecx,eax
 004D2AC9    mov         edx,20
 004D2ACE    mov         eax,dword ptr [ebp-4]
 004D2AD1    call        004CC7DC
 004D2AD6    mov         esp,ebp
 004D2AD8    pop         ebp
 004D2AD9    ret
end;*}

//004D2ADC
{*procedure TWinControl.CMBorderChanged(?:?);
begin
 004D2ADC    push        ebp
 004D2ADD    mov         ebp,esp
 004D2ADF    add         esp,0FFFFFFF8
 004D2AE2    mov         dword ptr [ebp-8],edx
 004D2AE5    mov         dword ptr [ebp-4],eax
 004D2AE8    mov         edx,dword ptr [ebp-8]
 004D2AEB    mov         eax,dword ptr [ebp-4]
 004D2AEE    mov         ecx,dword ptr [eax]
 004D2AF0    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D2AF3    mov         eax,dword ptr [ebp-4]
 004D2AF6    call        TWinControl.HandleAllocated
 004D2AFB    test        al,al
>004D2AFD    je          004D2B2A
 004D2AFF    push        37
 004D2B01    push        0
 004D2B03    push        0
 004D2B05    push        0
 004D2B07    push        0
 004D2B09    push        0
 004D2B0B    mov         eax,dword ptr [ebp-4]
 004D2B0E    call        TWinControl.GetHandle
 004D2B13    push        eax
 004D2B14    call        user32.SetWindowPos
 004D2B19    mov         eax,dword ptr [ebp-4]
 004D2B1C    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>004D2B20    je          004D2B2A
 004D2B22    mov         eax,dword ptr [ebp-4]
 004D2B25    mov         edx,dword ptr [eax]
 004D2B27    call        dword ptr [edx+7C];TWinControl.sub_004D3648
 004D2B2A    pop         ecx
 004D2B2B    pop         ecx
 004D2B2C    pop         ebp
 004D2B2D    ret
end;*}

//004D2B30
{*procedure TWinControl.CMCtl3DChanged(?:?);
begin
 004D2B30    push        ebp
 004D2B31    mov         ebp,esp
 004D2B33    add         esp,0FFFFFFF8
 004D2B36    mov         dword ptr [ebp-8],edx
 004D2B39    mov         dword ptr [ebp-4],eax
 004D2B3C    mov         eax,dword ptr [ebp-4]
 004D2B3F    test        byte ptr [eax+50],10;TWinControl.FControlStyle:TControlStyle
>004D2B43    je          004D2B75
 004D2B45    mov         eax,dword ptr [ebp-4]
 004D2B48    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D2B4C    je          004D2B75
 004D2B4E    mov         eax,dword ptr [ebp-4]
 004D2B51    call        TWinControl.HandleAllocated
 004D2B56    test        al,al
>004D2B58    je          004D2B75
 004D2B5A    mov         eax,dword ptr [ebp-4]
 004D2B5D    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D2B63    push        eax
 004D2B64    call        user32.IsWindowVisible
 004D2B69    test        eax,eax
>004D2B6B    je          004D2B75
 004D2B6D    mov         eax,dword ptr [ebp-4]
 004D2B70    call        004D3768
 004D2B75    mov         dx,0B011
 004D2B79    mov         eax,dword ptr [ebp-4]
 004D2B7C    call        004CF6B8
 004D2B81    pop         ecx
 004D2B82    pop         ecx
 004D2B83    pop         ebp
 004D2B84    ret
end;*}

//004D2B88
{*procedure TWinControl.CMParentCtl3DChanged(?:?);
begin
 004D2B88    push        ebp
 004D2B89    mov         ebp,esp
 004D2B8B    add         esp,0FFFFFFF8
 004D2B8E    mov         dword ptr [ebp-8],edx
 004D2B91    mov         dword ptr [ebp-4],eax
 004D2B94    mov         eax,dword ptr [ebp-4]
 004D2B97    cmp         byte ptr [eax+1A9],0;TWinControl.FParentCtl3D:Boolean
>004D2B9E    je          004D2BDB
 004D2BA0    mov         eax,dword ptr [ebp-8]
 004D2BA3    cmp         dword ptr [eax+4],0
>004D2BA7    je          004D2BBD
 004D2BA9    mov         eax,dword ptr [ebp-8]
 004D2BAC    cmp         dword ptr [eax+8],0
 004D2BB0    setne       dl
 004D2BB3    mov         eax,dword ptr [ebp-4]
 004D2BB6    call        TPanel.SetCtl3D
>004D2BBB    jmp         004D2BD1
 004D2BBD    mov         eax,dword ptr [ebp-4]
 004D2BC0    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D2BC3    mov         dl,byte ptr [eax+1A5];TWinControl.FCtl3D:Boolean
 004D2BC9    mov         eax,dword ptr [ebp-4]
 004D2BCC    call        TPanel.SetCtl3D
 004D2BD1    mov         eax,dword ptr [ebp-4]
 004D2BD4    mov         byte ptr [eax+1A9],1;TWinControl.FParentCtl3D:Boolean
 004D2BDB    pop         ecx
 004D2BDC    pop         ecx
 004D2BDD    pop         ebp
 004D2BDE    ret
end;*}

//004D2BE0
{*procedure TWinControl.CMSysColorChange(?:?);
begin
 004D2BE0    push        ebp
 004D2BE1    mov         ebp,esp
 004D2BE3    add         esp,0FFFFFFF8
 004D2BE6    mov         dword ptr [ebp-8],edx
 004D2BE9    mov         dword ptr [ebp-4],eax
 004D2BEC    mov         edx,dword ptr [ebp-8]
 004D2BEF    mov         eax,dword ptr [ebp-4]
 004D2BF2    call        004CF664
 004D2BF7    pop         ecx
 004D2BF8    pop         ecx
 004D2BF9    pop         ebp
 004D2BFA    ret
end;*}

//004D2BFC
{*procedure TWinControl.CMWinIniChange(?:?);
begin
 004D2BFC    push        ebp
 004D2BFD    mov         ebp,esp
 004D2BFF    add         esp,0FFFFFFF8
 004D2C02    mov         dword ptr [ebp-8],edx
 004D2C05    mov         dword ptr [ebp-4],eax
 004D2C08    mov         edx,dword ptr [ebp-8]
 004D2C0B    mov         eax,dword ptr [ebp-4]
 004D2C0E    call        004CF664
 004D2C13    pop         ecx
 004D2C14    pop         ecx
 004D2C15    pop         ebp
 004D2C16    ret
end;*}

//004D2C18
{*procedure TWinControl.CMFontChange(?:?);
begin
 004D2C18    push        ebp
 004D2C19    mov         ebp,esp
 004D2C1B    add         esp,0FFFFFFF8
 004D2C1E    mov         dword ptr [ebp-8],edx
 004D2C21    mov         dword ptr [ebp-4],eax
 004D2C24    mov         edx,dword ptr [ebp-8]
 004D2C27    mov         eax,dword ptr [ebp-4]
 004D2C2A    call        004CF664
 004D2C2F    pop         ecx
 004D2C30    pop         ecx
 004D2C31    pop         ebp
 004D2C32    ret
end;*}

//004D2C34
{*procedure TWinControl.CMTimeChange(?:?);
begin
 004D2C34    push        ebp
 004D2C35    mov         ebp,esp
 004D2C37    add         esp,0FFFFFFF8
 004D2C3A    mov         dword ptr [ebp-8],edx
 004D2C3D    mov         dword ptr [ebp-4],eax
 004D2C40    mov         edx,dword ptr [ebp-8]
 004D2C43    mov         eax,dword ptr [ebp-4]
 004D2C46    call        004CF664
 004D2C4B    pop         ecx
 004D2C4C    pop         ecx
 004D2C4D    pop         ebp
 004D2C4E    ret
end;*}

//004D2C50
{*procedure TWinControl.CMDrag(?:?);
begin
 004D2C50    push        ebp
 004D2C51    mov         ebp,esp
 004D2C53    add         esp,0FFFFFFEC
 004D2C56    mov         dword ptr [ebp-8],edx
 004D2C59    mov         dword ptr [ebp-4],eax
 004D2C5C    mov         eax,dword ptr [ebp-8]
 004D2C5F    mov         eax,dword ptr [eax+8]
 004D2C62    mov         dword ptr [ebp-0C],eax
 004D2C65    mov         eax,dword ptr [ebp-8]
 004D2C68    mov         al,byte ptr [eax+4]
 004D2C6B    sub         al,4
>004D2C6D    jb          004D2C75
 004D2C6F    dec         al
>004D2C71    je          004D2C8E
>004D2C73    jmp         004D2CC5
 004D2C75    mov         eax,dword ptr [ebp-0C]
 004D2C78    cmp         dword ptr [eax+0C],0
>004D2C7C    je          004D2CC5
 004D2C7E    mov         edx,dword ptr [ebp-8]
 004D2C81    mov         eax,dword ptr [ebp-0C]
 004D2C84    mov         eax,dword ptr [eax+0C]
 004D2C87    call        004CC0CC
>004D2C8C    jmp         004D2CC5
 004D2C8E    push        0
 004D2C90    lea         ecx,[ebp-14]
 004D2C93    mov         eax,dword ptr [ebp-0C]
 004D2C96    mov         edx,eax
 004D2C98    mov         eax,dword ptr [ebp-4]
 004D2C9B    call        TControl.ScreenToClient
 004D2CA0    lea         edx,[ebp-14]
 004D2CA3    xor         ecx,ecx
 004D2CA5    mov         eax,dword ptr [ebp-4]
 004D2CA8    call        004D052C
 004D2CAD    mov         edx,dword ptr [ebp-8]
 004D2CB0    mov         dword ptr [edx+0C],eax
 004D2CB3    mov         eax,dword ptr [ebp-8]
 004D2CB6    cmp         dword ptr [eax+0C],0
>004D2CBA    jne         004D2CC5
 004D2CBC    mov         eax,dword ptr [ebp-8]
 004D2CBF    mov         edx,dword ptr [ebp-4]
 004D2CC2    mov         dword ptr [eax+0C],edx
 004D2CC5    mov         esp,ebp
 004D2CC7    pop         ebp
 004D2CC8    ret
end;*}

//004D2CCC
{*procedure TWinControl.CMControlLIstChange(?:?);
begin
 004D2CCC    push        ebp
 004D2CCD    mov         ebp,esp
 004D2CCF    add         esp,0FFFFFFF8
 004D2CD2    push        ebx
 004D2CD3    mov         dword ptr [ebp-8],edx
 004D2CD6    mov         dword ptr [ebp-4],eax
 004D2CD9    mov         eax,dword ptr [ebp-4]
 004D2CDC    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D2CE0    je          004D2CF1
 004D2CE2    mov         edx,dword ptr [ebp-8]
 004D2CE5    mov         eax,dword ptr [ebp-4]
 004D2CE8    mov         ebx,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D2CEB    mov         eax,dword ptr [ebx+3C];TWinControl.?f3C:TControl
 004D2CEE    call        dword ptr [ebx+38];TWinControl.FWindowProc
 004D2CF1    pop         ebx
 004D2CF2    pop         ecx
 004D2CF3    pop         ecx
 004D2CF4    pop         ebp
 004D2CF5    ret
end;*}

//004D2CF8
{*procedure TWinControl.CMSysFontChanged(?:?);
begin
 004D2CF8    push        ebp
 004D2CF9    mov         ebp,esp
 004D2CFB    add         esp,0FFFFFFF8
 004D2CFE    mov         dword ptr [ebp-8],edx
 004D2D01    mov         dword ptr [ebp-4],eax
 004D2D04    mov         edx,dword ptr [ebp-8]
 004D2D07    mov         eax,dword ptr [ebp-4]
 004D2D0A    call        TControl.CMSysFontChanged
 004D2D0F    mov         edx,dword ptr [ebp-8]
 004D2D12    mov         eax,dword ptr [ebp-4]
 004D2D15    call        004CF664
 004D2D1A    pop         ecx
 004D2D1B    pop         ecx
 004D2D1C    pop         ebp
 004D2D1D    ret
end;*}

//004D2D20
{*function sub_004D2D20(?:TWinControl; ?:?):?;
begin
 004D2D20    push        ebp
 004D2D21    mov         ebp,esp
 004D2D23    add         esp,0FFFFFFE8
 004D2D26    push        esi
 004D2D27    mov         dword ptr [ebp-8],edx
 004D2D2A    mov         dword ptr [ebp-4],eax
 004D2D2D    mov         byte ptr [ebp-9],1
 004D2D31    mov         eax,dword ptr [ebp-4]
 004D2D34    test        byte ptr [eax+1C],10
>004D2D38    jne         004D2DAA
 004D2D3A    mov         eax,dword ptr [ebp-4]
 004D2D3D    mov         dword ptr [ebp-10],eax
 004D2D40    cmp         dword ptr [ebp-10],0
>004D2D44    je          004D2D86
 004D2D46    mov         eax,dword ptr [ebp-10]
 004D2D49    mov         si,0FFD6
 004D2D4D    call        @CallDynaInst
 004D2D52    mov         dword ptr [ebp-18],eax
 004D2D55    cmp         dword ptr [ebp-18],0
>004D2D59    je          004D2D77
 004D2D5B    mov         eax,dword ptr [ebp-18]
 004D2D5E    cmp         dword ptr [eax+38],0
>004D2D62    je          004D2D77
 004D2D64    mov         edx,dword ptr [ebp-8]
 004D2D67    mov         eax,dword ptr [ebp-18]
 004D2D6A    mov         si,0FFEF
 004D2D6E    call        @CallDynaInst
 004D2D73    test        al,al
>004D2D75    jne         004D2DC9
 004D2D77    mov         eax,dword ptr [ebp-10]
 004D2D7A    mov         eax,dword ptr [eax+30]
 004D2D7D    mov         dword ptr [ebp-10],eax
 004D2D80    cmp         dword ptr [ebp-10],0
>004D2D84    jne         004D2D46
 004D2D86    mov         eax,dword ptr [ebp-4]
 004D2D89    call        004E7ED8
 004D2D8E    mov         dword ptr [ebp-14],eax
 004D2D91    cmp         dword ptr [ebp-14],0
>004D2D95    je          004D2DAA
 004D2D97    mov         edx,dword ptr [ebp-8]
 004D2D9A    mov         eax,dword ptr [ebp-14]
 004D2D9D    mov         si,0FFAB
 004D2DA1    call        @CallDynaInst
 004D2DA6    test        al,al
>004D2DA8    jne         004D2DC9
 004D2DAA    mov         ecx,dword ptr [ebp-8]
 004D2DAD    mov         ecx,dword ptr [ecx+8]
 004D2DB0    mov         edx,dword ptr [ebp-8]
 004D2DB3    movzx       edx,word ptr [edx+4]
 004D2DB7    mov         eax,0B016
 004D2DBC    call        004C6FEC
 004D2DC1    test        eax,eax
>004D2DC3    jne         004D2DC9
 004D2DC5    mov         byte ptr [ebp-9],0
 004D2DC9    mov         al,byte ptr [ebp-9]
 004D2DCC    pop         esi
 004D2DCD    mov         esp,ebp
 004D2DCF    pop         ebp
 004D2DD0    ret
end;*}

//004D2DD4
{*procedure TWinControl.sub_004D2DD4(?:?);
begin
 004D2DD4    push        ebp
 004D2DD5    mov         ebp,esp
 004D2DD7    add         esp,0FFFFFFF4
 004D2DDA    mov         dword ptr [ebp-8],edx
 004D2DDD    mov         dword ptr [ebp-4],eax
 004D2DE0    mov         eax,dword ptr [ebp-8]
 004D2DE3    mov         dword ptr [eax+0C],1
 004D2DEA    mov         edx,dword ptr [ebp-8]
 004D2DED    mov         dx,word ptr [edx+4]
 004D2DF1    mov         eax,dword ptr [ebp-4]
 004D2DF4    call        004D4EE4
 004D2DF9    mov         edx,dword ptr [ebp-8]
 004D2DFC    mov         eax,dword ptr [ebp-4]
 004D2DFF    call        004D2D20
 004D2E04    test        al,al
>004D2E06    jne         004D2EE7
 004D2E0C    mov         eax,dword ptr [ebp-4]
 004D2E0F    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D2E13    jne         004D2EDF
 004D2E19    mov         eax,dword ptr [ebp-4]
 004D2E1C    push        eax
 004D2E1D    mov         ecx,dword ptr [ebp-8]
 004D2E20    movzx       ecx,word ptr [ecx+4]
 004D2E24    mov         edx,0B02E
 004D2E29    mov         eax,dword ptr [ebp-4]
 004D2E2C    call        004CC7DC
 004D2E31    test        eax,eax
>004D2E33    jne         004D2EE7
 004D2E39    xor         eax,eax
 004D2E3B    mov         dword ptr [ebp-0C],eax
 004D2E3E    mov         eax,dword ptr [ebp-8]
 004D2E41    movzx       eax,word ptr [eax+4]
 004D2E45    cmp         eax,1B
>004D2E48    jg          004D2E5D
>004D2E4A    je          004D2E7E
 004D2E4C    sub         eax,3
>004D2E4F    je          004D2E7E
 004D2E51    sub         eax,6
>004D2E54    je          004D2E6C
 004D2E56    sub         eax,4
>004D2E59    je          004D2E7E
>004D2E5B    jmp         004D2E85
 004D2E5D    add         eax,0FFFFFFDB
 004D2E60    sub         eax,4
>004D2E63    jb          004D2E75
 004D2E65    sub         eax,2
>004D2E68    je          004D2E7E
>004D2E6A    jmp         004D2E85
 004D2E6C    mov         dword ptr [ebp-0C],2
>004D2E73    jmp         004D2E85
 004D2E75    mov         dword ptr [ebp-0C],1
>004D2E7C    jmp         004D2E85
 004D2E7E    mov         dword ptr [ebp-0C],4
 004D2E85    cmp         dword ptr [ebp-0C],0
>004D2E89    je          004D2EDF
 004D2E8B    push        0
 004D2E8D    mov         ecx,dword ptr [ebp-8]
 004D2E90    movzx       ecx,word ptr [ecx+4]
 004D2E94    mov         edx,0B01E
 004D2E99    mov         eax,dword ptr [ebp-4]
 004D2E9C    call        004CC7DC
 004D2EA1    test        eax,eax
>004D2EA3    jne         004D2EDF
 004D2EA5    push        0
 004D2EA7    xor         ecx,ecx
 004D2EA9    mov         edx,87
 004D2EAE    mov         eax,dword ptr [ebp-4]
 004D2EB1    call        004CC7DC
 004D2EB6    and         eax,dword ptr [ebp-0C]
>004D2EB9    jne         004D2EDF
 004D2EBB    mov         eax,dword ptr [ebp-8]
 004D2EBE    mov         eax,dword ptr [eax+8]
 004D2EC1    push        eax
 004D2EC2    mov         eax,dword ptr [ebp-4]
 004D2EC5    call        004E7ED8
 004D2ECA    mov         ecx,dword ptr [ebp-8]
 004D2ECD    movzx       ecx,word ptr [ecx+4]
 004D2ED1    mov         edx,0B005
 004D2ED6    call        004CC7DC
 004D2EDB    test        eax,eax
>004D2EDD    jne         004D2EE7
 004D2EDF    mov         eax,dword ptr [ebp-8]
 004D2EE2    xor         edx,edx
 004D2EE4    mov         dword ptr [eax+0C],edx
 004D2EE7    mov         esp,ebp
 004D2EE9    pop         ebp
 004D2EEA    ret
end;*}

//004D2EEC
{*procedure TWinControl.sub_004D2EEC(?:?);
begin
 004D2EEC    push        ebp
 004D2EED    mov         ebp,esp
 004D2EEF    add         esp,0FFFFFFF8
 004D2EF2    mov         dword ptr [ebp-8],edx
 004D2EF5    mov         dword ptr [ebp-4],eax
 004D2EF8    mov         eax,dword ptr [ebp-4]
 004D2EFB    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D2EFF    jne         004D2F49
 004D2F01    mov         eax,dword ptr [ebp-8]
 004D2F04    movzx       eax,word ptr [eax+4]
 004D2F08    cmp         eax,1B
>004D2F0B    jg          004D2F20
>004D2F0D    je          004D2F2D
 004D2F0F    sub         eax,3
>004D2F12    je          004D2F2D
 004D2F14    sub         eax,6
>004D2F17    je          004D2F2D
 004D2F19    sub         eax,4
>004D2F1C    je          004D2F2D
>004D2F1E    jmp         004D2F49
 004D2F20    add         eax,0FFFFFFDB
 004D2F23    sub         eax,4
>004D2F26    jb          004D2F2D
 004D2F28    sub         eax,2
>004D2F2B    jne         004D2F49
 004D2F2D    push        0
 004D2F2F    mov         ecx,dword ptr [ebp-8]
 004D2F32    movzx       ecx,word ptr [ecx+4]
 004D2F36    mov         edx,0B01E
 004D2F3B    mov         eax,dword ptr [ebp-4]
 004D2F3E    call        004CC7DC
 004D2F43    mov         edx,dword ptr [ebp-8]
 004D2F46    mov         dword ptr [edx+0C],eax
 004D2F49    pop         ecx
 004D2F4A    pop         ecx
 004D2F4B    pop         ebp
 004D2F4C    ret
end;*}

//004D2F50
{*procedure TWinControl.sub_004D2F50(?:?);
begin
 004D2F50    push        ebp
 004D2F51    mov         ebp,esp
 004D2F53    add         esp,0FFFFFFF8
 004D2F56    mov         dword ptr [ebp-8],edx
 004D2F59    mov         dword ptr [ebp-4],eax
 004D2F5C    mov         eax,dword ptr [ebp-4]
 004D2F5F    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D2F63    jne         004D2FB0
 004D2F65    mov         eax,dword ptr [ebp-8]
 004D2F68    mov         dword ptr [eax+0C],1
 004D2F6F    push        0
 004D2F71    xor         ecx,ecx
 004D2F73    mov         edx,87
 004D2F78    mov         eax,dword ptr [ebp-4]
 004D2F7B    call        004CC7DC
 004D2F80    test        al,80
>004D2F82    jne         004D2FA8
 004D2F84    mov         eax,dword ptr [ebp-8]
 004D2F87    mov         eax,dword ptr [eax+8]
 004D2F8A    push        eax
 004D2F8B    mov         eax,dword ptr [ebp-4]
 004D2F8E    call        004E7ED8
 004D2F93    mov         ecx,dword ptr [ebp-8]
 004D2F96    movzx       ecx,word ptr [ecx+4]
 004D2F9A    mov         edx,0B006
 004D2F9F    call        004CC7DC
 004D2FA4    test        eax,eax
>004D2FA6    jne         004D2FB0
 004D2FA8    mov         eax,dword ptr [ebp-8]
 004D2FAB    xor         edx,edx
 004D2FAD    mov         dword ptr [eax+0C],edx
 004D2FB0    pop         ecx
 004D2FB1    pop         ecx
 004D2FB2    pop         ebp
 004D2FB3    ret
end;*}

//004D2FB4
{*procedure TWinControl.sub_004D2FB4(?:?);
begin
 004D2FB4    push        ebp
 004D2FB5    mov         ebp,esp
 004D2FB7    add         esp,0FFFFFFF8
 004D2FBA    mov         dword ptr [ebp-8],edx
 004D2FBD    mov         dword ptr [ebp-4],eax
 004D2FC0    mov         eax,dword ptr [ebp-8]
 004D2FC3    mov         dword ptr [eax+0C],1
 004D2FCA    mov         edx,dword ptr [ebp-8]
 004D2FCD    mov         eax,dword ptr [ebp-4]
 004D2FD0    call        004D2D20
 004D2FD5    test        al,al
>004D2FD7    jne         004D302A
 004D2FD9    mov         eax,dword ptr [ebp-4]
 004D2FDC    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D2FE0    jne         004D3022
 004D2FE2    mov         eax,dword ptr [ebp-4]
 004D2FE5    push        eax
 004D2FE6    mov         ecx,dword ptr [ebp-8]
 004D2FE9    movzx       ecx,word ptr [ecx+4]
 004D2FED    mov         edx,0B02E
 004D2FF2    mov         eax,dword ptr [ebp-4]
 004D2FF5    call        004CC7DC
 004D2FFA    test        eax,eax
>004D2FFC    jne         004D302A
 004D2FFE    mov         eax,dword ptr [ebp-8]
 004D3001    mov         eax,dword ptr [eax+8]
 004D3004    push        eax
 004D3005    mov         eax,dword ptr [ebp-4]
 004D3008    call        004E7ED8
 004D300D    mov         ecx,dword ptr [ebp-8]
 004D3010    movzx       ecx,word ptr [ecx+4]
 004D3014    mov         edx,0B005
 004D3019    call        004CC7DC
 004D301E    test        eax,eax
>004D3020    jne         004D302A
 004D3022    mov         eax,dword ptr [ebp-8]
 004D3025    xor         edx,edx
 004D3027    mov         dword ptr [eax+0C],edx
 004D302A    pop         ecx
 004D302B    pop         ecx
 004D302C    pop         ebp
 004D302D    ret
end;*}

//004D3030
{*procedure TWinControl.sub_004D3030(?:?);
begin
 004D3030    push        ebp
 004D3031    mov         ebp,esp
 004D3033    add         esp,0FFFFFFF8
 004D3036    mov         dword ptr [ebp-8],edx
 004D3039    mov         dword ptr [ebp-4],eax
 004D303C    mov         eax,dword ptr [ebp-4]
 004D303F    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D3043    jne         004D3075
 004D3045    mov         eax,dword ptr [ebp-8]
 004D3048    cmp         word ptr [eax+4],20
>004D304D    je          004D3075
 004D304F    mov         eax,dword ptr [ebp-8]
 004D3052    mov         eax,dword ptr [eax+8]
 004D3055    push        eax
 004D3056    mov         eax,dword ptr [ebp-4]
 004D3059    call        004E7ED8
 004D305E    mov         ecx,dword ptr [ebp-8]
 004D3061    movzx       ecx,word ptr [ecx+4]
 004D3065    mov         edx,0B006
 004D306A    call        004CC7DC
 004D306F    mov         edx,dword ptr [ebp-8]
 004D3072    mov         dword ptr [edx+0C],eax
 004D3075    pop         ecx
 004D3076    pop         ecx
 004D3077    pop         ebp
 004D3078    ret
end;*}

//004D307C
procedure TWinControl.SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer);
begin
{*
 004D307C    push        ebp
 004D307D    mov         ebp,esp
 004D307F    add         esp,0FFFFFFB8
 004D3082    push        esi
 004D3083    push        edi
 004D3084    mov         dword ptr [ebp-0C],ecx
 004D3087    mov         dword ptr [ebp-8],edx
 004D308A    mov         dword ptr [ebp-4],eax
 004D308D    mov         eax,dword ptr [ebp-8]
 004D3090    mov         edx,dword ptr [ebp-4]
 004D3093    cmp         eax,dword ptr [edx+40]
>004D3096    jne         004D30BD
 004D3098    mov         eax,dword ptr [ebp-0C]
 004D309B    mov         edx,dword ptr [ebp-4]
 004D309E    cmp         eax,dword ptr [edx+44]
>004D30A1    jne         004D30BD
 004D30A3    mov         eax,dword ptr [ebp+0C]
 004D30A6    mov         edx,dword ptr [ebp-4]
 004D30A9    cmp         eax,dword ptr [edx+48]
>004D30AC    jne         004D30BD
 004D30AE    mov         eax,dword ptr [ebp+8]
 004D30B1    mov         edx,dword ptr [ebp-4]
 004D30B4    cmp         eax,dword ptr [edx+4C]
>004D30B7    je          004D3187
 004D30BD    mov         eax,dword ptr [ebp-4]
 004D30C0    call        TWinControl.HandleAllocated
 004D30C5    test        al,al
>004D30C7    je          004D3101
 004D30C9    mov         eax,dword ptr [ebp-4]
 004D30CC    mov         eax,dword ptr [eax+180]
 004D30D2    push        eax
 004D30D3    call        user32.IsIconic
 004D30D8    test        eax,eax
>004D30DA    jne         004D3101
 004D30DC    push        14
 004D30DE    mov         eax,dword ptr [ebp+8]
 004D30E1    push        eax
 004D30E2    mov         eax,dword ptr [ebp+0C]
 004D30E5    push        eax
 004D30E6    mov         eax,dword ptr [ebp-0C]
 004D30E9    push        eax
 004D30EA    mov         eax,dword ptr [ebp-8]
 004D30ED    push        eax
 004D30EE    push        0
 004D30F0    mov         eax,dword ptr [ebp-4]
 004D30F3    mov         eax,dword ptr [eax+180]
 004D30F9    push        eax
 004D30FA    call        user32.SetWindowPos
>004D30FF    jmp         004D3173
 004D3101    mov         eax,dword ptr [ebp-8]
 004D3104    mov         edx,dword ptr [ebp-4]
 004D3107    mov         dword ptr [edx+40],eax
 004D310A    mov         eax,dword ptr [ebp-0C]
 004D310D    mov         edx,dword ptr [ebp-4]
 004D3110    mov         dword ptr [edx+44],eax
 004D3113    mov         eax,dword ptr [ebp+0C]
 004D3116    mov         edx,dword ptr [ebp-4]
 004D3119    mov         dword ptr [edx+48],eax
 004D311C    mov         eax,dword ptr [ebp+8]
 004D311F    mov         edx,dword ptr [ebp-4]
 004D3122    mov         dword ptr [edx+4C],eax
 004D3125    mov         eax,dword ptr [ebp-4]
 004D3128    call        TWinControl.HandleAllocated
 004D312D    test        al,al
>004D312F    je          004D3173
 004D3131    mov         dword ptr [ebp-38],2C
 004D3138    lea         eax,[ebp-38]
 004D313B    push        eax
 004D313C    mov         eax,dword ptr [ebp-4]
 004D313F    mov         eax,dword ptr [eax+180]
 004D3145    push        eax
 004D3146    call        user32.GetWindowPlacement
 004D314B    lea         edx,[ebp-48]
 004D314E    mov         eax,dword ptr [ebp-4]
 004D3151    call        004CA6AC
 004D3156    lea         esi,[ebp-48]
 004D3159    lea         edi,[ebp-1C]
 004D315C    movs        dword ptr [edi],dword ptr [esi]
 004D315D    movs        dword ptr [edi],dword ptr [esi]
 004D315E    movs        dword ptr [edi],dword ptr [esi]
 004D315F    movs        dword ptr [edi],dword ptr [esi]
 004D3160    lea         eax,[ebp-38]
 004D3163    push        eax
 004D3164    mov         eax,dword ptr [ebp-4]
 004D3167    mov         eax,dword ptr [eax+180]
 004D316D    push        eax
 004D316E    call        user32.SetWindowPlacement
 004D3173    mov         eax,dword ptr [ebp-4]
 004D3176    call        004CA1E0
 004D317B    mov         eax,dword ptr [ebp-4]
 004D317E    mov         si,0FFD0
 004D3182    call        @CallDynaInst
 004D3187    pop         edi
 004D3188    pop         esi
 004D3189    mov         esp,ebp
 004D318B    pop         ebp
 004D318C    ret         8
*}
end;

//004D3190
{*procedure sub_004D3190(?:TWinControl; ?:?; ?:Integer);
begin
 004D3190    push        ebp
 004D3191    mov         ebp,esp
 004D3193    add         esp,0FFFFFFEC
 004D3196    push        esi
 004D3197    mov         dword ptr [ebp-0C],ecx
 004D319A    mov         dword ptr [ebp-8],edx
 004D319D    mov         dword ptr [ebp-4],eax
 004D31A0    mov         eax,dword ptr [ebp-4]
 004D31A3    call        004CF618
 004D31A8    dec         eax
 004D31A9    test        eax,eax
>004D31AB    jl          004D31DA
 004D31AD    inc         eax
 004D31AE    mov         dword ptr [ebp-14],eax
 004D31B1    mov         dword ptr [ebp-10],0
 004D31B8    mov         edx,dword ptr [ebp-10]
 004D31BB    mov         eax,dword ptr [ebp-4]
 004D31BE    call        004CF5AC
 004D31C3    mov         ecx,dword ptr [ebp-0C]
 004D31C6    mov         edx,dword ptr [ebp-8]
 004D31C9    mov         si,0FFEC
 004D31CD    call        @CallDynaInst
 004D31D2    inc         dword ptr [ebp-10]
 004D31D5    dec         dword ptr [ebp-14]
>004D31D8    jne         004D31B8
 004D31DA    pop         esi
 004D31DB    mov         esp,ebp
 004D31DD    pop         ebp
 004D31DE    ret
end;*}

//004D31E0
{*procedure TWinControl.sub_004CAA18(?:?; ?:?);
begin
 004D31E0    push        ebp
 004D31E1    mov         ebp,esp
 004D31E3    add         esp,0FFFFFFF4
 004D31E6    mov         dword ptr [ebp-0C],ecx
 004D31E9    mov         dword ptr [ebp-8],edx
 004D31EC    mov         dword ptr [ebp-4],eax
 004D31EF    mov         eax,dword ptr [ebp-4]
 004D31F2    call        TWinControl.DisableAlign
 004D31F7    xor         eax,eax
 004D31F9    push        ebp
 004D31FA    push        4D3294
 004D31FF    push        dword ptr fs:[eax]
 004D3202    mov         dword ptr fs:[eax],esp
 004D3205    mov         ecx,dword ptr [ebp-0C]
 004D3208    mov         edx,dword ptr [ebp-8]
 004D320B    mov         eax,dword ptr [ebp-4]
 004D320E    call        004D3190
 004D3213    mov         eax,dword ptr [ebp-8]
 004D3216    cmp         eax,dword ptr [ebp-0C]
>004D3219    je          004D3270
 004D321B    mov         eax,dword ptr [ebp-4]
 004D321E    test        byte ptr [eax+1C],2;TWinControl.FComponentState:TComponentState
>004D3222    je          004D3270
 004D3224    mov         eax,dword ptr [ebp-4]
 004D3227    test        byte ptr [eax+98],20;TWinControl.FScalingFlags:TScalingFlags
>004D322E    je          004D3270
 004D3230    mov         eax,dword ptr [ebp-0C]
 004D3233    push        eax
 004D3234    mov         eax,dword ptr [ebp-8]
 004D3237    push        eax
 004D3238    mov         eax,dword ptr [ebp-4]
 004D323B    mov         eax,dword ptr [eax+1FA];TWinControl.FDesignSize:TPoint
 004D3241    push        eax
 004D3242    call        kernel32.MulDiv
 004D3247    mov         edx,dword ptr [ebp-4]
 004D324A    mov         dword ptr [edx+1FA],eax;TWinControl.FDesignSize:TPoint
 004D3250    mov         eax,dword ptr [ebp-0C]
 004D3253    push        eax
 004D3254    mov         eax,dword ptr [ebp-8]
 004D3257    push        eax
 004D3258    mov         eax,dword ptr [ebp-4]
 004D325B    mov         eax,dword ptr [eax+1FE]
 004D3261    push        eax
 004D3262    call        kernel32.MulDiv
 004D3267    mov         edx,dword ptr [ebp-4]
 004D326A    mov         dword ptr [edx+1FE],eax
 004D3270    mov         ecx,dword ptr [ebp-0C]
 004D3273    mov         edx,dword ptr [ebp-8]
 004D3276    mov         eax,dword ptr [ebp-4]
 004D3279    call        TControl.sub_004CAA18
 004D327E    xor         eax,eax
 004D3280    pop         edx
 004D3281    pop         ecx
 004D3282    pop         ecx
 004D3283    mov         dword ptr fs:[eax],edx
 004D3286    push        4D329B
 004D328B    mov         eax,dword ptr [ebp-4]
 004D328E    call        TWinControl.EnableAlign
 004D3293    ret
>004D3294    jmp         @HandleFinally
>004D3299    jmp         004D328B
 004D329B    mov         esp,ebp
 004D329D    pop         ebp
 004D329E    ret
end;*}

//004D32A0
{*procedure sub_004D32A0(?:TScrollingWinControl; ?:?; ?:?);
begin
 004D32A0    push        ebp
 004D32A1    mov         ebp,esp
 004D32A3    add         esp,0FFFFFFE4
 004D32A6    mov         dword ptr [ebp-0C],ecx
 004D32A9    mov         dword ptr [ebp-8],edx
 004D32AC    mov         dword ptr [ebp-4],eax
 004D32AF    mov         eax,dword ptr [ebp-4]
 004D32B2    cmp         dword ptr [eax+180],0
>004D32B9    je          004D32CE
 004D32BB    mov         eax,dword ptr [ebp-4]
 004D32BE    mov         eax,dword ptr [eax+180]
 004D32C4    push        eax
 004D32C5    call        user32.IsWindowVisible
 004D32CA    test        eax,eax
>004D32CC    jne         004D32D2
 004D32CE    xor         eax,eax
>004D32D0    jmp         004D32D4
 004D32D2    mov         al,1
 004D32D4    mov         byte ptr [ebp-0D],al
 004D32D7    cmp         byte ptr [ebp-0D],0
>004D32DB    je          004D32F8
 004D32DD    push        0
 004D32DF    push        0
 004D32E1    mov         eax,dword ptr [ebp-0C]
 004D32E4    push        eax
 004D32E5    mov         eax,dword ptr [ebp-8]
 004D32E8    push        eax
 004D32E9    mov         eax,dword ptr [ebp-4]
 004D32EC    mov         eax,dword ptr [eax+180]
 004D32F2    push        eax
 004D32F3    call        user32.ScrollWindow
 004D32F8    mov         eax,dword ptr [ebp-4]
 004D32FB    call        004CF618
 004D3300    dec         eax
 004D3301    test        eax,eax
>004D3303    jl          004D339B
 004D3309    inc         eax
 004D330A    mov         dword ptr [ebp-1C],eax
 004D330D    mov         dword ptr [ebp-14],0
 004D3314    mov         edx,dword ptr [ebp-14]
 004D3317    mov         eax,dword ptr [ebp-4]
 004D331A    call        004CF5AC
 004D331F    mov         dword ptr [ebp-18],eax
 004D3322    mov         eax,dword ptr [ebp-18]
 004D3325    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004D332B    call        @IsClass
 004D3330    test        al,al
>004D3332    je          004D3340
 004D3334    mov         eax,dword ptr [ebp-18]
 004D3337    cmp         dword ptr [eax+180],0
>004D333E    jne         004D3354
 004D3340    mov         eax,dword ptr [ebp-8]
 004D3343    mov         edx,dword ptr [ebp-18]
 004D3346    add         dword ptr [edx+40],eax
 004D3349    mov         eax,dword ptr [ebp-0C]
 004D334C    mov         edx,dword ptr [ebp-18]
 004D334F    add         dword ptr [edx+44],eax
>004D3352    jmp         004D338F
 004D3354    cmp         byte ptr [ebp-0D],0
>004D3358    jne         004D338F
 004D335A    push        14
 004D335C    mov         eax,dword ptr [ebp-18]
 004D335F    mov         eax,dword ptr [eax+4C]
 004D3362    push        eax
 004D3363    mov         eax,dword ptr [ebp-18]
 004D3366    mov         eax,dword ptr [eax+48]
 004D3369    push        eax
 004D336A    mov         eax,dword ptr [ebp-18]
 004D336D    mov         eax,dword ptr [eax+44]
 004D3370    add         eax,dword ptr [ebp-0C]
 004D3373    push        eax
 004D3374    mov         eax,dword ptr [ebp-18]
 004D3377    mov         eax,dword ptr [eax+40]
 004D337A    add         eax,dword ptr [ebp-8]
 004D337D    push        eax
 004D337E    push        0
 004D3380    mov         eax,dword ptr [ebp-18]
 004D3383    mov         eax,dword ptr [eax+180]
 004D3389    push        eax
 004D338A    call        user32.SetWindowPos
 004D338F    inc         dword ptr [ebp-14]
 004D3392    dec         dword ptr [ebp-1C]
>004D3395    jne         004D3314
 004D339B    mov         eax,dword ptr [ebp-4]
 004D339E    call        004CF09C
 004D33A3    mov         esp,ebp
 004D33A5    pop         ebp
 004D33A6    ret
end;*}

//004D33A8
{*procedure sub_004D33A8(?:?);
begin
 004D33A8    push        ebp
 004D33A9    mov         ebp,esp
 004D33AB    add         esp,0FFFFFFF8
 004D33AE    mov         dword ptr [ebp-8],edx
 004D33B1    mov         dword ptr [ebp-4],eax
 004D33B4    mov         eax,dword ptr [ebp-4]
 004D33B7    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D33BB    je          004D33CE
 004D33BD    mov         edx,dword ptr [ebp-4]
 004D33C0    mov         eax,dword ptr [ebp-4]
 004D33C3    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D33C6    mov         ecx,dword ptr [eax]
 004D33C8    call        dword ptr [ecx+0C0];TWinControl.sub_004D33A8
 004D33CE    pop         ecx
 004D33CF    pop         ecx
 004D33D0    pop         ebp
 004D33D1    ret
end;*}

//004D33D4
{*procedure sub_004D33D4(?:TWinControl; ?:?);
begin
 004D33D4    push        ebp
 004D33D5    mov         ebp,esp
 004D33D7    add         esp,0FFFFFFEC
 004D33DA    mov         dword ptr [ebp-8],edx
 004D33DD    mov         dword ptr [ebp-4],eax
 004D33E0    mov         eax,dword ptr [ebp-4]
 004D33E3    cmp         dword ptr [eax+30],0
>004D33E7    je          004D352D
 004D33ED    mov         eax,dword ptr [ebp-4]
 004D33F0    mov         eax,dword ptr [eax+30]
 004D33F3    cmp         dword ptr [eax+198],0
>004D33FA    je          004D340E
 004D33FC    mov         eax,dword ptr [ebp-4]
 004D33FF    mov         eax,dword ptr [eax+30]
 004D3402    mov         eax,dword ptr [eax+198]
 004D3408    mov         eax,dword ptr [eax+8]
 004D340B    sub         dword ptr [ebp-8],eax
 004D340E    mov         eax,dword ptr [ebp-4]
 004D3411    mov         eax,dword ptr [eax+30]
 004D3414    mov         eax,dword ptr [eax+19C]
 004D341A    mov         edx,dword ptr [ebp-4]
 004D341D    call        00478890
 004D3422    mov         dword ptr [ebp-0C],eax
 004D3425    cmp         dword ptr [ebp-0C],0
>004D3429    jl          004D348A
 004D342B    mov         eax,dword ptr [ebp-4]
 004D342E    mov         eax,dword ptr [eax+30]
 004D3431    mov         eax,dword ptr [eax+19C]
 004D3437    mov         eax,dword ptr [eax+8]
 004D343A    mov         dword ptr [ebp-10],eax
 004D343D    cmp         dword ptr [ebp-8],0
>004D3441    jge         004D3448
 004D3443    xor         eax,eax
 004D3445    mov         dword ptr [ebp-8],eax
 004D3448    mov         eax,dword ptr [ebp-8]
 004D344B    cmp         eax,dword ptr [ebp-10]
>004D344E    jl          004D3457
 004D3450    mov         eax,dword ptr [ebp-10]
 004D3453    dec         eax
 004D3454    mov         dword ptr [ebp-8],eax
 004D3457    mov         eax,dword ptr [ebp-8]
 004D345A    cmp         eax,dword ptr [ebp-0C]
>004D345D    je          004D348A
 004D345F    mov         eax,dword ptr [ebp-4]
 004D3462    mov         eax,dword ptr [eax+30]
 004D3465    mov         eax,dword ptr [eax+19C]
 004D346B    mov         edx,dword ptr [ebp-0C]
 004D346E    call        00478668
 004D3473    mov         eax,dword ptr [ebp-4]
 004D3476    mov         eax,dword ptr [eax+30]
 004D3479    mov         eax,dword ptr [eax+19C]
 004D347F    mov         ecx,dword ptr [ebp-4]
 004D3482    mov         edx,dword ptr [ebp-8]
 004D3485    call        004788DC
 004D348A    mov         eax,dword ptr [ebp-4]
 004D348D    cmp         dword ptr [eax+180],0
>004D3494    je          004D352D
 004D349A    cmp         dword ptr [ebp-8],0
>004D349E    jne         004D34A9
 004D34A0    mov         dword ptr [ebp-14],1
>004D34A7    jmp         004D3510
 004D34A9    mov         eax,dword ptr [ebp-4]
 004D34AC    mov         eax,dword ptr [eax+30]
 004D34AF    mov         eax,dword ptr [eax+19C]
 004D34B5    mov         eax,dword ptr [eax+8]
 004D34B8    dec         eax
 004D34B9    cmp         eax,dword ptr [ebp-8]
>004D34BC    jne         004D34C5
 004D34BE    xor         eax,eax
 004D34C0    mov         dword ptr [ebp-14],eax
>004D34C3    jmp         004D3510
 004D34C5    mov         eax,dword ptr [ebp-8]
 004D34C8    cmp         eax,dword ptr [ebp-0C]
>004D34CB    jle         004D34EC
 004D34CD    mov         edx,dword ptr [ebp-8]
 004D34D0    inc         edx
 004D34D1    mov         eax,dword ptr [ebp-4]
 004D34D4    mov         eax,dword ptr [eax+30]
 004D34D7    mov         eax,dword ptr [eax+19C]
 004D34DD    call        TList.Get
 004D34E2    call        TWinControl.GetHandle
 004D34E7    mov         dword ptr [ebp-14],eax
>004D34EA    jmp         004D3510
 004D34EC    mov         eax,dword ptr [ebp-8]
 004D34EF    cmp         eax,dword ptr [ebp-0C]
>004D34F2    jge         004D352D
 004D34F4    mov         eax,dword ptr [ebp-4]
 004D34F7    mov         eax,dword ptr [eax+30]
 004D34FA    mov         eax,dword ptr [eax+19C]
 004D3500    mov         edx,dword ptr [ebp-8]
 004D3503    call        TList.Get
 004D3508    call        TWinControl.GetHandle
 004D350D    mov         dword ptr [ebp-14],eax
 004D3510    push        3
 004D3512    push        0
 004D3514    push        0
 004D3516    push        0
 004D3518    push        0
 004D351A    mov         eax,dword ptr [ebp-14]
 004D351D    push        eax
 004D351E    mov         eax,dword ptr [ebp-4]
 004D3521    mov         eax,dword ptr [eax+180]
 004D3527    push        eax
 004D3528    call        user32.SetWindowPos
 004D352D    mov         esp,ebp
 004D352F    pop         ebp
 004D3530    ret
end;*}

//004D3534
{*procedure TWinControl.sub_004CB4B4(?:?);
begin
 004D3534    push        ebp
 004D3535    mov         ebp,esp
 004D3537    add         esp,0FFFFFFF0
 004D353A    mov         byte ptr [ebp-5],dl
 004D353D    mov         dword ptr [ebp-4],eax
 004D3540    mov         eax,dword ptr [ebp-4]
 004D3543    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D3547    je          004D359F
 004D3549    cmp         byte ptr [ebp-5],0
>004D354D    je          004D3564
 004D354F    mov         eax,dword ptr [ebp-4]
 004D3552    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D3555    mov         eax,dword ptr [eax+19C];TWinControl.FWinControls:TList
 004D355B    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D355E    dec         eax
 004D355F    mov         dword ptr [ebp-0C],eax
>004D3562    jmp         004D3569
 004D3564    xor         eax,eax
 004D3566    mov         dword ptr [ebp-0C],eax
 004D3569    xor         eax,eax
 004D356B    mov         dword ptr [ebp-10],eax
 004D356E    mov         eax,dword ptr [ebp-4]
 004D3571    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D3574    cmp         dword ptr [eax+198],0;TWinControl.FControls:TList
>004D357B    je          004D358F
 004D357D    mov         eax,dword ptr [ebp-4]
 004D3580    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D3583    mov         eax,dword ptr [eax+198];TWinControl.FControls:TList
 004D3589    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D358C    mov         dword ptr [ebp-10],eax
 004D358F    mov         edx,dword ptr [ebp-10]
 004D3592    add         edx,dword ptr [ebp-0C]
 004D3595    mov         eax,dword ptr [ebp-4]
 004D3598    call        004D33D4
>004D359D    jmp         004D35D2
 004D359F    mov         eax,dword ptr [ebp-4]
 004D35A2    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>004D35A9    je          004D35D2
 004D35AB    push        3
 004D35AD    push        0
 004D35AF    push        0
 004D35B1    push        0
 004D35B3    push        0
 004D35B5    xor         eax,eax
 004D35B7    mov         al,byte ptr [ebp-5]
 004D35BA    movzx       eax,word ptr [eax*2+541744]
 004D35C2    push        eax
 004D35C3    mov         eax,dword ptr [ebp-4]
 004D35C6    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D35CC    push        eax
 004D35CD    call        user32.SetWindowPos
 004D35D2    mov         esp,ebp
 004D35D4    pop         ebp
 004D35D5    ret
end;*}

//004D35D8
{*function sub_004D35D8(?:?):?;
begin
 004D35D8    push        ebp
 004D35D9    mov         ebp,esp
 004D35DB    add         esp,0FFFFFFF4
 004D35DE    mov         dword ptr [ebp-8],edx
 004D35E1    mov         dword ptr [ebp-4],eax
 004D35E4    mov         eax,dword ptr [ebp-4]
 004D35E7    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D35EB    je          004D3604
 004D35ED    push        12
 004D35EF    push        0
 004D35F1    mov         eax,dword ptr [ebp-4]
 004D35F4    call        TWinControl.GetHandle
 004D35F9    push        eax
 004D35FA    call        user32.GetDCEx
 004D35FF    mov         dword ptr [ebp-0C],eax
>004D3602    jmp         004D3615
 004D3604    mov         eax,dword ptr [ebp-4]
 004D3607    call        TWinControl.GetHandle
 004D360C    push        eax
 004D360D    call        user32.GetDC
 004D3612    mov         dword ptr [ebp-0C],eax
 004D3615    cmp         dword ptr [ebp-0C],0
>004D3619    jne         004D3632
 004D361B    mov         ecx,dword ptr ds:[55B488];^SWindowDCError:TResStringRec
 004D3621    mov         dl,1
 004D3623    mov         eax,[00475904];EOutOfResources
 004D3628    call        Exception.Create;EOutOfResources.Create
 004D362D    call        @RaiseExcept
 004D3632    mov         eax,dword ptr [ebp-8]
 004D3635    mov         edx,dword ptr [ebp-4]
 004D3638    mov         edx,dword ptr [edx+180];TWinControl.FHandle:HWND
 004D363E    mov         dword ptr [eax],edx
 004D3640    mov         eax,dword ptr [ebp-0C]
 004D3643    mov         esp,ebp
 004D3645    pop         ebp
 004D3646    ret
end;*}

//004D3648
procedure sub_004D3648;
begin
{*
 004D3648    push        ebp
 004D3649    mov         ebp,esp
 004D364B    push        ecx
 004D364C    mov         dword ptr [ebp-4],eax
 004D364F    push        0
 004D3651    xor         ecx,ecx
 004D3653    mov         edx,0B034
 004D3658    mov         eax,dword ptr [ebp-4]
 004D365B    call        004CC7DC
 004D3660    pop         ecx
 004D3661    pop         ebp
 004D3662    ret
*}
end;

//004D3664
{*procedure TWinControl.CMInvalidate(?:?);
begin
 004D3664    push        ebp
 004D3665    mov         ebp,esp
 004D3667    add         esp,0FFFFFFF0
 004D366A    mov         dword ptr [ebp-8],edx
 004D366D    mov         dword ptr [ebp-4],eax
 004D3670    mov         eax,dword ptr [ebp-4]
 004D3673    call        TWinControl.HandleAllocated
 004D3678    test        al,al
>004D367A    je          004D371A
 004D3680    mov         eax,dword ptr [ebp-4]
 004D3683    cmp         dword ptr [eax+30],0;TWinControl.FParent:TWinControl
>004D3687    je          004D36A0
 004D3689    push        0
 004D368B    mov         ecx,1
 004D3690    mov         edx,0B034
 004D3695    mov         eax,dword ptr [ebp-4]
 004D3698    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D369B    call        004CC7DC
 004D36A0    mov         eax,dword ptr [ebp-8]
 004D36A3    cmp         dword ptr [eax+4],0
>004D36A7    jne         004D371A
 004D36A9    mov         eax,dword ptr [ebp-4]
 004D36AC    test        byte ptr [eax+50],40;TWinControl.FControlStyle:TControlStyle
 004D36B0    setne       al
 004D36B3    xor         al,1
 004D36B5    neg         al
 004D36B7    sbb         eax,eax
 004D36B9    push        eax
 004D36BA    push        0
 004D36BC    mov         eax,dword ptr [ebp-4]
 004D36BF    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D36C5    push        eax
 004D36C6    call        user32.InvalidateRect
 004D36CB    call        ThemeServices
 004D36D0    call        TThemeServices.GetThemesEnabled
 004D36D5    test        al,al
>004D36D7    je          004D371A
 004D36D9    mov         eax,dword ptr [ebp-4]
 004D36DC    call        004CF618
 004D36E1    dec         eax
 004D36E2    test        eax,eax
>004D36E4    jl          004D371A
 004D36E6    inc         eax
 004D36E7    mov         dword ptr [ebp-10],eax
 004D36EA    mov         dword ptr [ebp-0C],0
 004D36F1    mov         edx,dword ptr [ebp-0C]
 004D36F4    mov         eax,dword ptr [ebp-4]
 004D36F7    call        004CF5AC
 004D36FC    test        byte ptr [eax+52],4
>004D3700    je          004D3712
 004D3702    mov         edx,dword ptr [ebp-0C]
 004D3705    mov         eax,dword ptr [ebp-4]
 004D3708    call        004CF5AC
 004D370D    mov         edx,dword ptr [eax]
 004D370F    call        dword ptr [edx+7C]
 004D3712    inc         dword ptr [ebp-0C]
 004D3715    dec         dword ptr [ebp-10]
>004D3718    jne         004D36F1
 004D371A    mov         esp,ebp
 004D371C    pop         ebp
 004D371D    ret
end;*}

//004D3720
procedure sub_004D3720;
begin
{*
 004D3720    push        ebp
 004D3721    mov         ebp,esp
 004D3723    push        ecx
 004D3724    mov         dword ptr [ebp-4],eax
 004D3727    mov         eax,dword ptr [ebp-4]
 004D372A    call        TWinControl.HandleAllocated
 004D372F    test        al,al
>004D3731    je          004D3742
 004D3733    mov         eax,dword ptr [ebp-4]
 004D3736    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D373C    push        eax
 004D373D    call        user32.UpdateWindow
 004D3742    pop         ecx
 004D3743    pop         ebp
 004D3744    ret
*}
end;

//004D3748
procedure sub_004D3748;
begin
{*
 004D3748    push        ebp
 004D3749    mov         ebp,esp
 004D374B    push        ecx
 004D374C    mov         dword ptr [ebp-4],eax
 004D374F    mov         eax,dword ptr [ebp-4]
 004D3752    mov         edx,dword ptr [eax]
 004D3754    call        dword ptr [edx+7C];TWinControl.sub_004D3648
 004D3757    mov         eax,dword ptr [ebp-4]
 004D375A    mov         edx,dword ptr [eax]
 004D375C    call        dword ptr [edx+88];TWinControl.sub_004D3720
 004D3762    pop         ecx
 004D3763    pop         ebp
 004D3764    ret
*}
end;

//004D3768
procedure sub_004D3768(?:TWinControl);
begin
{*
 004D3768    push        ebp
 004D3769    mov         ebp,esp
 004D376B    add         esp,0FFFFFFEC
 004D376E    mov         dword ptr [ebp-4],eax
 004D3771    lea         edx,[ebp-14]
 004D3774    mov         eax,dword ptr [ebp-4]
 004D3777    call        004CA6AC
 004D377C    push        1
 004D377E    push        1
 004D3780    lea         eax,[ebp-14]
 004D3783    push        eax
 004D3784    call        user32.InflateRect
 004D3789    push        0FF
 004D378B    lea         eax,[ebp-14]
 004D378E    push        eax
 004D378F    mov         eax,dword ptr [ebp-4]
 004D3792    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D3795    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D379B    push        eax
 004D379C    call        user32.InvalidateRect
 004D37A1    mov         esp,ebp
 004D37A3    pop         ebp
 004D37A4    ret
*}
end;

//004D37A8
procedure TWinControl.sub_004D37A8;
begin
{*
 004D37A8    push        ebp
 004D37A9    mov         ebp,esp
 004D37AB    add         esp,0FFFFFFF0
 004D37AE    mov         dword ptr [ebp-4],eax
 004D37B1    mov         byte ptr [ebp-5],0
 004D37B5    mov         eax,dword ptr [ebp-4]
 004D37B8    call        004E7ED8
 004D37BD    mov         dword ptr [ebp-10],eax
 004D37C0    cmp         dword ptr [ebp-10],0
>004D37C4    je          004D37FE
 004D37C6    mov         eax,dword ptr [ebp-4]
 004D37C9    mov         dword ptr [ebp-0C],eax
 004D37CC    mov         eax,dword ptr [ebp-0C]
 004D37CF    cmp         eax,dword ptr [ebp-10]
>004D37D2    je          004D37FA
 004D37D4    mov         eax,dword ptr [ebp-0C]
 004D37D7    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>004D37DB    je          004D37FE
 004D37DD    mov         eax,dword ptr [ebp-0C]
 004D37E0    mov         edx,dword ptr [eax]
 004D37E2    call        dword ptr [edx+50];TImage.GetEnabled
 004D37E5    test        al,al
>004D37E7    je          004D37FE
 004D37E9    mov         eax,dword ptr [ebp-0C]
 004D37EC    mov         eax,dword ptr [eax+30];TWinControl.FParent:TWinControl
 004D37EF    mov         dword ptr [ebp-0C],eax
 004D37F2    mov         eax,dword ptr [ebp-0C]
 004D37F5    cmp         eax,dword ptr [ebp-10]
>004D37F8    jne         004D37D4
 004D37FA    mov         byte ptr [ebp-5],1
 004D37FE    mov         al,byte ptr [ebp-5]
 004D3801    mov         esp,ebp
 004D3803    pop         ebp
 004D3804    ret
*}
end;

//004D3808
procedure sub_004D3808;
begin
{*
 004D3808    push        ebp
 004D3809    mov         ebp,esp
 004D380B    add         esp,0FFFFFFF8
 004D380E    mov         dword ptr [ebp-4],eax
 004D3811    mov         eax,dword ptr [ebp-4]
 004D3814    call        004E7ED8
 004D3819    mov         dword ptr [ebp-8],eax
 004D381C    cmp         dword ptr [ebp-8],0
>004D3820    je          004D382F
 004D3822    mov         edx,dword ptr [ebp-4]
 004D3825    mov         eax,dword ptr [ebp-8]
 004D3828    call        004ECB54
>004D382D    jmp         004D3853
 004D382F    mov         eax,dword ptr [ebp-4]
 004D3832    cmp         dword ptr [eax+190],0;TWinControl.FParentWindow:HWND
>004D3839    je          004D384B
 004D383B    mov         eax,dword ptr [ebp-4]
 004D383E    call        TWinControl.GetHandle
 004D3843    push        eax
 004D3844    call        user32.SetFocus
>004D3849    jmp         004D3853
 004D384B    mov         eax,dword ptr [ebp-4]
 004D384E    call        004E7F1C
 004D3853    pop         ecx
 004D3854    pop         ecx
 004D3855    pop         ebp
 004D3856    ret
*}
end;

//004D3858
procedure TWinControl.sub_004D3858;
begin
{*
 004D3858    push        ebp
 004D3859    mov         ebp,esp
 004D385B    add         esp,0FFFFFFF8
 004D385E    mov         dword ptr [ebp-4],eax
 004D3861    mov         eax,dword ptr [ebp-4]
 004D3864    cmp         dword ptr [eax+180],0;TWinControl.FHandle:HWND
>004D386B    je          004D387D
 004D386D    call        user32.GetFocus
 004D3872    mov         edx,dword ptr [ebp-4]
 004D3875    cmp         eax,dword ptr [edx+180];TWinControl.FHandle:HWND
>004D387B    je          004D3881
 004D387D    xor         eax,eax
>004D387F    jmp         004D3883
 004D3881    mov         al,1
 004D3883    mov         byte ptr [ebp-5],al
 004D3886    mov         al,byte ptr [ebp-5]
 004D3889    pop         ecx
 004D388A    pop         ecx
 004D388B    pop         ebp
 004D388C    ret
*}
end;

//004D3890
procedure sub_004D3890(?:TCustomActionPopupMenu);
begin
{*
 004D3890    push        ebp
 004D3891    mov         ebp,esp
 004D3893    push        ecx
 004D3894    mov         dword ptr [ebp-4],eax
 004D3897    mov         eax,dword ptr [ebp-4]
 004D389A    cmp         dword ptr [eax+180],0
>004D38A1    jne         004D38C2
 004D38A3    mov         eax,dword ptr [ebp-4]
 004D38A6    cmp         dword ptr [eax+30],0
>004D38AA    je          004D38B7
 004D38AC    mov         eax,dword ptr [ebp-4]
 004D38AF    mov         eax,dword ptr [eax+30]
 004D38B2    call        004D3890
 004D38B7    mov         eax,dword ptr [ebp-4]
 004D38BA    mov         edx,dword ptr [eax]
 004D38BC    call        dword ptr [edx+94]
 004D38C2    pop         ecx
 004D38C3    pop         ebp
 004D38C4    ret
*}
end;

//004D38C8
function TWinControl.GetHandle:HWND;
begin
{*
 004D38C8    push        ebp
 004D38C9    mov         ebp,esp
 004D38CB    add         esp,0FFFFFFF8
 004D38CE    mov         dword ptr [ebp-4],eax
 004D38D1    mov         eax,dword ptr [ebp-4]
 004D38D4    call        004D3890
 004D38D9    mov         eax,dword ptr [ebp-4]
 004D38DC    mov         eax,dword ptr [eax+180]
 004D38E2    mov         dword ptr [ebp-8],eax
 004D38E5    mov         eax,dword ptr [ebp-8]
 004D38E8    pop         ecx
 004D38E9    pop         ecx
 004D38EA    pop         ebp
 004D38EB    ret
*}
end;

//004D38EC
{*procedure sub_004D38EC(?:?);
begin
 004D38EC    push        ebp
 004D38ED    mov         ebp,esp
 004D38EF    add         esp,0FFFFFFEC
 004D38F2    mov         dword ptr [ebp-8],edx
 004D38F5    mov         dword ptr [ebp-4],eax
 004D38F8    push        0
 004D38FA    mov         eax,dword ptr [ebp-8]
 004D38FD    push        eax
 004D38FE    xor         ecx,ecx
 004D3900    mov         edx,7FFFFFFF
 004D3905    mov         eax,7FFFFFFF
 004D390A    call        Rect
 004D390F    mov         eax,dword ptr [ebp-4]
 004D3912    call        004CF618
 004D3917    dec         eax
 004D3918    test        eax,eax
>004D391A    jl          004D39E2
 004D3920    inc         eax
 004D3921    mov         dword ptr [ebp-10],eax
 004D3924    mov         dword ptr [ebp-0C],0
 004D392B    mov         edx,dword ptr [ebp-0C]
 004D392E    mov         eax,dword ptr [ebp-4]
 004D3931    call        004CF5AC
 004D3936    mov         dword ptr [ebp-14],eax
 004D3939    mov         eax,dword ptr [ebp-14]
 004D393C    cmp         byte ptr [eax+57],0
>004D3940    jne         004D3958
 004D3942    mov         eax,dword ptr [ebp-14]
 004D3945    test        byte ptr [eax+1C],10
>004D3949    je          004D39D6
 004D394F    mov         eax,dword ptr [ebp-14]
 004D3952    test        byte ptr [eax+51],4
>004D3956    jne         004D39D6
 004D3958    mov         eax,dword ptr [ebp-8]
 004D395B    mov         eax,dword ptr [eax]
 004D395D    mov         edx,dword ptr [ebp-14]
 004D3960    cmp         eax,dword ptr [edx+40]
>004D3963    jle         004D3970
 004D3965    mov         eax,dword ptr [ebp-8]
 004D3968    mov         edx,dword ptr [ebp-14]
 004D396B    mov         edx,dword ptr [edx+40]
 004D396E    mov         dword ptr [eax],edx
 004D3970    mov         eax,dword ptr [ebp-8]
 004D3973    mov         eax,dword ptr [eax+4]
 004D3976    mov         edx,dword ptr [ebp-14]
 004D3979    cmp         eax,dword ptr [edx+44]
>004D397C    jle         004D398A
 004D397E    mov         eax,dword ptr [ebp-8]
 004D3981    mov         edx,dword ptr [ebp-14]
 004D3984    mov         edx,dword ptr [edx+44]
 004D3987    mov         dword ptr [eax+4],edx
 004D398A    mov         eax,dword ptr [ebp-14]
 004D398D    mov         eax,dword ptr [eax+40]
 004D3990    mov         edx,dword ptr [ebp-14]
 004D3993    add         eax,dword ptr [edx+48]
 004D3996    mov         edx,dword ptr [ebp-8]
 004D3999    cmp         eax,dword ptr [edx+8]
>004D399C    jle         004D39B0
 004D399E    mov         eax,dword ptr [ebp-14]
 004D39A1    mov         eax,dword ptr [eax+40]
 004D39A4    mov         edx,dword ptr [ebp-14]
 004D39A7    add         eax,dword ptr [edx+48]
 004D39AA    mov         edx,dword ptr [ebp-8]
 004D39AD    mov         dword ptr [edx+8],eax
 004D39B0    mov         eax,dword ptr [ebp-14]
 004D39B3    mov         eax,dword ptr [eax+44]
 004D39B6    mov         edx,dword ptr [ebp-14]
 004D39B9    add         eax,dword ptr [edx+4C]
 004D39BC    mov         edx,dword ptr [ebp-8]
 004D39BF    cmp         eax,dword ptr [edx+0C]
>004D39C2    jle         004D39D6
 004D39C4    mov         eax,dword ptr [ebp-14]
 004D39C7    mov         eax,dword ptr [eax+44]
 004D39CA    mov         edx,dword ptr [ebp-14]
 004D39CD    add         eax,dword ptr [edx+4C]
 004D39D0    mov         edx,dword ptr [ebp-8]
 004D39D3    mov         dword ptr [edx+0C],eax
 004D39D6    inc         dword ptr [ebp-0C]
 004D39D9    dec         dword ptr [ebp-10]
>004D39DC    jne         004D392B
 004D39E2    mov         esp,ebp
 004D39E4    pop         ebp
 004D39E5    ret
end;*}

//004D39E8
{*procedure sub_004D39E8(?:?);
begin
 004D39E8    push        ebp
 004D39E9    mov         ebp,esp
 004D39EB    add         esp,0FFFFFFF8
 004D39EE    mov         dword ptr [ebp-8],edx
 004D39F1    mov         dword ptr [ebp-4],eax
 004D39F4    mov         eax,dword ptr [ebp-8]
 004D39F7    xor         edx,edx
 004D39F9    mov         dword ptr [eax],edx
 004D39FB    mov         eax,dword ptr [ebp-8]
 004D39FE    xor         edx,edx
 004D3A00    mov         dword ptr [eax+4],edx
 004D3A03    mov         eax,dword ptr [ebp-8]
 004D3A06    push        eax
 004D3A07    mov         eax,dword ptr [ebp-4]
 004D3A0A    call        TWinControl.GetHandle
 004D3A0F    push        eax
 004D3A10    call        user32.ClientToScreen
 004D3A15    pop         ecx
 004D3A16    pop         ecx
 004D3A17    pop         ebp
 004D3A18    ret
end;*}

//004D3A1C
{*procedure sub_004D3A1C(?:?);
begin
 004D3A1C    push        ebp
 004D3A1D    mov         ebp,esp
 004D3A1F    add         esp,0FFFFFFF8
 004D3A22    mov         dword ptr [ebp-8],edx
 004D3A25    mov         dword ptr [ebp-4],eax
 004D3A28    mov         eax,dword ptr [ebp-8]
 004D3A2B    push        eax
 004D3A2C    mov         eax,dword ptr [ebp-4]
 004D3A2F    call        TWinControl.GetHandle
 004D3A34    push        eax
 004D3A35    call        user32.GetClientRect
 004D3A3A    pop         ecx
 004D3A3B    pop         ecx
 004D3A3C    pop         ebp
 004D3A3D    ret
end;*}

//004D3A40
procedure TWinControl.sub_004CDF1C;
begin
{*
 004D3A40    push        ebp
 004D3A41    mov         ebp,esp
 004D3A43    push        ecx
 004D3A44    push        esi
 004D3A45    mov         dword ptr [ebp-4],eax
 004D3A48    mov         eax,dword ptr [ebp-4]
 004D3A4B    test        byte ptr [eax+1C],1;TWinControl.FComponentState:TComponentState
>004D3A4F    jne         004D3A8D
 004D3A51    mov         eax,dword ptr [ebp-4]
 004D3A54    call        TWinControl.HandleAllocated
 004D3A59    test        al,al
>004D3A5B    je          004D3A8D
 004D3A5D    push        16
 004D3A5F    mov         eax,dword ptr [ebp-4]
 004D3A62    mov         eax,dword ptr [eax+4C];TWinControl.Height:Integer
 004D3A65    push        eax
 004D3A66    mov         eax,dword ptr [ebp-4]
 004D3A69    mov         eax,dword ptr [eax+48];TWinControl.Width:Integer
 004D3A6C    push        eax
 004D3A6D    push        0
 004D3A6F    push        0
 004D3A71    push        0
 004D3A73    mov         eax,dword ptr [ebp-4]
 004D3A76    call        TWinControl.GetHandle
 004D3A7B    push        eax
 004D3A7C    call        user32.SetWindowPos
 004D3A81    mov         eax,dword ptr [ebp-4]
 004D3A84    mov         si,0FFD0
 004D3A88    call        @CallDynaInst;TControl.sub_004C9ED8
 004D3A8D    pop         esi
 004D3A8E    pop         ecx
 004D3A8F    pop         ebp
 004D3A90    ret
*}
end;

//004D3A94
procedure TTabSheet.SetBorderWidth(Value:TBorderWidth);
begin
{*
 004D3A94    push        ebp
 004D3A95    mov         ebp,esp
 004D3A97    add         esp,0FFFFFFF8
 004D3A9A    mov         dword ptr [ebp-8],edx
 004D3A9D    mov         dword ptr [ebp-4],eax
 004D3AA0    mov         eax,dword ptr [ebp-4]
 004D3AA3    mov         eax,dword ptr [eax+16C];TTabSheet.FBorderWidth:TBorderWidth
 004D3AA9    cmp         eax,dword ptr [ebp-8]
>004D3AAC    je          004D3ACB
 004D3AAE    mov         eax,dword ptr [ebp-8]
 004D3AB1    mov         edx,dword ptr [ebp-4]
 004D3AB4    mov         dword ptr [edx+16C],eax;TTabSheet.FBorderWidth:TBorderWidth
 004D3ABA    push        0
 004D3ABC    xor         ecx,ecx
 004D3ABE    mov         edx,0B03B
 004D3AC3    mov         eax,dword ptr [ebp-4]
 004D3AC6    call        004CC7DC
 004D3ACB    pop         ecx
 004D3ACC    pop         ecx
 004D3ACD    pop         ebp
 004D3ACE    ret
*}
end;

//004D3AD0
procedure TPanel.SetCtl3D(Value:Boolean);
begin
{*
 004D3AD0    push        ebp
 004D3AD1    mov         ebp,esp
 004D3AD3    add         esp,0FFFFFFF8
 004D3AD6    mov         byte ptr [ebp-5],dl
 004D3AD9    mov         dword ptr [ebp-4],eax
 004D3ADC    mov         eax,dword ptr [ebp-4]
 004D3ADF    mov         al,byte ptr [eax+1A5];TPanel.FCtl3D:Boolean
 004D3AE5    cmp         al,byte ptr [ebp-5]
>004D3AE8    je          004D3B11
 004D3AEA    mov         al,byte ptr [ebp-5]
 004D3AED    mov         edx,dword ptr [ebp-4]
 004D3AF0    mov         byte ptr [edx+1A5],al;TPanel.FCtl3D:Boolean
 004D3AF6    mov         eax,dword ptr [ebp-4]
 004D3AF9    mov         byte ptr [eax+1A9],0;TPanel.FParentCtl3D:Boolean
 004D3B00    push        0
 004D3B02    xor         ecx,ecx
 004D3B04    mov         edx,0B010
 004D3B09    mov         eax,dword ptr [ebp-4]
 004D3B0C    call        004CC7DC
 004D3B11    pop         ecx
 004D3B12    pop         ecx
 004D3B13    pop         ebp
 004D3B14    ret
*}
end;

//004D3B18
function TPanel.IsStoredCtl3D(Value:Boolean):Boolean;
begin
{*
 004D3B18    push        ebp
 004D3B19    mov         ebp,esp
 004D3B1B    add         esp,0FFFFFFF8
 004D3B1E    mov         dword ptr [ebp-4],eax
 004D3B21    mov         eax,dword ptr [ebp-4]
 004D3B24    mov         al,byte ptr [eax+1A9];TPanel.FParentCtl3D:Boolean
 004D3B2A    xor         al,1
 004D3B2C    mov         byte ptr [ebp-5],al
 004D3B2F    mov         al,byte ptr [ebp-5]
 004D3B32    pop         ecx
 004D3B33    pop         ecx
 004D3B34    pop         ebp
 004D3B35    ret
*}
end;

//004D3B38
procedure TPanel.SetParentCtl3D(Value:Boolean);
begin
{*
 004D3B38    push        ebp
 004D3B39    mov         ebp,esp
 004D3B3B    add         esp,0FFFFFFF8
 004D3B3E    mov         byte ptr [ebp-5],dl
 004D3B41    mov         dword ptr [ebp-4],eax
 004D3B44    mov         eax,dword ptr [ebp-4]
 004D3B47    mov         al,byte ptr [eax+1A9];TPanel.FParentCtl3D:Boolean
 004D3B4D    cmp         al,byte ptr [ebp-5]
>004D3B50    je          004D3B81
 004D3B52    mov         al,byte ptr [ebp-5]
 004D3B55    mov         edx,dword ptr [ebp-4]
 004D3B58    mov         byte ptr [edx+1A9],al;TPanel.FParentCtl3D:Boolean
 004D3B5E    mov         eax,dword ptr [ebp-4]
 004D3B61    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>004D3B65    je          004D3B81
 004D3B67    mov         eax,dword ptr [ebp-4]
 004D3B6A    test        byte ptr [eax+1C],2;TPanel.FComponentState:TComponentState
>004D3B6E    jne         004D3B81
 004D3B70    push        0
 004D3B72    xor         ecx,ecx
 004D3B74    mov         edx,0B011
 004D3B79    mov         eax,dword ptr [ebp-4]
 004D3B7C    call        004CC7DC
 004D3B81    pop         ecx
 004D3B82    pop         ecx
 004D3B83    pop         ebp
 004D3B84    ret
*}
end;

//004D3B88
{*function TPanel.GetTabOrder:?;
begin
 004D3B88    push        ebp
 004D3B89    mov         ebp,esp
 004D3B8B    add         esp,0FFFFFFF8
 004D3B8E    mov         dword ptr [ebp-4],eax
 004D3B91    mov         eax,dword ptr [ebp-4]
 004D3B94    cmp         dword ptr [eax+30],0;TPanel.FParent:TWinControl
>004D3B98    je          004D3BB4
 004D3B9A    mov         eax,dword ptr [ebp-4]
 004D3B9D    mov         eax,dword ptr [eax+30];TPanel.FParent:TWinControl
 004D3BA0    mov         eax,dword ptr [eax+194];TWinControl.FTabList:TList
 004D3BA6    mov         edx,dword ptr [ebp-4]
 004D3BA9    call        00478890
 004D3BAE    mov         word ptr [ebp-6],ax
>004D3BB2    jmp         004D3BBA
 004D3BB4    mov         word ptr [ebp-6],0FFFF
 004D3BBA    mov         ax,word ptr [ebp-6]
 004D3BBE    pop         ecx
 004D3BBF    pop         ecx
 004D3BC0    pop         ebp
 004D3BC1    ret
end;*}

//004D3BC4
{*procedure sub_004D3BC4(?:Pointer; ?:?);
begin
 004D3BC4    push        ebp
 004D3BC5    mov         ebp,esp
 004D3BC7    add         esp,0FFFFFFF0
 004D3BCA    mov         word ptr [ebp-6],dx
 004D3BCE    mov         dword ptr [ebp-4],eax
 004D3BD1    mov         eax,dword ptr [ebp-4]
 004D3BD4    call        TPanel.GetTabOrder
 004D3BD9    movsx       eax,ax
 004D3BDC    mov         dword ptr [ebp-0C],eax
 004D3BDF    cmp         dword ptr [ebp-0C],0
>004D3BE3    jl          004D3C4B
 004D3BE5    mov         eax,dword ptr [ebp-4]
 004D3BE8    mov         eax,dword ptr [eax+30]
 004D3BEB    mov         eax,dword ptr [eax+194]
 004D3BF1    mov         eax,dword ptr [eax+8]
 004D3BF4    mov         dword ptr [ebp-10],eax
 004D3BF7    cmp         word ptr [ebp-6],0
>004D3BFC    jge         004D3C04
 004D3BFE    mov         word ptr [ebp-6],0
 004D3C04    movsx       eax,word ptr [ebp-6]
 004D3C08    cmp         eax,dword ptr [ebp-10]
>004D3C0B    jl          004D3C16
 004D3C0D    mov         ax,word ptr [ebp-10]
 004D3C11    dec         eax
 004D3C12    mov         word ptr [ebp-6],ax
 004D3C16    movsx       eax,word ptr [ebp-6]
 004D3C1A    cmp         eax,dword ptr [ebp-0C]
>004D3C1D    je          004D3C4B
 004D3C1F    mov         eax,dword ptr [ebp-4]
 004D3C22    mov         eax,dword ptr [eax+30]
 004D3C25    mov         eax,dword ptr [eax+194]
 004D3C2B    mov         edx,dword ptr [ebp-0C]
 004D3C2E    call        00478668
 004D3C33    movsx       edx,word ptr [ebp-6]
 004D3C37    mov         eax,dword ptr [ebp-4]
 004D3C3A    mov         eax,dword ptr [eax+30]
 004D3C3D    mov         eax,dword ptr [eax+194]
 004D3C43    mov         ecx,dword ptr [ebp-4]
 004D3C46    call        004788DC
 004D3C4B    mov         esp,ebp
 004D3C4D    pop         ebp
 004D3C4E    ret
end;*}

//004D3C50
procedure TPanel.SetTabOrder(Value:TTabOrder);
begin
{*
 004D3C50    push        ebp
 004D3C51    mov         ebp,esp
 004D3C53    add         esp,0FFFFFFF8
 004D3C56    mov         word ptr [ebp-6],dx
 004D3C5A    mov         dword ptr [ebp-4],eax
 004D3C5D    mov         eax,dword ptr [ebp-4]
 004D3C60    test        byte ptr [eax+54],8;TPanel.FControlState:TControlState
>004D3C64    je          004D3C75
 004D3C66    movsx       eax,word ptr [ebp-6]
 004D3C6A    mov         edx,dword ptr [ebp-4]
 004D3C6D    mov         dword ptr [edx+1A0],eax;TPanel.FTabOrder:Integer
>004D3C73    jmp         004D3C81
 004D3C75    mov         dx,word ptr [ebp-6]
 004D3C79    mov         eax,dword ptr [ebp-4]
 004D3C7C    call        004D3BC4
 004D3C81    pop         ecx
 004D3C82    pop         ecx
 004D3C83    pop         ebp
 004D3C84    ret
*}
end;

//004D3C88
procedure TPanel.SetTabStop(Value:Boolean);
begin
{*
 004D3C88    push        ebp
 004D3C89    mov         ebp,esp
 004D3C8B    add         esp,0FFFFFFF4
 004D3C8E    mov         byte ptr [ebp-5],dl
 004D3C91    mov         dword ptr [ebp-4],eax
 004D3C94    mov         eax,dword ptr [ebp-4]
 004D3C97    mov         al,byte ptr [eax+1A4];TPanel.FTabStop:Boolean
 004D3C9D    cmp         al,byte ptr [ebp-5]
>004D3CA0    je          004D3D06
 004D3CA2    mov         al,byte ptr [ebp-5]
 004D3CA5    mov         edx,dword ptr [ebp-4]
 004D3CA8    mov         byte ptr [edx+1A4],al;TPanel.FTabStop:Boolean
 004D3CAE    mov         eax,dword ptr [ebp-4]
 004D3CB1    call        TWinControl.HandleAllocated
 004D3CB6    test        al,al
>004D3CB8    je          004D3CF5
 004D3CBA    push        0F0
 004D3CBC    mov         eax,dword ptr [ebp-4]
 004D3CBF    mov         eax,dword ptr [eax+180];TPanel.FHandle:HWND
 004D3CC5    push        eax
 004D3CC6    call        user32.GetWindowLongA
 004D3CCB    and         eax,0FFFEFFFF
 004D3CD0    mov         dword ptr [ebp-0C],eax
 004D3CD3    cmp         byte ptr [ebp-5],0
>004D3CD7    je          004D3CE0
 004D3CD9    or          dword ptr [ebp-0C],10000
 004D3CE0    mov         eax,dword ptr [ebp-0C]
 004D3CE3    push        eax
 004D3CE4    push        0F0
 004D3CE6    mov         eax,dword ptr [ebp-4]
 004D3CE9    mov         eax,dword ptr [eax+180];TPanel.FHandle:HWND
 004D3CEF    push        eax
 004D3CF0    call        user32.SetWindowLongA
 004D3CF5    push        0
 004D3CF7    xor         ecx,ecx
 004D3CF9    mov         edx,0B028
 004D3CFE    mov         eax,dword ptr [ebp-4]
 004D3D01    call        004CC7DC
 004D3D06    mov         esp,ebp
 004D3D08    pop         ebp
 004D3D09    ret
*}
end;

//004D3D0C
procedure TPanel.SetUseDockManager(Value:Boolean);
begin
{*
 004D3D0C    push        ebp
 004D3D0D    mov         ebp,esp
 004D3D0F    add         esp,0FFFFFFF4
 004D3D12    push        esi
 004D3D13    xor         ecx,ecx
 004D3D15    mov         dword ptr [ebp-0C],ecx
 004D3D18    mov         byte ptr [ebp-5],dl
 004D3D1B    mov         dword ptr [ebp-4],eax
 004D3D1E    xor         eax,eax
 004D3D20    push        ebp
 004D3D21    push        4D3D8C
 004D3D26    push        dword ptr fs:[eax]
 004D3D29    mov         dword ptr fs:[eax],esp
 004D3D2C    mov         eax,dword ptr [ebp-4]
 004D3D2F    mov         al,byte ptr [eax+1A7];TPanel.FUseDockManager:Boolean
 004D3D35    cmp         al,byte ptr [ebp-5]
>004D3D38    je          004D3D76
 004D3D3A    mov         al,byte ptr [ebp-5]
 004D3D3D    mov         edx,dword ptr [ebp-4]
 004D3D40    mov         byte ptr [edx+1A7],al;TPanel.FUseDockManager:Boolean
 004D3D46    mov         eax,dword ptr [ebp-4]
 004D3D49    test        byte ptr [eax+1C],10;TPanel.FComponentState:TComponentState
 004D3D4D    setne       al
 004D3D50    xor         al,1
 004D3D52    and         al,byte ptr [ebp-5]
>004D3D55    je          004D3D76
 004D3D57    lea         edx,[ebp-0C]
 004D3D5A    mov         eax,dword ptr [ebp-4]
 004D3D5D    mov         si,0FFC6
 004D3D61    call        @CallDynaInst;TWinControl.sub_004D1D24
 004D3D66    mov         edx,dword ptr [ebp-0C]
 004D3D69    mov         eax,dword ptr [ebp-4]
 004D3D6C    add         eax,17C;TPanel.FDockManager:IDockManager
 004D3D71    call        @IntfCopy
 004D3D76    xor         eax,eax
 004D3D78    pop         edx
 004D3D79    pop         ecx
 004D3D7A    pop         ecx
 004D3D7B    mov         dword ptr fs:[eax],edx
 004D3D7E    push        4D3D93
 004D3D83    lea         eax,[ebp-0C]
 004D3D86    call        @IntfClear
 004D3D8B    ret
>004D3D8C    jmp         @HandleFinally
>004D3D91    jmp         004D3D83
 004D3D93    pop         esi
 004D3D94    mov         esp,ebp
 004D3D96    pop         ebp
 004D3D97    ret
*}
end;

//004D3D98
function TWinControl.HandleAllocated:Boolean;
begin
{*
 004D3D98    push        ebp
 004D3D99    mov         ebp,esp
 004D3D9B    add         esp,0FFFFFFF8
 004D3D9E    mov         dword ptr [ebp-4],eax
 004D3DA1    mov         eax,dword ptr [ebp-4]
 004D3DA4    cmp         dword ptr [eax+180],0
 004D3DAB    setne       byte ptr [ebp-5]
 004D3DAF    mov         al,byte ptr [ebp-5]
 004D3DB2    pop         ecx
 004D3DB3    pop         ecx
 004D3DB4    pop         ebp
 004D3DB5    ret
*}
end;

//004D3DB8
procedure sub_004D3DB8(?:TWinControl);
begin
{*
 004D3DB8    push        ebp
 004D3DB9    mov         ebp,esp
 004D3DBB    add         esp,0FFFFFFBC
 004D3DBE    push        esi
 004D3DBF    push        edi
 004D3DC0    mov         dword ptr [ebp-4],eax
 004D3DC3    mov         eax,dword ptr [ebp-4]
 004D3DC6    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D3DCC    push        eax
 004D3DCD    call        user32.IsIconic
 004D3DD2    test        eax,eax
>004D3DD4    je          004D3DFC
 004D3DD6    mov         dword ptr [ebp-44],2C
 004D3DDD    lea         eax,[ebp-44]
 004D3DE0    push        eax
 004D3DE1    mov         eax,dword ptr [ebp-4]
 004D3DE4    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D3DEA    push        eax
 004D3DEB    call        user32.GetWindowPlacement
 004D3DF0    lea         esi,[ebp-28]
 004D3DF3    lea         edi,[ebp-18]
 004D3DF6    movs        dword ptr [edi],dword ptr [esi]
 004D3DF7    movs        dword ptr [edi],dword ptr [esi]
 004D3DF8    movs        dword ptr [edi],dword ptr [esi]
 004D3DF9    movs        dword ptr [edi],dword ptr [esi]
>004D3DFA    jmp         004D3E0F
 004D3DFC    lea         eax,[ebp-18]
 004D3DFF    push        eax
 004D3E00    mov         eax,dword ptr [ebp-4]
 004D3E03    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D3E09    push        eax
 004D3E0A    call        user32.GetWindowRect
 004D3E0F    push        0F0
 004D3E11    mov         eax,dword ptr [ebp-4]
 004D3E14    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D3E1A    push        eax
 004D3E1B    call        user32.GetWindowLongA
 004D3E20    test        eax,40000000
>004D3E25    je          004D3E5B
 004D3E27    push        0F8
 004D3E29    mov         eax,dword ptr [ebp-4]
 004D3E2C    mov         eax,dword ptr [eax+180];TWinControl.FHandle:HWND
 004D3E32    push        eax
 004D3E33    call        user32.GetWindowLongA
 004D3E38    mov         dword ptr [ebp-8],eax
 004D3E3B    cmp         dword ptr [ebp-8],0
>004D3E3F    je          004D3E5B
 004D3E41    lea         eax,[ebp-18]
 004D3E44    push        eax
 004D3E45    mov         eax,dword ptr [ebp-8]
 004D3E48    push        eax
 004D3E49    call        user32.ScreenToClient
 004D3E4E    lea         eax,[ebp-10]
 004D3E51    push        eax
 004D3E52    mov         eax,dword ptr [ebp-8]
 004D3E55    push        eax
 004D3E56    call        user32.ScreenToClient
 004D3E5B    mov         eax,dword ptr [ebp-18]
 004D3E5E    mov         edx,dword ptr [ebp-4]
 004D3E61    mov         dword ptr [edx+40],eax;TWinControl.Left:Integer
 004D3E64    mov         eax,dword ptr [ebp-14]
 004D3E67    mov         edx,dword ptr [ebp-4]
 004D3E6A    mov         dword ptr [edx+44],eax;TWinControl.Top:Integer
 004D3E6D    mov         eax,dword ptr [ebp-10]
 004D3E70    sub         eax,dword ptr [ebp-18]
 004D3E73    mov         edx,dword ptr [ebp-4]
 004D3E76    mov         dword ptr [edx+48],eax;TWinControl.Width:Integer
 004D3E79    mov         eax,dword ptr [ebp-0C]
 004D3E7C    sub         eax,dword ptr [ebp-14]
 004D3E7F    mov         edx,dword ptr [ebp-4]
 004D3E82    mov         dword ptr [edx+4C],eax;TWinControl.Height:Integer
 004D3E85    mov         eax,dword ptr [ebp-4]
 004D3E88    call        004CA1E0
 004D3E8D    pop         edi
 004D3E8E    pop         esi
 004D3E8F    mov         esp,ebp
 004D3E91    pop         ebp
 004D3E92    ret
*}
end;

//004D3E94
{*procedure TWinControl.sub_004D3E94(?:?);
begin
 004D3E94    push        ebp
 004D3E95    mov         ebp,esp
 004D3E97    add         esp,0FFFFFFEC
 004D3E9A    push        esi
 004D3E9B    mov         dword ptr [ebp-8],edx
 004D3E9E    mov         dword ptr [ebp-4],eax
 004D3EA1    mov         eax,dword ptr [ebp-4]
 004D3EA4    cmp         dword ptr [eax+194],0;TWinControl.FTabList:TList
>004D3EAB    je          004D3EFF
 004D3EAD    mov         eax,dword ptr [ebp-4]
 004D3EB0    mov         eax,dword ptr [eax+194];TWinControl.FTabList:TList
 004D3EB6    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D3EB9    dec         eax
 004D3EBA    test        eax,eax
>004D3EBC    jl          004D3EFF
 004D3EBE    inc         eax
 004D3EBF    mov         dword ptr [ebp-14],eax
 004D3EC2    mov         dword ptr [ebp-0C],0
 004D3EC9    mov         eax,dword ptr [ebp-4]
 004D3ECC    mov         eax,dword ptr [eax+194];TWinControl.FTabList:TList
 004D3ED2    mov         edx,dword ptr [ebp-0C]
 004D3ED5    call        TList.Get
 004D3EDA    mov         dword ptr [ebp-10],eax
 004D3EDD    mov         edx,dword ptr [ebp-10]
 004D3EE0    mov         eax,dword ptr [ebp-8]
 004D3EE3    call        TList.Add
 004D3EE8    mov         edx,dword ptr [ebp-8]
 004D3EEB    mov         eax,dword ptr [ebp-10]
 004D3EEE    mov         si,0FFB4
 004D3EF2    call        @CallDynaInst
 004D3EF7    inc         dword ptr [ebp-0C]
 004D3EFA    dec         dword ptr [ebp-14]
>004D3EFD    jne         004D3EC9
 004D3EFF    pop         esi
 004D3F00    mov         esp,ebp
 004D3F02    pop         ebp
 004D3F03    ret
end;*}

//004D3F04
{*function sub_004D3F04(?:TCustomGroupBox; ?:?; ?:?; ?:?; ?:?):?;
begin
 004D3F04    push        ebp
 004D3F05    mov         ebp,esp
 004D3F07    add         esp,0FFFFFFE4
 004D3F0A    push        esi
 004D3F0B    mov         byte ptr [ebp-9],cl
 004D3F0E    mov         dword ptr [ebp-8],edx
 004D3F11    mov         dword ptr [ebp-4],eax
 004D3F14    xor         eax,eax
 004D3F16    mov         dword ptr [ebp-10],eax
 004D3F19    mov         dl,1
 004D3F1B    mov         eax,[004759C0];TList
 004D3F20    call        TObject.Create;TList.Create
 004D3F25    mov         dword ptr [ebp-1C],eax
 004D3F28    xor         eax,eax
 004D3F2A    push        ebp
 004D3F2B    push        4D401F
 004D3F30    push        dword ptr fs:[eax]
 004D3F33    mov         dword ptr fs:[eax],esp
 004D3F36    mov         edx,dword ptr [ebp-1C]
 004D3F39    mov         eax,dword ptr [ebp-4]
 004D3F3C    mov         si,0FFB4
 004D3F40    call        @CallDynaInst
 004D3F45    mov         eax,dword ptr [ebp-1C]
 004D3F48    cmp         dword ptr [eax+8],0;TList.FCount:Integer
>004D3F4C    jle         004D4009
 004D3F52    mov         edx,dword ptr [ebp-8]
 004D3F55    mov         eax,dword ptr [ebp-1C]
 004D3F58    call        00478890
 004D3F5D    mov         dword ptr [ebp-18],eax
 004D3F60    cmp         dword ptr [ebp-18],0FFFFFFFF
>004D3F64    jne         004D3F7D
 004D3F66    cmp         byte ptr [ebp-9],0
>004D3F6A    je          004D3F78
 004D3F6C    mov         eax,dword ptr [ebp-1C]
 004D3F6F    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D3F72    dec         eax
 004D3F73    mov         dword ptr [ebp-18],eax
>004D3F76    jmp         004D3F7D
 004D3F78    xor         eax,eax
 004D3F7A    mov         dword ptr [ebp-18],eax
 004D3F7D    mov         eax,dword ptr [ebp-18]
 004D3F80    mov         dword ptr [ebp-14],eax
 004D3F83    cmp         byte ptr [ebp-9],0
>004D3F87    je          004D3F9E
 004D3F89    inc         dword ptr [ebp-14]
 004D3F8C    mov         eax,dword ptr [ebp-1C]
 004D3F8F    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D3F92    cmp         eax,dword ptr [ebp-14]
>004D3F95    jne         004D3FB0
 004D3F97    xor         eax,eax
 004D3F99    mov         dword ptr [ebp-14],eax
>004D3F9C    jmp         004D3FB0
 004D3F9E    cmp         dword ptr [ebp-14],0
>004D3FA2    jne         004D3FAD
 004D3FA4    mov         eax,dword ptr [ebp-1C]
 004D3FA7    mov         eax,dword ptr [eax+8];TList.FCount:Integer
 004D3FAA    mov         dword ptr [ebp-14],eax
 004D3FAD    dec         dword ptr [ebp-14]
 004D3FB0    mov         edx,dword ptr [ebp-14]
 004D3FB3    mov         eax,dword ptr [ebp-1C]
 004D3FB6    call        TList.Get
 004D3FBB    mov         dword ptr [ebp-8],eax
 004D3FBE    mov         eax,dword ptr [ebp-8]
 004D3FC1    mov         si,0FFB8
 004D3FC5    call        @CallDynaInst
 004D3FCA    test        al,al
>004D3FCC    je          004D3FF7
 004D3FCE    cmp         byte ptr [ebp+0C],0
>004D3FD2    je          004D3FE0
 004D3FD4    mov         eax,dword ptr [ebp-8]
 004D3FD7    cmp         byte ptr [eax+1A4],0
>004D3FDE    je          004D3FF7
 004D3FE0    cmp         byte ptr [ebp+8],0
>004D3FE4    je          004D3FF1
 004D3FE6    mov         eax,dword ptr [ebp-8]
 004D3FE9    mov         eax,dword ptr [eax+30]
 004D3FEC    cmp         eax,dword ptr [ebp-4]
>004D3FEF    jne         004D3FF7
 004D3FF1    mov         eax,dword ptr [ebp-8]
 004D3FF4    mov         dword ptr [ebp-10],eax
 004D3FF7    cmp         dword ptr [ebp-10],0
>004D3FFB    jne         004D4009
 004D3FFD    mov         eax,dword ptr [ebp-14]
 004D4000    cmp         eax,dword ptr [ebp-18]
>004D4003    jne         004D3F83
 004D4009    xor         eax,eax
 004D400B    pop         edx
 004D400C    pop         ecx
 004D400D    pop         ecx
 004D400E    mov         dword ptr fs:[eax],edx
 004D4011    push        4D4026
 004D4016    mov         eax,dword ptr [ebp-1C]
 004D4019    call        TObject.Free
 004D401E    ret
>004D401F    jmp         @HandleFinally
>004D4024    jmp         004D4016
 004D4026    mov         eax,dword ptr [ebp-10]
 004D4029    pop         esi
 004D402A    mov         esp,ebp
 004D402C    pop         ebp
 004D402D    ret         8
end;*}

//004D4030
{*procedure sub_004D4030(?:TWinControl; ?:TWinControl; ?:?; ?:?);
begin
 004D4030    push        ebp
 004D4031    mov         ebp,esp
 004D4033    add         esp,0FFFFFFF4
 004D4036    mov         byte ptr [ebp-9],cl
 004D4039    mov         dword ptr [ebp-8],edx
 004D403C    mov         dword ptr [ebp-4],eax
 004D403F    mov         al,byte ptr [ebp+8]
 004D4042    push        eax
 004D4043    mov         al,byte ptr [ebp+8]
 004D4046    xor         al,1
 004D4048    push        eax
 004D4049    mov         cl,byte ptr [ebp-9]
 004D404C    mov         edx,dword ptr [ebp-8]
 004D404F    mov         eax,dword ptr [ebp-4]
 004D4052    call        004D3F04
 004D4057    mov         dword ptr [ebp-8],eax
 004D405A    cmp         dword ptr [ebp-8],0
>004D405E    je          004D406B
 004D4060    mov         eax,dword ptr [ebp-8]
 004D4063    mov         edx,dword ptr [eax]
 004D4065    call        dword ptr [edx+0C4]
 004D406B    mov         esp,ebp
 004D406D    pop         ebp
 004D406E    ret         4
end;*}

//004D4074
procedure sub_004D4074(?:TCustomGroupBox);
begin
{*
 004D4074    push        ebp
 004D4075    mov         ebp,esp
 004D4077    add         esp,0FFFFFFF4
 004D407A    mov         dword ptr [ebp-4],eax
 004D407D    mov         eax,dword ptr [ebp-4]
 004D4080    call        004E7ED8
 004D4085    mov         dword ptr [ebp-8],eax
 004D4088    cmp         dword ptr [ebp-8],0
>004D408C    je          004D40CB
 004D408E    push        1
 004D4090    push        0
 004D4092    mov         cl,1
 004D4094    xor         edx,edx
 004D4096    mov         eax,dword ptr [ebp-4]
 004D4099    call        004D3F04
 004D409E    mov         dword ptr [ebp-0C],eax
 004D40A1    cmp         dword ptr [ebp-0C],0
>004D40A5    jne         004D40BA
 004D40A7    push        0
 004D40A9    push        0
 004D40AB    mov         cl,1
 004D40AD    xor         edx,edx
 004D40AF    mov         eax,dword ptr [ebp-4]
 004D40B2    call        004D3F04
 004D40B7    mov         dword ptr [ebp-0C],eax
 004D40BA    cmp         dword ptr [ebp-0C],0
>004D40BE    je          004D40CB
 004D40C0    mov         edx,dword ptr [ebp-0C]
 004D40C3    mov         eax,dword ptr [ebp-8]
 004D40C6    call        TForm.SetActiveControl
 004D40CB    mov         esp,ebp
 004D40CD    pop         ebp
 004D40CE    ret
*}
end;

//004D40D0
{*procedure TWinControl.sub_004834DC(?:?; ?:?);
begin
 004D40D0    push        ebp
 004D40D1    mov         ebp,esp
 004D40D3    add         esp,0FFFFFFEC
 004D40D6    mov         dword ptr [ebp-8],edx
 004D40D9    mov         dword ptr [ebp-4],eax
 004D40DC    mov         eax,dword ptr [ebp-4]
 004D40DF    call        004CF618
 004D40E4    dec         eax
 004D40E5    test        eax,eax
>004D40E7    jl          004D411E
 004D40E9    inc         eax
 004D40EA    mov         dword ptr [ebp-14],eax
 004D40ED    mov         dword ptr [ebp-0C],0
 004D40F4    mov         edx,dword ptr [ebp-0C]
 004D40F7    mov         eax,dword ptr [ebp-4]
 004D40FA    call        004CF5AC
 004D40FF    mov         dword ptr [ebp-10],eax
 004D4102    mov         eax,dword ptr [ebp-10]
 004D4105    mov         eax,dword ptr [eax+4]
 004D4108    cmp         eax,dword ptr [ebp-8]
>004D410B    jne         004D4116
 004D410D    mov         edx,dword ptr [ebp-10]
 004D4110    mov         eax,dword ptr [ebp+0C]
 004D4113    call        dword ptr [ebp+8]
 004D4116    inc         dword ptr [ebp-0C]
 004D4119    dec         dword ptr [ebp-14]
>004D411C    jne         004D40F4
 004D411E    mov         esp,ebp
 004D4120    pop         ebp
 004D4121    ret         8
end;*}

//004D4124
{*procedure TWinControl.sub_0048355C(?:?; ?:?);
begin
 004D4124    push        ebp
 004D4125    mov         ebp,esp
 004D4127    add         esp,0FFFFFFF4
 004D412A    mov         dword ptr [ebp-0C],ecx
 004D412D    mov         dword ptr [ebp-8],edx
 004D4130    mov         dword ptr [ebp-4],eax
 004D4133    mov         eax,dword ptr [ebp-8]
 004D4136    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004D413C    call        @IsClass
 004D4141    test        al,al
>004D4143    je          004D4152
 004D4145    mov         edx,dword ptr [ebp-0C]
 004D4148    mov         eax,dword ptr [ebp-8]
 004D414B    call        004D33D4
>004D4150    jmp         004D416F
 004D4152    mov         eax,dword ptr [ebp-8]
 004D4155    mov         edx,dword ptr ds:[4C5774];TControl
 004D415B    call        @IsClass
 004D4160    test        al,al
>004D4162    je          004D416F
 004D4164    mov         edx,dword ptr [ebp-0C]
 004D4167    mov         eax,dword ptr [ebp-8]
 004D416A    call        004CB3E0
 004D416F    mov         esp,ebp
 004D4171    pop         ebp
 004D4172    ret
end;*}

//004D4174
{*function sub_004D4174(?:?; ?:?):?;
begin
 004D4174    push        ebp
 004D4175    mov         ebp,esp
 004D4177    add         esp,0FFFFFFF0
 004D417A    mov         dword ptr [ebp-0C],ecx
 004D417D    mov         dword ptr [ebp-8],edx
 004D4180    mov         dword ptr [ebp-4],eax
 004D4183    mov         ecx,dword ptr [ebp-0C]
 004D4186    mov         edx,dword ptr [ebp-8]
 004D4189    mov         eax,dword ptr [ebp-4]
 004D418C    call        004CC500
 004D4191    mov         byte ptr [ebp-0D],al
 004D4194    mov         al,byte ptr [ebp-0D]
 004D4197    mov         esp,ebp
 004D4199    pop         ebp
 004D419A    ret
end;*}

//004D419C
{*procedure sub_004D419C(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004D419C    push        ebp
 004D419D    mov         ebp,esp
 004D419F    add         esp,0FFFFFFF4
 004D41A2    push        ebx
 004D41A3    mov         dword ptr [ebp-0C],ecx
 004D41A6    mov         dword ptr [ebp-8],edx
 004D41A9    mov         dword ptr [ebp-4],eax
 004D41AC    mov         eax,dword ptr [ebp-4]
 004D41AF    mov         eax,dword ptr [eax+74]
 004D41B2    cmp         dword ptr [eax+14],0
>004D41B6    jbe         004D41C8
 004D41B8    mov         eax,dword ptr [ebp-4]
 004D41BB    mov         eax,dword ptr [eax+74]
 004D41BE    mov         eax,dword ptr [eax+14]
 004D41C1    mov         edx,dword ptr [ebp-8]
 004D41C4    mov         dword ptr [edx],eax
>004D41C6    jmp         004D41CF
 004D41C8    mov         eax,dword ptr [ebp-8]
 004D41CB    xor         edx,edx
 004D41CD    mov         dword ptr [eax],edx
 004D41CF    mov         eax,dword ptr [ebp-4]
 004D41D2    mov         eax,dword ptr [eax+74]
 004D41D5    cmp         dword ptr [eax+10],0
>004D41D9    jbe         004D41EB
 004D41DB    mov         eax,dword ptr [ebp-4]
 004D41DE    mov         eax,dword ptr [eax+74]
 004D41E1    mov         eax,dword ptr [eax+10]
 004D41E4    mov         edx,dword ptr [ebp-0C]
 004D41E7    mov         dword ptr [edx],eax
>004D41E9    jmp         004D41F2
 004D41EB    mov         eax,dword ptr [ebp-0C]
 004D41EE    xor         edx,edx
 004D41F0    mov         dword ptr [eax],edx
 004D41F2    mov         eax,dword ptr [ebp-4]
 004D41F5    mov         eax,dword ptr [eax+74]
 004D41F8    cmp         dword ptr [eax+0C],0
>004D41FC    jbe         004D420E
 004D41FE    mov         eax,dword ptr [ebp-4]
 004D4201    mov         eax,dword ptr [eax+74]
 004D4204    mov         eax,dword ptr [eax+0C]
 004D4207    mov         edx,dword ptr [ebp+0C]
 004D420A    mov         dword ptr [edx],eax
>004D420C    jmp         004D4215
 004D420E    mov         eax,dword ptr [ebp+0C]
 004D4211    xor         edx,edx
 004D4213    mov         dword ptr [eax],edx
 004D4215    mov         eax,dword ptr [ebp-4]
 004D4218    mov         eax,dword ptr [eax+74]
 004D421B    cmp         dword ptr [eax+8],0
>004D421F    jbe         004D4231
 004D4221    mov         eax,dword ptr [ebp-4]
 004D4224    mov         eax,dword ptr [eax+74]
 004D4227    mov         eax,dword ptr [eax+8]
 004D422A    mov         edx,dword ptr [ebp+8]
 004D422D    mov         dword ptr [edx],eax
>004D422F    jmp         004D4238
 004D4231    mov         eax,dword ptr [ebp+8]
 004D4234    xor         edx,edx
 004D4236    mov         dword ptr [eax],edx
 004D4238    mov         eax,dword ptr [ebp+0C]
 004D423B    push        eax
 004D423C    mov         eax,dword ptr [ebp+8]
 004D423F    push        eax
 004D4240    mov         ecx,dword ptr [ebp-0C]
 004D4243    mov         edx,dword ptr [ebp-8]
 004D4246    mov         eax,dword ptr [ebp-4]
 004D4249    mov         ebx,dword ptr [eax]
 004D424B    call        dword ptr [ebx+38]
 004D424E    pop         ebx
 004D424F    mov         esp,ebp
 004D4251    pop         ebp
 004D4252    ret         8
end;*}

//004D4258
{*procedure sub_004D4258(?:TWinControl; ?:?; ?:?; ?:?; ?:?);
begin
 004D4258    push        ebp
 004D4259    mov         ebp,esp
 004D425B    add         esp,0FFFFFF94
 004D425E    mov         dword ptr [ebp-0C],ecx
 004D4261    mov         dword ptr [ebp-8],edx
 004D4264    mov         dword ptr [ebp-4],eax
 004D4267    mov         eax,dword ptr [ebp-4]
 004D426A    call        TWinControl.HandleAllocated
 004D426F    test        al,al
>004D4271    je          004D468D
 004D4277    mov         eax,dword ptr [ebp-4]
 004D427A    call        004CF618
 004D427F    test        eax,eax
>004D4281    je          004D468D
 004D4287    lea         edx,[ebp-6C]
 004D428A    mov         eax,dword ptr [ebp-4]
 004D428D    mov         ecx,dword ptr [eax]
 004D428F    call        dword ptr [ecx+44]
 004D4292    lea         edx,[ebp-6C]
 004D4295    mov         eax,dword ptr [ebp-4]
 004D4298    mov         ecx,dword ptr [eax]
 004D429A    call        dword ptr [ecx+8C]
 004D42A0    lea         eax,[ebp-6C]
 004D42A3    push        eax
 004D42A4    call        user32.IsRectEmpty
 004D42A9    test        eax,eax
>004D42AB    jne         004D468D
 004D42B1    mov         eax,dword ptr [ebp-4]
 004D42B4    mov         eax,dword ptr [eax+48]
 004D42B7    mov         edx,dword ptr [ebp-64]
 004D42BA    sub         edx,dword ptr [ebp-6C]
 004D42BD    sub         eax,edx
 004D42BF    mov         dword ptr [ebp-10],eax
 004D42C2    mov         eax,dword ptr [ebp-4]
 004D42C5    mov         eax,dword ptr [eax+4C]
 004D42C8    mov         edx,dword ptr [ebp-60]
 004D42CB    sub         edx,dword ptr [ebp-68]
 004D42CE    sub         eax,edx
 004D42D0    mov         dword ptr [ebp-14],eax
 004D42D3    mov         eax,dword ptr [ebp-4]
 004D42D6    mov         eax,dword ptr [eax+48]
 004D42D9    mov         edx,dword ptr [ebp-64]
 004D42DC    sub         edx,dword ptr [ebp-6C]
 004D42DF    sub         eax,edx
 004D42E1    mov         dword ptr [ebp-18],eax
 004D42E4    mov         eax,dword ptr [ebp-4]
 004D42E7    mov         eax,dword ptr [eax+4C]
 004D42EA    mov         edx,dword ptr [ebp-60]
 004D42ED    sub         edx,dword ptr [ebp-68]
 004D42F0    sub         eax,edx
 004D42F2    mov         dword ptr [ebp-1C],eax
 004D42F5    mov         eax,dword ptr [ebp-8]
 004D42F8    cmp         dword ptr [eax],0
>004D42FB    jle         004D4305
 004D42FD    mov         eax,dword ptr [ebp-8]
 004D4300    mov         edx,dword ptr [ebp-10]
 004D4303    sub         dword ptr [eax],edx
 004D4305    mov         eax,dword ptr [ebp-0C]
 004D4308    cmp         dword ptr [eax],0
>004D430B    jle         004D4315
 004D430D    mov         eax,dword ptr [ebp-0C]
 004D4310    mov         edx,dword ptr [ebp-14]
 004D4313    sub         dword ptr [eax],edx
 004D4315    mov         eax,dword ptr [ebp+0C]
 004D4318    cmp         dword ptr [eax],0
>004D431B    jle         004D4325
 004D431D    mov         eax,dword ptr [ebp+0C]
 004D4320    mov         edx,dword ptr [ebp-18]
 004D4323    sub         dword ptr [eax],edx
 004D4325    mov         eax,dword ptr [ebp+8]
 004D4328    cmp         dword ptr [eax],0
>004D432B    jle         004D4335
 004D432D    mov         eax,dword ptr [ebp+8]
 004D4330    mov         edx,dword ptr [ebp-1C]
 004D4333    sub         dword ptr [eax],edx
 004D4335    xor         eax,eax
 004D4337    push        ebp
 004D4338    push        4D4686
 004D433D    push        dword ptr fs:[eax]
 004D4340    mov         dword ptr fs:[eax],esp
 004D4343    xor         eax,eax
 004D4345    mov         dword ptr [ebp-24],eax
 004D4348    xor         eax,eax
 004D434A    mov         dword ptr [ebp-34],eax
 004D434D    xor         eax,eax
 004D434F    mov         dword ptr [ebp-28],eax
 004D4352    xor         eax,eax
 004D4354    mov         dword ptr [ebp-38],eax
 004D4357    xor         eax,eax
 004D4359    mov         dword ptr [ebp-2C],eax
 004D435C    xor         eax,eax
 004D435E    mov         dword ptr [ebp-3C],eax
 004D4361    xor         eax,eax
 004D4363    mov         dword ptr [ebp-30],eax
 004D4366    xor         eax,eax
 004D4368    mov         dword ptr [ebp-40],eax
 004D436B    mov         eax,dword ptr [ebp-4]
 004D436E    call        004CF618
 004D4373    dec         eax
 004D4374    test        eax,eax
>004D4376    jl          004D45B0
 004D437C    inc         eax
 004D437D    mov         dword ptr [ebp-5C],eax
 004D4380    mov         dword ptr [ebp-20],0
 004D4387    mov         edx,dword ptr [ebp-20]
 004D438A    mov         eax,dword ptr [ebp-4]
 004D438D    call        004CF5AC
 004D4392    mov         dword ptr [ebp-54],eax
 004D4395    mov         eax,dword ptr [ebp-54]
 004D4398    cmp         byte ptr [eax+57],0
>004D439C    jne         004D43B8
 004D439E    mov         eax,dword ptr [ebp-54]
 004D43A1    test        byte ptr [eax+1C],10
>004D43A5    je          004D45A4
 004D43AB    mov         eax,dword ptr [ebp-54]
 004D43AE    test        byte ptr [eax+51],4
>004D43B2    jne         004D45A4
 004D43B8    push        ebp
 004D43B9    lea         eax,[ebp-48]
 004D43BC    push        eax
 004D43BD    lea         eax,[ebp-50]
 004D43C0    push        eax
 004D43C1    lea         ecx,[ebp-4C]
 004D43C4    lea         edx,[ebp-44]
 004D43C7    mov         eax,dword ptr [ebp-54]
 004D43CA    call        004D419C
 004D43CF    pop         ecx
 004D43D0    mov         eax,dword ptr [ebp-54]
 004D43D3    mov         al,byte ptr [eax+5B]
 004D43D6    sub         al,1
>004D43D8    jb          004D43F0
 004D43DA    sub         al,2
>004D43DC    jb          004D43E4
 004D43DE    sub         al,2
>004D43E0    je          004D43EA
>004D43E2    jmp         004D4442
 004D43E4    mov         byte ptr [ebp-55],1
>004D43E8    jmp         004D4446
 004D43EA    mov         byte ptr [ebp-55],2
>004D43EE    jmp         004D4446
 004D43F0    mov         eax,dword ptr [ebp-54]
 004D43F3    mov         al,byte ptr [eax+61]
 004D43F6    and         al,byte ptr ds:[4D4694];0x5 gvar_004D4694
 004D43FC    mov         dl,byte ptr ds:[4D4694];0x5 gvar_004D4694
 004D4402    cmp         dl,al
>004D4404    jne         004D443C
 004D4406    mov         byte ptr [ebp-55],1
 004D440A    cmp         dword ptr [ebp-44],0
>004D440E    jle         004D4422
 004D4410    mov         eax,dword ptr [ebp-64]
 004D4413    sub         eax,dword ptr [ebp-6C]
 004D4416    mov         edx,dword ptr [ebp-54]
 004D4419    sub         eax,dword ptr [edx+48]
 004D441C    sub         eax,dword ptr [ebp-44]
 004D441F    mov         dword ptr [ebp-44],eax
 004D4422    cmp         dword ptr [ebp-48],0
>004D4426    jle         004D4446
 004D4428    mov         eax,dword ptr [ebp-64]
 004D442B    sub         eax,dword ptr [ebp-6C]
 004D442E    add         eax,dword ptr [ebp-48]
 004D4431    mov         edx,dword ptr [ebp-54]
 004D4434    sub         eax,dword ptr [edx+48]
 004D4437    mov         dword ptr [ebp-48],eax
>004D443A    jmp         004D4446
 004D443C    mov         byte ptr [ebp-55],0
>004D4440    jmp         004D4446
 004D4442    mov         byte ptr [ebp-55],3
 004D4446    mov         eax,dword ptr [ebp-54]
 004D4449    mov         al,byte ptr [eax+5B]
 004D444C    sub         al,1
>004D444E    jb          004D4466
 004D4450    add         al,0FE
 004D4452    sub         al,2
>004D4454    jb          004D445A
>004D4456    je          004D4460
>004D4458    jmp         004D44B8
 004D445A    mov         byte ptr [ebp-56],1
>004D445E    jmp         004D44BC
 004D4460    mov         byte ptr [ebp-56],2
>004D4464    jmp         004D44BC
 004D4466    mov         eax,dword ptr [ebp-54]
 004D4469    mov         al,byte ptr [eax+61]
 004D446C    and         al,byte ptr ds:[4D4698];0xA gvar_004D4698
 004D4472    mov         dl,byte ptr ds:[4D4698];0xA gvar_004D4698
 004D4478    cmp         dl,al
>004D447A    jne         004D44B2
 004D447C    mov         byte ptr [ebp-56],1
 004D4480    cmp         dword ptr [ebp-4C],0
>004D4484    jle         004D4498
 004D4486    mov         eax,dword ptr [ebp-60]
 004D4489    sub         eax,dword ptr [ebp-68]
 004D448C    mov         edx,dword ptr [ebp-54]
 004D448F    sub         eax,dword ptr [edx+4C]
 004D4492    sub         eax,dword ptr [ebp-4C]
 004D4495    mov         dword ptr [ebp-4C],eax
 004D4498    cmp         dword ptr [ebp-50],0
>004D449C    jle         004D44BC
 004D449E    mov         eax,dword ptr [ebp-60]
 004D44A1    sub         eax,dword ptr [ebp-68]
 004D44A4    add         eax,dword ptr [ebp-50]
 004D44A7    mov         edx,dword ptr [ebp-54]
 004D44AA    sub         eax,dword ptr [edx+4C]
 004D44AD    mov         dword ptr [ebp-50],eax
>004D44B0    jmp         004D44BC
 004D44B2    mov         byte ptr [ebp-56],0
>004D44B6    jmp         004D44BC
 004D44B8    mov         byte ptr [ebp-56],3
 004D44BC    mov         al,byte ptr [ebp-55]
 004D44BF    dec         eax
 004D44C0    sub         al,2
>004D44C2    jb          004D44C8
>004D44C4    je          004D451E
>004D44C6    jmp         004D4530
 004D44C8    cmp         dword ptr [ebp-44],0
>004D44CC    jle         004D44F2
 004D44CE    mov         eax,dword ptr [ebp-8]
 004D44D1    mov         eax,dword ptr [eax]
 004D44D3    cmp         eax,dword ptr [ebp-44]
>004D44D6    jge         004D44F2
 004D44D8    mov         eax,dword ptr [ebp-8]
 004D44DB    mov         edx,dword ptr [ebp-44]
 004D44DE    mov         dword ptr [eax],edx
 004D44E0    mov         eax,dword ptr [ebp-8]
 004D44E3    mov         eax,dword ptr [eax]
 004D44E5    cmp         eax,dword ptr [ebp-24]
>004D44E8    jle         004D44F2
 004D44EA    mov         eax,dword ptr [ebp-8]
 004D44ED    mov         eax,dword ptr [eax]
 004D44EF    mov         dword ptr [ebp-24],eax
 004D44F2    cmp         dword ptr [ebp-48],0
>004D44F6    jle         004D4530
 004D44F8    mov         eax,dword ptr [ebp+0C]
 004D44FB    mov         eax,dword ptr [eax]
 004D44FD    cmp         eax,dword ptr [ebp-48]
>004D4500    jle         004D4530
 004D4502    mov         eax,dword ptr [ebp+0C]
 004D4505    mov         edx,dword ptr [ebp-48]
 004D4508    mov         dword ptr [eax],edx
 004D450A    mov         eax,dword ptr [ebp+0C]
 004D450D    mov         eax,dword ptr [eax]
 004D450F    cmp         eax,dword ptr [ebp-28]
>004D4512    jle         004D4530
 004D4514    mov         eax,dword ptr [ebp+0C]
 004D4517    mov         eax,dword ptr [eax]
 004D4519    mov         dword ptr [ebp-28],eax
>004D451C    jmp         004D4530
 004D451E    mov         eax,dword ptr [ebp-54]
 004D4521    mov         eax,dword ptr [eax+48]
 004D4524    add         dword ptr [ebp-34],eax
 004D4527    mov         eax,dword ptr [ebp-54]
 004D452A    mov         eax,dword ptr [eax+48]
 004D452D    add         dword ptr [ebp-38],eax
 004D4530    mov         al,byte ptr [ebp-56]
 004D4533    dec         eax
 004D4534    sub         al,2
>004D4536    jb          004D453C
>004D4538    je          004D4592
>004D453A    jmp         004D45A4
 004D453C    cmp         dword ptr [ebp-4C],0
>004D4540    jle         004D4566
 004D4542    mov         eax,dword ptr [ebp-0C]
 004D4545    mov         eax,dword ptr [eax]
 004D4547    cmp         eax,dword ptr [ebp-4C]
>004D454A    jge         004D4566
 004D454C    mov         eax,dword ptr [ebp-0C]
 004D454F    mov         edx,dword ptr [ebp-4C]
 004D4552    mov         dword ptr [eax],edx
 004D4554    mov         eax,dword ptr [ebp-0C]
 004D4557    mov         eax,dword ptr [eax]
 004D4559    cmp         eax,dword ptr [ebp-2C]
>004D455C    jle         004D4566
 004D455E    mov         eax,dword ptr [ebp-0C]
 004D4561    mov         eax,dword ptr [eax]
 004D4563    mov         dword ptr [ebp-2C],eax
 004D4566    cmp         dword ptr [ebp-50],0
>004D456A    jle         004D45A4
 004D456C    mov         eax,dword ptr [ebp+8]
 004D456F    mov         eax,dword ptr [eax]
 004D4571    cmp         eax,dword ptr [ebp-50]
>004D4574    jle         004D45A4
 004D4576    mov         eax,dword ptr [ebp+8]
 004D4579    mov         edx,dword ptr [ebp-50]
 004D457C    mov         dword ptr [eax],edx
 004D457E    mov         eax,dword ptr [ebp+8]
 004D4581    mov         eax,dword ptr [eax]
 004D4583    cmp         eax,dword ptr [ebp-30]
>004D4586    jle         004D45A4
 004D4588    mov         eax,dword ptr [ebp+8]
 004D458B    mov         eax,dword ptr [eax]
 004D458D    mov         dword ptr [ebp-30],eax
>004D4590    jmp         004D45A4
 004D4592    mov         eax,dword ptr [ebp-54]
 004D4595    mov         eax,dword ptr [eax+4C]
 004D4598    add         dword ptr [ebp-3C],eax
 004D459B    mov         eax,dword ptr [ebp-54]
 004D459E    mov         eax,dword ptr [eax+4C]
 004D45A1    add         dword ptr [ebp-40],eax
 004D45A4    inc         dword ptr [ebp-20]
 004D45A7    dec         dword ptr [ebp-5C]
>004D45AA    jne         004D4387
 004D45B0    cmp         dword ptr [ebp-24],0
>004D45B4    jle         004D45CE
 004D45B6    mov         eax,dword ptr [ebp-24]
 004D45B9    add         eax,dword ptr [ebp-34]
 004D45BC    mov         edx,dword ptr [ebp-8]
 004D45BF    cmp         eax,dword ptr [edx]
>004D45C1    jle         004D45CE
 004D45C3    mov         eax,dword ptr [ebp-24]
 004D45C6    add         eax,dword ptr [ebp-34]
 004D45C9    mov         edx,dword ptr [ebp-8]
 004D45CC    mov         dword ptr [edx],eax
 004D45CE    cmp         dword ptr [ebp-28],0
>004D45D2    jle         004D45F4
 004D45D4    mov         eax,dword ptr [ebp+0C]
 004D45D7    cmp         dword ptr [eax],0
>004D45DA    je          004D45E9
 004D45DC    mov         eax,dword ptr [ebp-28]
 004D45DF    add         eax,dword ptr [ebp-38]
 004D45E2    mov         edx,dword ptr [ebp+0C]
 004D45E5    cmp         eax,dword ptr [edx]
>004D45E7    jle         004D45F4
 004D45E9    mov         eax,dword ptr [ebp-28]
 004D45EC    add         eax,dword ptr [ebp-38]
 004D45EF    mov         edx,dword ptr [ebp+0C]
 004D45F2    mov         dword ptr [edx],eax
 004D45F4    cmp         dword ptr [ebp-2C],0
>004D45F8    jle         004D4612
 004D45FA    mov         eax,dword ptr [ebp-2C]
 004D45FD    add         eax,dword ptr [ebp-3C]
 004D4600    mov         edx,dword ptr [ebp-0C]
 004D4603    cmp         eax,dword ptr [edx]
>004D4605    jle         004D4612
 004D4607    mov         eax,dword ptr [ebp-2C]
 004D460A    add         eax,dword ptr [ebp-3C]
 004D460D    mov         edx,dword ptr [ebp-0C]
 004D4610    mov         dword ptr [edx],eax
 004D4612    cmp         dword ptr [ebp-30],0
>004D4616    jle         004D4638
 004D4618    mov         eax,dword ptr [ebp+8]
 004D461B    cmp         dword ptr [eax],0
>004D461E    je          004D462D
 004D4620    mov         eax,dword ptr [ebp-30]
 004D4623    add         eax,dword ptr [ebp-40]
 004D4626    mov         edx,dword ptr [ebp+8]
 004D4629    cmp         eax,dword ptr [edx]
>004D462B    jle         004D4638
 004D462D    mov         eax,dword ptr [ebp-30]
 004D4630    add         eax,dword ptr [ebp-40]
 004D4633    mov         edx,dword ptr [ebp+8]
 004D4636    mov         dword ptr [edx],eax
 004D4638    xor         eax,eax
 004D463A    pop         edx
 004D463B    pop         ecx
 004D463C    pop         ecx
 004D463D    mov         dword ptr fs:[eax],edx
 004D4640    push        4D468D
 004D4645    mov         eax,dword ptr [ebp-8]
 004D4648    cmp         dword ptr [eax],0
>004D464B    jle         004D4655
 004D464D    mov         eax,dword ptr [ebp-8]
 004D4650    mov         edx,dword ptr [ebp-10]
 004D4653    add         dword ptr [eax],edx
 004D4655    mov         eax,dword ptr [ebp-0C]
 004D4658    cmp         dword ptr [eax],0
>004D465B    jle         004D4665
 004D465D    mov         eax,dword ptr [ebp-0C]
 004D4660    mov         edx,dword ptr [ebp-14]
 004D4663    add         dword ptr [eax],edx
 004D4665    mov         eax,dword ptr [ebp+0C]
 004D4668    cmp         dword ptr [eax],0
>004D466B    jle         004D4675
 004D466D    mov         eax,dword ptr [ebp+0C]
 004D4670    mov         edx,dword ptr [ebp-18]
 004D4673    add         dword ptr [eax],edx
 004D4675    mov         eax,dword ptr [ebp+8]
 004D4678    cmp         dword ptr [eax],0
>004D467B    jle         004D4685
 004D467D    mov         eax,dword ptr [ebp+8]
 004D4680    mov         edx,dword ptr [ebp-1C]
 004D4683    add         dword ptr [eax],edx
 004D4685    ret
>004D4686    jmp         @HandleFinally
>004D468B    jmp         004D4645
 004D468D    mov         esp,ebp
 004D468F    pop         ebp
 004D4690    ret         8
end;*}

//004D469C
{*procedure sub_004D469C(?:?; ?:?; ?:?; ?:?);
begin
 004D469C    push        ebp
 004D469D    mov         ebp,esp
 004D469F    add         esp,0FFFFFFF4
 004D46A2    mov         dword ptr [ebp-0C],ecx
 004D46A5    mov         dword ptr [ebp-8],edx
 004D46A8    mov         dword ptr [ebp-4],eax
 004D46AB    mov         eax,dword ptr [ebp+0C]
 004D46AE    push        eax
 004D46AF    mov         eax,dword ptr [ebp+8]
 004D46B2    push        eax
 004D46B3    mov         ecx,dword ptr [ebp-0C]
 004D46B6    mov         edx,dword ptr [ebp-8]
 004D46B9    mov         eax,dword ptr [ebp-4]
 004D46BC    call        004D4258
 004D46C1    mov         eax,dword ptr [ebp+0C]
 004D46C4    push        eax
 004D46C5    mov         eax,dword ptr [ebp+8]
 004D46C8    push        eax
 004D46C9    mov         ecx,dword ptr [ebp-0C]
 004D46CC    mov         edx,dword ptr [ebp-8]
 004D46CF    mov         eax,dword ptr [ebp-4]
 004D46D2    call        004CC5FC
 004D46D7    mov         esp,ebp
 004D46D9    pop         ebp
 004D46DA    ret         8
end;*}

//004D46E0
{*procedure TWinControl.sub_004CD9E4(?:?; ?:?);
begin
 004D46E0    push        ebp
 004D46E1    mov         ebp,esp
 004D46E3    add         esp,0FFFFFFF4
 004D46E6    mov         byte ptr [ebp-9],cl
 004D46E9    mov         dword ptr [ebp-8],edx
 004D46EC    mov         dword ptr [ebp-4],eax
 004D46EF    mov         cl,byte ptr [ebp-9]
 004D46F2    mov         edx,dword ptr [ebp-8]
 004D46F5    mov         eax,dword ptr [ebp-4]
 004D46F8    call        TControl.sub_004CD9E4
 004D46FD    mov         eax,dword ptr [ebp-8]
 004D4700    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004D4706    call        @IsClass
 004D470B    test        al,al
>004D470D    je          004D472F
 004D470F    cmp         byte ptr [ebp-9],0
>004D4713    je          004D4721
 004D4715    mov         eax,dword ptr [ebp-4]
 004D4718    cmp         dword ptr [eax+158],0;TWinControl.HelpContext:THelpContext
>004D471F    jne         004D472F
 004D4721    mov         eax,dword ptr [ebp-8]
 004D4724    mov         edx,dword ptr [eax+74]
 004D4727    mov         eax,dword ptr [ebp-4]
 004D472A    call        TControl.SetHelpContext
 004D472F    mov         esp,ebp
 004D4731    pop         ebp
 004D4732    ret
end;*}

//004D4734
procedure TWinControl.sub_004CDB48;
begin
{*
 004D4734    push        ebp
 004D4735    mov         ebp,esp
 004D4737    add         esp,0FFFFFFF8
 004D473A    mov         dword ptr [ebp-4],eax
 004D473D    mov         eax,[004C5B84];TWinControlActionLink
 004D4742    mov         dword ptr [ebp-8],eax
 004D4745    mov         eax,dword ptr [ebp-8]
 004D4748    pop         ecx
 004D4749    pop         ecx
 004D474A    pop         ebp
 004D474B    ret
*}
end;

//004D474C
{*procedure sub_004D474C(?:?);
begin
 004D474C    push        ebp
 004D474D    mov         ebp,esp
 004D474F    add         esp,0FFFFFFF8
 004D4752    mov         dword ptr [ebp-8],edx
 004D4755    mov         dword ptr [ebp-4],eax
 004D4758    mov         edx,dword ptr [ebp-8]
 004D475B    mov         eax,dword ptr [ebp-4]
 004D475E    call        004CDCD8
 004D4763    mov         eax,dword ptr [ebp-8]
 004D4766    mov         edx,dword ptr ds:[4DA408];TCustomAction
 004D476C    call        @IsClass
 004D4771    test        al,al
>004D4773    je          004D4786
 004D4775    mov         eax,dword ptr [ebp-4]
 004D4778    mov         edx,dword ptr [eax+158];TWinControl.HelpContext:THelpContext
 004D477E    mov         eax,dword ptr [ebp-8]
 004D4781    mov         ecx,dword ptr [eax]
 004D4783    call        dword ptr [ecx+48]
 004D4786    pop         ecx
 004D4787    pop         ecx
 004D4788    pop         ebp
 004D4789    ret
end;*}

//004D478C
{*function sub_004D478C(?:?; ?:?):?;
begin
 004D478C    push        ebp
 004D478D    mov         ebp,esp
 004D478F    add         esp,0FFFFFFBC
 004D4792    push        ebx
 004D4793    push        esi
 004D4794    mov         dword ptr [ebp-0C],ecx
 004D4797    mov         dword ptr [ebp-8],edx
 004D479A    mov         dword ptr [ebp-4],eax
 004D479D    mov         byte ptr [ebp-0D],1
 004D47A1    mov         eax,dword ptr [ebp-4]
 004D47A4    call        TWinControl.HandleAllocated
 004D47A9    test        al,al
>004D47AB    je          004D498B
 004D47B1    mov         eax,dword ptr [ebp-4]
 004D47B4    cmp         byte ptr [eax+5B],5;TWinControl.FAlign:TAlign
>004D47B8    je          004D498B
 004D47BE    mov         eax,dword ptr [ebp-4]
 004D47C1    test        byte ptr [eax+1C],10;TWinControl.FComponentState:TComponentState
>004D47C5    je          004D47D7
 004D47C7    mov         eax,dword ptr [ebp-4]
 004D47CA    call        004CF618
 004D47CF    test        eax,eax
>004D47D1    jle         004D498B
 004D47D7    lea         edx,[ebp-34]
 004D47DA    mov         eax,dword ptr [ebp-4]
 004D47DD    mov         ecx,dword ptr [eax]
 004D47DF    call        dword ptr [ecx+0B4];TWinControl.sub_004D38EC
 004D47E5    lea         edx,[ebp-44]
 004D47E8    mov         eax,dword ptr [ebp-4]
 004D47EB    mov         ecx,dword ptr [eax]
 004D47ED    call        dword ptr [ecx+44];TWinControl.sub_004D3A1C
 004D47F0    lea         edx,[ebp-44]
 004D47F3    mov         eax,dword ptr [ebp-4]
 004D47F6    mov         ecx,dword ptr [eax]
 004D47F8    call        dword ptr [ecx+8C];TWinControl.sub_004CE790
 004D47FE    mov         eax,dword ptr [ebp-4]
 004D4801    call        TWinControl.DisableAlign
 004D4806    xor         eax,eax
 004D4808    push        ebp
 004D4809    push        4D48E8
 004D480E    push        dword ptr fs:[eax]
 004D4811    mov         dword ptr fs:[eax],esp
 004D4814    mov         eax,dword ptr [ebp-4]
 004D4817    call        004CF618
 004D481C    dec         eax
 004D481D    test        eax,eax
>004D481F    jl          004D48CA
 004D4825    inc         eax
 004D4826    mov         dword ptr [ebp-20],eax
 004D4829    mov         dword ptr [ebp-14],0
 004D4830    mov         edx,dword ptr [ebp-14]
 004D4833    mov         eax,dword ptr [ebp-4]
 004D4836    call        004CF5AC
 004D483B    mov         dword ptr [ebp-24],eax
 004D483E    mov         eax,dword ptr [ebp-24]
 004D4841    cmp         byte ptr [eax+57],0
>004D4845    jne         004D4859
 004D4847    mov         eax,dword ptr [ebp-24]
 004D484A    test        byte ptr [eax+1C],10
>004D484E    je          004D48BE
 004D4850    mov         eax,dword ptr [ebp-24]
 004D4853    test        byte ptr [eax+51],4
>004D4857    jne         004D48BE
 004D4859    mov         eax,dword ptr [ebp-4]
 004D485C    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004D485F    test        al,al
>004D4861    je          004D4869
 004D4863    add         al,0FD
 004D4865    sub         al,2
>004D4867    jae         004D4874
 004D4869    mov         eax,dword ptr [ebp-34]
 004D486C    sub         eax,dword ptr [ebp-44]
 004D486F    mov         dword ptr [ebp-18],eax
>004D4872    jmp         004D4879
 004D4874    xor         eax,eax
 004D4876    mov         dword ptr [ebp-18],eax
 004D4879    mov         eax,dword ptr [ebp-4]
 004D487C    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004D487F    sub         al,3
>004D4881    jae         004D488E
 004D4883    mov         eax,dword ptr [ebp-30]
 004D4886    sub         eax,dword ptr [ebp-40]
 004D4889    mov         dword ptr [ebp-1C],eax
>004D488C    jmp         004D4893
 004D488E    xor         eax,eax
 004D4890    mov         dword ptr [ebp-1C],eax
 004D4893    mov         eax,dword ptr [ebp-24]
 004D4896    mov         eax,dword ptr [eax+48]
 004D4899    push        eax
 004D489A    mov         eax,dword ptr [ebp-24]
 004D489D    mov         eax,dword ptr [eax+4C]
 004D48A0    push        eax
 004D48A1    mov         eax,dword ptr [ebp-24]
 004D48A4    mov         ecx,dword ptr [eax+44]
 004D48A7    sub         ecx,dword ptr [ebp-1C]
 004D48AA    mov         eax,dword ptr [ebp-24]
 004D48AD    mov         edx,dword ptr [eax+40]
 004D48B0    sub         edx,dword ptr [ebp-18]
 004D48B3    mov         eax,dword ptr [ebp-24]
 004D48B6    mov         ebx,dword ptr [eax]
 004D48B8    call        dword ptr [ebx+84]
 004D48BE    inc         dword ptr [ebp-14]
 004D48C1    dec         dword ptr [ebp-20]
>004D48C4    jne         004D4830
 004D48CA    xor         eax,eax
 004D48CC    pop         edx
 004D48CD    pop         ecx
 004D48CE    pop         ecx
 004D48CF    mov         dword ptr fs:[eax],edx
 004D48D2    push        4D48EF
 004D48D7    mov         eax,dword ptr [ebp-4]
 004D48DA    and         word ptr [eax+54],0FFFFFFEF;TWinControl.FControlState:TControlState
 004D48DF    mov         eax,dword ptr [ebp-4]
 004D48E2    call        TWinControl.EnableAlign
 004D48E7    ret
>004D48E8    jmp         @HandleFinally
>004D48ED    jmp         004D48D7
 004D48EF    mov         eax,dword ptr [ebp-4]
 004D48F2    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004D48F5    test        al,al
>004D48F7    je          004D48FF
 004D48F9    add         al,0FD
 004D48FB    sub         al,2
>004D48FD    jae         004D4940
 004D48FF    mov         eax,dword ptr [ebp-2C]
 004D4902    sub         eax,dword ptr [ebp-34]
 004D4905    test        eax,eax
>004D4907    jle         004D4939
 004D4909    mov         eax,dword ptr [ebp-2C]
 004D490C    sub         eax,dword ptr [ebp-34]
 004D490F    mov         edx,dword ptr [ebp-4]
 004D4912    add         eax,dword ptr [edx+48];TWinControl.Width:Integer
 004D4915    mov         edx,dword ptr [ebp-3C]
 004D4918    sub         edx,dword ptr [ebp-44]
 004D491B    sub         eax,edx
 004D491D    mov         edx,dword ptr [ebp-8]
 004D4920    mov         dword ptr [edx],eax
 004D4922    mov         eax,dword ptr [ebp-4]
 004D4925    cmp         byte ptr [eax+5B],4;TWinControl.FAlign:TAlign
>004D4929    jne         004D4940
 004D492B    mov         eax,dword ptr [ebp-4]
 004D492E    mov         si,0FFD0
 004D4932    call        @CallDynaInst;TControl.sub_004C9ED8
>004D4937    jmp         004D4940
 004D4939    mov         eax,dword ptr [ebp-8]
 004D493C    xor         edx,edx
 004D493E    mov         dword ptr [eax],edx
 004D4940    mov         eax,dword ptr [ebp-4]
 004D4943    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004D4946    sub         al,3
>004D4948    jae         004D498B
 004D494A    mov         eax,dword ptr [ebp-28]
 004D494D    sub         eax,dword ptr [ebp-30]
 004D4950    test        eax,eax
>004D4952    jle         004D4984
 004D4954    mov         eax,dword ptr [ebp-28]
 004D4957    sub         eax,dword ptr [ebp-30]
 004D495A    mov         edx,dword ptr [ebp-4]
 004D495D    add         eax,dword ptr [edx+4C];TWinControl.Height:Integer
 004D4960    mov         edx,dword ptr [ebp-38]
 004D4963    sub         edx,dword ptr [ebp-40]
 004D4966    sub         eax,edx
 004D4968    mov         edx,dword ptr [ebp-0C]
 004D496B    mov         dword ptr [edx],eax
 004D496D    mov         eax,dword ptr [ebp-4]
 004D4970    cmp         byte ptr [eax+5B],2;TWinControl.FAlign:TAlign
>004D4974    jne         004D498B
 004D4976    mov         eax,dword ptr [ebp-4]
 004D4979    mov         si,0FFD0
 004D497D    call        @CallDynaInst;TControl.sub_004C9ED8
>004D4982    jmp         004D498B
 004D4984    mov         eax,dword ptr [ebp-0C]
 004D4987    xor         edx,edx
 004D4989    mov         dword ptr [eax],edx
 004D498B    mov         al,byte ptr [ebp-0D]
 004D498E    pop         esi
 004D498F    pop         ebx
 004D4990    mov         esp,ebp
 004D4992    pop         ebp
 004D4993    ret
end;*}

//004D4994
{*procedure TLabeledEdit.SetBevelInner(Value:TBevelCut; ?:?);
begin
 004D4994    push        ebp
 004D4995    mov         ebp,esp
 004D4997    add         esp,0FFFFFFF4
 004D499A    mov         byte ptr [ebp-9],cl
 004D499D    mov         dword ptr [ebp-8],edx
 004D49A0    mov         dword ptr [ebp-4],eax
 004D49A3    mov         eax,dword ptr [ebp-8]
 004D49A6    sub         eax,1
>004D49A9    jb          004D49AF
>004D49AB    je          004D49DC
>004D49AD    jmp         004D4A07
 004D49AF    mov         al,byte ptr [ebp-9]
 004D49B2    mov         edx,dword ptr [ebp-4]
 004D49B5    cmp         al,byte ptr [edx+163];TLabeledEdit.FBevelInner:TBevelCut
>004D49BB    je          004D4A07
 004D49BD    mov         al,byte ptr [ebp-9]
 004D49C0    mov         edx,dword ptr [ebp-4]
 004D49C3    mov         byte ptr [edx+163],al;TLabeledEdit.FBevelInner:TBevelCut
 004D49C9    push        0
 004D49CB    xor         ecx,ecx
 004D49CD    mov         edx,0B03B
 004D49D2    mov         eax,dword ptr [ebp-4]
 004D49D5    call        004CC7DC
>004D49DA    jmp         004D4A07
 004D49DC    mov         al,byte ptr [ebp-9]
 004D49DF    mov         edx,dword ptr [ebp-4]
 004D49E2    cmp         al,byte ptr [edx+164];TLabeledEdit.FBevelOuter:TBevelCut
>004D49E8    je          004D4A07
 004D49EA    mov         al,byte ptr [ebp-9]
 004D49ED    mov         edx,dword ptr [ebp-4]
 004D49F0    mov         byte ptr [edx+164],al;TLabeledEdit.FBevelOuter:TBevelCut
 004D49F6    push        0
 004D49F8    xor         ecx,ecx
 004D49FA    mov         edx,0B03B
 004D49FF    mov         eax,dword ptr [ebp-4]
 004D4A02    call        004CC7DC
 004D4A07    mov         esp,ebp
 004D4A09    pop         ebp
 004D4A0A    ret
end;*}

//004D4A0C
procedure TLabeledEdit.SetBevelEdges(Value:TBevelEdges);
begin
{*
 004D4A0C    push        ebp
 004D4A0D    mov         ebp,esp
 004D4A0F    add         esp,0FFFFFFF8
 004D4A12    mov         byte ptr [ebp-5],dl
 004D4A15    mov         dword ptr [ebp-4],eax
 004D4A18    mov         eax,dword ptr [ebp-4]
 004D4A1B    mov         al,byte ptr [eax+162];TLabeledEdit.FBevelEdges:TBevelEdges
 004D4A21    cmp         al,byte ptr [ebp-5]
>004D4A24    je          004D4A43
 004D4A26    mov         al,byte ptr [ebp-5]
 004D4A29    mov         edx,dword ptr [ebp-4]
 004D4A2C    mov         byte ptr [edx+162],al;TLabeledEdit.FBevelEdges:TBevelEdges
 004D4A32    push        0
 004D4A34    xor         ecx,ecx
 004D4A36    mov         edx,0B03B
 004D4A3B    mov         eax,dword ptr [ebp-4]
 004D4A3E    call        004CC7DC
 004D4A43    pop         ecx
 004D4A44    pop         ecx
 004D4A45    pop         ebp
 004D4A46    ret
*}
end;

//004D4A48
procedure TLabeledEdit.SetBevelKind(Value:TBevelKind);
begin
{*
 004D4A48    push        ebp
 004D4A49    mov         ebp,esp
 004D4A4B    add         esp,0FFFFFFF8
 004D4A4E    mov         byte ptr [ebp-5],dl
 004D4A51    mov         dword ptr [ebp-4],eax
 004D4A54    mov         al,byte ptr [ebp-5]
 004D4A57    mov         edx,dword ptr [ebp-4]
 004D4A5A    cmp         al,byte ptr [edx+165];TLabeledEdit.FBevelKind:TBevelKind
>004D4A60    je          004D4A7F
 004D4A62    mov         al,byte ptr [ebp-5]
 004D4A65    mov         edx,dword ptr [ebp-4]
 004D4A68    mov         byte ptr [edx+165],al;TLabeledEdit.FBevelKind:TBevelKind
 004D4A6E    push        0
 004D4A70    xor         ecx,ecx
 004D4A72    mov         edx,0B03B
 004D4A77    mov         eax,dword ptr [ebp-4]
 004D4A7A    call        004CC7DC
 004D4A7F    pop         ecx
 004D4A80    pop         ecx
 004D4A81    pop         ebp
 004D4A82    ret
*}
end;

//004D4A84
procedure TListView.SetBevelWidth(Value:TBevelWidth);
begin
{*
 004D4A84    push        ebp
 004D4A85    mov         ebp,esp
 004D4A87    add         esp,0FFFFFFF8
 004D4A8A    mov         dword ptr [ebp-8],edx
 004D4A8D    mov         dword ptr [ebp-4],eax
 004D4A90    mov         eax,dword ptr [ebp-8]
 004D4A93    mov         edx,dword ptr [ebp-4]
 004D4A96    cmp         eax,dword ptr [edx+168];TListView.FBevelWidth:TBevelWidth
>004D4A9C    je          004D4ABB
 004D4A9E    mov         eax,dword ptr [ebp-8]
 004D4AA1    mov         edx,dword ptr [ebp-4]
 004D4AA4    mov         dword ptr [edx+168],eax;TListView.FBevelWidth:TBevelWidth
 004D4AAA    push        0
 004D4AAC    xor         ecx,ecx
 004D4AAE    mov         edx,0B03B
 004D4AB3    mov         eax,dword ptr [ebp-4]
 004D4AB6    call        004CC7DC
 004D4ABB    pop         ecx
 004D4ABC    pop         ecx
 004D4ABD    pop         ebp
 004D4ABE    ret
*}
end;

//004D4AC0
{*procedure TWinControl.WMNCCalcSize(?:?);
begin
 004D4AC0    push        ebp
 004D4AC1    mov         ebp,esp
 004D4AC3    add         esp,0FFFFFFEC
 004D4AC6    mov         dword ptr [ebp-8],edx
 004D4AC9    mov         dword ptr [ebp-4],eax
 004D4ACC    mov         edx,dword ptr [ebp-8]
 004D4ACF    mov         eax,dword ptr [ebp-4]
 004D4AD2    mov         ecx,dword ptr [eax]
 004D4AD4    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D4AD7    mov         eax,dword ptr [ebp-8]
 004D4ADA    mov         eax,dword ptr [eax+8]
 004D4ADD    mov         dword ptr [ebp-10],eax
 004D4AE0    mov         eax,dword ptr [ebp-4]
 004D4AE3    mov         eax,dword ptr [eax+16C];TWinControl.FBorderWidth:TBorderWidth
 004D4AE9    neg         eax
 004D4AEB    push        eax
 004D4AEC    mov         eax,dword ptr [ebp-4]
 004D4AEF    mov         eax,dword ptr [eax+16C];TWinControl.FBorderWidth:TBorderWidth
 004D4AF5    neg         eax
 004D4AF7    push        eax
 004D4AF8    mov         eax,dword ptr [ebp-10]
 004D4AFB    push        eax
 004D4AFC    call        user32.InflateRect
 004D4B01    mov         eax,dword ptr [ebp-4]
 004D4B04    cmp         byte ptr [eax+165],0;TWinControl.FBevelKind:TBevelKind
>004D4B0B    je          004D4B9F
 004D4B11    xor         eax,eax
 004D4B13    mov         dword ptr [ebp-0C],eax
 004D4B16    mov         eax,dword ptr [ebp-4]
 004D4B19    cmp         byte ptr [eax+163],0;TWinControl.FBevelInner:TBevelCut
>004D4B20    je          004D4B2E
 004D4B22    mov         eax,dword ptr [ebp-4]
 004D4B25    mov         eax,dword ptr [eax+168];TWinControl.FBevelWidth:TBevelWidth
 004D4B2B    add         dword ptr [ebp-0C],eax
 004D4B2E    mov         eax,dword ptr [ebp-4]
 004D4B31    cmp         byte ptr [eax+164],0;TWinControl.FBevelOuter:TBevelCut
>004D4B38    je          004D4B46
 004D4B3A    mov         eax,dword ptr [ebp-4]
 004D4B3D    mov         eax,dword ptr [eax+168];TWinControl.FBevelWidth:TBevelWidth
 004D4B43    add         dword ptr [ebp-0C],eax
 004D4B46    mov         eax,dword ptr [ebp-10]
 004D4B49    mov         dword ptr [ebp-14],eax
 004D4B4C    mov         eax,dword ptr [ebp-4]
 004D4B4F    test        byte ptr [eax+162],1;TWinControl.FBevelEdges:TBevelEdges
>004D4B56    je          004D4B60
 004D4B58    mov         eax,dword ptr [ebp-14]
 004D4B5B    mov         edx,dword ptr [ebp-0C]
 004D4B5E    add         dword ptr [eax],edx
 004D4B60    mov         eax,dword ptr [ebp-4]
 004D4B63    test        byte ptr [eax+162],2;TWinControl.FBevelEdges:TBevelEdges
>004D4B6A    je          004D4B75
 004D4B6C    mov         eax,dword ptr [ebp-14]
 004D4B6F    mov         edx,dword ptr [ebp-0C]
 004D4B72    add         dword ptr [eax+4],edx
 004D4B75    mov         eax,dword ptr [ebp-4]
 004D4B78    test        byte ptr [eax+162],4;TWinControl.FBevelEdges:TBevelEdges
>004D4B7F    je          004D4B8A
 004D4B81    mov         eax,dword ptr [ebp-14]
 004D4B84    mov         edx,dword ptr [ebp-0C]
 004D4B87    sub         dword ptr [eax+8],edx
 004D4B8A    mov         eax,dword ptr [ebp-4]
 004D4B8D    test        byte ptr [eax+162],8;TWinControl.FBevelEdges:TBevelEdges
>004D4B94    je          004D4B9F
 004D4B96    mov         eax,dword ptr [ebp-14]
 004D4B99    mov         edx,dword ptr [ebp-0C]
 004D4B9C    sub         dword ptr [eax+0C],edx
 004D4B9F    mov         esp,ebp
 004D4BA1    pop         ebp
 004D4BA2    ret
end;*}

//004D4BA4
{*procedure TWinControl.WMNCPaint(?:?);
begin
 004D4BA4    push        ebp
 004D4BA5    mov         ebp,esp
 004D4BA7    add         esp,0FFFFFFBC
 004D4BAA    push        esi
 004D4BAB    push        edi
 004D4BAC    mov         dword ptr [ebp-8],edx
 004D4BAF    mov         dword ptr [ebp-4],eax
 004D4BB2    mov         eax,dword ptr [ebp-4]
 004D4BB5    cmp         byte ptr [eax+165],0;TWinControl.FBevelKind:TBevelKind
>004D4BBC    jne         004D4BCE
 004D4BBE    mov         eax,dword ptr [ebp-4]
 004D4BC1    cmp         dword ptr [eax+16C],0;TWinControl.FBorderWidth:TBorderWidth
>004D4BC8    jbe         004D4E2B
 004D4BCE    mov         eax,dword ptr [ebp-4]
 004D4BD1    call        TWinControl.GetHandle
 004D4BD6    push        eax
 004D4BD7    call        user32.GetWindowDC
 004D4BDC    mov         dword ptr [ebp-0C],eax
 004D4BDF    xor         eax,eax
 004D4BE1    push        ebp
 004D4BE2    push        4D4E24
 004D4BE7    push        dword ptr fs:[eax]
 004D4BEA    mov         dword ptr fs:[eax],esp
 004D4BED    lea         eax,[ebp-24]
 004D4BF0    push        eax
 004D4BF1    mov         eax,dword ptr [ebp-4]
 004D4BF4    call        TWinControl.GetHandle
 004D4BF9    push        eax
 004D4BFA    call        user32.GetClientRect
 004D4BFF    lea         eax,[ebp-34]
 004D4C02    push        eax
 004D4C03    mov         eax,dword ptr [ebp-4]
 004D4C06    call        TWinControl.GetHandle
 004D4C0B    push        eax
 004D4C0C    call        user32.GetWindowRect
 004D4C11    push        2
 004D4C13    lea         eax,[ebp-34]
 004D4C16    push        eax
 004D4C17    mov         eax,dword ptr [ebp-4]
 004D4C1A    call        TWinControl.GetHandle
 004D4C1F    push        eax
 004D4C20    push        0
 004D4C22    call        user32.MapWindowPoints
 004D4C27    mov         eax,dword ptr [ebp-30]
 004D4C2A    neg         eax
 004D4C2C    push        eax
 004D4C2D    mov         eax,dword ptr [ebp-34]
 004D4C30    neg         eax
 004D4C32    push        eax
 004D4C33    lea         eax,[ebp-24]
 004D4C36    push        eax
 004D4C37    call        user32.OffsetRect
 004D4C3C    mov         eax,dword ptr [ebp-18]
 004D4C3F    push        eax
 004D4C40    mov         eax,dword ptr [ebp-1C]
 004D4C43    push        eax
 004D4C44    mov         eax,dword ptr [ebp-20]
 004D4C47    push        eax
 004D4C48    mov         eax,dword ptr [ebp-24]
 004D4C4B    push        eax
 004D4C4C    mov         eax,dword ptr [ebp-0C]
 004D4C4F    push        eax
 004D4C50    call        gdi32.ExcludeClipRect
 004D4C55    lea         esi,[ebp-34]
 004D4C58    lea         edi,[ebp-44]
 004D4C5B    movs        dword ptr [edi],dword ptr [esi]
 004D4C5C    movs        dword ptr [edi],dword ptr [esi]
 004D4C5D    movs        dword ptr [edi],dword ptr [esi]
 004D4C5E    movs        dword ptr [edi],dword ptr [esi]
 004D4C5F    mov         eax,dword ptr [ebp-4]
 004D4C62    mov         eax,dword ptr [eax+16C];TWinControl.FBorderWidth:TBorderWidth
 004D4C68    push        eax
 004D4C69    mov         eax,dword ptr [ebp-4]
 004D4C6C    mov         eax,dword ptr [eax+16C];TWinControl.FBorderWidth:TBorderWidth
 004D4C72    push        eax
 004D4C73    lea         eax,[ebp-24]
 004D4C76    push        eax
 004D4C77    call        user32.InflateRect
 004D4C7C    lea         esi,[ebp-24]
 004D4C7F    lea         edi,[ebp-34]
 004D4C82    movs        dword ptr [edi],dword ptr [esi]
 004D4C83    movs        dword ptr [edi],dword ptr [esi]
 004D4C84    movs        dword ptr [edi],dword ptr [esi]
 004D4C85    movs        dword ptr [edi],dword ptr [esi]
 004D4C86    mov         eax,dword ptr [ebp-4]
 004D4C89    cmp         byte ptr [eax+165],0;TWinControl.FBevelKind:TBevelKind
>004D4C90    je          004D4DB0
 004D4C96    xor         eax,eax
 004D4C98    mov         dword ptr [ebp-10],eax
 004D4C9B    mov         eax,dword ptr [ebp-4]
 004D4C9E    cmp         byte ptr [eax+163],0;TWinControl.FBevelInner:TBevelCut
>004D4CA5    je          004D4CB3
 004D4CA7    mov         eax,dword ptr [ebp-4]
 004D4CAA    mov         eax,dword ptr [eax+168];TWinControl.FBevelWidth:TBevelWidth
 004D4CB0    add         dword ptr [ebp-10],eax
 004D4CB3    mov         eax,dword ptr [ebp-4]
 004D4CB6    cmp         byte ptr [eax+164],0;TWinControl.FBevelOuter:TBevelCut
>004D4CBD    je          004D4CCB
 004D4CBF    mov         eax,dword ptr [ebp-4]
 004D4CC2    mov         eax,dword ptr [eax+168];TWinControl.FBevelWidth:TBevelWidth
 004D4CC8    add         dword ptr [ebp-10],eax
 004D4CCB    push        0F0
 004D4CCD    mov         eax,dword ptr [ebp-4]
 004D4CD0    call        TWinControl.GetHandle
 004D4CD5    push        eax
 004D4CD6    call        user32.GetWindowLongA
 004D4CDB    mov         dword ptr [ebp-14],eax
 004D4CDE    mov         eax,dword ptr [ebp-4]
 004D4CE1    test        byte ptr [eax+162],1;TWinControl.FBevelEdges:TBevelEdges
>004D4CE8    je          004D4CF0
 004D4CEA    mov         eax,dword ptr [ebp-10]
 004D4CED    sub         dword ptr [ebp-34],eax
 004D4CF0    mov         eax,dword ptr [ebp-4]
 004D4CF3    test        byte ptr [eax+162],2;TWinControl.FBevelEdges:TBevelEdges
>004D4CFA    je          004D4D02
 004D4CFC    mov         eax,dword ptr [ebp-10]
 004D4CFF    sub         dword ptr [ebp-30],eax
 004D4D02    mov         eax,dword ptr [ebp-4]
 004D4D05    test        byte ptr [eax+162],4;TWinControl.FBevelEdges:TBevelEdges
>004D4D0C    je          004D4D14
 004D4D0E    mov         eax,dword ptr [ebp-10]
 004D4D11    add         dword ptr [ebp-2C],eax
 004D4D14    test        byte ptr [ebp-12],20
>004D4D18    je          004D4D28
 004D4D1A    push        14
 004D4D1C    mov         eax,[0055B2BC];^gvar_0055DB78
 004D4D21    mov         eax,dword ptr [eax]
 004D4D23    call        eax
 004D4D25    add         dword ptr [ebp-2C],eax
 004D4D28    mov         eax,dword ptr [ebp-4]
 004D4D2B    test        byte ptr [eax+162],8;TWinControl.FBevelEdges:TBevelEdges
>004D4D32    je          004D4D3A
 004D4D34    mov         eax,dword ptr [ebp-10]
 004D4D37    add         dword ptr [ebp-28],eax
 004D4D3A    test        byte ptr [ebp-12],10
>004D4D3E    je          004D4D4E
 004D4D40    push        15
 004D4D42    mov         eax,[0055B2BC];^gvar_0055DB78
 004D4D47    mov         eax,dword ptr [eax]
 004D4D49    call        eax
 004D4D4B    add         dword ptr [ebp-28],eax
 004D4D4E    mov         eax,dword ptr [ebp-4]
 004D4D51    movzx       eax,byte ptr [eax+162];TWinControl.FBevelEdges:TBevelEdges
 004D4D58    mov         edx,dword ptr [ebp-4]
 004D4D5B    movzx       edx,byte ptr [edx+165];TWinControl.FBevelKind:TBevelKind
 004D4D62    or          eax,dword ptr [edx*4+541768]
 004D4D69    mov         edx,dword ptr [ebp-4]
 004D4D6C    movzx       edx,byte ptr [edx+1A5];TWinControl.FCtl3D:Boolean
 004D4D73    or          eax,dword ptr [edx*4+541778]
 004D4D7A    or          eax,2000
 004D4D7F    push        eax
 004D4D80    mov         eax,dword ptr [ebp-4]
 004D4D83    movzx       eax,byte ptr [eax+163];TWinControl.FBevelInner:TBevelCut
 004D4D8A    mov         eax,dword ptr [eax*4+541748]
 004D4D91    mov         edx,dword ptr [ebp-4]
 004D4D94    movzx       edx,byte ptr [edx+164];TWinControl.FBevelOuter:TBevelCut
 004D4D9B    or          eax,dword ptr [edx*4+541758]
 004D4DA2    push        eax
 004D4DA3    lea         eax,[ebp-34]
 004D4DA6    push        eax
 004D4DA7    mov         eax,dword ptr [ebp-0C]
 004D4DAA    push        eax
 004D4DAB    call        user32.DrawEdge
 004D4DB0    mov         eax,dword ptr [ebp-28]
 004D4DB3    push        eax
 004D4DB4    mov         eax,dword ptr [ebp-2C]
 004D4DB7    push        eax
 004D4DB8    mov         eax,dword ptr [ebp-30]
 004D4DBB    push        eax
 004D4DBC    mov         eax,dword ptr [ebp-34]
 004D4DBF    push        eax
 004D4DC0    mov         eax,dword ptr [ebp-0C]
 004D4DC3    push        eax
 004D4DC4    call        gdi32.IntersectClipRect
 004D4DC9    lea         esi,[ebp-44]
 004D4DCC    lea         edi,[ebp-34]
 004D4DCF    movs        dword ptr [edi],dword ptr [esi]
 004D4DD0    movs        dword ptr [edi],dword ptr [esi]
 004D4DD1    movs        dword ptr [edi],dword ptr [esi]
 004D4DD2    movs        dword ptr [edi],dword ptr [esi]
 004D4DD3    mov         eax,dword ptr [ebp-30]
 004D4DD6    neg         eax
 004D4DD8    push        eax
 004D4DD9    mov         eax,dword ptr [ebp-34]
 004D4DDC    neg         eax
 004D4DDE    push        eax
 004D4DDF    lea         eax,[ebp-34]
 004D4DE2    push        eax
 004D4DE3    call        user32.OffsetRect
 004D4DE8    mov         eax,dword ptr [ebp-4]
 004D4DEB    mov         eax,dword ptr [eax+170];TWinControl.FBrush:TBrush
 004D4DF1    call        TBrush.GetHandle
 004D4DF6    push        eax
 004D4DF7    lea         eax,[ebp-34]
 004D4DFA    push        eax
 004D4DFB    mov         eax,dword ptr [ebp-0C]
 004D4DFE    push        eax
 004D4DFF    call        user32.FillRect
 004D4E04    xor         eax,eax
 004D4E06    pop         edx
 004D4E07    pop         ecx
 004D4E08    pop         ecx
 004D4E09    mov         dword ptr fs:[eax],edx
 004D4E0C    push        4D4E2B
 004D4E11    mov         eax,dword ptr [ebp-0C]
 004D4E14    push        eax
 004D4E15    mov         eax,dword ptr [ebp-4]
 004D4E18    call        TWinControl.GetHandle
 004D4E1D    push        eax
 004D4E1E    call        user32.ReleaseDC
 004D4E23    ret
>004D4E24    jmp         @HandleFinally
>004D4E29    jmp         004D4E11
 004D4E2B    mov         edx,dword ptr [ebp-8]
 004D4E2E    mov         eax,dword ptr [ebp-4]
 004D4E31    mov         ecx,dword ptr [eax]
 004D4E33    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D4E36    call        ThemeServices
 004D4E3B    call        TThemeServices.GetThemesEnabled
 004D4E40    test        al,al
>004D4E42    je          004D4E5C
 004D4E44    mov         eax,dword ptr [ebp-4]
 004D4E47    test        byte ptr [eax+52],2;TWinControl.?f52:byte
>004D4E4B    je          004D4E5C
 004D4E4D    call        ThemeServices
 004D4E52    xor         ecx,ecx
 004D4E54    mov         edx,dword ptr [ebp-4]
 004D4E57    call        004B6FC8
 004D4E5C    pop         edi
 004D4E5D    pop         esi
 004D4E5E    mov         esp,ebp
 004D4E60    pop         ebp
 004D4E61    ret
end;*}

//004D4E64
{*procedure TWinControl.WMContextMenu(?:?);
begin
 004D4E64    push        ebp
 004D4E65    mov         ebp,esp
 004D4E67    add         esp,0FFFFFFE4
 004D4E6A    mov         dword ptr [ebp-8],edx
 004D4E6D    mov         dword ptr [ebp-4],eax
 004D4E70    mov         eax,dword ptr [ebp-8]
 004D4E73    cmp         dword ptr [eax+0C],0
>004D4E77    jne         004D4EDD
 004D4E79    push        0
 004D4E7B    lea         edx,[ebp-1C]
 004D4E7E    mov         eax,dword ptr [ebp-8]
 004D4E81    mov         eax,dword ptr [eax+8]
 004D4E84    call        00408250
 004D4E89    lea         edx,[ebp-1C]
 004D4E8C    lea         ecx,[ebp-14]
 004D4E8F    mov         eax,dword ptr [ebp-4]
 004D4E92    call        TControl.ScreenToClient
 004D4E97    lea         edx,[ebp-14]
 004D4E9A    xor         ecx,ecx
 004D4E9C    mov         eax,dword ptr [ebp-4]
 004D4E9F    call        004D052C
 004D4EA4    mov         dword ptr [ebp-0C],eax
 004D4EA7    cmp         dword ptr [ebp-0C],0
>004D4EAB    je          004D4EC9
 004D4EAD    mov         eax,dword ptr [ebp-8]
 004D4EB0    mov         eax,dword ptr [eax+8]
 004D4EB3    push        eax
 004D4EB4    xor         ecx,ecx
 004D4EB6    mov         edx,7B
 004D4EBB    mov         eax,dword ptr [ebp-0C]
 004D4EBE    call        004CC7DC
 004D4EC3    mov         edx,dword ptr [ebp-8]
 004D4EC6    mov         dword ptr [edx+0C],eax
 004D4EC9    mov         eax,dword ptr [ebp-8]
 004D4ECC    cmp         dword ptr [eax+0C],0
>004D4ED0    jne         004D4EDD
 004D4ED2    mov         edx,dword ptr [ebp-8]
 004D4ED5    mov         eax,dword ptr [ebp-4]
 004D4ED8    call        TControl.WMContextMenu
 004D4EDD    mov         esp,ebp
 004D4EDF    pop         ebp
 004D4EE0    ret
end;*}

//004D4EE4
{*procedure sub_004D4EE4(?:TWinControl; ?:?);
begin
 004D4EE4    push        ebp
 004D4EE5    mov         ebp,esp
 004D4EE7    add         esp,0FFFFFFF4
 004D4EEA    mov         word ptr [ebp-6],dx
 004D4EEE    mov         dword ptr [ebp-4],eax
 004D4EF1    mov         eax,dword ptr [ebp-4]
 004D4EF4    call        004E7ED8
 004D4EF9    mov         dword ptr [ebp-0C],eax
 004D4EFC    cmp         dword ptr [ebp-0C],0
>004D4F00    je          004D4F59
 004D4F02    mov         ax,word ptr [ebp-6]
 004D4F06    sub         ax,9
>004D4F0A    je          004D4F1B
 004D4F0C    sub         ax,9
>004D4F10    je          004D4F3B
 004D4F12    add         eax,0FFFFFFED
 004D4F15    sub         ax,4
>004D4F19    jae         004D4F59
 004D4F1B    push        0
 004D4F1D    mov         dx,1
 004D4F21    mov         ax,2
 004D4F25    call        004080B4
 004D4F2A    mov         ecx,eax
 004D4F2C    mov         edx,127
 004D4F31    mov         eax,dword ptr [ebp-0C]
 004D4F34    call        004CC7DC
>004D4F39    jmp         004D4F59
 004D4F3B    push        0
 004D4F3D    mov         dx,2
 004D4F41    mov         ax,2
 004D4F45    call        004080B4
 004D4F4A    mov         ecx,eax
 004D4F4C    mov         edx,127
 004D4F51    mov         eax,dword ptr [ebp-0C]
 004D4F54    call        004CC7DC
 004D4F59    mov         esp,ebp
 004D4F5B    pop         ebp
 004D4F5C    ret
end;*}

//004D4F60
{*procedure TWinControl.sub_004D4F60(?:?);
begin
 004D4F60    push        ebp
 004D4F61    mov         ebp,esp
 004D4F63    add         esp,0FFFFFFF8
 004D4F66    mov         dword ptr [ebp-8],edx
 004D4F69    mov         dword ptr [ebp-4],eax
 004D4F6C    mov         eax,dword ptr [ebp-8]
 004D4F6F    cmp         dword ptr [eax+0C],1
>004D4F73    je          004D4FA1
 004D4F75    mov         eax,dword ptr [ebp-8]
 004D4F78    test        byte ptr [eax+8],1
>004D4F7C    je          004D4F87
 004D4F7E    mov         eax,dword ptr [ebp-4]
 004D4F81    cmp         byte ptr [eax+57],0;TWinControl.FVisible:Boolean
>004D4F85    je          004D4F94
 004D4F87    mov         edx,dword ptr [ebp-8]
 004D4F8A    mov         eax,dword ptr [ebp-4]
 004D4F8D    call        TWinControl.PaintHandler
>004D4F92    jmp         004D4FAC
 004D4F94    mov         edx,dword ptr [ebp-8]
 004D4F97    mov         eax,dword ptr [ebp-4]
 004D4F9A    mov         ecx,dword ptr [eax]
 004D4F9C    call        dword ptr [ecx-10];TWinControl.DefaultHandler
>004D4F9F    jmp         004D4FAC
 004D4FA1    mov         edx,dword ptr [ebp-8]
 004D4FA4    mov         eax,dword ptr [ebp-4]
 004D4FA7    mov         ecx,dword ptr [eax]
 004D4FA9    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D4FAC    pop         ecx
 004D4FAD    pop         ecx
 004D4FAE    pop         ebp
 004D4FAF    ret
end;*}

//004D4FB0
{*function TPanel.GetParentBackground:?;
begin
 004D4FB0    push        ebp
 004D4FB1    mov         ebp,esp
 004D4FB3    add         esp,0FFFFFFF8
 004D4FB6    mov         dword ptr [ebp-4],eax
 004D4FB9    mov         eax,dword ptr [ebp-4]
 004D4FBC    test        byte ptr [eax+52],4;TPanel.?f52:byte
 004D4FC0    setne       al
 004D4FC3    mov         byte ptr [ebp-5],al
 004D4FC6    mov         al,byte ptr [ebp-5]
 004D4FC9    pop         ecx
 004D4FCA    pop         ecx
 004D4FCB    pop         ebp
 004D4FCC    ret
end;*}

//004D4FD0
procedure TRadioGroup.SetParentBackground(Value:Boolean);
begin
{*
 004D4FD0    push        ebp
 004D4FD1    mov         ebp,esp
 004D4FD3    add         esp,0FFFFFFF8
 004D4FD6    mov         byte ptr [ebp-5],dl
 004D4FD9    mov         dword ptr [ebp-4],eax
 004D4FDC    mov         eax,dword ptr [ebp-4]
 004D4FDF    call        TPanel.GetParentBackground
 004D4FE4    cmp         al,byte ptr [ebp-5]
>004D4FE7    je          004D501D
 004D4FE9    cmp         byte ptr [ebp-5],0
>004D4FED    je          004D5002
 004D4FEF    mov         eax,[004D5024];0x40000 gvar_004D5024
 004D4FF4    mov         edx,dword ptr [ebp-4]
 004D4FF7    or          eax,dword ptr [edx+50];TRadioGroup.FControlStyle:TControlStyle
 004D4FFA    mov         edx,dword ptr [ebp-4]
 004D4FFD    mov         dword ptr [edx+50],eax;TRadioGroup.FControlStyle:TControlStyle
>004D5000    jmp         004D5015
 004D5002    mov         eax,[004D5024];0x40000 gvar_004D5024
 004D5007    mov         edx,dword ptr [ebp-4]
 004D500A    not         eax
 004D500C    and         eax,dword ptr [edx+50];TRadioGroup.FControlStyle:TControlStyle
 004D500F    mov         edx,dword ptr [ebp-4]
 004D5012    mov         dword ptr [edx+50],eax;TRadioGroup.FControlStyle:TControlStyle
 004D5015    mov         eax,dword ptr [ebp-4]
 004D5018    mov         edx,dword ptr [eax]
 004D501A    call        dword ptr [edx+7C];TRadioGroup.sub_004D3648
 004D501D    pop         ecx
 004D501E    pop         ecx
 004D501F    pop         ebp
 004D5020    ret
*}
end;

//004D5028
constructor TGraphicControl.Create(AOwner:TComponent);
begin
{*
 004D5028    push        ebp
 004D5029    mov         ebp,esp
 004D502B    add         esp,0FFFFFFF4
 004D502E    test        dl,dl
>004D5030    je          004D503A
 004D5032    add         esp,0FFFFFFF0
 004D5035    call        @ClassCreate
 004D503A    mov         dword ptr [ebp-0C],ecx
 004D503D    mov         byte ptr [ebp-5],dl
 004D5040    mov         dword ptr [ebp-4],eax
 004D5043    mov         ecx,dword ptr [ebp-0C]
 004D5046    xor         edx,edx
 004D5048    mov         eax,dword ptr [ebp-4]
 004D504B    call        004C9A30
 004D5050    mov         dl,1
 004D5052    mov         eax,[004C4BA4];TControlCanvas
 004D5057    call        TControlCanvas.Create
 004D505C    mov         edx,dword ptr [ebp-4]
 004D505F    mov         dword ptr [edx+160],eax
 004D5065    mov         eax,dword ptr [ebp-4]
 004D5068    mov         eax,dword ptr [eax+160]
 004D506E    mov         edx,dword ptr [ebp-4]
 004D5071    call        004C931C
 004D5076    mov         eax,dword ptr [ebp-4]
 004D5079    cmp         byte ptr [ebp-5],0
>004D507D    je          004D508E
 004D507F    call        @AfterConstruction
 004D5084    pop         dword ptr fs:[0]
 004D508B    add         esp,0C
 004D508E    mov         eax,dword ptr [ebp-4]
 004D5091    mov         esp,ebp
 004D5093    pop         ebp
 004D5094    ret
*}
end;

//004D5098
destructor TGraphicControl.Destroy;
begin
{*
 004D5098    push        ebp
 004D5099    mov         ebp,esp
 004D509B    add         esp,0FFFFFFF8
 004D509E    call        @BeforeDestruction
 004D50A3    mov         byte ptr [ebp-5],dl
 004D50A6    mov         dword ptr [ebp-4],eax
 004D50A9    mov         eax,[0054173C];0x0 gvar_0054173C
 004D50AE    cmp         eax,dword ptr [ebp-4]
>004D50B1    jne         004D50BA
 004D50B3    xor         eax,eax
 004D50B5    call        004C7370
 004D50BA    mov         eax,dword ptr [ebp-4]
 004D50BD    mov         eax,dword ptr [eax+160]
 004D50C3    call        TObject.Free
 004D50C8    mov         dl,byte ptr [ebp-5]
 004D50CB    and         dl,0FC
 004D50CE    mov         eax,dword ptr [ebp-4]
 004D50D1    call        TControl.Destroy
 004D50D6    cmp         byte ptr [ebp-5],0
>004D50DA    jle         004D50E4
 004D50DC    mov         eax,dword ptr [ebp-4]
 004D50DF    call        @ClassDestroy
 004D50E4    pop         ecx
 004D50E5    pop         ecx
 004D50E6    pop         ebp
 004D50E7    ret
*}
end;

//004D50E8
{*procedure TGraphicControl.WMPaint(?:?);
begin
 004D50E8    push        ebp
 004D50E9    mov         ebp,esp
 004D50EB    add         esp,0FFFFFFF8
 004D50EE    mov         dword ptr [ebp-8],edx
 004D50F1    mov         dword ptr [ebp-4],eax
 004D50F4    mov         eax,dword ptr [ebp-8]
 004D50F7    cmp         dword ptr [eax+4],0
>004D50FB    je          004D5192
 004D5101    mov         eax,dword ptr [ebp-4]
 004D5104    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 004D510A    call        TCanvas.Lock
 004D510F    xor         eax,eax
 004D5111    push        ebp
 004D5112    push        4D518B
 004D5117    push        dword ptr fs:[eax]
 004D511A    mov         dword ptr fs:[eax],esp
 004D511D    mov         edx,dword ptr [ebp-8]
 004D5120    mov         edx,dword ptr [edx+4]
 004D5123    mov         eax,dword ptr [ebp-4]
 004D5126    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 004D512C    call        TCanvas.SetHandle
 004D5131    xor         eax,eax
 004D5133    push        ebp
 004D5134    push        4D5168
 004D5139    push        dword ptr fs:[eax]
 004D513C    mov         dword ptr fs:[eax],esp
 004D513F    mov         eax,dword ptr [ebp-4]
 004D5142    mov         edx,dword ptr [eax]
 004D5144    call        dword ptr [edx+8C];TGraphicControl.sub_004D5198
 004D514A    xor         eax,eax
 004D514C    pop         edx
 004D514D    pop         ecx
 004D514E    pop         ecx
 004D514F    mov         dword ptr fs:[eax],edx
 004D5152    push        4D516F
 004D5157    mov         eax,dword ptr [ebp-4]
 004D515A    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 004D5160    xor         edx,edx
 004D5162    call        TCanvas.SetHandle
 004D5167    ret
>004D5168    jmp         @HandleFinally
>004D516D    jmp         004D5157
 004D516F    xor         eax,eax
 004D5171    pop         edx
 004D5172    pop         ecx
 004D5173    pop         ecx
 004D5174    mov         dword ptr fs:[eax],edx
 004D5177    push        4D5192
 004D517C    mov         eax,dword ptr [ebp-4]
 004D517F    mov         eax,dword ptr [eax+160];TGraphicControl....................................................
 004D5185    call        TCanvas.Unlock
 004D518A    ret
>004D518B    jmp         @HandleFinally
>004D5190    jmp         004D517C
 004D5192    pop         ecx
 004D5193    pop         ecx
 004D5194    pop         ebp
 004D5195    ret
end;*}

//004D5198
procedure sub_004D5198;
begin
{*
 004D5198    push        ebp
 004D5199    mov         ebp,esp
 004D519B    push        ecx
 004D519C    mov         dword ptr [ebp-4],eax
 004D519F    pop         ecx
 004D51A0    pop         ebp
 004D51A1    ret
*}
end;

//004D51A4
constructor THintWindow.Create(AOwner:TComponent);
begin
{*
 004D51A4    push        ebp
 004D51A5    mov         ebp,esp
 004D51A7    add         esp,0FFFFFFF4
 004D51AA    test        dl,dl
>004D51AC    je          004D51B6
 004D51AE    add         esp,0FFFFFFF0
 004D51B1    call        @ClassCreate
 004D51B6    mov         dword ptr [ebp-0C],ecx
 004D51B9    mov         byte ptr [ebp-5],dl
 004D51BC    mov         dword ptr [ebp-4],eax
 004D51BF    mov         ecx,dword ptr [ebp-0C]
 004D51C2    xor         edx,edx
 004D51C4    mov         eax,dword ptr [ebp-4]
 004D51C7    call        TCustomControl.Create
 004D51CC    mov         edx,80FFFF
 004D51D1    mov         eax,dword ptr [ebp-4]
 004D51D4    call        TPanel.SetColor
 004D51D9    mov         eax,[0055B6D8];^Screen:TScreen
 004D51DE    mov         eax,dword ptr [eax]
 004D51E0    mov         edx,dword ptr [eax+80];TScreen.FHintFont:TFont
 004D51E6    mov         eax,dword ptr [ebp-4]
 004D51E9    mov         eax,dword ptr [eax+208];THintWindow..................................FCanvas:TCanvas
 004D51EF    call        TCanvas.SetFont
 004D51F4    mov         eax,dword ptr [ebp-4]
 004D51F7    mov         eax,dword ptr [eax+208];THintWindow...................................FCanvas:TCanvas
 004D51FD    mov         eax,dword ptr [eax+14];TCanvas.Brush:TBrush
 004D5200    mov         dl,1
 004D5202    call        TBrush.SetStyle
 004D5207    mov         eax,dword ptr [ebp-4]
 004D520A    cmp         byte ptr [ebp-5],0
>004D520E    je          004D521F
 004D5210    call        @AfterConstruction
 004D5215    pop         dword ptr fs:[0]
 004D521C    add         esp,0C
 004D521F    mov         eax,dword ptr [ebp-4]
 004D5222    mov         esp,ebp
 004D5224    pop         ebp
 004D5225    ret
*}
end;

//004D5228
{*procedure sub_004D5228(?:?);
begin
 004D5228    push        ebp
 004D5229    mov         ebp,esp
 004D522B    add         esp,0FFFFFFF8
 004D522E    mov         dword ptr [ebp-8],edx
 004D5231    mov         dword ptr [ebp-4],eax
 004D5234    mov         edx,dword ptr [ebp-8]
 004D5237    mov         eax,dword ptr [ebp-4]
 004D523A    call        004CF814
 004D523F    mov         eax,dword ptr [ebp-8]
 004D5242    mov         dword ptr [eax+4],80800000
 004D5249    mov         eax,dword ptr [ebp-8]
 004D524C    or          dword ptr [eax+24],800
 004D5253    cmp         byte ptr ds:[55DDB0],0;NewStyleControls:Boolean
>004D525A    je          004D5266
 004D525C    mov         eax,dword ptr [ebp-8]
 004D525F    mov         dword ptr [eax+8],80
 004D5266    mov         edx,1
 004D526B    mov         eax,5
 004D5270    call        0046B440
 004D5275    test        al,al
>004D5277    je          004D5283
 004D5279    mov         eax,dword ptr [ebp-8]
 004D527C    or          dword ptr [eax+24],20000
 004D5283    cmp         byte ptr ds:[55DDB0],0;NewStyleControls:Boolean
>004D528A    je          004D5296
 004D528C    mov         eax,dword ptr [ebp-8]
 004D528F    mov         dword ptr [eax+8],80
 004D5296    mov         edx,dword ptr [ebp-8]
 004D5299    add         edx,8
 004D529C    mov         eax,dword ptr [ebp-4]
 004D529F    call        004CF794
 004D52A4    pop         ecx
 004D52A5    pop         ecx
 004D52A6    pop         ebp
 004D52A7    ret
end;*}

//004D52A8
{*procedure THintWindow.WMNCHitTest(?:?);
begin
 004D52A8    push        ebp
 004D52A9    mov         ebp,esp
 004D52AB    add         esp,0FFFFFFF8
 004D52AE    mov         dword ptr [ebp-8],edx
 004D52B1    mov         dword ptr [ebp-4],eax
 004D52B4    mov         eax,dword ptr [ebp-8]
 004D52B7    mov         dword ptr [eax+0C],0FFFFFFFF
 004D52BE    pop         ecx
 004D52BF    pop         ecx
 004D52C0    pop         ebp
 004D52C1    ret
end;*}

//004D52C4
{*procedure THintWindow.WMNCPaint(?:?);
begin
 004D52C4    push        ebp
 004D52C5    mov         ebp,esp
 004D52C7    add         esp,0FFFFFFF4
 004D52CA    mov         dword ptr [ebp-0C],edx
 004D52CD    mov         dword ptr [ebp-4],eax
 004D52D0    mov         eax,dword ptr [ebp-4]
 004D52D3    call        TWinControl.GetHandle
 004D52D8    push        eax
 004D52D9    call        user32.GetWindowDC
 004D52DE    mov         dword ptr [ebp-8],eax
 004D52E1    xor         eax,eax
 004D52E3    push        ebp
 004D52E4    push        4D531D
 004D52E9    push        dword ptr fs:[eax]
 004D52EC    mov         dword ptr fs:[eax],esp
 004D52EF    mov         edx,dword ptr [ebp-8]
 004D52F2    mov         eax,dword ptr [ebp-4]
 004D52F5    mov         ecx,dword ptr [eax]
 004D52F7    call        dword ptr [ecx+0CC];THintWindow.sub_004D57E8
 004D52FD    xor         eax,eax
 004D52FF    pop         edx
 004D5300    pop         ecx
 004D5301    pop         ecx
 004D5302    mov         dword ptr fs:[eax],edx
 004D5305    push        4D5324
 004D530A    mov         eax,dword ptr [ebp-8]
 004D530D    push        eax
 004D530E    mov         eax,dword ptr [ebp-4]
 004D5311    call        TWinControl.GetHandle
 004D5316    push        eax
 004D5317    call        user32.ReleaseDC
 004D531C    ret
>004D531D    jmp         @HandleFinally
>004D5322    jmp         004D530A
 004D5324    mov         esp,ebp
 004D5326    pop         ebp
 004D5327    ret
end;*}

//004D5328
procedure sub_004D5328;
begin
{*
 004D5328    push        ebp
 004D5329    mov         ebp,esp
 004D532B    add         esp,0FFFFFFE8
 004D532E    xor         edx,edx
 004D5330    mov         dword ptr [ebp-18],edx
 004D5333    mov         dword ptr [ebp-4],eax
 004D5336    xor         eax,eax
 004D5338    push        ebp
 004D5339    push        4D53CA
 004D533E    push        dword ptr fs:[eax]
 004D5341    mov         dword ptr fs:[eax],esp
 004D5344    lea         edx,[ebp-14]
 004D5347    mov         eax,dword ptr [ebp-4]
 004D534A    mov         ecx,dword ptr [eax]
 004D534C    call        dword ptr [ecx+44];THintWindow.sub_004D3A1C
 004D534F    add         dword ptr [ebp-14],2
 004D5353    add         dword ptr [ebp-10],2
 004D5357    mov         eax,[0055B6D8];^Screen:TScreen
 004D535C    mov         eax,dword ptr [eax]
 004D535E    mov         eax,dword ptr [eax+80];TScreen.FHintFont:TFont
 004D5364    mov         edx,dword ptr [eax+18];TFont.Color:TColor
 004D5367    mov         eax,dword ptr [ebp-4]
 004D536A    mov         eax,dword ptr [eax+208];THintWindow....................................FCanvas:TCanvas
 004D5370    mov         eax,dword ptr [eax+0C];TCanvas.Font:TFont
 004D5373    call        TFont.SetColor
 004D5378    mov         eax,dword ptr [ebp-4]
 004D537B    call        004CDFAC
 004D5380    or          eax,810
 004D5385    push        eax
 004D5386    lea         eax,[ebp-14]
 004D5389    push        eax
 004D538A    push        0FF
 004D538C    lea         edx,[ebp-18]
 004D538F    mov         eax,dword ptr [ebp-4]
 004D5392    call        TControl.GetText
 004D5397    mov         eax,dword ptr [ebp-18]
 004D539A    call        @LStrToPChar
 004D539F    push        eax
 004D53A0    mov         eax,dword ptr [ebp-4]
 004D53A3    mov         eax,dword ptr [eax+208];THintWindow.....................................FCanvas:TCanvas
 004D53A9    call        TCanvas.GetHandle
 004D53AE    push        eax
 004D53AF    call        user32.DrawTextA
 004D53B4    xor         eax,eax
 004D53B6    pop         edx
 004D53B7    pop         ecx
 004D53B8    pop         ecx
 004D53B9    mov         dword ptr fs:[eax],edx
 004D53BC    push        4D53D1
 004D53C1    lea         eax,[ebp-18]
 004D53C4    call        @LStrClr
 004D53C9    ret
>004D53CA    jmp         @HandleFinally
>004D53CF    jmp         004D53C1
 004D53D1    mov         esp,ebp
 004D53D3    pop         ebp
 004D53D4    ret
*}
end;

//004D53D8
{*function sub_004D53D8(?:?):?;
begin
 004D53D8    push        ebp
 004D53D9    mov         ebp,esp
 004D53DB    add         esp,0FFFFFFF4
 004D53DE    mov         dword ptr [ebp-8],edx
 004D53E1    mov         dword ptr [ebp-4],eax
 004D53E4    mov         eax,dword ptr [ebp-8]
 004D53E7    cmp         dword ptr [eax+4],100
>004D53EE    jb          004D53FC
 004D53F0    mov         eax,dword ptr [ebp-8]
 004D53F3    cmp         dword ptr [eax+4],108
>004D53FA    jbe         004D5460
 004D53FC    mov         eax,dword ptr [ebp-8]
 004D53FF    cmp         dword ptr [eax+4],0B000
>004D5406    je          004D5460
 004D5408    mov         eax,dword ptr [ebp-8]
 004D540B    cmp         dword ptr [eax+4],0B001
>004D5412    je          004D5460
 004D5414    mov         eax,dword ptr [ebp-8]
 004D5417    cmp         dword ptr [eax+4],0B016
>004D541E    je          004D5460
 004D5420    mov         eax,dword ptr [ebp-8]
 004D5423    cmp         dword ptr [eax+4],0B017
>004D542A    je          004D5460
 004D542C    mov         eax,dword ptr [ebp-8]
 004D542F    cmp         dword ptr [eax+4],111
>004D5436    je          004D5460
 004D5438    mov         eax,dword ptr [ebp-8]
 004D543B    cmp         dword ptr [eax+4],200
>004D5442    jbe         004D5450
 004D5444    mov         eax,dword ptr [ebp-8]
 004D5447    cmp         dword ptr [eax+4],20A
>004D544E    jbe         004D5460
 004D5450    mov         eax,dword ptr [ebp-8]
 004D5453    cmp         dword ptr [eax+4],0A0
>004D545A    je          004D5460
 004D545C    xor         eax,eax
>004D545E    jmp         004D5462
 004D5460    mov         al,1
 004D5462    mov         byte ptr [ebp-9],al
 004D5465    mov         al,byte ptr [ebp-9]
 004D5468    mov         esp,ebp
 004D546A    pop         ebp
 004D546B    ret
end;*}

//004D546C
{*procedure sub_004D546C(?:?);
begin
 004D546C    push        ebp
 004D546D    mov         ebp,esp
 004D546F    push        ecx
 004D5470    mov         dword ptr [ebp-4],eax
 004D5473    mov         eax,dword ptr [ebp-4]
 004D5476    call        004D00C4
 004D547B    pop         ecx
 004D547C    pop         ebp
 004D547D    ret
end;*}

//004D5480
{*procedure THintWindow.CMTextChanged(?:?);
begin
 004D5480    push        ebp
 004D5481    mov         ebp,esp
 004D5483    add         esp,0FFFFFFF0
 004D5486    xor         ecx,ecx
 004D5488    mov         dword ptr [ebp-10],ecx
 004D548B    mov         dword ptr [ebp-0C],ecx
 004D548E    mov         dword ptr [ebp-8],edx
 004D5491    mov         dword ptr [ebp-4],eax
 004D5494    xor         eax,eax
 004D5496    push        ebp
 004D5497    push        4D5526
 004D549C    push        dword ptr fs:[eax]
 004D549F    mov         dword ptr fs:[eax],esp
 004D54A2    mov         edx,dword ptr [ebp-8]
 004D54A5    mov         eax,dword ptr [ebp-4]
 004D54A8    mov         ecx,dword ptr [eax]
 004D54AA    call        dword ptr [ecx-10];TWinControl.DefaultHandler
 004D54AD    mov         eax,dword ptr [ebp-4]
 004D54B0    cmp         byte ptr [eax+210],0;THintWindow.FActivating:Boolean
>004D54B7    jne         004D550B
 004D54B9    lea         edx,[ebp-0C]
 004D54BC    mov         eax,dword ptr [ebp-4]
 004D54BF    call        TControl.GetText
 004D54C4    mov         edx,dword ptr [ebp-0C]
 004D54C7    mov         eax,dword ptr [ebp-4]
 004D54CA    mov         eax,dword ptr [eax+208];THintWindow......................................FCanvas:TCanvas
 004D54D0    call        TCanvas.TextWidth
 004D54D5    mov         edx,eax
 004D54D7    add         edx,6
 004D54DA    mov         eax,dword ptr [ebp-4]
 004D54DD    call        TControl.SetWidth
 004D54E2    lea         edx,[ebp-10]
 004D54E5    mov         eax,dword ptr [ebp-4]
 004D54E8    call        TControl.GetText
 004D54ED    mov         edx,dword ptr [ebp-10]
 004D54F0    mov         eax,dword ptr [ebp-4]
 004D54F3    mov         eax,dword ptr [eax+208];THintWindow.......................................FCanvas:TCanva...
 004D54F9    call        TCanvas.TextHeight
 004D54FE    mov         edx,eax
 004D5500    add         edx,4
 004D5503    mov         eax,dword ptr [ebp-4]
 004D5506    call        TControl.SetHeight
 004D550B    xor         eax,eax
 004D550D    pop         edx
 004D550E    pop         ecx
 004D550F    pop         ecx
 004D5510    mov         dword ptr fs:[eax],edx
 004D5513    push        4D552D
 004D5518    lea         eax,[ebp-10]
 004D551B    mov         edx,2
 004D5520    call        @LStrArrayClr
 004D5525    ret
>004D5526    jmp         @HandleFinally
>004D552B    jmp         004D5518
 004D552D    mov         esp,ebp
 004D552F    pop         ebp
 004D5530    ret
end;*}

//004D5534
{*procedure sub_004D5534(?:?; ?:?);
begin
 004D5534    push        ebp
 004D5535    mov         ebp,esp
 004D5537    add         esp,0FFFFFFD8
 004D553A    push        esi
 004D553B    push        edi
 004D553C    mov         esi,edx
 004D553E    lea         edi,[ebp-1D]
 004D5541    movs        dword ptr [edi],dword ptr [esi]
 004D5542    movs        dword ptr [edi],dword ptr [esi]
 004D5543    movs        dword ptr [edi],dword ptr [esi]
 004D5544    movs        dword ptr [edi],dword ptr [esi]
 004D5545    mov         dword ptr [ebp-8],ecx
 004D5548    mov         dword ptr [ebp-4],eax
 004D554B    mov         eax,dword ptr [ebp-4]
 004D554E    mov         byte ptr [eax+210],1;THintWindow.FActivating:Boolean
 004D5555    xor         eax,eax
 004D5557    push        ebp
 004D5558    push        4D573C
 004D555D    push        dword ptr fs:[eax]
 004D5560    mov         dword ptr fs:[eax],esp
 004D5563    mov         edx,dword ptr [ebp-8]
 004D5566    mov         eax,dword ptr [ebp-4]
 004D5569    call        TControl.SetText
 004D556E    add         dword ptr [ebp-11],4
 004D5572    lea         edx,[ebp-1D]
 004D5575    mov         eax,dword ptr [ebp-4]
 004D5578    call        004CC8C8
 004D557D    mov         eax,[0055B6D8];^Screen:TScreen
 004D5582    mov         eax,dword ptr [eax]
 004D5584    call        004F007C
 004D5589    mov         edx,dword ptr [ebp-4]
 004D558C    mov         edx,dword ptr [edx+4C];THintWindow.Height:Integer
 004D558F    add         edx,dword ptr [ebp-19]
 004D5592    cmp         eax,edx
>004D5594    jge         004D55AB
 004D5596    mov         eax,[0055B6D8];^Screen:TScreen
 004D559B    mov         eax,dword ptr [eax]
 004D559D    call        004F007C
 004D55A2    mov         edx,dword ptr [ebp-4]
 004D55A5    sub         eax,dword ptr [edx+4C]
 004D55A8    mov         dword ptr [ebp-19],eax
 004D55AB    mov         eax,[0055B6D8];^Screen:TScreen
 004D55B0    mov         eax,dword ptr [eax]
 004D55B2    call        004F009C
 004D55B7    mov         edx,dword ptr [ebp-4]
 004D55BA    mov         edx,dword ptr [edx+48];THintWindow.Width:Integer
 004D55BD    add         edx,dword ptr [ebp-1D]
 004D55C0    cmp         eax,edx
>004D55C2    jge         004D55D9
 004D55C4    mov         eax,[0055B6D8];^Screen:TScreen
 004D55C9    mov         eax,dword ptr [eax]
 004D55CB    call        004F009C
 004D55D0    mov         edx,dword ptr [ebp-4]
 004D55D3    sub         eax,dword ptr [edx+48]
 004D55D6    mov         dword ptr [ebp-1D],eax
 004D55D9    mov         eax,[0055B6D8];^Screen:TScreen
 004D55DE    mov         eax,dword ptr [eax]
 004D55E0    call        004F005C
 004D55E5    cmp         eax,dword ptr [ebp-1D]
>004D55E8    jle         004D55F9
 004D55EA    mov         eax,[0055B6D8];^Screen:TScreen
 004D55EF    mov         eax,dword ptr [eax]
 004D55F1    call        004F005C
 004D55F6    mov         dword ptr [ebp-1D],eax
 004D55F9    mov         eax,[0055B6D8];^Screen:TScreen
 004D55FE    mov         eax,dword ptr [eax]
 004D5600    call        004F003C
 004D5605    cmp         eax,dword ptr [ebp-11]
>004D5608    jle         004D5619
 004D560A    mov         eax,[0055B6D8];^Screen:TScreen
 004D560F    mov         eax,dword ptr [eax]
 004D5611    call        004F003C
 004D5616    mov         dword ptr [ebp-11],eax
 004D5619    push        10
 004D561B    mov         eax,dword ptr [ebp-4]
 004D561E    mov         eax,dword ptr [eax+4C];THintWindow.Height:Integer
 004D5621    push        eax
 004D5622    mov         eax,dword ptr [ebp-4]
 004D5625    mov         eax,dword ptr [eax+48];THintWindow.Width:Integer
 004D5628    push        eax
 004D5629    mov         eax,dword ptr [ebp-19]
 004D562C    push        eax
 004D562D    mov         eax,dword ptr [ebp-1D]
 004D5630    push        eax
 004D5631    push        0FF
 004D5633    mov         eax,dword ptr [ebp-4]
 004D5636    call        TWinControl.GetHandle
 004D563B    push        eax
 004D563C    call        user32.SetWindowPos
 004D5641    call        kernel32.GetTickCount
 004D5646    mov         edx,dword ptr [ebp-4]
 004D5649    sub         eax,dword ptr [edx+214]
 004D564F    cmp         eax,0FA
>004D5654    jbe         004D56EC
 004D565A    mov         eax,dword ptr [ebp-8]
 004D565D    call        @DynArrayLength
 004D5662    cmp         eax,64
>004D5665    jge         004D56EC
 004D566B    cmp         dword ptr ds:[541678],0;gvar_00541678
>004D5672    je          004D56EC
 004D5674    push        0
 004D5676    lea         eax,[ebp-0C]
 004D5679    push        eax
 004D567A    push        0
 004D567C    push        1016
 004D5681    call        user32.SystemParametersInfoA
 004D5686    cmp         dword ptr [ebp-0C],0
>004D568A    je          004D56EC
 004D568C    push        0
 004D568E    lea         eax,[ebp-0C]
 004D5691    push        eax
 004D5692    push        0
 004D5694    push        1018
 004D5699    call        user32.SystemParametersInfoA
 004D569E    cmp         dword ptr [ebp-0C],0
>004D56A2    je          004D56AA
 004D56A4    mov         byte ptr [ebp-0D],2
>004D56A8    jmp         004D56C9
 004D56AA    lea         edx,[ebp-28]
 004D56AD    mov         eax,[0055DDAC];gvar_0055DDAC
 004D56B2    call        004D95A4
 004D56B7    mov         eax,dword ptr [ebp-24]
 004D56BA    cmp         eax,dword ptr [ebp-19]
>004D56BD    jle         004D56C5
 004D56BF    mov         byte ptr [ebp-0D],0
>004D56C3    jmp         004D56C9
 004D56C5    mov         byte ptr [ebp-0D],1
 004D56C9    xor         eax,eax
 004D56CB    mov         al,byte ptr [ebp-0D]
 004D56CE    mov         eax,dword ptr [eax*4+541780]
 004D56D5    or          eax,40000
 004D56DA    push        eax
 004D56DB    push        64
 004D56DD    mov         eax,dword ptr [ebp-4]
 004D56E0    call        TWinControl.GetHandle
 004D56E5    push        eax
 004D56E6    call        dword ptr ds:[541678]
 004D56EC    mov         eax,[0055B4C8];^Application:TApplication
 004D56F1    mov         eax,dword ptr [eax]
 004D56F3    mov         edx,dword ptr [eax+30];TApplication.FHandle:HWND
 004D56F6    mov         eax,dword ptr [ebp-4]
 004D56F9    call        004D0318
 004D56FE    push        4
 004D5700    mov         eax,dword ptr [ebp-4]
 004D5703    call        TWinControl.GetHandle
 004D5708    push        eax
 004D5709    call        user32.ShowWindow
 004D570E    mov         eax,dword ptr [ebp-4]
 004D5711    mov         edx,dword ptr [eax]
 004D5713    call        dword ptr [edx+7C];THintWindow.sub_004D3648
 004D5716    xor         eax,eax
 004D5718    pop         edx
 004D5719    pop         ecx
 004D571A    pop         ecx
 004D571B    mov         dword ptr fs:[eax],edx
 004D571E    push        4D5743
 004D5723    call        kernel32.GetTickCount
 004D5728    mov         edx,dword ptr [ebp-4]
 004D572B    mov         dword ptr [edx+214],eax;THintWindow.FLastActive:Cardinal
 004D5731    mov         eax,dword ptr [ebp-4]
 004D5734    mov         byte ptr [eax+210],0;THintWindow.FActivating:Boolean
 004D573B    ret
>004D573C    jmp         @HandleFinally
>004D5741    jmp         004D5723
 004D5743    pop         edi
 004D5744    pop         esi
 004D5745    mov         esp,ebp
 004D5747    pop         ebp
 004D5748    ret
end;*}

//004D574C
{*procedure sub_004D574C(?:?; ?:?);
begin
 004D574C    push        ebp
 004D574D    mov         ebp,esp
 004D574F    add         esp,0FFFFFFE8
 004D5752    push        ebx
 004D5753    push        esi
 004D5754    push        edi
 004D5755    mov         esi,edx
 004D5757    lea         edi,[ebp-18]
 004D575A    movs        dword ptr [edi],dword ptr [esi]
 004D575B    movs        dword ptr [edi],dword ptr [esi]
 004D575C    movs        dword ptr [edi],dword ptr [esi]
 004D575D    movs        dword ptr [edi],dword ptr [esi]
 004D575E    mov         dword ptr [ebp-8],ecx
 004D5761    mov         dword ptr [ebp-4],eax
 004D5764    mov         ecx,dword ptr [ebp-8]
 004D5767    lea         edx,[ebp-18]
 004D576A    mov         eax,dword ptr [ebp-4]
 004D576D    mov         ebx,dword ptr [eax]
 004D576F    call        dword ptr [ebx+0D0];THintWindow.sub_004D5534
 004D5775    pop         edi
 004D5776    pop         esi
 004D5777    pop         ebx
 004D5778    mov         esp,ebp
 004D577A    pop         ebp
 004D577B    ret         4
end;*}

//004D5780
{*procedure sub_004D5780(?:?; ?:?; ?:?);
begin
 004D5780    push        ebp
 004D5781    mov         ebp,esp
 004D5783    add         esp,0FFFFFFF4
 004D5786    mov         dword ptr [ebp-0C],ecx
 004D5789    mov         dword ptr [ebp-8],edx
 004D578C    mov         dword ptr [ebp-4],eax
 004D578F    push        0
 004D5791    mov         eax,dword ptr [ebp+8]
 004D5794    push        eax
 004D5795    mov         ecx,dword ptr [ebp-8]
 004D5798    xor         edx,edx
 004D579A    xor         eax,eax
 004D579C    call        Rect
 004D57A1    mov         eax,dword ptr [ebp-4]
 004D57A4    call        004CDFAC
 004D57A9    or          eax,0C10
 004D57AE    push        eax
 004D57AF    mov         eax,dword ptr [ebp+8]
 004D57B2    push        eax
 004D57B3    push        0FF
 004D57B5    mov         eax,dword ptr [ebp-0C]
 004D57B8    call        @LStrToPChar
 004D57BD    push        eax
 004D57BE    mov         eax,dword ptr [ebp-4]
 004D57C1    mov         eax,dword ptr [eax+208];THintWindow........................................FCanvas:TCanv...
 004D57C7    call        TCanvas.GetHandle
 004D57CC    push        eax
 004D57CD    call        user32.DrawTextA
 004D57D2    mov         eax,dword ptr [ebp+8]
 004D57D5    add         dword ptr [eax+8],6
 004D57D9    mov         eax,dword ptr [ebp+8]
 004D57DC    add         dword ptr [eax+0C],2
 004D57E0    mov         esp,ebp
 004D57E2    pop         ebp
 004D57E3    ret         8
end;*}

//004D57E8
{*procedure sub_004D57E8(?:?);
begin
 004D57E8    push        ebp
 004D57E9    mov         ebp,esp
 004D57EB    add         esp,0FFFFFFDC
 004D57EE    mov         dword ptr [ebp-8],edx
 004D57F1    mov         dword ptr [ebp-4],eax
 004D57F4    mov         eax,dword ptr [ebp-4]
 004D57F7    mov         eax,dword ptr [eax+4C];THintWindow.Height:Integer
 004D57FA    push        eax
 004D57FB    lea         eax,[ebp-18]
 004D57FE    push        eax
 004D57FF    mov         eax,dword ptr [ebp-4]
 004D5802    mov         ecx,dword ptr [eax+48];THintWindow.Width:Integer
 004D5805    xor         edx,edx
 004D5807    xor         eax,eax
 004D5809    call        Rect
 004D580E    call        ThemeServices
 004D5813    call        TThemeServices.GetThemesEnabled
 004D5818    test        al,al
>004D581A    jne         004D582F
 004D581C    push        0F
 004D581E    push        1
 004D5820    lea         eax,[ebp-18]
 004D5823    push        eax
 004D5824    mov         eax,dword ptr [ebp-8]
 004D5827    push        eax
 004D5828    call        user32.DrawEdge
>004D582D    jmp         004D5858
 004D582F    call        ThemeServices
 004D5834    lea         ecx,[ebp-24]
 004D5837    mov         dl,1
 004D5839    call        004B6B5C
 004D583E    lea         eax,[ebp-18]
 004D5841    push        eax
 004D5842    push        1
 004D5844    push        0F
 004D5846    push        0
 004D5848    call        ThemeServices
 004D584D    lea         ecx,[ebp-24]
 004D5850    mov         edx,dword ptr [ebp-8]
 004D5853    call        004B643C
 004D5858    mov         esp,ebp
 004D585A    pop         ebp
 004D585B    ret
end;*}

//004D585C
{*procedure THintWindow.sub_004D585C(?:?);
begin
 004D585C    push        ebp
 004D585D    mov         ebp,esp
 004D585F    add         esp,0FFFFFFF8
 004D5862    mov         dword ptr [ebp-8],edx
 004D5865    mov         dword ptr [ebp-4],eax
 004D5868    push        0
 004D586A    mov         edx,dword ptr [ebp-8]
 004D586D    mov         edx,dword ptr [edx+4]
 004D5870    xor         ecx,ecx
 004D5872    mov         eax,dword ptr [ebp-4]
 004D5875    call        004D0E94
 004D587A    mov         edx,dword ptr [ebp-8]
 004D587D    mov         edx,dword ptr [edx+4]
 004D5880    mov         eax,dword ptr [ebp-4]
 004D5883    mov         ecx,dword ptr [eax]
 004D5885    call        dword ptr [ecx+0CC];THintWindow.sub_004D57E8
 004D588B    pop         ecx
 004D588C    pop         ecx
 004D588D    pop         ebp
 004D588E    ret
end;*}

//004D5890
{*procedure sub_004D5890(?:?; ?:?; ?:?; ?:?);
begin
 004D5890    push        ebp
 004D5891    mov         ebp,esp
 004D5893    add         esp,0FFFFFFDC
 004D5896    mov         dword ptr [ebp-0C],ecx
 004D5899    mov         dword ptr [ebp-8],edx
 004D589C    mov         dword ptr [ebp-4],eax
 004D589F    mov         eax,dword ptr [ebp-8]
 004D58A2    mov         dword ptr [ebp-14],eax
 004D58A5    mov         eax,dword ptr [ebp-0C]
 004D58A8    mov         dword ptr [ebp-10],eax
 004D58AB    lea         eax,[ebp-14]
 004D58AE    push        eax
 004D58AF    mov         eax,dword ptr [ebp-4]
 004D58B2    push        eax
 004D58B3    call        user32.ClientToScreen
 004D58B8    lea         eax,[ebp-24]
 004D58BB    push        eax
 004D58BC    mov         eax,dword ptr [ebp-4]
 004D58BF    push        eax
 004D58C0    call        user32.GetWindowRect
 004D58C5    mov         eax,dword ptr [ebp-14]
 004D58C8    sub         eax,dword ptr [ebp-24]
 004D58CB    mov         edx,dword ptr [ebp+8]
 004D58CE    mov         dword ptr [edx],eax
 004D58D0    mov         eax,dword ptr [ebp-10]
 004D58D3    sub         eax,dword ptr [ebp-20]
 004D58D6    mov         edx,dword ptr [ebp+8]
 004D58D9    mov         dword ptr [edx+4],eax
 004D58DC    mov         esp,ebp
 004D58DE    pop         ebp
 004D58DF    ret         4
end;*}

//004D58E4
procedure sub_004D58E4;
begin
{*
 004D58E4    push        ebp
 004D58E5    mov         ebp,esp
 004D58E7    push        ecx
 004D58E8    mov         dword ptr [ebp-4],eax
 004D58EB    mov         eax,dword ptr [ebp-4]
 004D58EE    call        004DC3E0
 004D58F3    or          edx,0FFFFFFFF
 004D58F6    mov         eax,dword ptr [ebp-4]
 004D58F9    call        004D5A44
 004D58FE    pop         ecx
 004D58FF    pop         ebp
 004D5900    ret
*}
end;

//004D5904
procedure sub_004D5904(?:TDragImageList);
begin
{*
 004D5904    push        ebp
 004D5905    mov         ebp,esp
 004D5907    add         esp,0FFFFFFF0
 004D590A    mov         dword ptr [ebp-4],eax
 004D590D    mov         eax,dword ptr [ebp-4]
 004D5910    cmp         word ptr [eax+68],0FFFFFFFF
>004D5915    je          004D59D4
 004D591B    push        1
 004D591D    push        1
 004D591F    push        1
 004D5921    push        0E
 004D5923    mov         eax,[0055B2BC];^gvar_0055DB78
 004D5928    mov         eax,dword ptr [eax]
 004D592A    call        eax
 004D592C    push        eax
 004D592D    push        0D
 004D592F    mov         eax,[0055B2BC];^gvar_0055DB78
 004D5934    mov         eax,dword ptr [eax]
 004D5936    call        eax
 004D5938    push        eax
 004D5939    call        comctl32.ImageList_Create
 004D593E    mov         dword ptr [ebp-8],eax
 004D5941    xor         eax,eax
 004D5943    push        ebp
 004D5944    push        4D59CD
 004D5949    push        dword ptr fs:[eax]
 004D594C    mov         dword ptr fs:[eax],esp
 004D594F    mov         eax,dword ptr [ebp-4]
 004D5952    movsx       edx,word ptr [eax+68]
 004D5956    mov         eax,[0055B6D8];^Screen:TScreen
 004D595B    mov         eax,dword ptr [eax]
 004D595D    call        004F0790
 004D5962    mov         edx,eax
 004D5964    mov         eax,dword ptr [ebp-8]
 004D5967    call        0042F354
 004D596C    mov         eax,dword ptr [ebp-4]
 004D596F    movsx       edx,word ptr [eax+68]
 004D5973    mov         eax,[0055B6D8];^Screen:TScreen
 004D5978    mov         eax,dword ptr [eax]
 004D597A    call        004F0790
 004D597F    mov         edx,eax
 004D5981    mov         eax,dword ptr [ebp-8]
 004D5984    call        0042F354
 004D5989    push        0
 004D598B    push        0
 004D598D    push        0
 004D598F    mov         eax,dword ptr [ebp-8]
 004D5992    push        eax
 004D5993    call        comctl32.ImageList_SetDragCursorImage
 004D5998    lea         eax,[ebp-10]
 004D599B    push        eax
 004D599C    push        0
 004D599E    call        comctl32.ImageList_GetDragImage
 004D59A3    mov         eax,dword ptr [ebp-0C]
 004D59A6    push        eax
 004D59A7    mov         eax,dword ptr [ebp-10]
 004D59AA    push        eax
 004D59AB    push        1
 004D59AD    mov         eax,dword ptr [ebp-8]
 004D59B0    push        eax
 004D59B1    call        comctl32.ImageList_SetDragCursorImage
 004D59B6    xor         eax,eax
 004D59B8    pop         edx
 004D59B9    pop         ecx
 004D59BA    pop         ecx
 004D59BB    mov         dword ptr fs:[eax],edx
 004D59BE    push        4D59D4
 004D59C3    mov         eax,dword ptr [ebp-8]
 004D59C6    push        eax
 004D59C7    call        comctl32.ImageList_Destroy
 004D59CC    ret
>004D59CD    jmp         @HandleFinally
>004D59D2    jmp         004D59C3
 004D59D4    mov         esp,ebp
 004D59D6    pop         ebp
 004D59D7    ret
*}
end;

//004D59D8
{*function sub_004D59D8(?:TDragImageList; ?:?; ?:?; ?:?):?;
begin
 004D59D8    push        ebp
 004D59D9    mov         ebp,esp
 004D59DB    add         esp,0FFFFFFF0
 004D59DE    mov         dword ptr [ebp-0C],ecx
 004D59E1    mov         dword ptr [ebp-8],edx
 004D59E4    mov         dword ptr [ebp-4],eax
 004D59E7    mov         eax,dword ptr [ebp-4]
 004D59EA    call        004DC4C0
 004D59EF    test        al,al
>004D59F1    je          004D5A37
 004D59F3    mov         eax,dword ptr [ebp-8]
 004D59F6    mov         edx,dword ptr [ebp-4]
 004D59F9    mov         dword ptr [edx+78],eax;TDragImageList.FDragIndex:Integer
 004D59FC    mov         eax,dword ptr [ebp-0C]
 004D59FF    mov         edx,dword ptr [ebp-4]
 004D5A02    mov         dword ptr [edx+70],eax;TDragImageList.FDragHotspot:TPoint
 004D5A05    mov         eax,dword ptr [ebp+8]
 004D5A08    mov         edx,dword ptr [ebp-4]
 004D5A0B    mov         dword ptr [edx+74],eax
 004D5A0E    mov         eax,dword ptr [ebp+8]
 004D5A11    push        eax
 004D5A12    mov         eax,dword ptr [ebp-0C]
 004D5A15    push        eax
 004D5A16    mov         eax,dword ptr [ebp-8]
 004D5A19    push        eax
 004D5A1A    mov         eax,dword ptr [ebp-4]
 004D5A1D    call        004DC758
 004D5A22    push        eax
 004D5A23    call        comctl32.ImageList_BeginDrag
 004D5A28    mov         byte ptr [ebp-0D],1
 004D5A2C    mov         al,byte ptr [ebp-0D]
 004D5A2F    mov         edx,dword ptr [ebp-4]
 004D5A32    mov         byte ptr [edx+6A],al;TDragImageList.FDragging:Boolean
>004D5A35    jmp         004D5A3B
 004D5A37    mov         byte ptr [ebp-0D],0
 004D5A3B    mov         al,byte ptr [ebp-0D]
 004D5A3E    mov         esp,ebp
 004D5A40    pop         ebp
 004D5A41    ret         4
end;*}

//004D5A44
{*procedure sub_004D5A44(?:TDragImageList; ?:?);
begin
 004D5A44    push        ebp
 004D5A45    mov         ebp,esp
 004D5A47    add         esp,0FFFFFFF8
 004D5A4A    mov         word ptr [ebp-6],dx
 004D5A4E    mov         dword ptr [ebp-4],eax
 004D5A51    mov         ax,word ptr [ebp-6]
 004D5A55    mov         edx,dword ptr [ebp-4]
 004D5A58    cmp         ax,word ptr [edx+68];TDragImageList.FDragCursor:TCursor
>004D5A5C    je          004D5A7A
 004D5A5E    mov         ax,word ptr [ebp-6]
 004D5A62    mov         edx,dword ptr [ebp-4]
 004D5A65    mov         word ptr [edx+68],ax;TDragImageList.FDragCursor:TCursor
 004D5A69    mov         eax,dword ptr [ebp-4]
 004D5A6C    cmp         byte ptr [eax+6A],0;TDragImageList.FDragging:Boolean
>004D5A70    je          004D5A7A
 004D5A72    mov         eax,dword ptr [ebp-4]
 004D5A75    call        004D5904
 004D5A7A    pop         ecx
 004D5A7B    pop         ecx
 004D5A7C    pop         ebp
 004D5A7D    ret
end;*}

//004D5A80
{*procedure sub_004D5A80(?:?);
begin
 004D5A80    push        ebp
 004D5A81    mov         ebp,esp
 004D5A83    add         esp,0FFFFFFF8
 004D5A86    mov         dword ptr [ebp-8],edx
 004D5A89    mov         dword ptr [ebp-4],eax
 004D5A8C    mov         edx,dword ptr [ebp-8]
 004D5A8F    mov         eax,dword ptr [ebp-4]
 004D5A92    call        004DD664
 004D5A97    mov         eax,dword ptr [ebp-4]
 004D5A9A    call        004DC4C0
 004D5A9F    test        al,al
>004D5AA1    je          004D5AB7
 004D5AA3    mov         eax,dword ptr [ebp-4]
 004D5AA6    cmp         byte ptr [eax+6A],0;TDragImageList.FDragging:Boolean
>004D5AAA    je          004D5AB7
 004D5AAC    mov         eax,dword ptr [ebp-8]
 004D5AAF    push        eax
 004D5AB0    push        0
 004D5AB2    call        comctl32.ImageList_GetDragImage
 004D5AB7    pop         ecx
 004D5AB8    pop         ecx
 004D5AB9    pop         ebp
 004D5ABA    ret
end;*}

//004D5ABC
{*function sub_004D5ABC(?:?; ?:HWND; ?:?; ?:?):?;
begin
 004D5ABC    push        ebp
 004D5ABD    mov         ebp,esp
 004D5ABF    add         esp,0FFFFFFF0
 004D5AC2    mov         dword ptr [ebp-0C],ecx
 004D5AC5    mov         dword ptr [ebp-8],edx
 004D5AC8    mov         dword ptr [ebp-4],eax
 004D5ACB    mov         byte ptr [ebp-0D],0
 004D5ACF    mov         eax,dword ptr [ebp-4]
 004D5AD2    call        004DC4C0
 004D5AD7    test        al,al
>004D5AD9    je          004D5B29
 004D5ADB    mov         eax,dword ptr [ebp-4]
 004D5ADE    cmp         byte ptr [eax+6A],0
>004D5AE2    jne         004D5AFF
 004D5AE4    mov         eax,dword ptr [ebp-4]
 004D5AE7    mov         eax,dword ptr [eax+74]
 004D5AEA    push        eax
 004D5AEB    mov         eax,dword ptr [ebp-4]
 004D5AEE    mov         ecx,dword ptr [eax+70]
 004D5AF1    mov         eax,dword ptr [ebp-4]
 004D5AF4    mov         edx,dword ptr [eax+78]
 004D5AF7    mov         eax,dword ptr [ebp-4]
 004D5AFA    call        004D59D8
 004D5AFF    mov         eax,dword ptr [ebp-4]
 004D5B02    call        004D5904
 004D5B07    mov         eax,dword ptr [ebp+8]
 004D5B0A    push        eax
 004D5B0B    mov         ecx,dword ptr [ebp-0C]
 004D5B0E    mov         edx,dword ptr [ebp-8]
 004D5B11    mov         eax,dword ptr [ebp-4]
 004D5B14    call        004D5B34
 004D5B19    mov         byte ptr [ebp-0D],al
 004D5B1C    cmp         byte ptr [ebp-0D],0
>004D5B20    je          004D5B29
 004D5B22    push        0
 004D5B24    call        user32.ShowCursor
 004D5B29    mov         al,byte ptr [ebp-0D]
 004D5B2C    mov         esp,ebp
 004D5B2E    pop         ebp
 004D5B2F    ret         4
end;*}

//004D5B34
{*function sub_004D5B34(?:?; ?:HWND; ?:?; ?:?):?;
begin
 004D5B34    push        ebp
 004D5B35    mov         ebp,esp
 004D5B37    add         esp,0FFFFFFE8
 004D5B3A    mov         dword ptr [ebp-0C],ecx
 004D5B3D    mov         dword ptr [ebp-8],edx
 004D5B40    mov         dword ptr [ebp-4],eax
 004D5B43    mov         byte ptr [ebp-0D],0
 004D5B47    mov         eax,dword ptr [ebp-4]
 004D5B4A    call        004DC4C0
 004D5B4F    test        al,al
>004D5B51    je          004D5BA1
 004D5B53    mov         eax,dword ptr [ebp-8]
 004D5B56    mov         edx,dword ptr [ebp-4]
 004D5B59    cmp         eax,dword ptr [edx+6C]
>004D5B5C    je          004D5BA1
 004D5B5E    mov         eax,dword ptr [ebp-4]
 004D5B61    call        004D5BAC
 004D5B66    mov         eax,dword ptr [ebp-8]
 004D5B69    mov         edx,dword ptr [ebp-4]
 004D5B6C    mov         dword ptr [edx+6C],eax
 004D5B6F    lea         eax,[ebp-15]
 004D5B72    push        eax
 004D5B73    mov         ecx,dword ptr [ebp+8]
 004D5B76    mov         edx,dword ptr [ebp-0C]
 004D5B79    mov         eax,dword ptr [ebp-4]
 004D5B7C    mov         eax,dword ptr [eax+6C]
 004D5B7F    call        004D5890
 004D5B84    mov         eax,dword ptr [ebp-11]
 004D5B87    push        eax
 004D5B88    mov         eax,dword ptr [ebp-15]
 004D5B8B    push        eax
 004D5B8C    mov         eax,dword ptr [ebp-4]
 004D5B8F    mov         eax,dword ptr [eax+6C]
 004D5B92    push        eax
 004D5B93    call        comctl32.ImageList_DragEnter
 004D5B98    cmp         eax,1
 004D5B9B    sbb         eax,eax
 004D5B9D    inc         eax
 004D5B9E    mov         byte ptr [ebp-0D],al
 004D5BA1    mov         al,byte ptr [ebp-0D]
 004D5BA4    mov         esp,ebp
 004D5BA6    pop         ebp
 004D5BA7    ret         4
end;*}

//004D5BAC
procedure sub_004D5BAC(?:TDragImageList);
begin
{*
 004D5BAC    push        ebp
 004D5BAD    mov         ebp,esp
 004D5BAF    push        ecx
 004D5BB0    mov         dword ptr [ebp-4],eax
 004D5BB3    mov         eax,dword ptr [ebp-4]
 004D5BB6    call        004DC4C0
 004D5BBB    test        al,al
>004D5BBD    je          004D5BDC
 004D5BBF    mov         eax,dword ptr [ebp-4]
 004D5BC2    cmp         dword ptr [eax+6C],0
>004D5BC6    je          004D5BDC
 004D5BC8    mov         eax,dword ptr [ebp-4]
 004D5BCB    mov         eax,dword ptr [eax+6C]
 004D5BCE    push        eax
 004D5BCF    call        comctl32.ImageList_DragLeave
 004D5BD4    mov         eax,dword ptr [ebp-4]
 004D5BD7    xor         edx,edx
 004D5BD9    mov         dword ptr [eax+6C],edx
 004D5BDC    pop         ecx
 004D5BDD    pop         ebp
 004D5BDE    ret
*}
end;

//004D5BE0
{*function sub_004D5BE0(?:?; ?:?; ?:?):?;
begin
 004D5BE0    push        ebp
 004D5BE1    mov         ebp,esp
 004D5BE3    add         esp,0FFFFFFE8
 004D5BE6    mov         dword ptr [ebp-0C],ecx
 004D5BE9    mov         dword ptr [ebp-8],edx
 004D5BEC    mov         dword ptr [ebp-4],eax
 004D5BEF    mov         eax,dword ptr [ebp-4]
 004D5BF2    call        004DC4C0
 004D5BF7    test        al,al
>004D5BF9    je          004D5C28
 004D5BFB    lea         eax,[ebp-15]
 004D5BFE    push        eax
 004D5BFF    mov         ecx,dword ptr [ebp-0C]
 004D5C02    mov         edx,dword ptr [ebp-8]
 004D5C05    mov         eax,dword ptr [ebp-4]
 004D5C08    mov         eax,dword ptr [eax+6C]
 004D5C0B    call        004D5890
 004D5C10    mov         eax,dword ptr [ebp-11]
 004D5C13    push        eax
 004D5C14    mov         eax,dword ptr [ebp-15]
 004D5C17    push        eax
 004D5C18    call        comctl32.ImageList_DragMove
 004D5C1D    cmp         eax,1
 004D5C20    sbb         eax,eax
 004D5C22    inc         eax
 004D5C23    mov         byte ptr [ebp-0D],al
>004D5C26    jmp         004D5C2C
 004D5C28    mov         byte ptr [ebp-0D],0
 004D5C2C    mov         al,byte ptr [ebp-0D]
 004D5C2F    mov         esp,ebp
 004D5C31    pop         ebp
 004D5C32    ret
end;*}

//004D5C34
{*procedure sub_004D5C34(?:?);
begin
 004D5C34    push        ebp
 004D5C35    mov         ebp,esp
 004D5C37    push        ecx
 004D5C38    mov         dword ptr [ebp-4],eax
 004D5C3B    mov         eax,dword ptr [ebp-4]
 004D5C3E    call        004DC4C0
 004D5C43    test        al,al
>004D5C45    je          004D5C4E
 004D5C47    push        0FF
 004D5C49    call        comctl32.ImageList_DragShowNolock
 004D5C4E    pop         ecx
 004D5C4F    pop         ebp
 004D5C50    ret
end;*}

//004D5C54
{*procedure sub_004D5C54(?:?);
begin
 004D5C54    push        ebp
 004D5C55    mov         ebp,esp
 004D5C57    push        ecx
 004D5C58    mov         dword ptr [ebp-4],eax
 004D5C5B    mov         eax,dword ptr [ebp-4]
 004D5C5E    call        004DC4C0
 004D5C63    test        al,al
>004D5C65    je          004D5C6E
 004D5C67    push        0
 004D5C69    call        comctl32.ImageList_DragShowNolock
 004D5C6E    pop         ecx
 004D5C6F    pop         ebp
 004D5C70    ret
end;*}

//004D5C74
{*function sub_004D5C74(?:TDragImageList):?;
begin
 004D5C74    push        ebp
 004D5C75    mov         ebp,esp
 004D5C77    add         esp,0FFFFFFF8
 004D5C7A    mov         dword ptr [ebp-4],eax
 004D5C7D    mov         eax,dword ptr [ebp-4]
 004D5C80    call        004DC4C0
 004D5C85    test        al,al
>004D5C87    je          004D5CC3
 004D5C89    mov         eax,dword ptr [ebp-4]
 004D5C8C    cmp         byte ptr [eax+6A],0;TDragImageList.FDragging:Boolean
>004D5C90    je          004D5CC3
 004D5C92    mov         eax,dword ptr [ebp-4]
 004D5C95    call        004D5BAC
 004D5C9A    call        comctl32.ImageList_EndDrag
 004D5C9F    cmp         eax,1
 004D5CA2    sbb         eax,eax
 004D5CA4    inc         eax
 004D5CA5    mov         byte ptr [ebp-5],al
 004D5CA8    mov         eax,dword ptr [ebp-4]
 004D5CAB    mov         byte ptr [eax+6A],0;TDragImageList.FDragging:Boolean
 004D5CAF    or          edx,0FFFFFFFF
 004D5CB2    mov         eax,dword ptr [ebp-4]
 004D5CB5    call        004D5A44
 004D5CBA    push        0FF
 004D5CBC    call        user32.ShowCursor
>004D5CC1    jmp         004D5CC7
 004D5CC3    mov         byte ptr [ebp-5],0
 004D5CC7    mov         al,byte ptr [ebp-5]
 004D5CCA    pop         ecx
 004D5CCB    pop         ecx
 004D5CCC    pop         ebp
 004D5CCD    ret
end;*}

//004D5CD0
constructor TCustomControl.Create(AOwner:TComponent);
begin
{*
 004D5CD0    push        ebp
 004D5CD1    mov         ebp,esp
 004D5CD3    add         esp,0FFFFFFF4
 004D5CD6    test        dl,dl
>004D5CD8    je          004D5CE2
 004D5CDA    add         esp,0FFFFFFF0
 004D5CDD    call        @ClassCreate
 004D5CE2    mov         dword ptr [ebp-0C],ecx
 004D5CE5    mov         byte ptr [ebp-5],dl
 004D5CE8    mov         dword ptr [ebp-4],eax
 004D5CEB    mov         ecx,dword ptr [ebp-0C]
 004D5CEE    xor         edx,edx
 004D5CF0    mov         eax,dword ptr [ebp-4]
 004D5CF3    call        TWinControl.Create
 004D5CF8    mov         dl,1
 004D5CFA    mov         eax,[004C4BA4];TControlCanvas
 004D5CFF    call        TControlCanvas.Create;TControlCanvas.Create
 004D5D04    mov         edx,dword ptr [ebp-4]
 004D5D07    mov         dword ptr [edx+208],eax;TCustomControl.........................................FCanvas:T...
 004D5D0D    mov         eax,dword ptr [ebp-4]
 004D5D10    mov         eax,dword ptr [eax+208];TCustomControl..........................................FCanvas:...
 004D5D16    mov         edx,dword ptr [ebp-4]
 004D5D19    call        004C931C
 004D5D1E    mov         eax,dword ptr [ebp-4]
 004D5D21    cmp         byte ptr [ebp-5],0
>004D5D25    je          004D5D36
 004D5D27    call        @AfterConstruction
 004D5D2C    pop         dword ptr fs:[0]
 004D5D33    add         esp,0C
 004D5D36    mov         eax,dword ptr [ebp-4]
 004D5D39    mov         esp,ebp
 004D5D3B    pop         ebp
 004D5D3C    ret
*}
end;

//004D5D40
destructor TCustomControl.Destroy;
begin
{*
 004D5D40    push        ebp
 004D5D41    mov         ebp,esp
 004D5D43    add         esp,0FFFFFFF8
 004D5D46    call        @BeforeDestruction
 004D5D4B    mov         byte ptr [ebp-5],dl
 004D5D4E    mov         dword ptr [ebp-4],eax
 004D5D51    mov         eax,dword ptr [ebp-4]
 004D5D54    mov         eax,dword ptr [eax+208];TCustomControl...........................................FCanvas...
 004D5D5A    call        TObject.Free
 004D5D5F    mov         dl,byte ptr [ebp-5]
 004D5D62    and         dl,0FC
 004D5D65    mov         eax,dword ptr [ebp-4]
 004D5D68    call        TWinControl.Destroy
 004D5D6D    cmp         byte ptr [ebp-5],0
>004D5D71    jle         004D5D7B
 004D5D73    mov         eax,dword ptr [ebp-4]
 004D5D76    call        @ClassDestroy
 004D5D7B    pop         ecx
 004D5D7C    pop         ecx
 004D5D7D    pop         ebp
 004D5D7E    ret
*}
end;

//004D5D80
procedure TCustomControl.WMPaint(Message:TWMPaint);
begin
{*
 004D5D80    push        ebp
 004D5D81    mov         ebp,esp
 004D5D83    add         esp,0FFFFFFF8
 004D5D86    mov         dword ptr [ebp-8],edx
 004D5D89    mov         dword ptr [ebp-4],eax
 004D5D8C    mov         eax,dword ptr [ebp-4]
 004D5D8F    or          word ptr [eax+54],100;TCustomControl.FControlState:TControlState
 004D5D95    mov         edx,dword ptr [ebp-8]
 004D5D98    mov         eax,dword ptr [ebp-4]
 004D5D9B    call        TWinControl.WMPaint
 004D5DA0    mov         eax,dword ptr [ebp-4]
 004D5DA3    and         word ptr [eax+54],0FEFF;TCustomControl.FControlState:TControlState
 004D5DA9    pop         ecx
 004D5DAA    pop         ecx
 004D5DAB    pop         ebp
 004D5DAC    ret
*}
end;

//004D5DB0
{*procedure sub_004D5DB0(?:?);
begin
 004D5DB0    push        ebp
 004D5DB1    mov         ebp,esp
 004D5DB3    add         esp,0FFFFFFF8
 004D5DB6    mov         dword ptr [ebp-8],edx
 004D5DB9    mov         dword ptr [ebp-4],eax
 004D5DBC    mov         eax,dword ptr [ebp-4]
 004D5DBF    mov         eax,dword ptr [eax+208];TCustomControl............................................FCanva...
 004D5DC5    call        TCanvas.Lock
 004D5DCA    xor         eax,eax
 004D5DCC    push        ebp
 004D5DCD    push        4D5E51
 004D5DD2    push        dword ptr fs:[eax]
 004D5DD5    mov         dword ptr fs:[eax],esp
 004D5DD8    mov         eax,dword ptr [ebp-4]
 004D5DDB    mov         eax,dword ptr [eax+208];TCustomControl.............................................FCanv...
 004D5DE1    mov         edx,dword ptr [ebp-8]
 004D5DE4    call        TCanvas.SetHandle
 004D5DE9    xor         eax,eax
 004D5DEB    push        ebp
 004D5DEC    push        4D5E2E
 004D5DF1    push        dword ptr fs:[eax]
 004D5DF4    mov         dword ptr fs:[eax],esp
 004D5DF7    mov         eax,dword ptr [ebp-4]
 004D5DFA    mov         eax,dword ptr [eax+208];TCustomControl..............................................FCan...
 004D5E00    call        004C9348
 004D5E05    mov         eax,dword ptr [ebp-4]
 004D5E08    mov         edx,dword ptr [eax]
 004D5E0A    call        dword ptr [edx+0C8];TCustomControl.sub_004D5E5C
 004D5E10    xor         eax,eax
 004D5E12    pop         edx
 004D5E13    pop         ecx
 004D5E14    pop         ecx
 004D5E15    mov         dword ptr fs:[eax],edx
 004D5E18    push        4D5E35
 004D5E1D    mov         eax,dword ptr [ebp-4]
 004D5E20    mov         eax,dword ptr [eax+208];TCustomControl...............................................FCa...
 004D5E26    xor         edx,edx
 004D5E28    call        TCanvas.SetHandle
 004D5E2D    ret
>004D5E2E    jmp         @HandleFinally
>004D5E33    jmp         004D5E1D
 004D5E35    xor         eax,eax
 004D5E37    pop         edx
 004D5E38    pop         ecx
 004D5E39    pop         ecx
 004D5E3A    mov         dword ptr fs:[eax],edx
 004D5E3D    push        4D5E58
 004D5E42    mov         eax,dword ptr [ebp-4]
 004D5E45    mov         eax,dword ptr [eax+208];TCustomControl................................................FC...
 004D5E4B    call        TCanvas.Unlock
 004D5E50    ret
>004D5E51    jmp         @HandleFinally
>004D5E56    jmp         004D5E42
 004D5E58    pop         ecx
 004D5E59    pop         ecx
 004D5E5A    pop         ebp
 004D5E5B    ret
end;*}

//004D5E5C
procedure sub_004D5E5C;
begin
{*
 004D5E5C    push        ebp
 004D5E5D    mov         ebp,esp
 004D5E5F    push        ecx
 004D5E60    mov         dword ptr [ebp-4],eax
 004D5E63    pop         ecx
 004D5E64    pop         ebp
 004D5E65    ret
*}
end;

//004D5E68
{*function sub_004D5E68(?:?):?;
begin
 004D5E68    push        ebp
 004D5E69    mov         ebp,esp
 004D5E6B    add         esp,0FFFFFFF8
 004D5E6E    mov         dword ptr [ebp-4],eax
 004D5E71    mov         eax,dword ptr [ebp-4]
 004D5E74    mov         dword ptr [ebp-8],eax
>004D5E77    jmp         004D5E82
 004D5E79    mov         eax,dword ptr [ebp-8]
 004D5E7C    mov         eax,dword ptr [eax+0C]
 004D5E7F    mov         dword ptr [ebp-8],eax
 004D5E82    cmp         dword ptr [ebp-8],0
>004D5E86    je          004D5E94
 004D5E88    mov         eax,dword ptr [ebp-8]
 004D5E8B    call        004D5F9C
 004D5E90    test        al,al
>004D5E92    je          004D5E79
 004D5E94    mov         eax,dword ptr [ebp-8]
 004D5E97    pop         ecx
 004D5E98    pop         ecx
 004D5E99    pop         ebp
 004D5E9A    ret
end;*}

//004D5E9C
{*function sub_004D5E9C(?:?):?;
begin
 004D5E9C    push        ebp
 004D5E9D    mov         ebp,esp
 004D5E9F    add         esp,0FFFFFFF8
 004D5EA2    mov         dword ptr [ebp-4],eax
 004D5EA5    mov         eax,dword ptr [ebp-4]
 004D5EA8    cmp         dword ptr [eax+14],0
>004D5EAC    je          004D5EBA
 004D5EAE    mov         eax,dword ptr [ebp-4]
 004D5EB1    mov         eax,dword ptr [eax+14]
 004D5EB4    cmp         byte ptr [eax+10],0
>004D5EB8    jne         004D5ED5
 004D5EBA    mov         eax,dword ptr [ebp-4]
 004D5EBD    mov         eax,dword ptr [eax+1C]
 004D5EC0    mov         eax,dword ptr [eax+64]
 004D5EC3    cmp         eax,dword ptr [ebp-4]
>004D5EC6    jne         004D5ED1
 004D5EC8    mov         eax,dword ptr [ebp-4]
 004D5ECB    cmp         byte ptr [eax+10],0
>004D5ECF    jne         004D5ED5
 004D5ED1    xor         eax,eax
>004D5ED3    jmp         004D5ED7
 004D5ED5    mov         al,1
 004D5ED7    mov         byte ptr [ebp-5],al
 004D5EDA    mov         al,byte ptr [ebp-5]
 004D5EDD    pop         ecx
 004D5EDE    pop         ecx
 004D5EDF    pop         ebp
 004D5EE0    ret
end;*}

//004D5EE4
constructor TDockZone.Create;
begin
{*
 004D5EE4    push        ebp
 004D5EE5    mov         ebp,esp
 004D5EE7    add         esp,0FFFFFFF4
 004D5EEA    test        dl,dl
>004D5EEC    je          004D5EF6
 004D5EEE    add         esp,0FFFFFFF0
 004D5EF1    call        @ClassCreate
 004D5EF6    mov         dword ptr [ebp-0C],ecx
 004D5EF9    mov         byte ptr [ebp-5],dl
 004D5EFC    mov         dword ptr [ebp-4],eax
 004D5EFF    mov         eax,dword ptr [ebp-4]
 004D5F02    mov         edx,dword ptr [ebp-0C]
 004D5F05    mov         dword ptr [eax+1C],edx
 004D5F08    mov         eax,dword ptr [ebp-4]
 004D5F0B    cmp         byte ptr [ebp-5],0
>004D5F0F    je          004D5F20
 004D5F11    call        @AfterConstruction
 004D5F16    pop         dword ptr fs:[0]
 004D5F1D    add         esp,0C
 004D5F20    mov         eax,dword ptr [ebp-4]
 004D5F23    mov         esp,ebp
 004D5F25    pop         ebp
 004D5F26    ret
*}
end;

//004D5F28
{*function sub_004D5F28(?:TDockZone):?;
begin
 004D5F28    push        ebp
 004D5F29    mov         ebp,esp
 004D5F2B    add         esp,0FFFFFFF4
 004D5F2E    mov         dword ptr [ebp-4],eax
 004D5F31    xor         eax,eax
 004D5F33    mov         dword ptr [ebp-8],eax
 004D5F36    mov         eax,dword ptr [ebp-4]
 004D5F39    mov         eax,dword ptr [eax+8]
 004D5F3C    mov         dword ptr [ebp-0C],eax
 004D5F3F    cmp         dword ptr [ebp-0C],0
>004D5F43    je          004D5F57
 004D5F45    mov         eax,dword ptr [ebp-0C]
 004D5F48    mov         eax,dword ptr [eax+0C]
 004D5F4B    mov         dword ptr [ebp-0C],eax
 004D5F4E    inc         dword ptr [ebp-8]
 004D5F51    cmp         dword ptr [ebp-0C],0
>004D5F55    jne         004D5F45
 004D5F57    mov         eax,dword ptr [ebp-8]
 004D5F5A    mov         esp,ebp
 004D5F5C    pop         ebp
 004D5F5D    ret
end;*}

//004D5F60
{*function sub_004D5F60(?:?):?;
begin
 004D5F60    push        ebp
 004D5F61    mov         ebp,esp
 004D5F63    add         esp,0FFFFFFF4
 004D5F66    mov         dword ptr [ebp-4],eax
 004D5F69    xor         eax,eax
 004D5F6B    mov         dword ptr [ebp-8],eax
 004D5F6E    mov         eax,dword ptr [ebp-4]
 004D5F71    call        004D67E0
 004D5F76    mov         dword ptr [ebp-0C],eax
 004D5F79    cmp         dword ptr [ebp-0C],0
>004D5F7D    je          004D5F93
 004D5F7F    mov         eax,dword ptr [ebp-0C]
 004D5F82    call        004D6788
 004D5F87    mov         dword ptr [ebp-0C],eax
 004D5F8A    inc         dword ptr [ebp-8]
 004D5F8D    cmp         dword ptr [ebp-0C],0
>004D5F91    jne         004D5F7F
 004D5F93    mov         eax,dword ptr [ebp-8]
 004D5F96    mov         esp,ebp
 004D5F98    pop         ebp
 004D5F99    ret
end;*}

//004D5F9C
{*function sub_004D5F9C(?:?):?;
begin
 004D5F9C    push        ebp
 004D5F9D    mov         ebp,esp
 004D5F9F    add         esp,0FFFFFFF4
 004D5FA2    mov         dword ptr [ebp-4],eax
 004D5FA5    mov         eax,dword ptr [ebp-4]
 004D5FA8    cmp         dword ptr [eax+4],0
>004D5FAC    je          004D5FBC
 004D5FAE    mov         eax,dword ptr [ebp-4]
 004D5FB1    mov         eax,dword ptr [eax+4]
 004D5FB4    mov         al,byte ptr [eax+57]
 004D5FB7    mov         byte ptr [ebp-5],al
>004D5FBA    jmp         004D5FF0
 004D5FBC    mov         byte ptr [ebp-5],1
 004D5FC0    mov         eax,dword ptr [ebp-4]
 004D5FC3    call        004D67E0
 004D5FC8    mov         dword ptr [ebp-0C],eax
 004D5FCB    cmp         dword ptr [ebp-0C],0
>004D5FCF    je          004D5FEC
 004D5FD1    mov         eax,dword ptr [ebp-0C]
 004D5FD4    call        004D5F9C
 004D5FD9    test        al,al
>004D5FDB    jne         004D5FF0
 004D5FDD    mov         eax,dword ptr [ebp-0C]
 004D5FE0    mov         eax,dword ptr [eax+0C]
 004D5FE3    mov         dword ptr [ebp-0C],eax
 004D5FE6    cmp         dword ptr [ebp-0C],0
>004D5FEA    jne         004D5FD1
 004D5FEC    mov         byte ptr [ebp-5],0
 004D5FF0    mov         al,byte ptr [ebp-5]
 004D5FF3    mov         esp,ebp
 004D5FF5    pop         ebp
 004D5FF6    ret
end;*}

//004D5FF8
{*function sub_004D5FF8(?:?):?;
begin
 004D5FF8    push        ebp
 004D5FF9    mov         ebp,esp
 004D5FFB    add         esp,0FFFFFFF4
 004D5FFE    mov         dword ptr [ebp-4],eax
 004D6001    mov         eax,dword ptr [ebp-4]
 004D6004    mov         eax,dword ptr [eax+1C]
 004D6007    mov         eax,dword ptr [eax+64]
 004D600A    cmp         eax,dword ptr [ebp-4]
>004D600D    jne         004D6017
 004D600F    mov         eax,dword ptr [ebp-4]
 004D6012    mov         dword ptr [ebp-0C],eax
>004D6015    jmp         004D6020
 004D6017    mov         eax,dword ptr [ebp-4]
 004D601A    mov         eax,dword ptr [eax+14]
 004D601D    mov         dword ptr [ebp-0C],eax
 004D6020    mov         eax,dword ptr [ebp-0C]
 004D6023    cmp         byte ptr [eax+10],1
>004D6027    jne         004D603B
 004D6029    mov         edx,1
 004D602E    mov         eax,dword ptr [ebp-4]
 004D6031    call        004D60E8
 004D6036    mov         dword ptr [ebp-8],eax
>004D6039    jmp         004D6069
 004D603B    mov         eax,dword ptr [ebp-0C]
 004D603E    cmp         byte ptr [eax+10],2
>004D6042    jne         004D6056
 004D6044    mov         edx,2
 004D6049    mov         eax,dword ptr [ebp-4]
 004D604C    call        004D60E8
 004D6051    mov         dword ptr [ebp-8],eax
>004D6054    jmp         004D6069
 004D6056    xor         ecx,ecx
 004D6058    mov         dl,1
 004D605A    mov         eax,[004653B4];Exception
 004D605F    call        Exception.Create;Exception.Create
 004D6064    call        @RaiseExcept
 004D6069    mov         eax,dword ptr [ebp-8]
 004D606C    mov         esp,ebp
 004D606E    pop         ebp
 004D606F    ret
end;*}

//004D6070
{*function sub_004D6070(?:TDockZone):?;
begin
 004D6070    push        ebp
 004D6071    mov         ebp,esp
 004D6073    add         esp,0FFFFFFF4
 004D6076    mov         dword ptr [ebp-4],eax
 004D6079    mov         eax,dword ptr [ebp-4]
 004D607C    mov         eax,dword ptr [eax+1C]
 004D607F    mov         eax,dword ptr [eax+64]
 004D6082    cmp         eax,dword ptr [ebp-4]
>004D6085    jne         004D608F
 004D6087    mov         eax,dword ptr [ebp-4]
 004D608A    mov         dword ptr [ebp-0C],eax
>004D608D    jmp         004D6098
 004D608F    mov         eax,dword ptr [ebp-4]
 004D6092    mov         eax,dword ptr [eax+14]
 004D6095    mov         dword ptr [ebp-0C],eax
 004D6098    mov         eax,dword ptr [ebp-0C]
 004D609B    cmp         byte ptr [eax+10],1
>004D609F    jne         004D60B3
 004D60A1    mov         edx,1
 004D60A6    mov         eax,dword ptr [ebp-4]
 004D60A9    call        004D6188
 004D60AE    mov         dword ptr [ebp-8],eax
>004D60B1    jmp         004D60E1
 004D60B3    mov         eax,dword ptr [ebp-0C]
 004D60B6    cmp         byte ptr [eax+10],2
>004D60BA    jne         004D60CE
 004D60BC    mov         edx,2
 004D60C1    mov         eax,dword ptr [ebp-4]
 004D60C4    call        004D6188
 004D60C9    mov         dword ptr [ebp-8],eax
>004D60CC    jmp         004D60E1
 004D60CE    xor         ecx,ecx
 004D60D0    mov         dl,1
 004D60D2    mov         eax,[004653B4];Exception
 004D60D7    call        Exception.Create;Exception.Create
 004D60DC    call        @RaiseExcept
 004D60E1    mov         eax,dword ptr [ebp-8]
 004D60E4    mov         esp,ebp
 004D60E6    pop         ebp
 004D60E7    ret
end;*}

//004D60E8
{*function sub_004D60E8(?:?; ?:?):?;
begin
 004D60E8    push        ebp
 004D60E9    mov         ebp,esp
 004D60EB    add         esp,0FFFFFFE0
 004D60EE    mov         dword ptr [ebp-8],edx
 004D60F1    mov         dword ptr [ebp-4],eax
 004D60F4    mov         eax,dword ptr [ebp-4]
 004D60F7    mov         dword ptr [ebp-10],eax
>004D60FA    jmp         004D612C
 004D60FC    mov         al,byte ptr [ebp-8]
 004D60FF    mov         edx,dword ptr [ebp-10]
 004D6102    mov         edx,dword ptr [edx+14]
 004D6105    cmp         al,byte ptr [edx+10]
>004D6108    jne         004D6123
 004D610A    mov         eax,dword ptr [ebp-10]
 004D610D    cmp         dword ptr [eax+18],0
>004D6111    je          004D6123
 004D6113    mov         eax,dword ptr [ebp-10]
 004D6116    mov         eax,dword ptr [eax+18]
 004D6119    call        004D6618
 004D611E    mov         dword ptr [ebp-0C],eax
>004D6121    jmp         004D617F
 004D6123    mov         eax,dword ptr [ebp-10]
 004D6126    mov         eax,dword ptr [eax+14]
 004D6129    mov         dword ptr [ebp-10],eax
 004D612C    mov         eax,dword ptr [ebp-4]
 004D612F    mov         eax,dword ptr [eax+1C]
 004D6132    mov         eax,dword ptr [eax+64]
 004D6135    cmp         eax,dword ptr [ebp-10]
>004D6138    jne         004D60FC
 004D613A    lea         edx,[ebp-20]
 004D613D    mov         eax,dword ptr [ebp-4]
 004D6140    mov         eax,dword ptr [eax+1C]
 004D6143    mov         eax,dword ptr [eax+14]
 004D6146    mov         ecx,dword ptr [eax]
 004D6148    call        dword ptr [ecx+44]
 004D614B    lea         edx,[ebp-20]
 004D614E    mov         eax,dword ptr [ebp-4]
 004D6151    mov         eax,dword ptr [eax+1C]
 004D6154    mov         eax,dword ptr [eax+14]
 004D6157    mov         ecx,dword ptr [eax]
 004D6159    call        dword ptr [ecx+8C]
 004D615F    mov         al,byte ptr [ebp-8]
 004D6162    dec         al
>004D6164    je          004D6172
 004D6166    dec         al
>004D6168    jne         004D617A
 004D616A    mov         eax,dword ptr [ebp-20]
 004D616D    mov         dword ptr [ebp-0C],eax
>004D6170    jmp         004D617F
 004D6172    mov         eax,dword ptr [ebp-1C]
 004D6175    mov         dword ptr [ebp-0C],eax
>004D6178    jmp         004D617F
 004D617A    xor         eax,eax
 004D617C    mov         dword ptr [ebp-0C],eax
 004D617F    mov         eax,dword ptr [ebp-0C]
 004D6182    mov         esp,ebp
 004D6184    pop         ebp
 004D6185    ret
end;*}

//004D6188
{*function sub_004D6188(?:TDockZone; ?:?):?;
begin
 004D6188    push        ebp
 004D6189    mov         ebp,esp
 004D618B    add         esp,0FFFFFFE0
 004D618E    push        ebx
 004D618F    mov         dword ptr [ebp-8],edx
 004D6192    mov         dword ptr [ebp-4],eax
 004D6195    mov         eax,dword ptr [ebp-4]
 004D6198    mov         eax,dword ptr [eax+1C]
 004D619B    mov         eax,dword ptr [eax+64]
 004D619E    cmp         eax,dword ptr [ebp-4]
>004D61A1    je          004D61CE
 004D61A3    mov         eax,dword ptr [ebp-4]
 004D61A6    mov         eax,dword ptr [eax+1C]
 004D61A9    mov         eax,dword ptr [eax+64]
 004D61AC    mov         edx,dword ptr [ebp-4]
 004D61AF    cmp         eax,dword ptr [edx+14]
>004D61B2    jne         004D6212
 004D61B4    mov         eax,dword ptr [ebp-4]
 004D61B7    cmp         dword ptr [eax+4],0
>004D61BB    je          004D6212
 004D61BD    mov         eax,dword ptr [ebp-4]
 004D61C0    mov         eax,dword ptr [eax+1C]
 004D61C3    mov         eax,dword ptr [eax+64]
 004D61C6    call        004D5F60
 004D61CB    dec         eax
>004D61CC    jne         004D6212
 004D61CE    lea         edx,[ebp-20]
 004D61D1    mov         eax,dword ptr [ebp-4]
 004D61D4    mov         eax,dword ptr [eax+1C]
 004D61D7    mov         eax,dword ptr [eax+14]
 004D61DA    mov         ecx,dword ptr [eax]
 004D61DC    call        dword ptr [ecx+44]
 004D61DF    lea         edx,[ebp-20]
 004D61E2    mov         eax,dword ptr [ebp-4]
 004D61E5    mov         eax,dword ptr [eax+1C]
 004D61E8    mov         eax,dword ptr [eax+14]
 004D61EB    mov         ecx,dword ptr [eax]
 004D61ED    call        dword ptr [ecx+8C]
 004D61F3    cmp         byte ptr [ebp-8],1
>004D61F7    jne         004D6207
 004D61F9    mov         eax,dword ptr [ebp-14]
 004D61FC    sub         eax,dword ptr [ebp-1C]
 004D61FF    mov         dword ptr [ebp-0C],eax
>004D6202    jmp         004D6288
 004D6207    mov         eax,dword ptr [ebp-18]
 004D620A    sub         eax,dword ptr [ebp-20]
 004D620D    mov         dword ptr [ebp-0C],eax
>004D6210    jmp         004D6288
 004D6212    mov         eax,dword ptr [ebp-4]
 004D6215    mov         dword ptr [ebp-10],eax
>004D6218    jmp         004D624A
 004D621A    mov         al,byte ptr [ebp-8]
 004D621D    mov         edx,dword ptr [ebp-10]
 004D6220    mov         edx,dword ptr [edx+14]
 004D6223    cmp         al,byte ptr [edx+10]
>004D6226    jne         004D6241
 004D6228    mov         eax,dword ptr [ebp-10]
 004D622B    call        004D6618
 004D6230    mov         ebx,eax
 004D6232    mov         eax,dword ptr [ebp-10]
 004D6235    call        004D5FF8
 004D623A    sub         ebx,eax
 004D623C    mov         dword ptr [ebp-0C],ebx
>004D623F    jmp         004D6288
 004D6241    mov         eax,dword ptr [ebp-10]
 004D6244    mov         eax,dword ptr [eax+14]
 004D6247    mov         dword ptr [ebp-10],eax
 004D624A    mov         eax,dword ptr [ebp-4]
 004D624D    mov         eax,dword ptr [eax+1C]
 004D6250    mov         eax,dword ptr [eax+64]
 004D6253    cmp         eax,dword ptr [ebp-10]
>004D6256    jne         004D621A
 004D6258    mov         al,byte ptr [ebp-8]
 004D625B    mov         edx,dword ptr [ebp-4]
 004D625E    mov         edx,dword ptr [edx+1C]
 004D6261    mov         edx,dword ptr [edx+64]
 004D6264    cmp         al,byte ptr [edx+10]
>004D6267    jne         004D6277
 004D6269    mov         eax,dword ptr [ebp-4]
 004D626C    mov         eax,dword ptr [eax+1C]
 004D626F    mov         eax,dword ptr [eax+68]
 004D6272    mov         dword ptr [ebp-0C],eax
>004D6275    jmp         004D6288
 004D6277    mov         eax,dword ptr [ebp-4]
 004D627A    mov         eax,dword ptr [eax+1C]
 004D627D    mov         eax,dword ptr [eax+64]
 004D6280    call        004D6618
 004D6285    mov         dword ptr [ebp-0C],eax
 004D6288    mov         eax,dword ptr [ebp-0C]
 004D628B    pop         ebx
 004D628C    mov         esp,ebp
 004D628E    pop         ebp
 004D628F    ret
end;*}

//004D6290
procedure sub_004D6290(?:TDockZone);
begin
{*
 004D6290    push        ebp
 004D6291    mov         ebp,esp
 004D6293    add         esp,0FFFFFFF0
 004D6296    mov         dword ptr [ebp-4],eax
 004D6299    mov         eax,dword ptr [ebp-4]
 004D629C    call        004D5F60
 004D62A1    test        eax,eax
>004D62A3    je          004D6359
 004D62A9    mov         eax,dword ptr [ebp-4]
 004D62AC    cmp         byte ptr [eax+10],0
>004D62B0    je          004D6359
 004D62B6    mov         eax,dword ptr [ebp-4]
 004D62B9    call        004D67E0
 004D62BE    mov         dword ptr [ebp-10],eax
 004D62C1    mov         eax,dword ptr [ebp-4]
 004D62C4    mov         al,byte ptr [eax+10]
 004D62C7    dec         al
>004D62C9    je          004D62D1
 004D62CB    dec         al
>004D62CD    je          004D62E3
>004D62CF    jmp         004D62F5
 004D62D1    mov         edx,1
 004D62D6    mov         eax,dword ptr [ebp-4]
 004D62D9    call        004D6188
 004D62DE    mov         dword ptr [ebp-8],eax
>004D62E1    jmp         004D62FA
 004D62E3    mov         edx,2
 004D62E8    mov         eax,dword ptr [ebp-4]
 004D62EB    call        004D6188
 004D62F0    mov         dword ptr [ebp-8],eax
>004D62F3    jmp         004D62FA
 004D62F5    xor         eax,eax
 004D62F7    mov         dword ptr [ebp-8],eax
 004D62FA    mov         eax,dword ptr [ebp-4]
 004D62FD    call        004D5F60
 004D6302    push        eax
 004D6303    mov         eax,dword ptr [ebp-8]
 004D6306    pop         edx
 004D6307    mov         ecx,edx
 004D6309    cdq
 004D630A    idiv        eax,ecx
 004D630C    mov         dword ptr [ebp-0C],eax
 004D630F    cmp         dword ptr [ebp-10],0
>004D6313    je          004D6359
 004D6315    mov         eax,dword ptr [ebp-10]
 004D6318    cmp         dword ptr [eax+0C],0
>004D631C    jne         004D632B
 004D631E    mov         edx,dword ptr [ebp-8]
 004D6321    mov         eax,dword ptr [ebp-10]
 004D6324    call        004D6658
>004D6329    jmp         004D6340
 004D632B    mov         eax,dword ptr [ebp-10]
 004D632E    call        004D5FF8
 004D6333    mov         edx,eax
 004D6335    add         edx,dword ptr [ebp-0C]
 004D6338    mov         eax,dword ptr [ebp-10]
 004D633B    call        004D6658
 004D6340    mov         eax,dword ptr [ebp-10]
 004D6343    call        004D6488
 004D6348    mov         eax,dword ptr [ebp-10]
 004D634B    call        004D6788
 004D6350    mov         dword ptr [ebp-10],eax
 004D6353    cmp         dword ptr [ebp-10],0
>004D6357    jne         004D6315
 004D6359    mov         esp,ebp
 004D635B    pop         ebp
 004D635C    ret
*}
end;

//004D6360
{*procedure sub_004D6360(?:?; ?:?);
begin
 004D6360    push        ebp
 004D6361    mov         ebp,esp
 004D6363    add         esp,0FFFFFFF8
 004D6366    mov         dword ptr [ebp-8],edx
 004D6369    mov         dword ptr [ebp-4],eax
 004D636C    mov         eax,dword ptr [ebp-8]
 004D636F    call        @LStrClr
 004D6374    mov         eax,dword ptr [ebp-4]
 004D6377    cmp         dword ptr [eax+4],0
>004D637B    je          004D63B1
 004D637D    mov         eax,dword ptr [ebp-4]
 004D6380    mov         eax,dword ptr [eax+4]
 004D6383    cmp         dword ptr [eax+8],0
>004D6387    jne         004D63A0
 004D6389    mov         ecx,dword ptr ds:[55B398];^SDockedCtlNeedsName:TResStringRec
 004D638F    mov         dl,1
 004D6391    mov         eax,[004653B4];Exception
 004D6396    call        Exception.Create;Exception.Create
 004D639B    call        @RaiseExcept
 004D63A0    mov         eax,dword ptr [ebp-8]
 004D63A3    mov         edx,dword ptr [ebp-4]
 004D63A6    mov         edx,dword ptr [edx+4]
 004D63A9    mov         edx,dword ptr [edx+8]
 004D63AC    call        @LStrAsg
 004D63B1    pop         ecx
 004D63B2    pop         ecx
 004D63B3    pop         ebp
 004D63B4    ret
end;*}

//004D63B8
{*function sub_004D63B8(?:TDockZone; ?:?):?;
begin
 004D63B8    push        ebp
 004D63B9    mov         ebp,esp
 004D63BB    add         esp,0FFFFFFEC
 004D63BE    push        esi
 004D63BF    mov         dword ptr [ebp-8],edx
 004D63C2    mov         dword ptr [ebp-4],eax
 004D63C5    xor         eax,eax
 004D63C7    mov         dword ptr [ebp-10],eax
 004D63CA    mov         eax,dword ptr [ebp-4]
 004D63CD    mov         eax,dword ptr [eax+1C]
 004D63D0    mov         dword ptr [ebp-14],eax
 004D63D3    lea         ecx,[ebp-10]
 004D63D6    mov         eax,dword ptr [ebp-14]
 004D63D9    mov         eax,dword ptr [eax+14]
 004D63DC    mov         edx,dword ptr [ebp-8]
 004D63DF    mov         si,0FFB9
 004D63E3    call        @CallDynaInst
 004D63E8    cmp         dword ptr [ebp-10],0
 004D63EC    setne       byte ptr [ebp-9]
 004D63F0    cmp         byte ptr [ebp-9],0
>004D63F4    je          004D643C
 004D63F6    mov         eax,dword ptr [ebp-14]
 004D63F9    mov         edx,dword ptr [ebp-4]
 004D63FC    mov         dword ptr [eax+38],edx
 004D63FF    xor         eax,eax
 004D6401    push        ebp
 004D6402    push        4D6435
 004D6407    push        dword ptr fs:[eax]
 004D640A    mov         dword ptr fs:[eax],esp
 004D640D    push        0
 004D640F    mov         eax,dword ptr [ebp-14]
 004D6412    mov         edx,dword ptr [eax+14]
 004D6415    xor         ecx,ecx
 004D6417    mov         eax,dword ptr [ebp-10]
 004D641A    call        004CC1DC
 004D641F    xor         eax,eax
 004D6421    pop         edx
 004D6422    pop         ecx
 004D6423    pop         ecx
 004D6424    mov         dword ptr fs:[eax],edx
 004D6427    push        4D643C
 004D642C    mov         eax,dword ptr [ebp-14]
 004D642F    xor         edx,edx
 004D6431    mov         dword ptr [eax+38],edx
 004D6434    ret
>004D6435    jmp         @HandleFinally
>004D643A    jmp         004D642C
 004D643C    mov         al,byte ptr [ebp-9]
 004D643F    pop         esi
 004D6440    mov         esp,ebp
 004D6442    pop         ebp
 004D6443    ret
end;*}

//004D6444
{*function sub_004D6444(?:?):?;
begin
 004D6444    push        ebp
 004D6445    mov         ebp,esp
 004D6447    add         esp,0FFFFFFF8
 004D644A    mov         byte ptr [ebp-1],0
 004D644E    mov         eax,dword ptr [ebp+8]
 004D6451    mov         eax,dword ptr [eax-4]
 004D6454    mov         eax,dword ptr [eax+14]
 004D6457    mov         dword ptr [ebp-8],eax
 004D645A    cmp         dword ptr [ebp-8],0
>004D645E    je          004D6481
 004D6460    mov         eax,dword ptr [ebp-8]
 004D6463    call        004D6788
 004D6468    test        eax,eax
>004D646A    je          004D6472
 004D646C    mov         byte ptr [ebp-1],1
>004D6470    jmp         004D6481
 004D6472    mov         eax,dword ptr [ebp-8]
 004D6475    mov         eax,dword ptr [eax+14]
 004D6478    mov         dword ptr [ebp-8],eax
 004D647B    cmp         dword ptr [ebp-8],0
>004D647F    jne         004D6460
 004D6481    mov         al,byte ptr [ebp-1]
 004D6484    pop         ecx
 004D6485    pop         ecx
 004D6486    pop         ebp
 004D6487    ret
end;*}

//004D6488
procedure sub_004D6488(?:TDockZone);
begin
{*
 004D6488    push        ebp
 004D6489    mov         ebp,esp
 004D648B    add         esp,0FFFFFFE4
 004D648E    push        ebx
 004D648F    mov         dword ptr [ebp-4],eax
 004D6492    mov         eax,dword ptr [ebp-4]
 004D6495    cmp         dword ptr [eax+4],0
>004D6499    je          004D6612
 004D649F    mov         eax,dword ptr [ebp-4]
 004D64A2    mov         eax,dword ptr [eax+4]
 004D64A5    cmp         byte ptr [eax+57],0
>004D64A9    je          004D6612
 004D64AF    mov         eax,dword ptr [ebp-4]
 004D64B2    mov         eax,dword ptr [eax+1C]
 004D64B5    cmp         dword ptr [eax+6C],0
>004D64B9    jne         004D6612
 004D64BF    mov         eax,dword ptr [ebp-4]
 004D64C2    mov         eax,dword ptr [eax+14]
 004D64C5    mov         al,byte ptr [eax+10]
 004D64C8    mov         edx,dword ptr [ebp-4]
 004D64CB    mov         edx,dword ptr [edx+4]
 004D64CE    mov         byte ptr [edx+9C],al
 004D64D4    mov         edx,2
 004D64D9    mov         eax,dword ptr [ebp-4]
 004D64DC    call        004D6188
 004D64E1    mov         dword ptr [ebp-8],eax
 004D64E4    mov         edx,1
 004D64E9    mov         eax,dword ptr [ebp-4]
 004D64EC    call        004D6188
 004D64F1    mov         dword ptr [ebp-0C],eax
 004D64F4    push        ebp
 004D64F5    call        004D6444
 004D64FA    pop         ecx
 004D64FB    test        al,al
>004D64FD    je          004D6525
 004D64FF    mov         eax,dword ptr [ebp-4]
 004D6502    mov         eax,dword ptr [eax+14]
 004D6505    cmp         byte ptr [eax+10],1
>004D6509    jne         004D6519
 004D650B    mov         eax,dword ptr [ebp-4]
 004D650E    mov         eax,dword ptr [eax+1C]
 004D6511    mov         eax,dword ptr [eax+0C]
 004D6514    sub         dword ptr [ebp-8],eax
>004D6517    jmp         004D6525
 004D6519    mov         eax,dword ptr [ebp-4]
 004D651C    mov         eax,dword ptr [eax+1C]
 004D651F    mov         eax,dword ptr [eax+0C]
 004D6522    sub         dword ptr [ebp-0C],eax
 004D6525    mov         eax,dword ptr [ebp-4]
 004D6528    call        004D6788
 004D652D    test        eax,eax
>004D652F    jne         004D659F
 004D6531    mov         eax,dword ptr [ebp-4]
 004D6534    mov         eax,dword ptr [eax+14]
 004D6537    mov         edx,dword ptr [ebp-4]
 004D653A    mov         edx,dword ptr [edx+1C]
 004D653D    cmp         eax,dword ptr [edx+64]
>004D6540    je          004D656C
 004D6542    mov         eax,dword ptr [ebp-4]
 004D6545    mov         eax,dword ptr [eax+14]
 004D6548    mov         al,byte ptr [eax+10]
 004D654B    mov         edx,dword ptr [ebp-4]
 004D654E    mov         edx,dword ptr [edx+1C]
 004D6551    mov         edx,dword ptr [edx+64]
 004D6554    cmp         al,byte ptr [edx+10]
>004D6557    jne         004D656C
 004D6559    mov         eax,dword ptr [ebp-4]
 004D655C    call        004D6618
 004D6561    mov         edx,dword ptr [ebp-4]
 004D6564    mov         edx,dword ptr [edx+1C]
 004D6567    cmp         eax,dword ptr [edx+68]
>004D656A    jl          004D659F
 004D656C    mov         eax,dword ptr [ebp-4]
 004D656F    mov         eax,dword ptr [eax+14]
 004D6572    mov         al,byte ptr [eax+10]
 004D6575    mov         edx,dword ptr [ebp-4]
 004D6578    mov         edx,dword ptr [edx+1C]
 004D657B    mov         edx,dword ptr [edx+64]
 004D657E    cmp         al,byte ptr [edx+10]
>004D6581    je          004D65C5
 004D6583    mov         eax,dword ptr [ebp-4]
 004D6586    call        004D6618
 004D658B    mov         ebx,eax
 004D658D    mov         eax,dword ptr [ebp-4]
 004D6590    mov         eax,dword ptr [eax+1C]
 004D6593    mov         eax,dword ptr [eax+64]
 004D6596    call        004D6618
 004D659B    cmp         ebx,eax
>004D659D    jge         004D65C5
 004D659F    mov         eax,dword ptr [ebp-4]
 004D65A2    mov         eax,dword ptr [eax+14]
 004D65A5    cmp         byte ptr [eax+10],1
>004D65A9    jne         004D65B9
 004D65AB    mov         eax,dword ptr [ebp-4]
 004D65AE    mov         eax,dword ptr [eax+1C]
 004D65B1    mov         eax,dword ptr [eax+0C]
 004D65B4    sub         dword ptr [ebp-0C],eax
>004D65B7    jmp         004D65C5
 004D65B9    mov         eax,dword ptr [ebp-4]
 004D65BC    mov         eax,dword ptr [eax+1C]
 004D65BF    mov         eax,dword ptr [eax+0C]
 004D65C2    sub         dword ptr [ebp-8],eax
 004D65C5    mov         eax,dword ptr [ebp-0C]
 004D65C8    push        eax
 004D65C9    lea         eax,[ebp-1C]
 004D65CC    push        eax
 004D65CD    mov         edx,1
 004D65D2    mov         eax,dword ptr [ebp-4]
 004D65D5    call        004D60E8
 004D65DA    push        eax
 004D65DB    mov         edx,2
 004D65E0    mov         eax,dword ptr [ebp-4]
 004D65E3    call        004D60E8
 004D65E8    mov         ecx,dword ptr [ebp-8]
 004D65EB    pop         edx
 004D65EC    call        Bounds
 004D65F1    lea         ecx,[ebp-1C]
 004D65F4    mov         eax,dword ptr [ebp-4]
 004D65F7    mov         edx,dword ptr [eax+4]
 004D65FA    mov         eax,dword ptr [ebp-4]
 004D65FD    mov         eax,dword ptr [eax+1C]
 004D6600    mov         ebx,dword ptr [eax]
 004D6602    call        dword ptr [ebx]
 004D6604    lea         edx,[ebp-1C]
 004D6607    mov         eax,dword ptr [ebp-4]
 004D660A    mov         eax,dword ptr [eax+4]
 004D660D    call        004CA6F8
 004D6612    pop         ebx
 004D6613    mov         esp,ebp
 004D6615    pop         ebp
 004D6616    ret
*}
end;

//004D6618
{*function sub_004D6618(?:TDockZone):?;
begin
 004D6618    push        ebp
 004D6619    mov         ebp,esp
 004D661B    add         esp,0FFFFFFF8
 004D661E    mov         dword ptr [ebp-4],eax
 004D6621    mov         eax,dword ptr [ebp-4]
 004D6624    call        004D5F9C
 004D6629    test        al,al
>004D662B    jne         004D6646
 004D662D    mov         eax,dword ptr [ebp-4]
 004D6630    call        004D5E9C
 004D6635    test        al,al
>004D6637    je          004D6646
 004D6639    mov         eax,dword ptr [ebp-4]
 004D663C    call        004D5FF8
 004D6641    mov         dword ptr [ebp-8],eax
>004D6644    jmp         004D664F
 004D6646    mov         eax,dword ptr [ebp-4]
 004D6649    mov         eax,dword ptr [eax+20]
 004D664C    mov         dword ptr [ebp-8],eax
 004D664F    mov         eax,dword ptr [ebp-8]
 004D6652    pop         ecx
 004D6653    pop         ecx
 004D6654    pop         ebp
 004D6655    ret
end;*}

//004D6658
procedure sub_004D6658(?:TDockZone; ?:Integer);
begin
{*
 004D6658    push        ebp
 004D6659    mov         ebp,esp
 004D665B    add         esp,0FFFFFFF8
 004D665E    mov         dword ptr [ebp-8],edx
 004D6661    mov         dword ptr [ebp-4],eax
 004D6664    mov         eax,dword ptr [ebp-8]
 004D6667    mov         edx,dword ptr [ebp-4]
 004D666A    mov         dword ptr [edx+20],eax
 004D666D    pop         ecx
 004D666E    pop         ecx
 004D666F    pop         ebp
 004D6670    ret
*}
end;

//004D6674
{*function sub_004D6674(?:?):?;
begin
 004D6674    push        ebp
 004D6675    mov         ebp,esp
 004D6677    add         esp,0FFFFFFF8
 004D667A    mov         dword ptr [ebp-4],eax
 004D667D    mov         eax,dword ptr [ebp-4]
 004D6680    mov         eax,dword ptr [eax+8]
 004D6683    mov         dword ptr [ebp-8],eax
>004D6686    jmp         004D6691
 004D6688    mov         eax,dword ptr [ebp-8]
 004D668B    mov         eax,dword ptr [eax+0C]
 004D668E    mov         dword ptr [ebp-8],eax
 004D6691    mov         eax,dword ptr [ebp-8]
 004D6694    cmp         dword ptr [eax+0C],0
>004D6698    jne         004D6688
 004D669A    mov         eax,dword ptr [ebp-8]
 004D669D    pop         ecx
 004D669E    pop         ecx
 004D669F    pop         ebp
 004D66A0    ret
end;*}

//004D66A4
procedure sub_004D66A4(?:TDockZone; ?:Integer);
begin
{*
 004D66A4    push        ebp
 004D66A5    mov         ebp,esp
 004D66A7    add         esp,0FFFFFFF0
 004D66AA    mov         dword ptr [ebp-8],edx
 004D66AD    mov         dword ptr [ebp-4],eax
 004D66B0    mov         edx,dword ptr [ebp-8]
 004D66B3    mov         eax,dword ptr [ebp-4]
 004D66B6    call        004D6658
 004D66BB    mov         eax,dword ptr [ebp-4]
 004D66BE    mov         eax,dword ptr [eax+8]
 004D66C1    mov         dword ptr [ebp-10],eax
 004D66C4    cmp         dword ptr [ebp-10],0
>004D66C8    je          004D66FD
 004D66CA    mov         eax,dword ptr [ebp-10]
 004D66CD    call        004D5F28
 004D66D2    test        eax,eax
>004D66D4    jle         004D66EE
 004D66D6    push        ebp
 004D66D7    mov         eax,dword ptr [ebp-10]
 004D66DA    call        004D6674
 004D66DF    pop         ecx
 004D66E0    mov         dword ptr [ebp-0C],eax
 004D66E3    mov         edx,dword ptr [ebp-8]
 004D66E6    mov         eax,dword ptr [ebp-0C]
 004D66E9    call        004D66A4
 004D66EE    mov         eax,dword ptr [ebp-10]
 004D66F1    mov         eax,dword ptr [eax+0C]
 004D66F4    mov         dword ptr [ebp-10],eax
 004D66F7    cmp         dword ptr [ebp-10],0
>004D66FB    jne         004D66CA
 004D66FD    mov         esp,ebp
 004D66FF    pop         ebp
 004D6700    ret
*}
end;

//004D6704
procedure sub_004D6704(?:TDockZone);
begin
{*
 004D6704    push        ebp
 004D6705    mov         ebp,esp
 004D6707    add         esp,0FFFFFFF8
 004D670A    push        ebx
 004D670B    mov         dword ptr [ebp-4],eax
 004D670E    mov         eax,dword ptr [ebp-4]
 004D6711    mov         eax,dword ptr [eax+8]
 004D6714    mov         dword ptr [ebp-8],eax
 004D6717    cmp         dword ptr [ebp-8],0
>004D671B    je          004D6782
 004D671D    mov         eax,dword ptr [ebp-8]
 004D6720    call        004D6618
 004D6725    mov         ebx,eax
 004D6727    mov         eax,dword ptr [ebp-8]
 004D672A    call        004D5FF8
 004D672F    cmp         ebx,eax
>004D6731    jl          004D6749
 004D6733    mov         eax,dword ptr [ebp-8]
 004D6736    call        004D6618
 004D673B    mov         ebx,eax
 004D673D    mov         eax,dword ptr [ebp-4]
 004D6740    call        004D6070
 004D6745    cmp         ebx,eax
>004D6747    jle         004D676B
 004D6749    mov         eax,dword ptr [ebp-4]
 004D674C    call        004D6290
 004D6751    mov         eax,dword ptr [ebp-4]
 004D6754    mov         eax,dword ptr [eax+1C]
 004D6757    push        eax
 004D6758    push        4D89A4
 004D675D    mov         edx,dword ptr [ebp-4]
 004D6760    mov         eax,dword ptr [ebp-4]
 004D6763    mov         eax,dword ptr [eax+1C]
 004D6766    call        004D6B44
 004D676B    mov         eax,dword ptr [ebp-8]
 004D676E    call        004D6704
 004D6773    mov         eax,dword ptr [ebp-8]
 004D6776    mov         eax,dword ptr [eax+0C]
 004D6779    mov         dword ptr [ebp-8],eax
 004D677C    cmp         dword ptr [ebp-8],0
>004D6780    jne         004D671D
 004D6782    pop         ebx
 004D6783    pop         ecx
 004D6784    pop         ecx
 004D6785    pop         ebp
 004D6786    ret
*}
end;

//004D6788
{*function sub_004D6788(?:?):?;
begin
 004D6788    push        ebp
 004D6789    mov         ebp,esp
 004D678B    add         esp,0FFFFFFF8
 004D678E    mov         dword ptr [ebp-4],eax
 004D6791    mov         eax,dword ptr [ebp-4]
 004D6794    mov         eax,dword ptr [eax+0C]
 004D6797    call        004D5E68
 004D679C    mov         dword ptr [ebp-8],eax
 004D679F    mov         eax,dword ptr [ebp-8]
 004D67A2    pop         ecx
 004D67A3    pop         ecx
 004D67A4    pop         ebp
 004D67A5    ret
end;*}

//004D67E0
{*function sub_004D67E0(?:TDockZone):?;
begin
 004D67E0    push        ebp
 004D67E1    mov         ebp,esp
 004D67E3    add         esp,0FFFFFFF8
 004D67E6    mov         dword ptr [ebp-4],eax
 004D67E9    mov         eax,dword ptr [ebp-4]
 004D67EC    mov         eax,dword ptr [eax+8]
 004D67EF    call        004D5E68
 004D67F4    mov         dword ptr [ebp-8],eax
 004D67F7    mov         eax,dword ptr [ebp-8]
 004D67FA    pop         ecx
 004D67FB    pop         ecx
 004D67FC    pop         ebp
 004D67FD    ret
end;*}

//004D6800
constructor sub_004D6800;
begin
{*
 004D6800    push        ebp
 004D6801    mov         ebp,esp
 004D6803    add         esp,0FFFFFFEC
 004D6806    push        ebx
 004D6807    test        dl,dl
>004D6809    je          004D6813
 004D680B    add         esp,0FFFFFFF0
 004D680E    call        @ClassCreate
 004D6813    mov         dword ptr [ebp-0C],ecx
 004D6816    mov         byte ptr [ebp-5],dl
 004D6819    mov         dword ptr [ebp-4],eax
 004D681C    xor         edx,edx
 004D681E    mov         eax,dword ptr [ebp-4]
 004D6821    call        TObject.Create
 004D6826    mov         eax,dword ptr [ebp-4]
 004D6829    mov         dword ptr [eax+0C],4;TDockTree.FBorderWidth:Integer
 004D6830    mov         eax,dword ptr [ebp-4]
 004D6833    mov         edx,dword ptr [ebp-0C]
 004D6836    mov         dword ptr [eax+14],edx;TDockTree.FDockSite:TWinControl
 004D6839    mov         eax,dword ptr [ebp-4]
 004D683C    mov         dword ptr [eax+70],40000;TDockTree.FVersion:Integer
 004D6843    mov         eax,dword ptr [ebp-4]
 004D6846    mov         dword ptr [eax+18],0C;TDockTree.FGrabberSize:Integer
 004D684D    mov         eax,dword ptr [ebp-0C]
 004D6850    cmp         byte ptr [eax+5B],1
>004D6854    je          004D685F
 004D6856    mov         eax,dword ptr [ebp-0C]
 004D6859    cmp         byte ptr [eax+5B],2
>004D685D    jne         004D6863
 004D685F    xor         eax,eax
>004D6861    jmp         004D6865
 004D6863    mov         al,1
 004D6865    mov         edx,dword ptr [ebp-4]
 004D6868    mov         byte ptr [edx+1C],al;TDockTree.FGrabbersOnTop:Boolean
 004D686B    mov         ecx,dword ptr [ebp-4]
 004D686E    mov         dl,1
 004D6870    mov         eax,[004C6918];TDockZone
 004D6875    call        TDockZone.Create;TDockZone.Create
 004D687A    mov         edx,dword ptr [ebp-4]
 004D687D    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 004D6880    mov         dl,1
 004D6882    mov         eax,[00485498];TBrush
 004D6887    call        TBrush.Create;TBrush.Create
 004D688C    mov         edx,dword ptr [ebp-4]
 004D688F    mov         dword ptr [edx+10],eax;TDockTree.FBrush:TBrush
 004D6892    mov         edx,0FFFFFF
 004D6897    xor         eax,eax
 004D6899    call        0048FA88
 004D689E    mov         edx,eax
 004D68A0    mov         eax,dword ptr [ebp-4]
 004D68A3    mov         eax,dword ptr [eax+10];TDockTree.FBrush:TBrush
 004D68A6    call        0048775C
 004D68AB    mov         eax,dword ptr [ebp-4]
 004D68AE    call        004D6A18
 004D68B3    xor         eax,eax
 004D68B5    push        ebp
 004D68B6    push        4D691B
 004D68BB    push        dword ptr fs:[eax]
 004D68BE    mov         dword ptr fs:[eax],esp
 004D68C1    mov         eax,dword ptr [ebp-0C]
 004D68C4    call        004CF618
 004D68C9    dec         eax
 004D68CA    test        eax,eax
>004D68CC    jl          004D68FA
 004D68CE    inc         eax
 004D68CF    mov         dword ptr [ebp-14],eax
 004D68D2    mov         dword ptr [ebp-10],0
 004D68D9    push        0
 004D68DB    mov         edx,dword ptr [ebp-10]
 004D68DE    mov         eax,dword ptr [ebp-0C]
 004D68E1    call        004CF5AC
 004D68E6    mov         edx,eax
 004D68E8    mov         cl,3
 004D68EA    mov         eax,dword ptr [ebp-4]
 004D68ED    mov         ebx,dword ptr [eax]
 004D68EF    call        dword ptr [ebx+8];TDockTree.sub_004D6C3C
 004D68F2    inc         dword ptr [ebp-10]
 004D68F5    dec         dword ptr [ebp-14]
>004D68F8    jne         004D68D9
 004D68FA    mov         eax,dword ptr [ebp-4]
 004D68FD    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6900    call        004D6290
 004D6905    xor         eax,eax
 004D6907    pop         edx
 004D6908    pop         ecx
 004D6909    pop         ecx
 004D690A    mov         dword ptr fs:[eax],edx
 004D690D    push        4D6922
 004D6912    mov         eax,dword ptr [ebp-4]
 004D6915    call        004D6A28
 004D691A    ret
>004D691B    jmp         @HandleFinally
>004D6920    jmp         004D6912
 004D6922    mov         eax,dword ptr [ebp-0C]
 004D6925    test        byte ptr [eax+1C],10
>004D6929    jne         004D6953
 004D692B    mov         eax,dword ptr [ebp-4]
 004D692E    mov         edx,dword ptr [ebp-4]
 004D6931    mov         edx,dword ptr [edx+14];TDockTree.FDockSite:TWinControl
 004D6934    mov         ecx,dword ptr [edx+38];TWinControl.FWindowProc:TWndMethod
 004D6937    mov         dword ptr [eax+30],ecx;TDockTree.FOldWndProc:TWndMethod
 004D693A    mov         ecx,dword ptr [edx+3C];TWinControl.?f3C:TControl
 004D693D    mov         dword ptr [eax+34],ecx;TDockTree.?f34:TControl
 004D6940    mov         eax,dword ptr [ebp-4]
 004D6943    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D6946    mov         edx,dword ptr [ebp-4]
 004D6949    mov         dword ptr [eax+3C],edx;TWinControl.?f3C:TControl
 004D694C    mov         dword ptr [eax+38],4D9040;TWinControl.FWindowProc:TWndMethod
 004D6953    mov         eax,dword ptr [ebp-4]
 004D6956    cmp         byte ptr [ebp-5],0
>004D695A    je          004D696B
 004D695C    call        @AfterConstruction
 004D6961    pop         dword ptr fs:[0]
 004D6968    add         esp,0C
 004D696B    mov         eax,dword ptr [ebp-4]
 004D696E    pop         ebx
 004D696F    mov         esp,ebp
 004D6971    pop         ebp
 004D6972    ret
*}
end;

//004D6974
destructor TDockTree.Destroy;
begin
{*
 004D6974    push        ebp
 004D6975    mov         ebp,esp
 004D6977    add         esp,0FFFFFFF8
 004D697A    call        @BeforeDestruction
 004D697F    mov         byte ptr [ebp-5],dl
 004D6982    mov         dword ptr [ebp-4],eax
 004D6985    mov         eax,dword ptr [ebp-4]
 004D6988    cmp         dword ptr [eax+30],0
>004D698C    je          004D69AE
 004D698E    mov         eax,dword ptr [ebp-4]
 004D6991    mov         eax,dword ptr [eax+14]
 004D6994    mov         edx,dword ptr [ebp-4]
 004D6997    mov         ecx,dword ptr [edx+30]
 004D699A    mov         dword ptr [eax+38],ecx
 004D699D    mov         ecx,dword ptr [edx+34]
 004D69A0    mov         dword ptr [eax+3C],ecx
 004D69A3    mov         eax,dword ptr [ebp-4]
 004D69A6    xor         edx,edx
 004D69A8    mov         dword ptr [eax+30],edx
 004D69AB    mov         dword ptr [eax+34],edx
 004D69AE    mov         eax,dword ptr [ebp-4]
 004D69B1    mov         edx,dword ptr [eax+64]
 004D69B4    mov         eax,dword ptr [ebp-4]
 004D69B7    call        004D7E58
 004D69BC    mov         eax,dword ptr [ebp-4]
 004D69BF    mov         eax,dword ptr [eax+10]
 004D69C2    call        TObject.Free
 004D69C7    mov         dl,byte ptr [ebp-5]
 004D69CA    and         dl,0FC
 004D69CD    mov         eax,dword ptr [ebp-4]
 004D69D0    call        TObject.Destroy
 004D69D5    cmp         byte ptr [ebp-5],0
>004D69D9    jle         004D69E3
 004D69DB    mov         eax,dword ptr [ebp-4]
 004D69DE    call        @ClassDestroy
 004D69E3    pop         ecx
 004D69E4    pop         ecx
 004D69E5    pop         ebp
 004D69E6    ret
*}
end;

//004D69E8
{*procedure sub_004D69E8(?:?; ?:?);
begin
 004D69E8    push        ebp
 004D69E9    mov         ebp,esp
 004D69EB    add         esp,0FFFFFFF4
 004D69EE    mov         dword ptr [ebp-8],ecx
 004D69F1    mov         dword ptr [ebp-0C],edx
 004D69F4    mov         dword ptr [ebp-4],eax
 004D69F7    mov         eax,dword ptr [ebp-4]
 004D69FA    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D69FD    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004D6A00    dec         eax
 004D6A01    sub         al,2
>004D6A03    jae         004D6A0D
 004D6A05    mov         eax,dword ptr [ebp-8]
 004D6A08    add         dword ptr [eax],0C
>004D6A0B    jmp         004D6A14
 004D6A0D    mov         eax,dword ptr [ebp-8]
 004D6A10    add         dword ptr [eax+4],0C
 004D6A14    mov         esp,ebp
 004D6A16    pop         ebp
 004D6A17    ret
end;*}

//004D6A18
procedure sub_004D6A18(?:TDockTree);
begin
{*
 004D6A18    push        ebp
 004D6A19    mov         ebp,esp
 004D6A1B    push        ecx
 004D6A1C    mov         dword ptr [ebp-4],eax
 004D6A1F    mov         eax,dword ptr [ebp-4]
 004D6A22    inc         dword ptr [eax+6C];TDockTree.FUpdateCount:Integer
 004D6A25    pop         ecx
 004D6A26    pop         ebp
 004D6A27    ret
*}
end;

//004D6A28
procedure sub_004D6A28(?:TDockTree);
begin
{*
 004D6A28    push        ebp
 004D6A29    mov         ebp,esp
 004D6A2B    push        ecx
 004D6A2C    mov         dword ptr [ebp-4],eax
 004D6A2F    mov         eax,dword ptr [ebp-4]
 004D6A32    dec         dword ptr [eax+6C];TDockTree.FUpdateCount:Integer
 004D6A35    mov         eax,dword ptr [ebp-4]
 004D6A38    cmp         dword ptr [eax+6C],0;TDockTree.FUpdateCount:Integer
>004D6A3C    jg          004D6A4E
 004D6A3E    mov         eax,dword ptr [ebp-4]
 004D6A41    xor         edx,edx
 004D6A43    mov         dword ptr [eax+6C],edx;TDockTree.FUpdateCount:Integer
 004D6A46    mov         eax,dword ptr [ebp-4]
 004D6A49    call        004D896C
 004D6A4E    pop         ecx
 004D6A4F    pop         ebp
 004D6A50    ret
*}
end;

//004D6A54
{*procedure sub_004D6A54(?:?; ?:?);
begin
 004D6A54    push        ebp
 004D6A55    mov         ebp,esp
 004D6A57    push        ecx
 004D6A58    mov         dword ptr [ebp-4],eax
 004D6A5B    mov         eax,dword ptr [ebp+8]
 004D6A5E    mov         eax,dword ptr [eax-4]
 004D6A61    mov         edx,dword ptr [ebp-4]
 004D6A64    cmp         eax,dword ptr [edx+4]
>004D6A67    jne         004D6A75
 004D6A69    mov         eax,dword ptr [ebp+8]
 004D6A6C    mov         edx,dword ptr [ebp-4]
 004D6A6F    mov         dword ptr [eax-8],edx
 004D6A72    pop         ecx
 004D6A73    pop         ebp
 004D6A74    ret
 004D6A75    mov         eax,dword ptr [ebp+8]
 004D6A78    cmp         dword ptr [eax-8],0
>004D6A7C    jne         004D6A97
 004D6A7E    mov         eax,dword ptr [ebp-4]
 004D6A81    cmp         dword ptr [eax+0C],0
>004D6A85    je          004D6A97
 004D6A87    mov         eax,dword ptr [ebp+8]
 004D6A8A    push        eax
 004D6A8B    mov         eax,dword ptr [ebp-4]
 004D6A8E    mov         eax,dword ptr [eax+0C]
 004D6A91    call        004D6A54
 004D6A96    pop         ecx
 004D6A97    mov         eax,dword ptr [ebp+8]
 004D6A9A    cmp         dword ptr [eax-8],0
>004D6A9E    jne         004D6AB9
 004D6AA0    mov         eax,dword ptr [ebp-4]
 004D6AA3    cmp         dword ptr [eax+8],0
>004D6AA7    je          004D6AB9
 004D6AA9    mov         eax,dword ptr [ebp+8]
 004D6AAC    push        eax
 004D6AAD    mov         eax,dword ptr [ebp-4]
 004D6AB0    mov         eax,dword ptr [eax+8]
 004D6AB3    call        004D6A54
 004D6AB8    pop         ecx
 004D6AB9    pop         ecx
 004D6ABA    pop         ebp
 004D6ABB    ret
end;*}

//004D6ABC
{*function sub_004D6ABC(?:TDockTree; ?:?):?;
begin
 004D6ABC    push        ebp
 004D6ABD    mov         ebp,esp
 004D6ABF    add         esp,0FFFFFFF0
 004D6AC2    mov         dword ptr [ebp-4],edx
 004D6AC5    mov         dword ptr [ebp-0C],eax
 004D6AC8    xor         eax,eax
 004D6ACA    mov         dword ptr [ebp-8],eax
 004D6ACD    cmp         dword ptr [ebp-4],0
>004D6AD1    je          004D6AE9
 004D6AD3    mov         eax,dword ptr [ebp-0C]
 004D6AD6    cmp         dword ptr [eax+64],0
>004D6ADA    je          004D6AE9
 004D6ADC    push        ebp
 004D6ADD    mov         eax,dword ptr [ebp-0C]
 004D6AE0    mov         eax,dword ptr [eax+64]
 004D6AE3    call        004D6A54
 004D6AE8    pop         ecx
 004D6AE9    mov         eax,dword ptr [ebp-8]
 004D6AEC    mov         dword ptr [ebp-10],eax
 004D6AEF    mov         eax,dword ptr [ebp-10]
 004D6AF2    mov         esp,ebp
 004D6AF4    pop         ebp
 004D6AF5    ret
end;*}

//004D6AF8
{*procedure sub_004D6AF8(?:?; ?:?);
begin
 004D6AF8    push        ebp
 004D6AF9    mov         ebp,esp
 004D6AFB    push        ecx
 004D6AFC    push        ebx
 004D6AFD    mov         dword ptr [ebp-4],eax
 004D6B00    mov         eax,dword ptr [ebp+8]
 004D6B03    lea         ebx,[eax+8]
 004D6B06    mov         edx,dword ptr [ebp-4]
 004D6B09    mov         eax,dword ptr [ebx+4]
 004D6B0C    call        dword ptr [ebx]
 004D6B0E    mov         eax,dword ptr [ebp-4]
 004D6B11    cmp         dword ptr [eax+0C],0
>004D6B15    je          004D6B27
 004D6B17    mov         eax,dword ptr [ebp+8]
 004D6B1A    push        eax
 004D6B1B    mov         eax,dword ptr [ebp-4]
 004D6B1E    mov         eax,dword ptr [eax+0C]
 004D6B21    call        004D6AF8
 004D6B26    pop         ecx
 004D6B27    mov         eax,dword ptr [ebp-4]
 004D6B2A    cmp         dword ptr [eax+8],0
>004D6B2E    je          004D6B40
 004D6B30    mov         eax,dword ptr [ebp+8]
 004D6B33    push        eax
 004D6B34    mov         eax,dword ptr [ebp-4]
 004D6B37    mov         eax,dword ptr [eax+8]
 004D6B3A    call        004D6AF8
 004D6B3F    pop         ecx
 004D6B40    pop         ebx
 004D6B41    pop         ecx
 004D6B42    pop         ebp
 004D6B43    ret
end;*}

//004D6B44
procedure sub_004D6B44(?:TDockTree; ?:TDockZone);
begin
{*
 004D6B44    push        ebp
 004D6B45    mov         ebp,esp
 004D6B47    add         esp,0FFFFFFF8
 004D6B4A    mov         dword ptr [ebp-8],edx
 004D6B4D    mov         dword ptr [ebp-4],eax
 004D6B50    cmp         dword ptr [ebp-8],0
>004D6B54    jne         004D6B5F
 004D6B56    mov         eax,dword ptr [ebp-4]
 004D6B59    mov         eax,dword ptr [eax+64]
 004D6B5C    mov         dword ptr [ebp-8],eax
 004D6B5F    push        ebp
 004D6B60    mov         eax,dword ptr [ebp-8]
 004D6B63    call        004D6AF8
 004D6B68    pop         ecx
 004D6B69    pop         ecx
 004D6B6A    pop         ecx
 004D6B6B    pop         ebp
 004D6B6C    ret         8
*}
end;

//004D6B70
{*procedure sub_004D6B70(?:?; ?:?; ?:?);
begin
 004D6B70    push        ebp
 004D6B71    mov         ebp,esp
 004D6B73    add         esp,0FFFFFFE0
 004D6B76    push        esi
 004D6B77    push        edi
 004D6B78    mov         dword ptr [ebp-0C],ecx
 004D6B7B    mov         dword ptr [ebp-8],edx
 004D6B7E    mov         dword ptr [ebp-4],eax
 004D6B81    mov         edx,dword ptr [ebp-8]
 004D6B84    mov         eax,dword ptr [ebp-4]
 004D6B87    call        004D6ABC
 004D6B8C    mov         dword ptr [ebp-10],eax
 004D6B8F    cmp         dword ptr [ebp-10],0
>004D6B93    jne         004D6BA6
 004D6B95    mov         eax,dword ptr [ebp-0C]
 004D6B98    xor         ecx,ecx
 004D6B9A    mov         edx,10
 004D6B9F    call        @FillChar
>004D6BA4    jmp         004D6BF4
 004D6BA6    mov         edx,1
 004D6BAB    mov         eax,dword ptr [ebp-10]
 004D6BAE    call        004D6188
 004D6BB3    push        eax
 004D6BB4    lea         eax,[ebp-20]
 004D6BB7    push        eax
 004D6BB8    mov         edx,2
 004D6BBD    mov         eax,dword ptr [ebp-10]
 004D6BC0    call        004D6188
 004D6BC5    push        eax
 004D6BC6    mov         edx,1
 004D6BCB    mov         eax,dword ptr [ebp-10]
 004D6BCE    call        004D60E8
 004D6BD3    push        eax
 004D6BD4    mov         edx,2
 004D6BD9    mov         eax,dword ptr [ebp-10]
 004D6BDC    call        004D60E8
 004D6BE1    pop         edx
 004D6BE2    pop         ecx
 004D6BE3    call        Bounds
 004D6BE8    mov         eax,dword ptr [ebp-0C]
 004D6BEB    lea         esi,[ebp-20]
 004D6BEE    mov         edi,eax
 004D6BF0    movs        dword ptr [edi],dword ptr [esi]
 004D6BF1    movs        dword ptr [edi],dword ptr [esi]
 004D6BF2    movs        dword ptr [edi],dword ptr [esi]
 004D6BF3    movs        dword ptr [edi],dword ptr [esi]
 004D6BF4    pop         edi
 004D6BF5    pop         esi
 004D6BF6    mov         esp,ebp
 004D6BF8    pop         ebp
 004D6BF9    ret
end;*}

//004D6BFC
{*function sub_004D6BFC(?:?; ?:?):?;
begin
 004D6BFC    push        ebp
 004D6BFD    mov         ebp,esp
 004D6BFF    add         esp,0FFFFFFEC
 004D6C02    mov         dword ptr [ebp-0C],ecx
 004D6C05    mov         dword ptr [ebp-8],edx
 004D6C08    mov         dword ptr [ebp-4],eax
 004D6C0B    mov         ecx,dword ptr [ebp-0C]
 004D6C0E    mov         edx,dword ptr [ebp-8]
 004D6C11    mov         eax,dword ptr [ebp-4]
 004D6C14    call        004D759C
 004D6C19    mov         dword ptr [ebp-14],eax
 004D6C1C    cmp         dword ptr [ebp-14],0
>004D6C20    je          004D6C2D
 004D6C22    mov         eax,dword ptr [ebp-14]
 004D6C25    mov         eax,dword ptr [eax+4]
 004D6C28    mov         dword ptr [ebp-10],eax
>004D6C2B    jmp         004D6C32
 004D6C2D    xor         eax,eax
 004D6C2F    mov         dword ptr [ebp-10],eax
 004D6C32    mov         eax,dword ptr [ebp-10]
 004D6C35    mov         esp,ebp
 004D6C37    pop         ebp
 004D6C38    ret
end;*}

//004D6C3C
{*procedure sub_004D6C3C(?:?; ?:?; ?:?);
begin
 004D6C3C    push        ebp
 004D6C3D    mov         ebp,esp
 004D6C3F    add         esp,0FFFFFFC0
 004D6C42    push        ebx
 004D6C43    push        esi
 004D6C44    push        edi
 004D6C45    mov         byte ptr [ebp-9],cl
 004D6C48    mov         dword ptr [ebp-8],edx
 004D6C4B    mov         dword ptr [ebp-4],eax
 004D6C4E    mov         eax,dword ptr [ebp-8]
 004D6C51    cmp         byte ptr [eax+57],0
>004D6C55    je          004D6EDC
 004D6C5B    mov         eax,dword ptr [ebp-4]
 004D6C5E    cmp         dword ptr [eax+38],0;TDockTree.FReplacementZone:TDockZone
>004D6C62    je          004D6C80
 004D6C64    mov         eax,dword ptr [ebp-4]
 004D6C67    mov         eax,dword ptr [eax+38];TDockTree.FReplacementZone:TDockZone
 004D6C6A    mov         edx,dword ptr [ebp-8]
 004D6C6D    mov         dword ptr [eax+4],edx;TDockZone.FChildControl:TControl
 004D6C70    mov         eax,dword ptr [ebp-4]
 004D6C73    mov         eax,dword ptr [eax+38];TDockTree.FReplacementZone:TDockZone
 004D6C76    call        004D6488
>004D6C7B    jmp         004D6ED1
 004D6C80    mov         eax,dword ptr [ebp-4]
 004D6C83    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6C86    cmp         dword ptr [eax+8],0;TDockZone.FChildZones:TDockZone
>004D6C8A    jne         004D6D5F
 004D6C90    lea         edx,[ebp-30]
 004D6C93    mov         eax,dword ptr [ebp-4]
 004D6C96    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D6C99    mov         ecx,dword ptr [eax]
 004D6C9B    call        dword ptr [ecx+44];TWinControl.sub_004D3A1C
 004D6C9E    lea         edx,[ebp-30]
 004D6CA1    mov         eax,dword ptr [ebp-4]
 004D6CA4    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D6CA7    mov         ecx,dword ptr [eax]
 004D6CA9    call        dword ptr [ecx+8C];TWinControl.sub_004CE790
 004D6CAF    mov         eax,dword ptr [ebp-28]
 004D6CB2    sub         eax,dword ptr [ebp-30]
 004D6CB5    mov         dword ptr [ebp-1C],eax
 004D6CB8    mov         eax,dword ptr [ebp-24]
 004D6CBB    sub         eax,dword ptr [ebp-2C]
 004D6CBE    mov         dword ptr [ebp-20],eax
 004D6CC1    mov         eax,dword ptr [ebp-4]
 004D6CC4    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D6CC7    cmp         byte ptr [eax+5C],0;TWinControl.FAutoSize:Boolean
>004D6CCB    je          004D6CEF
 004D6CCD    cmp         dword ptr [ebp-1C],0
>004D6CD1    jne         004D6CDE
 004D6CD3    mov         eax,dword ptr [ebp-8]
 004D6CD6    call        004CAEFC
 004D6CDB    mov         dword ptr [ebp-1C],eax
 004D6CDE    cmp         dword ptr [ebp-20],0
>004D6CE2    jne         004D6CEF
 004D6CE4    mov         eax,dword ptr [ebp-8]
 004D6CE7    call        004CAEC8
 004D6CEC    mov         dword ptr [ebp-20],eax
 004D6CEF    mov         eax,dword ptr [ebp-20]
 004D6CF2    push        eax
 004D6CF3    lea         eax,[ebp-40]
 004D6CF6    push        eax
 004D6CF7    mov         ecx,dword ptr [ebp-1C]
 004D6CFA    mov         edx,dword ptr [ebp-2C]
 004D6CFD    mov         eax,dword ptr [ebp-30]
 004D6D00    call        Bounds
 004D6D05    lea         esi,[ebp-40]
 004D6D08    lea         edi,[ebp-30]
 004D6D0B    movs        dword ptr [edi],dword ptr [esi]
 004D6D0C    movs        dword ptr [edi],dword ptr [esi]
 004D6D0D    movs        dword ptr [edi],dword ptr [esi]
 004D6D0E    movs        dword ptr [edi],dword ptr [esi]
 004D6D0F    lea         ecx,[ebp-30]
 004D6D12    mov         edx,dword ptr [ebp-8]
 004D6D15    mov         eax,dword ptr [ebp-4]
 004D6D18    mov         ebx,dword ptr [eax]
 004D6D1A    call        dword ptr [ebx];TDockTree.sub_004D69E8
 004D6D1C    lea         edx,[ebp-30]
 004D6D1F    mov         eax,dword ptr [ebp-8]
 004D6D22    call        004CA6F8
 004D6D27    mov         ecx,dword ptr [ebp-4]
 004D6D2A    mov         dl,1
 004D6D2C    mov         eax,[004C6918];TDockZone
 004D6D31    call        TDockZone.Create;TDockZone.Create
 004D6D36    mov         dword ptr [ebp-14],eax
 004D6D39    mov         eax,dword ptr [ebp-4]
 004D6D3C    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6D3F    mov         edx,dword ptr [ebp-14]
 004D6D42    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004D6D45    mov         eax,dword ptr [ebp-14]
 004D6D48    mov         edx,dword ptr [ebp-4]
 004D6D4B    mov         edx,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
 004D6D4E    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004D6D51    mov         eax,dword ptr [ebp-14]
 004D6D54    mov         edx,dword ptr [ebp-8]
 004D6D57    mov         dword ptr [eax+4],edx;TDockZone.FChildControl:TControl
>004D6D5A    jmp         004D6ED1
 004D6D5F    mov         al,byte ptr [ebp-9]
 004D6D62    test        al,al
>004D6D64    je          004D6D6A
 004D6D66    sub         al,5
>004D6D68    jne         004D6D6E
 004D6D6A    mov         byte ptr [ebp-9],4
 004D6D6E    mov         edx,dword ptr [ebp-8]
 004D6D71    mov         eax,dword ptr [ebp-4]
 004D6D74    call        004D6ABC
 004D6D79    mov         dword ptr [ebp-14],eax
 004D6D7C    cmp         dword ptr [ebp-14],0
>004D6D80    je          004D6D8D
 004D6D82    mov         edx,dword ptr [ebp-14]
 004D6D85    mov         eax,dword ptr [ebp-4]
 004D6D88    call        004D7F48
 004D6D8D    mov         edx,dword ptr [ebp+8]
 004D6D90    mov         eax,dword ptr [ebp-4]
 004D6D93    call        004D6ABC
 004D6D98    mov         dword ptr [ebp-10],eax
 004D6D9B    xor         eax,eax
 004D6D9D    mov         al,byte ptr [ebp-9]
 004D6DA0    mov         al,byte ptr [eax+54178C]
 004D6DA6    mov         byte ptr [ebp-15],al
 004D6DA9    mov         eax,dword ptr [ebp-4]
 004D6DAC    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6DAF    call        004D5F28
 004D6DB4    dec         eax
>004D6DB5    jne         004D6E48
 004D6DBB    mov         eax,dword ptr [ebp-4]
 004D6DBE    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6DC1    mov         dl,byte ptr [ebp-15]
 004D6DC4    mov         byte ptr [eax+10],dl;TDockZone.FOrientation:TDockOrientation
 004D6DC7    mov         al,byte ptr [ebp-15]
 004D6DCA    dec         al
>004D6DCC    je          004D6DD4
 004D6DCE    dec         al
>004D6DD0    je          004D6E0F
>004D6DD2    jmp         004D6E48
 004D6DD4    mov         eax,dword ptr [ebp-4]
 004D6DD7    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6DDA    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D6DDD    mov         edx,2
 004D6DE2    call        004D6188
 004D6DE7    mov         edx,eax
 004D6DE9    mov         eax,dword ptr [ebp-4]
 004D6DEC    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6DEF    call        004D6658
 004D6DF4    mov         eax,dword ptr [ebp-4]
 004D6DF7    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6DFA    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D6DFD    mov         edx,1
 004D6E02    call        004D6188
 004D6E07    mov         edx,dword ptr [ebp-4]
 004D6E0A    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
>004D6E0D    jmp         004D6E48
 004D6E0F    mov         eax,dword ptr [ebp-4]
 004D6E12    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6E15    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D6E18    mov         edx,1
 004D6E1D    call        004D6188
 004D6E22    mov         edx,eax
 004D6E24    mov         eax,dword ptr [ebp-4]
 004D6E27    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6E2A    call        004D6658
 004D6E2F    mov         eax,dword ptr [ebp-4]
 004D6E32    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6E35    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D6E38    mov         edx,2
 004D6E3D    call        004D6188
 004D6E42    mov         edx,dword ptr [ebp-4]
 004D6E45    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 004D6E48    mov         ecx,dword ptr [ebp-4]
 004D6E4B    mov         dl,1
 004D6E4D    mov         eax,[004C6918];TDockZone
 004D6E52    call        TDockZone.Create;TDockZone.Create
 004D6E57    mov         dword ptr [ebp-14],eax
 004D6E5A    mov         eax,dword ptr [ebp-14]
 004D6E5D    mov         edx,dword ptr [ebp-8]
 004D6E60    mov         dword ptr [eax+4],edx;TDockZone.FChildControl:TControl
 004D6E63    cmp         dword ptr [ebp-10],0
>004D6E67    je          004D6E77
 004D6E69    mov         eax,dword ptr [ebp-10]
 004D6E6C    mov         eax,dword ptr [eax+14]
 004D6E6F    mov         al,byte ptr [eax+10]
 004D6E72    mov         byte ptr [ebp-16],al
>004D6E75    jmp         004D6E83
 004D6E77    mov         eax,dword ptr [ebp-4]
 004D6E7A    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6E7D    mov         al,byte ptr [eax+10];TDockZone.FOrientation:TDockOrientation
 004D6E80    mov         byte ptr [ebp-16],al
 004D6E83    cmp         byte ptr [ebp-15],0
>004D6E87    jne         004D6E8F
 004D6E89    mov         al,byte ptr [ebp-16]
 004D6E8C    mov         byte ptr [ebp-15],al
 004D6E8F    mov         al,byte ptr [ebp-15]
 004D6E92    cmp         al,byte ptr [ebp-16]
>004D6E95    jne         004D6EB3
 004D6E97    xor         eax,eax
 004D6E99    mov         al,byte ptr [ebp-9]
 004D6E9C    mov         al,byte ptr [eax+541794]
 004D6EA2    push        eax
 004D6EA3    mov         ecx,dword ptr [ebp-10]
 004D6EA6    mov         edx,dword ptr [ebp-14]
 004D6EA9    mov         eax,dword ptr [ebp-4]
 004D6EAC    call        004D7174
>004D6EB1    jmp         004D6ED1
 004D6EB3    mov         al,byte ptr [ebp-15]
 004D6EB6    push        eax
 004D6EB7    xor         eax,eax
 004D6EB9    mov         al,byte ptr [ebp-9]
 004D6EBC    mov         al,byte ptr [eax+541794]
 004D6EC2    push        eax
 004D6EC3    mov         ecx,dword ptr [ebp-10]
 004D6EC6    mov         edx,dword ptr [ebp-14]
 004D6EC9    mov         eax,dword ptr [ebp-4]
 004D6ECC    call        004D6EE8
 004D6ED1    mov         eax,dword ptr [ebp-4]
 004D6ED4    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D6ED7    mov         edx,dword ptr [eax]
 004D6ED9    call        dword ptr [edx+7C];TWinControl.sub_004D3648
 004D6EDC    pop         edi
 004D6EDD    pop         esi
 004D6EDE    pop         ebx
 004D6EDF    mov         esp,ebp
 004D6EE1    pop         ebp
 004D6EE2    ret         4
end;*}

//004D6EE8
{*procedure sub_004D6EE8(?:TDockTree; ?:TDockZone; ?:?; ?:?; ?:?);
begin
 004D6EE8    push        ebp
 004D6EE9    mov         ebp,esp
 004D6EEB    add         esp,0FFFFFFF0
 004D6EEE    mov         dword ptr [ebp-0C],ecx
 004D6EF1    mov         dword ptr [ebp-8],edx
 004D6EF4    mov         dword ptr [ebp-4],eax
 004D6EF7    mov         ecx,dword ptr [ebp-4]
 004D6EFA    mov         dl,1
 004D6EFC    mov         eax,[004C6918];TDockZone
 004D6F01    call        TDockZone.Create;TDockZone.Create
 004D6F06    mov         dword ptr [ebp-10],eax
 004D6F09    mov         al,byte ptr [ebp+0C]
 004D6F0C    mov         edx,dword ptr [ebp-10]
 004D6F0F    mov         byte ptr [edx+10],al;TDockZone.FOrientation:TDockOrientation
 004D6F12    cmp         dword ptr [ebp-0C],0
>004D6F16    jne         004D7070
 004D6F1C    mov         eax,dword ptr [ebp-4]
 004D6F1F    mov         edx,dword ptr [eax+68];TDockTree.FTopXYLimit:Integer
 004D6F22    mov         eax,dword ptr [ebp-10]
 004D6F25    call        004D6658
 004D6F2A    mov         eax,dword ptr [ebp-4]
 004D6F2D    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6F30    call        004D6618
 004D6F35    mov         edx,dword ptr [ebp-4]
 004D6F38    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 004D6F3B    mov         al,byte ptr [ebp+0C]
 004D6F3E    mov         edx,dword ptr [ebp-4]
 004D6F41    mov         byte ptr [edx+48],al;TDockTree.FShiftScaleOrient:TDockOrientation
 004D6F44    mov         eax,dword ptr [ebp-4]
 004D6F47    xor         edx,edx
 004D6F49    mov         dword ptr [eax+40],edx;TDockTree.FScaleBy:Double
 004D6F4C    mov         dword ptr [eax+44],3FE00000;TDockTree.?f44:dword
 004D6F53    cmp         byte ptr [ebp+8],0
>004D6F57    je          004D6FB7
 004D6F59    mov         eax,dword ptr [ebp-4]
 004D6F5C    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6F5F    mov         edx,dword ptr [ebp-10]
 004D6F62    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 004D6F65    mov         eax,dword ptr [ebp-4]
 004D6F68    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6F6B    mov         edx,dword ptr [ebp-10]
 004D6F6E    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004D6F71    mov         eax,dword ptr [ebp-4]
 004D6F74    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6F77    mov         edx,dword ptr [ebp-8]
 004D6F7A    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004D6F7D    mov         eax,dword ptr [ebp-8]
 004D6F80    mov         edx,dword ptr [ebp-4]
 004D6F83    mov         edx,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
 004D6F86    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D6F89    mov         eax,dword ptr [ebp-8]
 004D6F8C    mov         edx,dword ptr [ebp-10]
 004D6F8F    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004D6F92    mov         eax,dword ptr [ebp-10]
 004D6F95    mov         edx,dword ptr [ebp-4]
 004D6F98    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 004D6F9B    mov         eax,dword ptr [ebp-4]
 004D6F9E    push        eax
 004D6F9F    push        4D83F4
 004D6FA4    mov         eax,dword ptr [ebp-10]
 004D6FA7    mov         edx,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D6FAA    mov         eax,dword ptr [ebp-4]
 004D6FAD    call        004D6B44
>004D6FB2    jmp         004D7058
 004D6FB7    mov         eax,dword ptr [ebp-8]
 004D6FBA    mov         edx,dword ptr [ebp-10]
 004D6FBD    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 004D6FC0    mov         eax,dword ptr [ebp-4]
 004D6FC3    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6FC6    mov         edx,dword ptr [ebp-10]
 004D6FC9    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004D6FCC    mov         eax,dword ptr [ebp-4]
 004D6FCF    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D6FD2    mov         edx,dword ptr [ebp-8]
 004D6FD5    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D6FD8    mov         eax,dword ptr [ebp-8]
 004D6FDB    mov         edx,dword ptr [ebp-4]
 004D6FDE    mov         edx,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
 004D6FE1    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004D6FE4    mov         eax,dword ptr [ebp-8]
 004D6FE7    mov         edx,dword ptr [ebp-10]
 004D6FEA    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004D6FED    mov         eax,dword ptr [ebp-10]
 004D6FF0    mov         edx,dword ptr [ebp-4]
 004D6FF3    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 004D6FF6    mov         eax,dword ptr [ebp-4]
 004D6FF9    push        eax
 004D6FFA    push        4D83F4
 004D6FFF    mov         eax,dword ptr [ebp-10]
 004D7002    mov         edx,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D7005    mov         eax,dword ptr [ebp-4]
 004D7008    call        004D6B44
 004D700D    mov         eax,dword ptr [ebp-4]
 004D7010    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D7013    call        004D6618
 004D7018    sar         eax,1
>004D701A    jns         004D701F
 004D701C    adc         eax,0
 004D701F    mov         edx,dword ptr [ebp-4]
 004D7022    mov         dword ptr [edx+4C],eax;TDockTree.FShiftBy:Integer
 004D7025    mov         eax,dword ptr [ebp-4]
 004D7028    push        eax
 004D7029    push        4D87F0
 004D702E    mov         eax,dword ptr [ebp-10]
 004D7031    mov         edx,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D7034    mov         eax,dword ptr [ebp-4]
 004D7037    call        004D6B44
 004D703C    mov         eax,dword ptr [ebp-4]
 004D703F    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D7042    call        004D6618
 004D7047    mov         edx,eax
 004D7049    sar         edx,1
>004D704B    jns         004D7050
 004D704D    adc         edx,0
 004D7050    mov         eax,dword ptr [ebp-8]
 004D7053    call        004D6658
 004D7058    mov         eax,dword ptr [ebp-4]
 004D705B    push        eax
 004D705C    push        4D89A4
 004D7061    xor         edx,edx
 004D7063    mov         eax,dword ptr [ebp-4]
 004D7066    call        004D6B44
>004D706B    jmp         004D714A
 004D7070    mov         eax,dword ptr [ebp-0C]
 004D7073    call        004D6618
 004D7078    mov         edx,eax
 004D707A    mov         eax,dword ptr [ebp-10]
 004D707D    call        004D6658
 004D7082    mov         eax,dword ptr [ebp-0C]
 004D7085    mov         eax,dword ptr [eax+14]
 004D7088    mov         edx,dword ptr [ebp-10]
 004D708B    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004D708E    mov         eax,dword ptr [ebp-0C]
 004D7091    mov         eax,dword ptr [eax+18]
 004D7094    mov         edx,dword ptr [ebp-10]
 004D7097    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 004D709A    mov         eax,dword ptr [ebp-10]
 004D709D    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>004D70A1    je          004D70AF
 004D70A3    mov         eax,dword ptr [ebp-10]
 004D70A6    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D70A9    mov         edx,dword ptr [ebp-10]
 004D70AC    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004D70AF    mov         eax,dword ptr [ebp-0C]
 004D70B2    mov         eax,dword ptr [eax+0C]
 004D70B5    mov         edx,dword ptr [ebp-10]
 004D70B8    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004D70BB    mov         eax,dword ptr [ebp-10]
 004D70BE    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004D70C2    je          004D70D0
 004D70C4    mov         eax,dword ptr [ebp-10]
 004D70C7    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D70CA    mov         edx,dword ptr [ebp-10]
 004D70CD    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D70D0    mov         eax,dword ptr [ebp-10]
 004D70D3    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D70D6    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D70D9    cmp         eax,dword ptr [ebp-0C]
>004D70DC    jne         004D70EA
 004D70DE    mov         eax,dword ptr [ebp-10]
 004D70E1    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D70E4    mov         edx,dword ptr [ebp-10]
 004D70E7    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004D70EA    mov         eax,dword ptr [ebp-8]
 004D70ED    mov         edx,dword ptr [ebp-10]
 004D70F0    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004D70F3    mov         eax,dword ptr [ebp-0C]
 004D70F6    mov         edx,dword ptr [ebp-10]
 004D70F9    mov         dword ptr [eax+14],edx
 004D70FC    cmp         byte ptr [ebp+8],0
>004D7100    je          004D7127
 004D7102    mov         eax,dword ptr [ebp-0C]
 004D7105    mov         edx,dword ptr [ebp-10]
 004D7108    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 004D710B    mov         eax,dword ptr [ebp-0C]
 004D710E    xor         edx,edx
 004D7110    mov         dword ptr [eax+18],edx
 004D7113    mov         eax,dword ptr [ebp-0C]
 004D7116    mov         edx,dword ptr [ebp-8]
 004D7119    mov         dword ptr [eax+0C],edx
 004D711C    mov         eax,dword ptr [ebp-8]
 004D711F    mov         edx,dword ptr [ebp-0C]
 004D7122    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
>004D7125    jmp         004D714A
 004D7127    mov         eax,dword ptr [ebp-8]
 004D712A    mov         edx,dword ptr [ebp-10]
 004D712D    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
 004D7130    mov         eax,dword ptr [ebp-0C]
 004D7133    mov         edx,dword ptr [ebp-8]
 004D7136    mov         dword ptr [eax+18],edx
 004D7139    mov         eax,dword ptr [ebp-0C]
 004D713C    xor         edx,edx
 004D713E    mov         dword ptr [eax+0C],edx
 004D7141    mov         eax,dword ptr [ebp-8]
 004D7144    mov         edx,dword ptr [ebp-0C]
 004D7147    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004D714A    mov         eax,dword ptr [ebp-10]
 004D714D    call        004D6290
 004D7152    mov         eax,dword ptr [ebp-10]
 004D7155    call        004D6704
 004D715A    mov         eax,dword ptr [ebp-4]
 004D715D    push        eax
 004D715E    push        4D89A4
 004D7163    xor         edx,edx
 004D7165    mov         eax,dword ptr [ebp-4]
 004D7168    call        004D6B44
 004D716D    mov         esp,ebp
 004D716F    pop         ebp
 004D7170    ret         8
end;*}

//004D7174
{*procedure sub_004D7174(?:TDockTree; ?:TDockZone; ?:?; ?:?);
begin
 004D7174    push        ebp
 004D7175    mov         ebp,esp
 004D7177    add         esp,0FFFFFFF4
 004D717A    mov         dword ptr [ebp-0C],ecx
 004D717D    mov         dword ptr [ebp-8],edx
 004D7180    mov         dword ptr [ebp-4],eax
 004D7183    cmp         dword ptr [ebp-0C],0
>004D7187    jne         004D71AF
 004D7189    mov         eax,dword ptr [ebp-4]
 004D718C    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D718F    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D7192    mov         dword ptr [ebp-0C],eax
 004D7195    cmp         byte ptr [ebp+8],0
>004D7199    je          004D71AF
>004D719B    jmp         004D71A6
 004D719D    mov         eax,dword ptr [ebp-0C]
 004D71A0    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D71A3    mov         dword ptr [ebp-0C],eax
 004D71A6    mov         eax,dword ptr [ebp-0C]
 004D71A9    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004D71AD    jne         004D719D
 004D71AF    cmp         byte ptr [ebp+8],0
>004D71B3    je          004D71F6
 004D71B5    mov         eax,dword ptr [ebp-0C]
 004D71B8    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D71BB    mov         edx,dword ptr [ebp-8]
 004D71BE    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004D71C1    mov         eax,dword ptr [ebp-0C]
 004D71C4    mov         edx,dword ptr [ebp-8]
 004D71C7    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 004D71CA    mov         eax,dword ptr [ebp-0C]
 004D71CD    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D71D0    mov         edx,dword ptr [ebp-8]
 004D71D3    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004D71D6    mov         eax,dword ptr [ebp-8]
 004D71D9    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004D71DD    je          004D71EB
 004D71DF    mov         eax,dword ptr [ebp-8]
 004D71E2    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D71E5    mov         edx,dword ptr [ebp-8]
 004D71E8    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D71EB    mov         eax,dword ptr [ebp-8]
 004D71EE    mov         edx,dword ptr [ebp-0C]
 004D71F1    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
>004D71F4    jmp         004D724F
 004D71F6    mov         eax,dword ptr [ebp-0C]
 004D71F9    mov         edx,dword ptr [ebp-8]
 004D71FC    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004D71FF    mov         eax,dword ptr [ebp-0C]
 004D7202    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D7205    mov         edx,dword ptr [ebp-8]
 004D7208    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 004D720B    mov         eax,dword ptr [ebp-8]
 004D720E    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>004D7212    je          004D7220
 004D7214    mov         eax,dword ptr [ebp-8]
 004D7217    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D721A    mov         edx,dword ptr [ebp-8]
 004D721D    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004D7220    mov         eax,dword ptr [ebp-8]
 004D7223    mov         edx,dword ptr [ebp-0C]
 004D7226    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 004D7229    mov         eax,dword ptr [ebp-0C]
 004D722C    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D722F    mov         edx,dword ptr [ebp-8]
 004D7232    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004D7235    mov         eax,dword ptr [ebp-8]
 004D7238    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D723B    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D723E    cmp         eax,dword ptr [ebp-0C]
>004D7241    jne         004D724F
 004D7243    mov         eax,dword ptr [ebp-8]
 004D7246    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D7249    mov         edx,dword ptr [ebp-8]
 004D724C    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004D724F    mov         eax,dword ptr [ebp-0C]
 004D7252    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D7255    call        004D6290
 004D725A    mov         eax,dword ptr [ebp-0C]
 004D725D    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D7260    call        004D6704
 004D7265    mov         esp,ebp
 004D7267    pop         ebp
 004D7268    ret         4
end;*}

//004D726C
{*procedure sub_004D726C(?:?; ?:?);
begin
 004D726C    push        ebp
 004D726D    mov         ebp,esp
 004D726F    add         esp,0FFFFFFF0
 004D7272    mov         dword ptr [ebp-4],eax
 004D7275    mov         eax,dword ptr [ebp-4]
 004D7278    mov         eax,dword ptr [eax+14]
 004D727B    cmp         byte ptr [eax+10],1
>004D727F    jne         004D72CA
 004D7281    mov         eax,dword ptr [ebp-4]
 004D7284    call        004D6618
 004D7289    mov         edx,dword ptr [ebp+8]
 004D728C    mov         edx,dword ptr [edx-4]
 004D728F    cmp         eax,dword ptr [edx+4]
>004D7292    jl          004D72CA
 004D7294    mov         eax,dword ptr [ebp-4]
 004D7297    call        004D6618
 004D729C    mov         edx,dword ptr [ebp+8]
 004D729F    mov         edx,dword ptr [edx-8]
 004D72A2    sub         eax,dword ptr [edx+0C]
 004D72A5    mov         edx,dword ptr [ebp+8]
 004D72A8    mov         edx,dword ptr [edx-4]
 004D72AB    cmp         eax,dword ptr [edx+4]
>004D72AE    jg          004D72CA
 004D72B0    mov         eax,dword ptr [ebp+8]
 004D72B3    mov         eax,dword ptr [eax-0C]
 004D72B6    mov         dword ptr [eax],12
 004D72BC    mov         eax,dword ptr [ebp+8]
 004D72BF    mov         edx,dword ptr [ebp-4]
 004D72C2    mov         dword ptr [eax-10],edx
>004D72C5    jmp         004D748F
 004D72CA    mov         eax,dword ptr [ebp-4]
 004D72CD    mov         eax,dword ptr [eax+14]
 004D72D0    cmp         byte ptr [eax+10],2
>004D72D4    jne         004D731D
 004D72D6    mov         eax,dword ptr [ebp-4]
 004D72D9    call        004D6618
 004D72DE    mov         edx,dword ptr [ebp+8]
 004D72E1    mov         edx,dword ptr [edx-4]
 004D72E4    cmp         eax,dword ptr [edx]
>004D72E6    jl          004D731D
 004D72E8    mov         eax,dword ptr [ebp-4]
 004D72EB    call        004D6618
 004D72F0    mov         edx,dword ptr [ebp+8]
 004D72F3    mov         edx,dword ptr [edx-8]
 004D72F6    sub         eax,dword ptr [edx+0C]
 004D72F9    mov         edx,dword ptr [ebp+8]
 004D72FC    mov         edx,dword ptr [edx-4]
 004D72FF    cmp         eax,dword ptr [edx]
>004D7301    jg          004D731D
 004D7303    mov         eax,dword ptr [ebp+8]
 004D7306    mov         eax,dword ptr [eax-0C]
 004D7309    mov         dword ptr [eax],12
 004D730F    mov         eax,dword ptr [ebp+8]
 004D7312    mov         edx,dword ptr [ebp-4]
 004D7315    mov         dword ptr [eax-10],edx
>004D7318    jmp         004D748F
 004D731D    mov         eax,dword ptr [ebp-4]
 004D7320    cmp         dword ptr [eax+4],0
>004D7324    je          004D748F
 004D732A    mov         edx,1
 004D732F    mov         eax,dword ptr [ebp-4]
 004D7332    call        004D60E8
 004D7337    mov         dword ptr [ebp-8],eax
 004D733A    mov         edx,2
 004D733F    mov         eax,dword ptr [ebp-4]
 004D7342    call        004D60E8
 004D7347    mov         dword ptr [ebp-0C],eax
 004D734A    mov         eax,dword ptr [ebp+8]
 004D734D    mov         eax,dword ptr [eax-8]
 004D7350    cmp         byte ptr [eax+1C],0
>004D7354    je          004D7405
 004D735A    mov         eax,dword ptr [ebp+8]
 004D735D    mov         eax,dword ptr [eax-4]
 004D7360    mov         eax,dword ptr [eax+4]
 004D7363    cmp         eax,dword ptr [ebp-8]
>004D7366    jl          004D748F
 004D736C    mov         eax,dword ptr [ebp+8]
 004D736F    mov         eax,dword ptr [eax-4]
 004D7372    mov         eax,dword ptr [eax+4]
 004D7375    mov         edx,dword ptr [ebp+8]
 004D7378    mov         edx,dword ptr [edx-8]
 004D737B    mov         edx,dword ptr [edx+18]
 004D737E    add         edx,dword ptr [ebp-8]
 004D7381    cmp         eax,edx
>004D7383    jg          004D748F
 004D7389    mov         eax,dword ptr [ebp+8]
 004D738C    mov         eax,dword ptr [eax-4]
 004D738F    mov         eax,dword ptr [eax]
 004D7391    cmp         eax,dword ptr [ebp-0C]
>004D7394    jl          004D748F
 004D739A    mov         edx,2
 004D739F    mov         eax,dword ptr [ebp-4]
 004D73A2    call        004D6188
 004D73A7    add         eax,dword ptr [ebp-0C]
 004D73AA    mov         edx,dword ptr [ebp+8]
 004D73AD    mov         edx,dword ptr [edx-4]
 004D73B0    cmp         eax,dword ptr [edx]
>004D73B2    jl          004D748F
 004D73B8    mov         eax,dword ptr [ebp+8]
 004D73BB    mov         edx,dword ptr [ebp-4]
 004D73BE    mov         dword ptr [eax-10],edx
 004D73C1    mov         eax,dword ptr [ebp-4]
 004D73C4    mov         eax,dword ptr [eax+4]
 004D73C7    mov         dword ptr [ebp-10],eax
 004D73CA    mov         eax,dword ptr [ebp-10]
 004D73CD    mov         eax,dword ptr [eax+40]
 004D73D0    mov         edx,dword ptr [ebp-10]
 004D73D3    add         eax,dword ptr [edx+48]
 004D73D6    sub         eax,0F
 004D73D9    mov         edx,dword ptr [ebp+8]
 004D73DC    mov         edx,dword ptr [edx-4]
 004D73DF    cmp         eax,dword ptr [edx]
>004D73E1    jge         004D73F4
 004D73E3    mov         eax,dword ptr [ebp+8]
 004D73E6    mov         eax,dword ptr [eax-0C]
 004D73E9    mov         dword ptr [eax],14
>004D73EF    jmp         004D748F
 004D73F4    mov         eax,dword ptr [ebp+8]
 004D73F7    mov         eax,dword ptr [eax-0C]
 004D73FA    mov         dword ptr [eax],2
>004D7400    jmp         004D748F
 004D7405    mov         eax,dword ptr [ebp+8]
 004D7408    mov         eax,dword ptr [eax-4]
 004D740B    mov         eax,dword ptr [eax]
 004D740D    cmp         eax,dword ptr [ebp-0C]
>004D7410    jl          004D748F
 004D7412    mov         eax,dword ptr [ebp+8]
 004D7415    mov         eax,dword ptr [eax-4]
 004D7418    mov         eax,dword ptr [eax]
 004D741A    mov         edx,dword ptr [ebp+8]
 004D741D    mov         edx,dword ptr [edx-8]
 004D7420    mov         edx,dword ptr [edx+18]
 004D7423    add         edx,dword ptr [ebp-0C]
 004D7426    cmp         eax,edx
>004D7428    jg          004D748F
 004D742A    mov         eax,dword ptr [ebp+8]
 004D742D    mov         eax,dword ptr [eax-4]
 004D7430    mov         eax,dword ptr [eax+4]
 004D7433    cmp         eax,dword ptr [ebp-8]
>004D7436    jl          004D748F
 004D7438    mov         edx,1
 004D743D    mov         eax,dword ptr [ebp-4]
 004D7440    call        004D6188
 004D7445    add         eax,dword ptr [ebp-8]
 004D7448    mov         edx,dword ptr [ebp+8]
 004D744B    mov         edx,dword ptr [edx-4]
 004D744E    cmp         eax,dword ptr [edx+4]
>004D7451    jl          004D748F
 004D7453    mov         eax,dword ptr [ebp+8]
 004D7456    mov         edx,dword ptr [ebp-4]
 004D7459    mov         dword ptr [eax-10],edx
 004D745C    mov         eax,dword ptr [ebp+8]
 004D745F    mov         eax,dword ptr [eax-4]
 004D7462    mov         eax,dword ptr [eax+4]
 004D7465    mov         edx,dword ptr [ebp-4]
 004D7468    mov         edx,dword ptr [edx+4]
 004D746B    mov         edx,dword ptr [edx+44]
 004D746E    add         edx,0F
 004D7471    cmp         eax,edx
>004D7473    jge         004D7483
 004D7475    mov         eax,dword ptr [ebp+8]
 004D7478    mov         eax,dword ptr [eax-0C]
 004D747B    mov         dword ptr [eax],14
>004D7481    jmp         004D748F
 004D7483    mov         eax,dword ptr [ebp+8]
 004D7486    mov         eax,dword ptr [eax-0C]
 004D7489    mov         dword ptr [eax],2
 004D748F    mov         eax,dword ptr [ebp+8]
 004D7492    cmp         dword ptr [eax-10],0
>004D7496    jne         004D74B6
 004D7498    mov         eax,dword ptr [ebp-4]
 004D749B    call        004D6788
 004D74A0    test        eax,eax
>004D74A2    je          004D74B6
 004D74A4    mov         eax,dword ptr [ebp+8]
 004D74A7    push        eax
 004D74A8    mov         eax,dword ptr [ebp-4]
 004D74AB    call        004D6788
 004D74B0    call        004D726C
 004D74B5    pop         ecx
 004D74B6    mov         eax,dword ptr [ebp+8]
 004D74B9    cmp         dword ptr [eax-10],0
>004D74BD    jne         004D74DD
 004D74BF    mov         eax,dword ptr [ebp-4]
 004D74C2    call        004D67E0
 004D74C7    test        eax,eax
>004D74C9    je          004D74DD
 004D74CB    mov         eax,dword ptr [ebp+8]
 004D74CE    push        eax
 004D74CF    mov         eax,dword ptr [ebp-4]
 004D74D2    call        004D67E0
 004D74D7    call        004D726C
 004D74DC    pop         ecx
 004D74DD    mov         esp,ebp
 004D74DF    pop         ebp
 004D74E0    ret
end;*}

//004D74E4
{*function sub_004D74E4(?:?; ?:?):?;
begin
 004D74E4    push        ebp
 004D74E5    mov         ebp,esp
 004D74E7    add         esp,0FFFFFFDC
 004D74EA    mov         dword ptr [ebp-4],eax
 004D74ED    mov         eax,dword ptr [ebp+8]
 004D74F0    mov         eax,dword ptr [eax-8]
 004D74F3    mov         eax,dword ptr [eax+14]
 004D74F6    call        004CF618
 004D74FB    dec         eax
 004D74FC    cmp         eax,0
>004D74FF    jl          004D758D
 004D7505    mov         dword ptr [ebp-0C],eax
 004D7508    mov         eax,dword ptr [ebp+8]
 004D750B    mov         eax,dword ptr [eax-8]
 004D750E    mov         eax,dword ptr [eax+14]
 004D7511    mov         edx,dword ptr [ebp-0C]
 004D7514    call        004CF5AC
 004D7519    mov         dword ptr [ebp-8],eax
 004D751C    mov         eax,dword ptr [ebp-8]
 004D751F    cmp         byte ptr [eax+57],0
>004D7523    je          004D7580
 004D7525    mov         eax,dword ptr [ebp-8]
 004D7528    mov         edx,dword ptr ds:[4C5E58];TWinControl
 004D752E    call        @IsClass
 004D7533    test        al,al
>004D7535    je          004D7543
 004D7537    mov         eax,dword ptr [ebp-8]
 004D753A    cmp         byte ptr [eax+1A6],0
>004D7541    je          004D7580
 004D7543    mov         edx,dword ptr [ebp-4]
 004D7546    mov         edx,dword ptr [edx+4]
 004D7549    mov         eax,dword ptr [ebp-8]
 004D754C    sub         edx,dword ptr [eax+44]
 004D754F    mov         eax,dword ptr [ebp-4]
 004D7552    mov         eax,dword ptr [eax]
 004D7554    mov         ecx,dword ptr [ebp-8]
 004D7557    sub         eax,dword ptr [ecx+40]
 004D755A    lea         ecx,[ebp-14]
 004D755D    call        Point
 004D7562    push        dword ptr [ebp-10]
 004D7565    push        dword ptr [ebp-14]
 004D7568    lea         edx,[ebp-24]
 004D756B    mov         eax,dword ptr [ebp-8]
 004D756E    mov         ecx,dword ptr [eax]
 004D7570    call        dword ptr [ecx+44]
 004D7573    lea         eax,[ebp-24]
 004D7576    push        eax
 004D7577    call        user32.PtInRect
 004D757C    test        eax,eax
>004D757E    jne         004D7592
 004D7580    dec         dword ptr [ebp-0C]
 004D7583    cmp         dword ptr [ebp-0C],0FFFFFFFF
>004D7587    jne         004D7508
 004D758D    xor         eax,eax
 004D758F    mov         dword ptr [ebp-8],eax
 004D7592    mov         eax,dword ptr [ebp-8]
 004D7595    mov         esp,ebp
 004D7597    pop         ebp
 004D7598    ret
end;*}

//004D759C
{*function sub_004D759C(?:TDockTree; ?:?; ?:?):?;
begin
 004D759C    push        ebp
 004D759D    mov         ebp,esp
 004D759F    add         esp,0FFFFFFE8
 004D75A2    mov         dword ptr [ebp-0C],ecx
 004D75A5    mov         dword ptr [ebp-4],edx
 004D75A8    mov         dword ptr [ebp-8],eax
 004D75AB    xor         eax,eax
 004D75AD    mov         dword ptr [ebp-10],eax
 004D75B0    mov         eax,dword ptr [ebp-0C]
 004D75B3    xor         edx,edx
 004D75B5    mov         dword ptr [eax],edx
 004D75B7    push        ebp
 004D75B8    mov         eax,dword ptr [ebp-4]
 004D75BB    call        004D74E4
 004D75C0    pop         ecx
 004D75C1    mov         dword ptr [ebp-18],eax
 004D75C4    cmp         dword ptr [ebp-18],0
>004D75C8    je          004D75FA
 004D75CA    mov         eax,dword ptr [ebp-8]
 004D75CD    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D75D0    mov         edx,dword ptr [ebp-18]
 004D75D3    cmp         eax,dword ptr [edx+0A0]
>004D75D9    jne         004D75FA
 004D75DB    mov         edx,dword ptr [ebp-18]
 004D75DE    mov         eax,dword ptr [ebp-8]
 004D75E1    call        004D6ABC
 004D75E6    mov         dword ptr [ebp-10],eax
 004D75E9    cmp         dword ptr [ebp-10],0
>004D75ED    je          004D7621
 004D75EF    mov         eax,dword ptr [ebp-0C]
 004D75F2    mov         dword ptr [eax],1
>004D75F8    jmp         004D7621
 004D75FA    mov         eax,dword ptr [ebp-8]
 004D75FD    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D7600    call        004D67E0
 004D7605    test        eax,eax
>004D7607    je          004D7621
 004D7609    cmp         dword ptr [ebp-18],0
>004D760D    jne         004D7621
 004D760F    push        ebp
 004D7610    mov         eax,dword ptr [ebp-8]
 004D7613    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D7616    call        004D67E0
 004D761B    call        004D726C
 004D7620    pop         ecx
 004D7621    mov         eax,dword ptr [ebp-10]
 004D7624    mov         dword ptr [ebp-14],eax
 004D7627    mov         eax,dword ptr [ebp-14]
 004D762A    mov         esp,ebp
 004D762C    pop         ebp
 004D762D    ret
end;*}

//004D7630
{*procedure sub_004D7630(?:?; ?:?);
begin
 004D7630    push        ebp
 004D7631    mov         ebp,esp
 004D7633    add         esp,0FFFFFFF8
 004D7636    push        ebx
 004D7637    mov         dword ptr [ebp-4],eax
 004D763A    mov         eax,dword ptr [ebp-4]
 004D763D    call        @LStrClr
 004D7642    lea         edx,[ebp-8]
 004D7645    mov         eax,dword ptr [ebp+8]
 004D7648    mov         eax,dword ptr [eax-4]
 004D764B    mov         ecx,4
 004D7650    mov         ebx,dword ptr [eax]
 004D7652    call        dword ptr [ebx+0C]
 004D7655    cmp         dword ptr [ebp-8],0
>004D7659    jle         004D7679
 004D765B    mov         eax,dword ptr [ebp-4]
 004D765E    mov         edx,dword ptr [ebp-8]
 004D7661    call        @LStrSetLength
 004D7666    mov         edx,dword ptr [ebp-4]
 004D7669    mov         edx,dword ptr [edx]
 004D766B    mov         eax,dword ptr [ebp+8]
 004D766E    mov         eax,dword ptr [eax-4]
 004D7671    mov         ecx,dword ptr [ebp-8]
 004D7674    mov         ebx,dword ptr [eax]
 004D7676    call        dword ptr [ebx+0C]
 004D7679    pop         ebx
 004D767A    pop         ecx
 004D767B    pop         ecx
 004D767C    pop         ebp
 004D767D    ret
end;*}

//004D7680
{*procedure sub_004D7680(?:?);
begin
 004D7680    push        ebp
 004D7681    mov         ebp,esp
 004D7683    add         esp,0FFFFFFD0
 004D7686    push        ebx
 004D7687    push        esi
 004D7688    xor         ecx,ecx
 004D768A    mov         dword ptr [ebp-0C],ecx
 004D768D    mov         dword ptr [ebp-4],edx
 004D7690    mov         dword ptr [ebp-8],eax
 004D7693    xor         eax,eax
 004D7695    push        ebp
 004D7696    push        4D78D1
 004D769B    push        dword ptr fs:[eax]
 004D769E    mov         dword ptr fs:[eax],esp
 004D76A1    mov         eax,dword ptr [ebp-8]
 004D76A4    mov         edx,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D76A7    mov         eax,dword ptr [ebp-8]
 004D76AA    call        004D7E58
 004D76AF    mov         eax,dword ptr [ebp-8]
 004D76B2    call        004D6A18
 004D76B7    xor         eax,eax
 004D76B9    push        ebp
 004D76BA    push        4D78B4
 004D76BF    push        dword ptr fs:[eax]
 004D76C2    mov         dword ptr fs:[eax],esp
 004D76C5    lea         edx,[ebp-1C]
 004D76C8    mov         ecx,4
 004D76CD    mov         eax,dword ptr [ebp-4]
 004D76D0    mov         ebx,dword ptr [eax]
 004D76D2    call        dword ptr [ebx+0C]
 004D76D5    lea         edx,[ebp-20]
 004D76D8    mov         ecx,4
 004D76DD    mov         eax,dword ptr [ebp-4]
 004D76E0    mov         ebx,dword ptr [eax]
 004D76E2    call        dword ptr [ebx+0C]
 004D76E5    mov         eax,dword ptr [ebp-20]
 004D76E8    dec         eax
 004D76E9    test        eax,eax
>004D76EB    jl          004D7747
 004D76ED    inc         eax
 004D76EE    mov         dword ptr [ebp-30],eax
 004D76F1    mov         dword ptr [ebp-1C],0
 004D76F8    push        ebp
 004D76F9    lea         eax,[ebp-0C]
 004D76FC    call        004D7630
 004D7701    pop         ecx
 004D7702    cmp         dword ptr [ebp-0C],0
>004D7706    je          004D773F
 004D7708    lea         ecx,[ebp-10]
 004D770B    mov         eax,dword ptr [ebp-8]
 004D770E    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7711    mov         edx,dword ptr [ebp-0C]
 004D7714    mov         si,0FFB9
 004D7718    call        @CallDynaInst;TWinControl.sub_004D1BB4
 004D771D    cmp         dword ptr [ebp-10],0
>004D7721    je          004D773F
 004D7723    xor         edx,edx
 004D7725    mov         eax,dword ptr [ebp-10]
 004D7728    call        TControl.SetVisible
 004D772D    push        0
 004D772F    mov         eax,dword ptr [ebp-8]
 004D7732    mov         edx,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7735    xor         ecx,ecx
 004D7737    mov         eax,dword ptr [ebp-10]
 004D773A    call        004CC1DC
 004D773F    inc         dword ptr [ebp-1C]
 004D7742    dec         dword ptr [ebp-30]
>004D7745    jne         004D76F8
 004D7747    mov         eax,dword ptr [ebp-8]
 004D774A    lea         edx,[eax+68];TDockTree.FTopXYLimit:Integer
 004D774D    mov         ecx,4
 004D7752    mov         eax,dword ptr [ebp-4]
 004D7755    mov         ebx,dword ptr [eax]
 004D7757    call        dword ptr [ebx+0C]
 004D775A    xor         eax,eax
 004D775C    mov         dword ptr [ebp-18],eax
 004D775F    xor         eax,eax
 004D7761    mov         dword ptr [ebp-28],eax
 004D7764    lea         edx,[ebp-14]
 004D7767    mov         ecx,4
 004D776C    mov         eax,dword ptr [ebp-4]
 004D776F    mov         ebx,dword ptr [eax]
 004D7771    call        dword ptr [ebx+0C]
 004D7774    mov         eax,dword ptr [ebp-14]
 004D7777    cmp         eax,dword ptr ds:[54179C];0xFFFFFFFF gvar_0054179C
>004D777D    je          004D789E
 004D7783    mov         ecx,dword ptr [ebp-8]
 004D7786    mov         dl,1
 004D7788    mov         eax,[004C6918];TDockZone
 004D778D    call        TDockZone.Create;TDockZone.Create
 004D7792    mov         dword ptr [ebp-24],eax
 004D7795    mov         eax,dword ptr [ebp-24]
 004D7798    lea         edx,[eax+10];TDockZone.FOrientation:TDockOrientation
 004D779B    mov         ecx,1
 004D77A0    mov         eax,dword ptr [ebp-4]
 004D77A3    mov         ebx,dword ptr [eax]
 004D77A5    call        dword ptr [ebx+0C]
 004D77A8    mov         eax,dword ptr [ebp-24]
 004D77AB    lea         edx,[eax+20];TDockZone.FZoneLimit:Integer
 004D77AE    mov         ecx,4
 004D77B3    mov         eax,dword ptr [ebp-4]
 004D77B6    mov         ebx,dword ptr [eax]
 004D77B8    call        dword ptr [ebx+0C]
 004D77BB    push        ebp
 004D77BC    lea         eax,[ebp-0C]
 004D77BF    call        004D7630
 004D77C4    pop         ecx
 004D77C5    cmp         dword ptr [ebp-0C],0
>004D77C9    je          004D77E4
 004D77CB    mov         edx,dword ptr [ebp-0C]
 004D77CE    mov         eax,dword ptr [ebp-24]
 004D77D1    call        004D63B8
 004D77D6    test        al,al
>004D77D8    jne         004D77E4
 004D77DA    mov         eax,dword ptr [ebp-24]
 004D77DD    call        TObject.Free
>004D77E2    jmp         004D7764
 004D77E4    cmp         dword ptr [ebp-14],0
>004D77E8    jne         004D77F8
 004D77EA    mov         eax,dword ptr [ebp-8]
 004D77ED    mov         edx,dword ptr [ebp-24]
 004D77F0    mov         dword ptr [eax+64],edx;TDockTree.FTopZone:TDockZone
>004D77F3    jmp         004D788D
 004D77F8    mov         eax,dword ptr [ebp-14]
 004D77FB    cmp         eax,dword ptr [ebp-18]
>004D77FE    jne         004D7820
 004D7800    mov         eax,dword ptr [ebp-28]
 004D7803    mov         edx,dword ptr [ebp-24]
 004D7806    mov         dword ptr [eax+0C],edx
 004D7809    mov         eax,dword ptr [ebp-24]
 004D780C    mov         edx,dword ptr [ebp-28]
 004D780F    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D7812    mov         eax,dword ptr [ebp-28]
 004D7815    mov         eax,dword ptr [eax+14]
 004D7818    mov         edx,dword ptr [ebp-24]
 004D781B    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
>004D781E    jmp         004D788D
 004D7820    mov         eax,dword ptr [ebp-14]
 004D7823    cmp         eax,dword ptr [ebp-18]
>004D7826    jle         004D783C
 004D7828    mov         eax,dword ptr [ebp-28]
 004D782B    mov         edx,dword ptr [ebp-24]
 004D782E    mov         dword ptr [eax+8],edx
 004D7831    mov         eax,dword ptr [ebp-24]
 004D7834    mov         edx,dword ptr [ebp-28]
 004D7837    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
>004D783A    jmp         004D788D
 004D783C    mov         eax,dword ptr [ebp-14]
 004D783F    cmp         eax,dword ptr [ebp-18]
>004D7842    jge         004D788D
 004D7844    mov         eax,dword ptr [ebp-28]
 004D7847    mov         dword ptr [ebp-2C],eax
 004D784A    mov         eax,dword ptr [ebp-18]
 004D784D    sub         eax,dword ptr [ebp-14]
 004D7850    test        eax,eax
>004D7852    jle         004D786F
 004D7854    mov         dword ptr [ebp-30],eax
 004D7857    mov         dword ptr [ebp-1C],1
 004D785E    mov         eax,dword ptr [ebp-2C]
 004D7861    mov         eax,dword ptr [eax+14]
 004D7864    mov         dword ptr [ebp-2C],eax
 004D7867    inc         dword ptr [ebp-1C]
 004D786A    dec         dword ptr [ebp-30]
>004D786D    jne         004D785E
 004D786F    mov         eax,dword ptr [ebp-2C]
 004D7872    mov         edx,dword ptr [ebp-24]
 004D7875    mov         dword ptr [eax+0C],edx
 004D7878    mov         eax,dword ptr [ebp-24]
 004D787B    mov         edx,dword ptr [ebp-2C]
 004D787E    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D7881    mov         eax,dword ptr [ebp-2C]
 004D7884    mov         eax,dword ptr [eax+14]
 004D7887    mov         edx,dword ptr [ebp-24]
 004D788A    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004D788D    mov         eax,dword ptr [ebp-14]
 004D7890    mov         dword ptr [ebp-18],eax
 004D7893    mov         eax,dword ptr [ebp-24]
 004D7896    mov         dword ptr [ebp-28],eax
>004D7899    jmp         004D7764
 004D789E    xor         eax,eax
 004D78A0    pop         edx
 004D78A1    pop         ecx
 004D78A2    pop         ecx
 004D78A3    mov         dword ptr fs:[eax],edx
 004D78A6    push        4D78BB
 004D78AB    mov         eax,dword ptr [ebp-8]
 004D78AE    call        004D6A28
 004D78B3    ret
>004D78B4    jmp         @HandleFinally
>004D78B9    jmp         004D78AB
 004D78BB    xor         eax,eax
 004D78BD    pop         edx
 004D78BE    pop         ecx
 004D78BF    pop         ecx
 004D78C0    mov         dword ptr fs:[eax],edx
 004D78C3    push        4D78D8
 004D78C8    lea         eax,[ebp-0C]
 004D78CB    call        @LStrClr
 004D78D0    ret
>004D78D1    jmp         @HandleFinally
>004D78D6    jmp         004D78C8
 004D78D8    pop         esi
 004D78D9    pop         ebx
 004D78DA    mov         esp,ebp
 004D78DC    pop         ebp
 004D78DD    ret
end;*}

//004D78E0
{*procedure sub_004D78E0(?:?; ?:?; ?:?);
begin
 004D78E0    push        ebp
 004D78E1    mov         ebp,esp
 004D78E3    add         esp,0FFFFFFE8
 004D78E6    mov         dword ptr [ebp-8],edx
 004D78E9    mov         dword ptr [ebp-4],eax
 004D78EC    push        0
 004D78EE    push        1
 004D78F0    mov         eax,dword ptr [ebp+8]
 004D78F3    mov         eax,dword ptr [eax-8]
 004D78F6    mov         eax,dword ptr [eax+18]
 004D78F9    add         eax,dword ptr [ebp-8]
 004D78FC    sub         eax,2
 004D78FF    push        eax
 004D7900    lea         eax,[ebp-18]
 004D7903    push        eax
 004D7904    mov         eax,dword ptr [ebp+8]
 004D7907    mov         eax,dword ptr [eax-8]
 004D790A    mov         ecx,dword ptr [eax+18]
 004D790D    add         ecx,dword ptr [ebp-4]
 004D7910    sub         ecx,2
 004D7913    mov         edx,dword ptr [ebp-8]
 004D7916    mov         eax,dword ptr [ebp-4]
 004D7919    call        Rect
 004D791E    lea         eax,[ebp-18]
 004D7921    push        eax
 004D7922    mov         eax,dword ptr [ebp+8]
 004D7925    mov         eax,dword ptr [eax-4]
 004D7928    call        TCanvas.GetHandle
 004D792D    push        eax
 004D792E    call        user32.DrawFrameControl
 004D7933    mov         esp,ebp
 004D7935    pop         ebp
 004D7936    ret
end;*}

//004D7938
{*procedure sub_004D7938(?:?; ?:?; ?:?; ?:?; ?:?);
begin
 004D7938    push        ebp
 004D7939    mov         ebp,esp
 004D793B    add         esp,0FFFFFFF4
 004D793E    mov         dword ptr [ebp-0C],ecx
 004D7941    mov         dword ptr [ebp-8],edx
 004D7944    mov         dword ptr [ebp-4],eax
 004D7947    mov         eax,dword ptr [ebp+0C]
 004D794A    mov         eax,dword ptr [eax-4]
 004D794D    mov         eax,dword ptr [eax+10]
 004D7950    mov         edx,0FF000014
 004D7955    call        TPen.SetColor
 004D795A    mov         eax,dword ptr [ebp+0C]
 004D795D    mov         eax,dword ptr [eax-4]
 004D7960    mov         ecx,dword ptr [ebp-8]
 004D7963    mov         edx,dword ptr [ebp-0C]
 004D7966    call        TCanvas.MoveTo
 004D796B    mov         eax,dword ptr [ebp+0C]
 004D796E    mov         eax,dword ptr [eax-4]
 004D7971    mov         ecx,dword ptr [ebp-8]
 004D7974    mov         edx,dword ptr [ebp-4]
 004D7977    call        TCanvas.LineTo
 004D797C    mov         eax,dword ptr [ebp+0C]
 004D797F    mov         eax,dword ptr [eax-4]
 004D7982    mov         ecx,dword ptr [ebp+8]
 004D7985    mov         edx,dword ptr [ebp-4]
 004D7988    call        TCanvas.LineTo
 004D798D    mov         eax,dword ptr [ebp+0C]
 004D7990    mov         eax,dword ptr [eax-4]
 004D7993    mov         eax,dword ptr [eax+10]
 004D7996    mov         edx,0FF000010
 004D799B    call        TPen.SetColor
 004D79A0    mov         eax,dword ptr [ebp+0C]
 004D79A3    mov         eax,dword ptr [eax-4]
 004D79A6    mov         ecx,dword ptr [ebp+8]
 004D79A9    mov         edx,dword ptr [ebp-0C]
 004D79AC    call        TCanvas.LineTo
 004D79B1    mov         ecx,dword ptr [ebp-8]
 004D79B4    dec         ecx
 004D79B5    mov         eax,dword ptr [ebp+0C]
 004D79B8    mov         eax,dword ptr [eax-4]
 004D79BB    mov         edx,dword ptr [ebp-0C]
 004D79BE    call        TCanvas.LineTo
 004D79C3    mov         esp,ebp
 004D79C5    pop         ebp
 004D79C6    ret         4
end;*}

//004D79CC
{*procedure sub_004D79CC(?:?; ?:?; ?:?);
begin
 004D79CC    push        ebp
 004D79CD    mov         ebp,esp
 004D79CF    add         esp,0FFFFFFF4
 004D79D2    mov         dword ptr [ebp-0C],ecx
 004D79D5    mov         dword ptr [ebp-4],edx
 004D79D8    mov         dword ptr [ebp-8],eax
 004D79DB    mov         eax,dword ptr [ebp-8]
 004D79DE    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D79E1    mov         al,byte ptr [eax+5B];TWinControl.FAlign:TAlign
 004D79E4    dec         eax
 004D79E5    sub         al,2
>004D79E7    jae         004D7A5B
 004D79E9    push        ebp
 004D79EA    mov         edx,dword ptr [ebp+8]
 004D79ED    mov         edx,dword ptr [edx+4]
 004D79F0    inc         edx
 004D79F1    mov         eax,dword ptr [ebp+8]
 004D79F4    mov         eax,dword ptr [eax]
 004D79F6    inc         eax
 004D79F7    call        004D78E0
 004D79FC    pop         ecx
 004D79FD    push        ebp
 004D79FE    mov         eax,dword ptr [ebp+8]
 004D7A01    mov         eax,dword ptr [eax+0C]
 004D7A04    sub         eax,2
 004D7A07    push        eax
 004D7A08    mov         edx,dword ptr [ebp+8]
 004D7A0B    mov         edx,dword ptr [edx+4]
 004D7A0E    mov         eax,dword ptr [ebp-8]
 004D7A11    add         edx,dword ptr [eax+18];TDockTree.FGrabberSize:Integer
 004D7A14    inc         edx
 004D7A15    mov         ecx,dword ptr [ebp+8]
 004D7A18    mov         ecx,dword ptr [ecx]
 004D7A1A    add         ecx,5
 004D7A1D    mov         eax,dword ptr [ebp+8]
 004D7A20    mov         eax,dword ptr [eax]
 004D7A22    add         eax,3
 004D7A25    call        004D7938
 004D7A2A    pop         ecx
 004D7A2B    push        ebp
 004D7A2C    mov         eax,dword ptr [ebp+8]
 004D7A2F    mov         eax,dword ptr [eax+0C]
 004D7A32    sub         eax,2
 004D7A35    push        eax
 004D7A36    mov         edx,dword ptr [ebp+8]
 004D7A39    mov         edx,dword ptr [edx+4]
 004D7A3C    mov         eax,dword ptr [ebp-8]
 004D7A3F    add         edx,dword ptr [eax+18];TDockTree.FGrabberSize:Integer
 004D7A42    inc         edx
 004D7A43    mov         ecx,dword ptr [ebp+8]
 004D7A46    mov         ecx,dword ptr [ecx]
 004D7A48    add         ecx,8
 004D7A4B    mov         eax,dword ptr [ebp+8]
 004D7A4E    mov         eax,dword ptr [eax]
 004D7A50    add         eax,6
 004D7A53    call        004D7938
 004D7A58    pop         ecx
>004D7A59    jmp         004D7AD8
 004D7A5B    push        ebp
 004D7A5C    mov         eax,dword ptr [ebp+8]
 004D7A5F    mov         eax,dword ptr [eax+8]
 004D7A62    mov         edx,dword ptr [ebp-8]
 004D7A65    sub         eax,dword ptr [edx+18]
 004D7A68    inc         eax
 004D7A69    mov         edx,dword ptr [ebp+8]
 004D7A6C    mov         edx,dword ptr [edx+4]
 004D7A6F    inc         edx
 004D7A70    call        004D78E0
 004D7A75    pop         ecx
 004D7A76    push        ebp
 004D7A77    mov         eax,dword ptr [ebp+8]
 004D7A7A    mov         eax,dword ptr [eax+4]
 004D7A7D    add         eax,5
 004D7A80    push        eax
 004D7A81    mov         ecx,dword ptr [ebp+8]
 004D7A84    mov         ecx,dword ptr [ecx+8]
 004D7A87    mov         eax,dword ptr [ebp-8]
 004D7A8A    sub         ecx,dword ptr [eax+18]
 004D7A8D    sub         ecx,2
 004D7A90    mov         edx,dword ptr [ebp+8]
 004D7A93    mov         edx,dword ptr [edx+4]
 004D7A96    add         edx,3
 004D7A99    mov         eax,dword ptr [ebp+8]
 004D7A9C    mov         eax,dword ptr [eax]
 004D7A9E    add         eax,2
 004D7AA1    call        004D7938
 004D7AA6    pop         ecx
 004D7AA7    push        ebp
 004D7AA8    mov         eax,dword ptr [ebp+8]
 004D7AAB    mov         eax,dword ptr [eax+4]
 004D7AAE    add         eax,8
 004D7AB1    push        eax
 004D7AB2    mov         ecx,dword ptr [ebp+8]
 004D7AB5    mov         ecx,dword ptr [ecx+8]
 004D7AB8    mov         eax,dword ptr [ebp-8]
 004D7ABB    sub         ecx,dword ptr [eax+18]
 004D7ABE    sub         ecx,2
 004D7AC1    mov         edx,dword ptr [ebp+8]
 004D7AC4    mov         edx,dword ptr [edx+4]
 004D7AC7    add         edx,6
 004D7ACA    mov         eax,dword ptr [ebp+8]
 004D7ACD    mov         eax,dword ptr [eax]
 004D7ACF    add         eax,2
 004D7AD2    call        004D7938
 004D7AD7    pop         ecx
 004D7AD8    mov         esp,ebp
 004D7ADA    pop         ebp
 004D7ADB    ret         4
end;*}

//004D7AE0
{*procedure sub_004D7AE0(?:?);
begin
 004D7AE0    push        ebp
 004D7AE1    mov         ebp,esp
 004D7AE3    add         esp,0FFFFFFD8
 004D7AE6    push        ebx
 004D7AE7    mov         dword ptr [ebp-8],edx
 004D7AEA    mov         dword ptr [ebp-4],eax
 004D7AED    mov         dl,1
 004D7AEF    mov         eax,[004C4BA4];TControlCanvas
 004D7AF4    call        TControlCanvas.Create;TControlCanvas.Create
 004D7AF9    mov         dword ptr [ebp-0C],eax
 004D7AFC    xor         eax,eax
 004D7AFE    push        ebp
 004D7AFF    push        4D7C63
 004D7B04    push        dword ptr fs:[eax]
 004D7B07    mov         dword ptr fs:[eax],esp
 004D7B0A    mov         eax,dword ptr [ebp-4]
 004D7B0D    mov         edx,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7B10    mov         eax,dword ptr [ebp-0C]
 004D7B13    call        004C931C
 004D7B18    mov         eax,dword ptr [ebp-0C]
 004D7B1B    call        TCanvas.Lock
 004D7B20    xor         eax,eax
 004D7B22    push        ebp
 004D7B23    push        4D7C46
 004D7B28    push        dword ptr fs:[eax]
 004D7B2B    mov         dword ptr fs:[eax],esp
 004D7B2E    mov         edx,dword ptr [ebp-8]
 004D7B31    mov         eax,dword ptr [ebp-0C]
 004D7B34    call        TCanvas.SetHandle
 004D7B39    xor         eax,eax
 004D7B3B    push        ebp
 004D7B3C    push        4D7C29
 004D7B41    push        dword ptr fs:[eax]
 004D7B44    mov         dword ptr fs:[eax],esp
 004D7B47    mov         eax,dword ptr [ebp-4]
 004D7B4A    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7B4D    call        004CF618
 004D7B52    dec         eax
 004D7B53    test        eax,eax
>004D7B55    jl          004D7C11
 004D7B5B    inc         eax
 004D7B5C    mov         dword ptr [ebp-18],eax
 004D7B5F    mov         dword ptr [ebp-14],0
 004D7B66    mov         eax,dword ptr [ebp-4]
 004D7B69    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7B6C    mov         edx,dword ptr [ebp-14]
 004D7B6F    call        004CF5AC
 004D7B74    mov         dword ptr [ebp-10],eax
 004D7B77    mov         eax,dword ptr [ebp-10]
 004D7B7A    cmp         byte ptr [eax+57],0
>004D7B7E    je          004D7C05
 004D7B84    mov         eax,dword ptr [ebp-10]
 004D7B87    mov         eax,dword ptr [eax+0A0]
 004D7B8D    mov         edx,dword ptr [ebp-4]
 004D7B90    cmp         eax,dword ptr [edx+14];TDockTree.FDockSite:TWinControl
>004D7B93    jne         004D7C05
 004D7B95    lea         edx,[ebp-28]
 004D7B98    mov         eax,dword ptr [ebp-10]
 004D7B9B    call        004CA6AC
 004D7BA0    lea         ecx,[ebp-28]
 004D7BA3    mov         edx,dword ptr [ebp-10]
 004D7BA6    mov         eax,dword ptr [ebp-4]
 004D7BA9    mov         ebx,dword ptr [eax]
 004D7BAB    call        dword ptr [ebx];TDockTree.sub_004D69E8
 004D7BAD    mov         eax,dword ptr [ebp-10]
 004D7BB0    mov         edx,dword ptr [ebp-28]
 004D7BB3    sub         edx,dword ptr [eax+40]
 004D7BB6    mov         eax,edx
 004D7BB8    add         eax,eax
 004D7BBA    sub         dword ptr [ebp-28],eax
 004D7BBD    mov         eax,dword ptr [ebp-10]
 004D7BC0    mov         edx,dword ptr [ebp-24]
 004D7BC3    sub         edx,dword ptr [eax+44]
 004D7BC6    mov         eax,edx
 004D7BC8    add         eax,eax
 004D7BCA    sub         dword ptr [ebp-24],eax
 004D7BCD    mov         eax,dword ptr [ebp-10]
 004D7BD0    mov         eax,dword ptr [eax+48]
 004D7BD3    mov         edx,dword ptr [ebp-20]
 004D7BD6    sub         edx,dword ptr [ebp-28]
 004D7BD9    sub         eax,edx
 004D7BDB    add         eax,eax
 004D7BDD    sub         dword ptr [ebp-20],eax
 004D7BE0    mov         eax,dword ptr [ebp-10]
 004D7BE3    mov         eax,dword ptr [eax+4C]
 004D7BE6    mov         edx,dword ptr [ebp-1C]
 004D7BE9    sub         edx,dword ptr [ebp-24]
 004D7BEC    sub         eax,edx
 004D7BEE    add         eax,eax
 004D7BF0    sub         dword ptr [ebp-1C],eax
 004D7BF3    lea         eax,[ebp-28]
 004D7BF6    push        eax
 004D7BF7    mov         ecx,dword ptr [ebp-10]
 004D7BFA    mov         edx,dword ptr [ebp-0C]
 004D7BFD    mov         eax,dword ptr [ebp-4]
 004D7C00    mov         ebx,dword ptr [eax]
 004D7C02    call        dword ptr [ebx+10];TDockTree.sub_004D79CC
 004D7C05    inc         dword ptr [ebp-14]
 004D7C08    dec         dword ptr [ebp-18]
>004D7C0B    jne         004D7B66
 004D7C11    xor         eax,eax
 004D7C13    pop         edx
 004D7C14    pop         ecx
 004D7C15    pop         ecx
 004D7C16    mov         dword ptr fs:[eax],edx
 004D7C19    push        4D7C30
 004D7C1E    xor         edx,edx
 004D7C20    mov         eax,dword ptr [ebp-0C]
 004D7C23    call        TCanvas.SetHandle
 004D7C28    ret
>004D7C29    jmp         @HandleFinally
>004D7C2E    jmp         004D7C1E
 004D7C30    xor         eax,eax
 004D7C32    pop         edx
 004D7C33    pop         ecx
 004D7C34    pop         ecx
 004D7C35    mov         dword ptr fs:[eax],edx
 004D7C38    push        4D7C4D
 004D7C3D    mov         eax,dword ptr [ebp-0C]
 004D7C40    call        TCanvas.Unlock
 004D7C45    ret
>004D7C46    jmp         @HandleFinally
>004D7C4B    jmp         004D7C3D
 004D7C4D    xor         eax,eax
 004D7C4F    pop         edx
 004D7C50    pop         ecx
 004D7C51    pop         ecx
 004D7C52    mov         dword ptr fs:[eax],edx
 004D7C55    push        4D7C6A
 004D7C5A    mov         eax,dword ptr [ebp-0C]
 004D7C5D    call        TObject.Free
 004D7C62    ret
>004D7C63    jmp         @HandleFinally
>004D7C68    jmp         004D7C5A
 004D7C6A    pop         ebx
 004D7C6B    mov         esp,ebp
 004D7C6D    pop         ebp
 004D7C6E    ret
end;*}

//004D7C70
{*procedure sub_004D7C70(?:?; ?:?; ?:?; ?:?);
begin
 004D7C70    push        ebp
 004D7C71    mov         ebp,esp
 004D7C73    add         esp,0FFFFFFD0
 004D7C76    push        esi
 004D7C77    push        edi
 004D7C78    mov         dword ptr [ebp-8],ecx
 004D7C7B    mov         dword ptr [ebp-20],edx
 004D7C7E    mov         dword ptr [ebp-4],eax
 004D7C81    mov         eax,dword ptr [ebp-4]
 004D7C84    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7C87    call        004D1CC8
 004D7C8C    mov         dword ptr [ebp-0C],eax
 004D7C8F    cmp         dword ptr [ebp-8],0
>004D7C93    je          004D7CAB
 004D7C95    mov         eax,dword ptr [ebp-8]
 004D7C98    cmp         byte ptr [eax+9C],0
>004D7C9F    je          004D7CAB
 004D7CA1    cmp         dword ptr [ebp-0C],2
>004D7CA5    jge         004D7D5E
 004D7CAB    mov         eax,dword ptr [ebp-4]
 004D7CAE    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7CB1    call        TControl.GetClientHeight
 004D7CB6    push        eax
 004D7CB7    lea         eax,[ebp-30]
 004D7CBA    push        eax
 004D7CBB    mov         eax,dword ptr [ebp-4]
 004D7CBE    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7CC1    call        TControl.GetClientWidth
 004D7CC6    mov         ecx,eax
 004D7CC8    xor         edx,edx
 004D7CCA    xor         eax,eax
 004D7CCC    call        Rect
 004D7CD1    mov         eax,dword ptr [ebp+8]
 004D7CD4    lea         esi,[ebp-30]
 004D7CD7    mov         edi,eax
 004D7CD9    movs        dword ptr [edi],dword ptr [esi]
 004D7CDA    movs        dword ptr [edi],dword ptr [esi]
 004D7CDB    movs        dword ptr [edi],dword ptr [esi]
 004D7CDC    movs        dword ptr [edi],dword ptr [esi]
 004D7CDD    cmp         dword ptr [ebp-0C],0
>004D7CE1    jle         004D7DF0
 004D7CE7    mov         al,byte ptr [ebp+0C]
 004D7CEA    dec         al
>004D7CEC    je          004D7D2E
 004D7CEE    dec         al
>004D7CF0    je          004D7D46
 004D7CF2    dec         al
>004D7CF4    je          004D7CFF
 004D7CF6    dec         al
>004D7CF8    je          004D7D17
>004D7CFA    jmp         004D7DF0
 004D7CFF    mov         eax,dword ptr [ebp+8]
 004D7D02    mov         eax,dword ptr [eax+8]
 004D7D05    sar         eax,1
>004D7D07    jns         004D7D0C
 004D7D09    adc         eax,0
 004D7D0C    mov         edx,dword ptr [ebp+8]
 004D7D0F    mov         dword ptr [edx+8],eax
>004D7D12    jmp         004D7DF0
 004D7D17    mov         eax,dword ptr [ebp+8]
 004D7D1A    mov         eax,dword ptr [eax+8]
 004D7D1D    sar         eax,1
>004D7D1F    jns         004D7D24
 004D7D21    adc         eax,0
 004D7D24    mov         edx,dword ptr [ebp+8]
 004D7D27    mov         dword ptr [edx],eax
>004D7D29    jmp         004D7DF0
 004D7D2E    mov         eax,dword ptr [ebp+8]
 004D7D31    mov         eax,dword ptr [eax+0C]
 004D7D34    sar         eax,1
>004D7D36    jns         004D7D3B
 004D7D38    adc         eax,0
 004D7D3B    mov         edx,dword ptr [ebp+8]
 004D7D3E    mov         dword ptr [edx+0C],eax
>004D7D41    jmp         004D7DF0
 004D7D46    mov         eax,dword ptr [ebp+8]
 004D7D49    mov         eax,dword ptr [eax+0C]
 004D7D4C    sar         eax,1
>004D7D4E    jns         004D7D53
 004D7D50    adc         eax,0
 004D7D53    mov         edx,dword ptr [ebp+8]
 004D7D56    mov         dword ptr [edx+4],eax
>004D7D59    jmp         004D7DF0
 004D7D5E    mov         eax,dword ptr [ebp-8]
 004D7D61    mov         eax,dword ptr [eax+40]
 004D7D64    mov         dword ptr [ebp-10],eax
 004D7D67    mov         eax,dword ptr [ebp-8]
 004D7D6A    mov         eax,dword ptr [eax+44]
 004D7D6D    mov         dword ptr [ebp-14],eax
 004D7D70    mov         eax,dword ptr [ebp-8]
 004D7D73    mov         eax,dword ptr [eax+48]
 004D7D76    mov         dword ptr [ebp-18],eax
 004D7D79    mov         eax,dword ptr [ebp-8]
 004D7D7C    mov         eax,dword ptr [eax+4C]
 004D7D7F    mov         dword ptr [ebp-1C],eax
 004D7D82    mov         al,byte ptr [ebp+0C]
 004D7D85    add         al,0FD
 004D7D87    sub         al,2
>004D7D89    jae         004D7D9D
 004D7D8B    mov         eax,dword ptr [ebp-8]
 004D7D8E    mov         eax,dword ptr [eax+48]
 004D7D91    sar         eax,1
>004D7D93    jns         004D7D98
 004D7D95    adc         eax,0
 004D7D98    mov         dword ptr [ebp-18],eax
>004D7D9B    jmp         004D7DB5
 004D7D9D    mov         al,byte ptr [ebp+0C]
 004D7DA0    dec         eax
 004D7DA1    sub         al,2
>004D7DA3    jae         004D7DB5
 004D7DA5    mov         eax,dword ptr [ebp-8]
 004D7DA8    mov         eax,dword ptr [eax+4C]
 004D7DAB    sar         eax,1
>004D7DAD    jns         004D7DB2
 004D7DAF    adc         eax,0
 004D7DB2    mov         dword ptr [ebp-1C],eax
 004D7DB5    mov         al,byte ptr [ebp+0C]
 004D7DB8    sub         al,2
>004D7DBA    je          004D7DC8
 004D7DBC    sub         al,2
>004D7DBE    jne         004D7DCE
 004D7DC0    mov         eax,dword ptr [ebp-18]
 004D7DC3    add         dword ptr [ebp-10],eax
>004D7DC6    jmp         004D7DCE
 004D7DC8    mov         eax,dword ptr [ebp-1C]
 004D7DCB    add         dword ptr [ebp-14],eax
 004D7DCE    mov         eax,dword ptr [ebp-1C]
 004D7DD1    push        eax
 004D7DD2    lea         eax,[ebp-30]
 004D7DD5    push        eax
 004D7DD6    mov         ecx,dword ptr [ebp-18]
 004D7DD9    mov         edx,dword ptr [ebp-14]
 004D7DDC    mov         eax,dword ptr [ebp-10]
 004D7DDF    call        Bounds
 004D7DE4    mov         eax,dword ptr [ebp+8]
 004D7DE7    lea         esi,[ebp-30]
 004D7DEA    mov         edi,eax
 004D7DEC    movs        dword ptr [edi],dword ptr [esi]
 004D7DED    movs        dword ptr [edi],dword ptr [esi]
 004D7DEE    movs        dword ptr [edi],dword ptr [esi]
 004D7DEF    movs        dword ptr [edi],dword ptr [esi]
 004D7DF0    push        2
 004D7DF2    mov         eax,dword ptr [ebp+8]
 004D7DF5    push        eax
 004D7DF6    push        0
 004D7DF8    mov         eax,dword ptr [ebp-4]
 004D7DFB    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7DFE    call        TWinControl.GetHandle
 004D7E03    push        eax
 004D7E04    call        user32.MapWindowPoints
 004D7E09    pop         edi
 004D7E0A    pop         esi
 004D7E0B    mov         esp,ebp
 004D7E0D    pop         ebp
 004D7E0E    ret         8
end;*}

//004D7E14
{*procedure sub_004D7E14(?:TDockZone; ?:?);
begin
 004D7E14    push        ebp
 004D7E15    mov         ebp,esp
 004D7E17    push        ecx
 004D7E18    mov         dword ptr [ebp-4],eax
 004D7E1B    mov         eax,dword ptr [ebp-4]
 004D7E1E    cmp         dword ptr [eax+0C],0
>004D7E22    je          004D7E34
 004D7E24    mov         eax,dword ptr [ebp+8]
 004D7E27    push        eax
 004D7E28    mov         eax,dword ptr [ebp-4]
 004D7E2B    mov         eax,dword ptr [eax+0C]
 004D7E2E    call        004D7E14
 004D7E33    pop         ecx
 004D7E34    mov         eax,dword ptr [ebp-4]
 004D7E37    cmp         dword ptr [eax+8],0
>004D7E3B    je          004D7E4D
 004D7E3D    mov         eax,dword ptr [ebp+8]
 004D7E40    push        eax
 004D7E41    mov         eax,dword ptr [ebp-4]
 004D7E44    mov         eax,dword ptr [eax+8]
 004D7E47    call        004D7E14
 004D7E4C    pop         ecx
 004D7E4D    mov         eax,dword ptr [ebp-4]
 004D7E50    call        TObject.Free
 004D7E55    pop         ecx
 004D7E56    pop         ebp
 004D7E57    ret
end;*}

//004D7E58
procedure sub_004D7E58(?:TDockTree; ?:TDockZone);
begin
{*
 004D7E58    push        ebp
 004D7E59    mov         ebp,esp
 004D7E5B    add         esp,0FFFFFFF8
 004D7E5E    mov         dword ptr [ebp-8],edx
 004D7E61    mov         dword ptr [ebp-4],eax
 004D7E64    cmp         dword ptr [ebp-8],0
>004D7E68    je          004D7EE5
 004D7E6A    mov         eax,dword ptr [ebp-8]
 004D7E6D    cmp         dword ptr [eax+8],0;TDockZone.FChildZones:TDockZone
>004D7E71    je          004D7E80
 004D7E73    push        ebp
 004D7E74    mov         eax,dword ptr [ebp-8]
 004D7E77    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D7E7A    call        004D7E14
 004D7E7F    pop         ecx
 004D7E80    mov         eax,dword ptr [ebp-8]
 004D7E83    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>004D7E87    je          004D7E9A
 004D7E89    mov         eax,dword ptr [ebp-8]
 004D7E8C    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D7E8F    mov         edx,dword ptr [ebp-8]
 004D7E92    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 004D7E95    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
>004D7E98    jmp         004D7EB2
 004D7E9A    mov         eax,dword ptr [ebp-8]
 004D7E9D    cmp         dword ptr [eax+14],0;TDockZone.FParentZone:TDockZone
>004D7EA1    je          004D7EB2
 004D7EA3    mov         eax,dword ptr [ebp-8]
 004D7EA6    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D7EA9    mov         edx,dword ptr [ebp-8]
 004D7EAC    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 004D7EAF    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004D7EB2    mov         eax,dword ptr [ebp-8]
 004D7EB5    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004D7EB9    je          004D7ECA
 004D7EBB    mov         eax,dword ptr [ebp-8]
 004D7EBE    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D7EC1    mov         edx,dword ptr [ebp-8]
 004D7EC4    mov         edx,dword ptr [edx+18];TDockZone.FPrevSibling:TDockZone
 004D7EC7    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D7ECA    mov         eax,dword ptr [ebp-8]
 004D7ECD    mov         edx,dword ptr [ebp-4]
 004D7ED0    cmp         eax,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
>004D7ED3    jne         004D7EDD
 004D7ED5    mov         eax,dword ptr [ebp-4]
 004D7ED8    xor         edx,edx
 004D7EDA    mov         dword ptr [eax+64],edx;TDockTree.FTopZone:TDockZone
 004D7EDD    mov         eax,dword ptr [ebp-8]
 004D7EE0    call        TObject.Free
 004D7EE5    pop         ecx
 004D7EE6    pop         ecx
 004D7EE7    pop         ebp
 004D7EE8    ret
*}
end;

//004D7EEC
{*procedure sub_004D7EEC(?:?);
begin
 004D7EEC    push        ebp
 004D7EED    mov         ebp,esp
 004D7EEF    add         esp,0FFFFFFF4
 004D7EF2    mov         dword ptr [ebp-8],edx
 004D7EF5    mov         dword ptr [ebp-4],eax
 004D7EF8    mov         edx,dword ptr [ebp-8]
 004D7EFB    mov         eax,dword ptr [ebp-4]
 004D7EFE    call        004D6ABC
 004D7F03    mov         dword ptr [ebp-0C],eax
 004D7F06    cmp         dword ptr [ebp-0C],0
>004D7F0A    je          004D7F41
 004D7F0C    mov         eax,dword ptr [ebp-0C]
 004D7F0F    mov         edx,dword ptr [ebp-4]
 004D7F12    cmp         eax,dword ptr [edx+38];TDockTree.FReplacementZone:TDockZone
>004D7F15    jne         004D7F21
 004D7F17    mov         eax,dword ptr [ebp-0C]
 004D7F1A    xor         edx,edx
 004D7F1C    mov         dword ptr [eax+4],edx
>004D7F1F    jmp         004D7F2C
 004D7F21    mov         edx,dword ptr [ebp-0C]
 004D7F24    mov         eax,dword ptr [ebp-4]
 004D7F27    call        004D7F48
 004D7F2C    mov         eax,dword ptr [ebp-8]
 004D7F2F    mov         byte ptr [eax+9C],0
 004D7F36    mov         eax,dword ptr [ebp-4]
 004D7F39    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D7F3C    mov         edx,dword ptr [eax]
 004D7F3E    call        dword ptr [edx+7C];TWinControl.sub_004D3648
 004D7F41    mov         esp,ebp
 004D7F43    pop         ebp
 004D7F44    ret
end;*}

//004D7F48
procedure sub_004D7F48(?:TDockTree; ?:TDockZone);
begin
{*
 004D7F48    push        ebp
 004D7F49    mov         ebp,esp
 004D7F4B    add         esp,0FFFFFFDC
 004D7F4E    xor         ecx,ecx
 004D7F50    mov         dword ptr [ebp-20],ecx
 004D7F53    mov         dword ptr [ebp-24],ecx
 004D7F56    mov         dword ptr [ebp-18],ecx
 004D7F59    mov         dword ptr [ebp-1C],ecx
 004D7F5C    mov         dword ptr [ebp-8],edx
 004D7F5F    mov         dword ptr [ebp-4],eax
 004D7F62    xor         eax,eax
 004D7F64    push        ebp
 004D7F65    push        4D82CF
 004D7F6A    push        dword ptr fs:[eax]
 004D7F6D    mov         dword ptr fs:[eax],esp
 004D7F70    cmp         dword ptr [ebp-8],0
>004D7F74    jne         004D7FB1
 004D7F76    lea         edx,[ebp-18]
 004D7F79    mov         eax,[0055B2D8];^SDockTreeRemoveError:TResStringRec
 004D7F7E    call        LoadResString
 004D7F83    lea         eax,[ebp-18]
 004D7F86    push        eax
 004D7F87    lea         edx,[ebp-1C]
 004D7F8A    mov         eax,[0055B158];^SDockZoneNotFound:TResStringRec
 004D7F8F    call        LoadResString
 004D7F94    mov         edx,dword ptr [ebp-1C]
 004D7F97    pop         eax
 004D7F98    call        @LStrCat
 004D7F9D    mov         ecx,dword ptr [ebp-18]
 004D7FA0    mov         dl,1
 004D7FA2    mov         eax,[004653B4];Exception
 004D7FA7    call        Exception.Create;Exception.Create
 004D7FAC    call        @RaiseExcept
 004D7FB1    mov         eax,dword ptr [ebp-8]
 004D7FB4    cmp         dword ptr [eax+4],0;TDockZone.FChildControl:TControl
>004D7FB8    jne         004D7FF5
 004D7FBA    lea         edx,[ebp-20]
 004D7FBD    mov         eax,[0055B2D8];^SDockTreeRemoveError:TResStringRec
 004D7FC2    call        LoadResString
 004D7FC7    lea         eax,[ebp-20]
 004D7FCA    push        eax
 004D7FCB    lea         edx,[ebp-24]
 004D7FCE    mov         eax,[0055B558];^SDockZoneHasNoCtl:TResStringRec
 004D7FD3    call        LoadResString
 004D7FD8    mov         edx,dword ptr [ebp-24]
 004D7FDB    pop         eax
 004D7FDC    call        @LStrCat
 004D7FE1    mov         ecx,dword ptr [ebp-20]
 004D7FE4    mov         dl,1
 004D7FE6    mov         eax,[004653B4];Exception
 004D7FEB    call        Exception.Create;Exception.Create
 004D7FF0    call        @RaiseExcept
 004D7FF5    mov         eax,dword ptr [ebp-8]
 004D7FF8    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D7FFB    call        004D5F28
 004D8000    mov         dword ptr [ebp-14],eax
 004D8003    cmp         dword ptr [ebp-14],1
>004D8007    jne         004D8023
 004D8009    mov         eax,dword ptr [ebp-4]
 004D800C    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D800F    xor         edx,edx
 004D8011    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004D8014    mov         eax,dword ptr [ebp-4]
 004D8017    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D801A    mov         byte ptr [eax+10],0;TDockZone.FOrientation:TDockOrientation
>004D801E    jmp         004D82AC
 004D8023    cmp         dword ptr [ebp-14],2
>004D8027    jne         004D821E
 004D802D    mov         eax,dword ptr [ebp-8]
 004D8030    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>004D8034    jne         004D8041
 004D8036    mov         eax,dword ptr [ebp-8]
 004D8039    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D803C    mov         dword ptr [ebp-0C],eax
>004D803F    jmp         004D804A
 004D8041    mov         eax,dword ptr [ebp-8]
 004D8044    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D8047    mov         dword ptr [ebp-0C],eax
 004D804A    mov         eax,dword ptr [ebp-0C]
 004D804D    cmp         dword ptr [eax+4],0;TDockZone.FChildControl:TControl
>004D8051    je          004D80E8
 004D8057    mov         eax,dword ptr [ebp-8]
 004D805A    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D805D    mov         edx,dword ptr [ebp-4]
 004D8060    cmp         eax,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
>004D8063    jne         004D80A0
 004D8065    mov         eax,dword ptr [ebp-4]
 004D8068    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D806B    mov         edx,dword ptr [ebp-0C]
 004D806E    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004D8071    mov         eax,dword ptr [ebp-0C]
 004D8074    xor         edx,edx
 004D8076    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D8079    mov         eax,dword ptr [ebp-0C]
 004D807C    xor         edx,edx
 004D807E    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004D8081    mov         eax,dword ptr [ebp-4]
 004D8084    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D8087    call        004D6070
 004D808C    mov         edx,eax
 004D808E    mov         eax,dword ptr [ebp-0C]
 004D8091    call        004D6658
 004D8096    mov         eax,dword ptr [ebp-0C]
 004D8099    call        004D6488
>004D809E    jmp         004D80CC
 004D80A0    mov         eax,dword ptr [ebp-8]
 004D80A3    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D80A6    mov         byte ptr [eax+10],0;TDockZone.FOrientation:TDockOrientation
 004D80AA    mov         eax,dword ptr [ebp-0C]
 004D80AD    mov         eax,dword ptr [eax+4];TDockZone.FChildControl:TControl
 004D80B0    mov         edx,dword ptr [ebp-8]
 004D80B3    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 004D80B6    mov         dword ptr [edx+4],eax;TDockZone.FChildControl:TControl
 004D80B9    mov         eax,dword ptr [ebp-8]
 004D80BC    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D80BF    xor         edx,edx
 004D80C1    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004D80C4    mov         eax,dword ptr [ebp-0C]
 004D80C7    call        TObject.Free
 004D80CC    mov         eax,dword ptr [ebp-4]
 004D80CF    push        eax
 004D80D0    push        4D89A4
 004D80D5    mov         eax,dword ptr [ebp-8]
 004D80D8    mov         edx,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D80DB    mov         eax,dword ptr [ebp-4]
 004D80DE    call        004D6B44
>004D80E3    jmp         004D82AC
 004D80E8    mov         eax,dword ptr [ebp-8]
 004D80EB    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D80EE    mov         edx,dword ptr [ebp-4]
 004D80F1    cmp         eax,dword ptr [edx+64];TDockTree.FTopZone:TDockZone
>004D80F4    jne         004D814E
 004D80F6    mov         eax,dword ptr [ebp-4]
 004D80F9    mov         edx,dword ptr [eax+68];TDockTree.FTopXYLimit:Integer
 004D80FC    mov         eax,dword ptr [ebp-0C]
 004D80FF    call        004D66A4
 004D8104    mov         eax,dword ptr [ebp-4]
 004D8107    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D810A    call        004D6618
 004D810F    mov         edx,dword ptr [ebp-4]
 004D8112    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 004D8115    mov         eax,dword ptr [ebp-4]
 004D8118    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D811B    call        TObject.Free
 004D8120    mov         eax,dword ptr [ebp-0C]
 004D8123    mov         edx,dword ptr [ebp-4]
 004D8126    mov         dword ptr [edx+64],eax;TDockTree.FTopZone:TDockZone
 004D8129    mov         eax,dword ptr [ebp-0C]
 004D812C    xor         edx,edx
 004D812E    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004D8131    mov         eax,dword ptr [ebp-0C]
 004D8134    xor         edx,edx
 004D8136    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D8139    mov         eax,dword ptr [ebp-0C]
 004D813C    xor         edx,edx
 004D813E    mov         dword ptr [eax+14],edx;TDockZone.FParentZone:TDockZone
 004D8141    mov         eax,dword ptr [ebp-4]
 004D8144    call        004D896C
>004D8149    jmp         004D82AC
 004D814E    mov         eax,dword ptr [ebp-8]
 004D8151    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D8154    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D8157    mov         edx,dword ptr [ebp-0C]
 004D815A    mov         edx,dword ptr [edx+8];TDockZone.FChildZones:TDockZone
 004D815D    mov         dword ptr [edx+18],eax;TDockZone.FPrevSibling:TDockZone
 004D8160    mov         eax,dword ptr [ebp-0C]
 004D8163    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D8166    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>004D816A    jne         004D8180
 004D816C    mov         eax,dword ptr [ebp-0C]
 004D816F    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D8172    mov         edx,dword ptr [ebp-8]
 004D8175    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 004D8178    mov         edx,dword ptr [edx+14];TDockZone.FParentZone:TDockZone
 004D817B    mov         dword ptr [edx+8],eax;TDockZone.FChildZones:TDockZone
>004D817E    jmp         004D8192
 004D8180    mov         eax,dword ptr [ebp-0C]
 004D8183    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D8186    mov         edx,dword ptr [ebp-0C]
 004D8189    mov         edx,dword ptr [edx+8];TDockZone.FChildZones:TDockZone
 004D818C    mov         edx,dword ptr [edx+18];TDockZone.FPrevSibling:TDockZone
 004D818F    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004D8192    mov         eax,dword ptr [ebp-0C]
 004D8195    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D8198    mov         dword ptr [ebp-10],eax
 004D819B    mov         eax,dword ptr [ebp-8]
 004D819E    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D81A1    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D81A4    mov         edx,dword ptr [ebp-10]
 004D81A7    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004D81AA    mov         eax,dword ptr [ebp-10]
 004D81AD    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D81B0    mov         dword ptr [ebp-10],eax
 004D81B3    mov         eax,dword ptr [ebp-8]
 004D81B6    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D81B9    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D81BC    mov         edx,dword ptr [ebp-10]
 004D81BF    mov         dword ptr [edx+14],eax;TDockZone.FParentZone:TDockZone
 004D81C2    mov         eax,dword ptr [ebp-10]
 004D81C5    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004D81C9    jne         004D81AA
 004D81CB    mov         eax,dword ptr [ebp-8]
 004D81CE    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D81D1    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D81D4    mov         edx,dword ptr [ebp-10]
 004D81D7    mov         dword ptr [edx+0C],eax;TDockZone.FNextSibling:TDockZone
 004D81DA    mov         eax,dword ptr [ebp-10]
 004D81DD    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004D81E1    je          004D81EF
 004D81E3    mov         eax,dword ptr [ebp-10]
 004D81E6    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D81E9    mov         edx,dword ptr [ebp-10]
 004D81EC    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D81EF    mov         eax,dword ptr [ebp-4]
 004D81F2    push        eax
 004D81F3    push        4D89A4
 004D81F8    mov         eax,dword ptr [ebp-10]
 004D81FB    mov         edx,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D81FE    mov         eax,dword ptr [ebp-4]
 004D8201    call        004D6B44
 004D8206    mov         eax,dword ptr [ebp-8]
 004D8209    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D820C    call        TObject.Free
 004D8211    mov         eax,dword ptr [ebp-0C]
 004D8214    call        TObject.Free
>004D8219    jmp         004D82AC
 004D821E    mov         eax,dword ptr [ebp-8]
 004D8221    cmp         dword ptr [eax+18],0;TDockZone.FPrevSibling:TDockZone
>004D8225    jne         004D824E
 004D8227    mov         eax,dword ptr [ebp-8]
 004D822A    mov         eax,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D822D    mov         edx,dword ptr [ebp-8]
 004D8230    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 004D8233    mov         dword ptr [eax+8],edx;TDockZone.FChildZones:TDockZone
 004D8236    mov         eax,dword ptr [ebp-8]
 004D8239    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D823C    xor         edx,edx
 004D823E    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D8241    mov         eax,dword ptr [ebp-8]
 004D8244    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D8247    call        004D6488
>004D824C    jmp         004D8295
 004D824E    mov         eax,dword ptr [ebp-8]
 004D8251    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D8254    mov         edx,dword ptr [ebp-8]
 004D8257    mov         edx,dword ptr [edx+0C];TDockZone.FNextSibling:TDockZone
 004D825A    mov         dword ptr [eax+0C],edx;TDockZone.FNextSibling:TDockZone
 004D825D    mov         eax,dword ptr [ebp-8]
 004D8260    cmp         dword ptr [eax+0C],0;TDockZone.FNextSibling:TDockZone
>004D8264    je          004D8275
 004D8266    mov         eax,dword ptr [ebp-8]
 004D8269    mov         eax,dword ptr [eax+0C];TDockZone.FNextSibling:TDockZone
 004D826C    mov         edx,dword ptr [ebp-8]
 004D826F    mov         edx,dword ptr [edx+18];TDockZone.FPrevSibling:TDockZone
 004D8272    mov         dword ptr [eax+18],edx;TDockZone.FPrevSibling:TDockZone
 004D8275    mov         eax,dword ptr [ebp-8]
 004D8278    call        004D6618
 004D827D    mov         edx,eax
 004D827F    mov         eax,dword ptr [ebp-8]
 004D8282    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D8285    call        004D66A4
 004D828A    mov         eax,dword ptr [ebp-8]
 004D828D    mov         eax,dword ptr [eax+18];TDockZone.FPrevSibling:TDockZone
 004D8290    call        004D6488
 004D8295    mov         eax,dword ptr [ebp-4]
 004D8298    push        eax
 004D8299    push        4D89A4
 004D829E    mov         eax,dword ptr [ebp-8]
 004D82A1    mov         edx,dword ptr [eax+14];TDockZone.FParentZone:TDockZone
 004D82A4    mov         eax,dword ptr [ebp-4]
 004D82A7    call        004D6B44
 004D82AC    mov         eax,dword ptr [ebp-8]
 004D82AF    call        TObject.Free
 004D82B4    xor         eax,eax
 004D82B6    pop         edx
 004D82B7    pop         ecx
 004D82B8    pop         ecx
 004D82B9    mov         dword ptr fs:[eax],edx
 004D82BC    push        4D82D6
 004D82C1    lea         eax,[ebp-24]
 004D82C4    mov         edx,4
 004D82C9    call        @LStrArrayClr
 004D82CE    ret
>004D82CF    jmp         @HandleFinally
>004D82D4    jmp         004D82C1
 004D82D6    mov         esp,ebp
 004D82D8    pop         ebp
 004D82D9    ret
*}
end;

//004D82DC
{*procedure sub_004D82DC(?:?);
begin
 004D82DC    push        ebp
 004D82DD    mov         ebp,esp
 004D82DF    add         esp,0FFFFFFE8
 004D82E2    push        esi
 004D82E3    push        edi
 004D82E4    mov         byte ptr [ebp-5],dl
 004D82E7    mov         dword ptr [ebp-4],eax
 004D82EA    mov         eax,dword ptr [ebp-4]
 004D82ED    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D82F0    test        byte ptr [eax+1C],1;TWinControl.FComponentState:TComponentState
>004D82F4    jne         004D83EB
 004D82FA    mov         eax,dword ptr [ebp-4]
 004D82FD    cmp         dword ptr [eax+64],0;TDockTree.FTopZone:TDockZone
>004D8301    je          004D83EB
 004D8307    mov         eax,dword ptr [ebp-4]
 004D830A    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D830D    call        004D1CC8
 004D8312    test        eax,eax
>004D8314    jle         004D83EB
 004D831A    lea         edx,[ebp-15]
 004D831D    mov         eax,dword ptr [ebp-4]
 004D8320    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D8323    mov         ecx,dword ptr [eax]
 004D8325    call        dword ptr [ecx+44];TWinControl.sub_004D3A1C
 004D8328    lea         edx,[ebp-15]
 004D832B    mov         eax,dword ptr [ebp-4]
 004D832E    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D8331    mov         ecx,dword ptr [eax]
 004D8333    call        dword ptr [ecx+8C];TWinControl.sub_004CE790
 004D8339    cmp         byte ptr [ebp-5],0
>004D833D    jne         004D835A
 004D833F    mov         eax,dword ptr [ebp-4]
 004D8342    lea         edx,[eax+1D];TDockTree.FOldRect:TRect
 004D8345    lea         eax,[ebp-15]
 004D8348    mov         ecx,10
 004D834D    call        CompareMem
 004D8352    test        al,al
>004D8354    jne         004D83EB
 004D835A    mov         eax,dword ptr [ebp-4]
 004D835D    lea         esi,[ebp-15]
 004D8360    lea         edi,[eax+1D];TDockTree.FOldRect:TRect
 004D8363    movs        dword ptr [edi],dword ptr [esi]
 004D8364    movs        dword ptr [edi],dword ptr [esi]
 004D8365    movs        dword ptr [edi],dword ptr [esi]
 004D8366    movs        dword ptr [edi],dword ptr [esi]
 004D8367    mov         eax,dword ptr [ebp-4]
 004D836A    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D836D    mov         al,byte ptr [eax+10];TDockZone.FOrientation:TDockOrientation
 004D8370    dec         al
>004D8372    je          004D837A
 004D8374    dec         al
>004D8376    je          004D8399
>004D8378    jmp         004D83B6
 004D837A    mov         edx,dword ptr [ebp-0D]
 004D837D    sub         edx,dword ptr [ebp-15]
 004D8380    mov         eax,dword ptr [ebp-4]
 004D8383    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D8386    call        004D6658
 004D838B    mov         eax,dword ptr [ebp-9]
 004D838E    sub         eax,dword ptr [ebp-11]
 004D8391    mov         edx,dword ptr [ebp-4]
 004D8394    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
>004D8397    jmp         004D83B6
 004D8399    mov         edx,dword ptr [ebp-9]
 004D839C    sub         edx,dword ptr [ebp-11]
 004D839F    mov         eax,dword ptr [ebp-4]
 004D83A2    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D83A5    call        004D6658
 004D83AA    mov         eax,dword ptr [ebp-0D]
 004D83AD    sub         eax,dword ptr [ebp-15]
 004D83B0    mov         edx,dword ptr [ebp-4]
 004D83B3    mov         dword ptr [edx+68],eax;TDockTree.FTopXYLimit:Integer
 004D83B6    mov         eax,dword ptr [ebp-4]
 004D83B9    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D83BC    call        004D1BE8
 004D83C1    test        eax,eax
>004D83C3    jle         004D83EB
 004D83C5    xor         edx,edx
 004D83C7    mov         eax,dword ptr [ebp-4]
 004D83CA    call        004D8794
 004D83CF    mov         eax,dword ptr [ebp-4]
 004D83D2    cmp         dword ptr [eax+6C],0;TDockTree.FUpdateCount:Integer
>004D83D6    jne         004D83EB
 004D83D8    mov         eax,dword ptr [ebp-4]
 004D83DB    push        eax
 004D83DC    push        4D89A4
 004D83E1    xor         edx,edx
 004D83E3    mov         eax,dword ptr [ebp-4]
 004D83E6    call        004D6B44
 004D83EB    pop         edi
 004D83EC    pop         esi
 004D83ED    mov         esp,ebp
 004D83EF    pop         ebp
 004D83F0    ret
end;*}

//004D8444
{*procedure sub_004D8444(?:?; ?:?);
begin
 004D8444    push        ebp
 004D8445    mov         ebp,esp
 004D8447    add         esp,0FFFFFFF8
 004D844A    push        ebx
 004D844B    mov         dword ptr [ebp-4],eax
 004D844E    mov         eax,dword ptr [ebp-4]
 004D8451    call        @LStrAddRef
 004D8456    xor         eax,eax
 004D8458    push        ebp
 004D8459    push        4D84AF
 004D845E    push        dword ptr fs:[eax]
 004D8461    mov         dword ptr fs:[eax],esp
 004D8464    mov         eax,dword ptr [ebp-4]
 004D8467    call        @DynArrayLength
 004D846C    mov         dword ptr [ebp-8],eax
 004D846F    lea         edx,[ebp-8]
 004D8472    mov         eax,dword ptr [ebp+8]
 004D8475    mov         eax,dword ptr [eax-4]
 004D8478    mov         ecx,4
 004D847D    mov         ebx,dword ptr [eax]
 004D847F    call        dword ptr [ebx+10]
 004D8482    cmp         dword ptr [ebp-8],0
>004D8486    jle         004D8499
 004D8488    mov         edx,dword ptr [ebp-4]
 004D848B    mov         eax,dword ptr [ebp+8]
 004D848E    mov         eax,dword ptr [eax-4]
 004D8491    mov         ecx,dword ptr [ebp-8]
 004D8494    mov         ebx,dword ptr [eax]
 004D8496    call        dword ptr [ebx+10]
 004D8499    xor         eax,eax
 004D849B    pop         edx
 004D849C    pop         ecx
 004D849D    pop         ecx
 004D849E    mov         dword ptr fs:[eax],edx
 004D84A1    push        4D84B6
 004D84A6    lea         eax,[ebp-4]
 004D84A9    call        @LStrClr
 004D84AE    ret
>004D84AF    jmp         @HandleFinally
>004D84B4    jmp         004D84A6
 004D84B6    pop         ebx
 004D84B7    pop         ecx
 004D84B8    pop         ecx
 004D84B9    pop         ebp
 004D84BA    ret
end;*}

//004D84BC
{*procedure sub_004D84BC(?:TDockZone; ?:?; ?:?);
begin
 004D84BC    push        ebp
 004D84BD    mov         ebp,esp
 004D84BF    add         esp,0FFFFFFF4
 004D84C2    push        ebx
 004D84C3    xor         ecx,ecx
 004D84C5    mov         dword ptr [ebp-0C],ecx
 004D84C8    mov         dword ptr [ebp-8],edx
 004D84CB    mov         dword ptr [ebp-4],eax
 004D84CE    xor         eax,eax
 004D84D0    push        ebp
 004D84D1    push        4D8582
 004D84D6    push        dword ptr fs:[eax]
 004D84D9    mov         dword ptr fs:[eax],esp
 004D84DC    lea         edx,[ebp-8]
 004D84DF    mov         eax,dword ptr [ebp+8]
 004D84E2    mov         eax,dword ptr [eax-4]
 004D84E5    mov         ecx,4
 004D84EA    mov         ebx,dword ptr [eax]
 004D84EC    call        dword ptr [ebx+10]
 004D84EF    mov         eax,dword ptr [ebp-4]
 004D84F2    lea         edx,[eax+10]
 004D84F5    mov         eax,dword ptr [ebp+8]
 004D84F8    mov         eax,dword ptr [eax-4]
 004D84FB    mov         ecx,1
 004D8500    mov         ebx,dword ptr [eax]
 004D8502    call        dword ptr [ebx+10]
 004D8505    mov         eax,dword ptr [ebp-4]
 004D8508    lea         edx,[eax+20]
 004D850B    mov         eax,dword ptr [ebp+8]
 004D850E    mov         eax,dword ptr [eax-4]
 004D8511    mov         ecx,4
 004D8516    mov         ebx,dword ptr [eax]
 004D8518    call        dword ptr [ebx+10]
 004D851B    mov         eax,dword ptr [ebp+8]
 004D851E    push        eax
 004D851F    lea         edx,[ebp-0C]
 004D8522    mov         eax,dword ptr [ebp-4]
 004D8525    call        004D6360
 004D852A    mov         eax,dword ptr [ebp-0C]
 004D852D    call        004D8444
 004D8532    pop         ecx
 004D8533    mov         eax,dword ptr [ebp-4]
 004D8536    cmp         dword ptr [eax+8],0
>004D853A    je          004D8550
 004D853C    mov         eax,dword ptr [ebp+8]
 004D853F    push        eax
 004D8540    mov         edx,dword ptr [ebp-8]
 004D8543    inc         edx
 004D8544    mov         eax,dword ptr [ebp-4]
 004D8547    mov         eax,dword ptr [eax+8]
 004D854A    call        004D84BC
 004D854F    pop         ecx
 004D8550    mov         eax,dword ptr [ebp-4]
 004D8553    cmp         dword ptr [eax+0C],0
>004D8557    je          004D856C
 004D8559    mov         eax,dword ptr [ebp+8]
 004D855C    push        eax
 004D855D    mov         edx,dword ptr [ebp-8]
 004D8560    mov         eax,dword ptr [ebp-4]
 004D8563    mov         eax,dword ptr [eax+0C]
 004D8566    call        004D84BC
 004D856B    pop         ecx
 004D856C    xor         eax,eax
 004D856E    pop         edx
 004D856F    pop         ecx
 004D8570    pop         ecx
 004D8571    mov         dword ptr fs:[eax],edx
 004D8574    push        4D8589
 004D8579    lea         eax,[ebp-0C]
 004D857C    call        @LStrClr
 004D8581    ret
>004D8582    jmp         @HandleFinally
>004D8587    jmp         004D8579
 004D8589    pop         ebx
 004D858A    mov         esp,ebp
 004D858C    pop         ebp
 004D858D    ret
end;*}

//004D8590
{*procedure sub_004D8590(?:?);
begin
 004D8590    push        ebp
 004D8591    mov         ebp,esp
 004D8593    add         esp,0FFFFFFE0
 004D8596    push        ebx
 004D8597    xor         ecx,ecx
 004D8599    mov         dword ptr [ebp-20],ecx
 004D859C    mov         dword ptr [ebp-4],edx
 004D859F    mov         dword ptr [ebp-8],eax
 004D85A2    xor         eax,eax
 004D85A4    push        ebp
 004D85A5    push        4D86E9
 004D85AA    push        dword ptr fs:[eax]
 004D85AD    mov         dword ptr fs:[eax],esp
 004D85B0    mov         eax,dword ptr [ebp-8]
 004D85B3    lea         edx,[eax+70];TDockTree.FVersion:Integer
 004D85B6    mov         ecx,4
 004D85BB    mov         eax,dword ptr [ebp-4]
 004D85BE    mov         ebx,dword ptr [eax]
 004D85C0    call        dword ptr [ebx+10]
 004D85C3    mov         dl,1
 004D85C5    mov         eax,[00476078];TStringList
 004D85CA    call        TObject.Create;TStringList.Create
 004D85CF    mov         dword ptr [ebp-18],eax
 004D85D2    xor         eax,eax
 004D85D4    push        ebp
 004D85D5    push        4D8698
 004D85DA    push        dword ptr fs:[eax]
 004D85DD    mov         dword ptr fs:[eax],esp
 004D85E0    mov         eax,dword ptr [ebp-8]
 004D85E3    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D85E6    call        004D1BE8
 004D85EB    dec         eax
 004D85EC    test        eax,eax
>004D85EE    jl          004D8634
 004D85F0    inc         eax
 004D85F1    mov         dword ptr [ebp-1C],eax
 004D85F4    mov         dword ptr [ebp-0C],0
 004D85FB    mov         eax,dword ptr [ebp-8]
 004D85FE    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D8601    mov         edx,dword ptr [ebp-0C]
 004D8604    call        004D1C1C
 004D8609    mov         dword ptr [ebp-14],eax
 004D860C    mov         eax,dword ptr [ebp-14]
 004D860F    cmp         byte ptr [eax+57],0
>004D8613    jne         004D862C
 004D8615    mov         eax,dword ptr [ebp-14]
 004D8618    cmp         dword ptr [eax+8],0
>004D861C    je          004D862C
 004D861E    mov         eax,dword ptr [ebp-14]
 004D8621    mov         edx,dword ptr [eax+8]
 004D8624    mov         eax,dword ptr [ebp-18]
 004D8627    mov         ecx,dword ptr [eax]
 004D8629    call        dword ptr [ecx+38];TStringList.sub_0047B3A4
 004D862C    inc         dword ptr [ebp-0C]
 004D862F    dec         dword ptr [ebp-1C]
>004D8632    jne         004D85FB
 004D8634    mov         eax,dword ptr [ebp-18]
 004D8637    mov         edx,dword ptr [eax]
 004D8639    call        dword ptr [edx+14];TStringList.sub_0047B778
 004D863C    mov         dword ptr [ebp-10],eax
 004D863F    lea         edx,[ebp-10]
 004D8642    mov         ecx,4
 004D8647    mov         eax,dword ptr [ebp-4]
 004D864A    mov         ebx,dword ptr [eax]
 004D864C    call        dword ptr [ebx+10]
 004D864F    mov         eax,dword ptr [ebp-10]
 004D8652    dec         eax
 004D8653    test        eax,eax
>004D8655    jl          004D8682
 004D8657    inc         eax
 004D8658    mov         dword ptr [ebp-1C],eax
 004D865B    mov         dword ptr [ebp-0C],0
 004D8662    push        ebp
 004D8663    lea         ecx,[ebp-20]
 004D8666    mov         edx,dword ptr [ebp-0C]
 004D8669    mov         eax,dword ptr [ebp-18]
 004D866C    mov         ebx,dword ptr [eax]
 004D866E    call        dword ptr [ebx+0C];TStringList.sub_0047B710
 004D8671    mov         eax,dword ptr [ebp-20]
 004D8674    call        004D8444
 004D8679    pop         ecx
 004D867A    inc         dword ptr [ebp-0C]
 004D867D    dec         dword ptr [ebp-1C]
>004D8680    jne         004D8662
 004D8682    xor         eax,eax
 004D8684    pop         edx
 004D8685    pop         ecx
 004D8686    pop         ecx
 004D8687    mov         dword ptr fs:[eax],edx
 004D868A    push        4D869F
 004D868F    mov         eax,dword ptr [ebp-18]
 004D8692    call        TObject.Free
 004D8697    ret
>004D8698    jmp         @HandleFinally
>004D869D    jmp         004D868F
 004D869F    mov         eax,dword ptr [ebp-8]
 004D86A2    lea         edx,[eax+68];TDockTree.FTopXYLimit:Integer
 004D86A5    mov         ecx,4
 004D86AA    mov         eax,dword ptr [ebp-4]
 004D86AD    mov         ebx,dword ptr [eax]
 004D86AF    call        dword ptr [ebx+10]
 004D86B2    push        ebp
 004D86B3    mov         eax,dword ptr [ebp-8]
 004D86B6    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D86B9    xor         edx,edx
 004D86BB    call        004D84BC
 004D86C0    pop         ecx
 004D86C1    mov         edx,54179C;gvar_0054179C
 004D86C6    mov         ecx,4
 004D86CB    mov         eax,dword ptr [ebp-4]
 004D86CE    mov         ebx,dword ptr [eax]
 004D86D0    call        dword ptr [ebx+10]
 004D86D3    xor         eax,eax
 004D86D5    pop         edx
 004D86D6    pop         ecx
 004D86D7    pop         ecx
 004D86D8    mov         dword ptr fs:[eax],edx
 004D86DB    push        4D86F0
 004D86E0    lea         eax,[ebp-20]
 004D86E3    call        @LStrClr
 004D86E8    ret
>004D86E9    jmp         @HandleFinally
>004D86EE    jmp         004D86E0
 004D86F0    pop         ebx
 004D86F1    mov         esp,ebp
 004D86F3    pop         ebp
 004D86F4    ret
end;*}

//004D86F8
{*procedure sub_004D86F8(?:TDockZone; ?:?);
begin
 004D86F8    push        ebp
 004D86F9    mov         ebp,esp
 004D86FB    push        ecx
 004D86FC    mov         dword ptr [ebp-4],eax
 004D86FF    cmp         dword ptr [ebp-4],0
>004D8703    je          004D878F
 004D8709    mov         eax,dword ptr [ebp-4]
 004D870C    call        004D6788
 004D8711    test        eax,eax
>004D8713    jne         004D876B
 004D8715    mov         eax,dword ptr [ebp+8]
 004D8718    mov         eax,dword ptr [eax-4]
 004D871B    mov         eax,dword ptr [eax+64]
 004D871E    cmp         eax,dword ptr [ebp-4]
>004D8721    je          004D876B
 004D8723    mov         eax,dword ptr [ebp-4]
 004D8726    call        004D5F9C
 004D872B    test        al,al
>004D872D    je          004D876B
 004D872F    mov         eax,dword ptr [ebp+8]
 004D8732    mov         eax,dword ptr [eax-4]
 004D8735    mov         eax,dword ptr [eax+64]
 004D8738    mov         edx,dword ptr [ebp-4]
 004D873B    cmp         eax,dword ptr [edx+14]
>004D873E    jne         004D8753
 004D8740    mov         eax,dword ptr [ebp+8]
 004D8743    mov         eax,dword ptr [eax-4]
 004D8746    mov         edx,dword ptr [eax+68]
 004D8749    mov         eax,dword ptr [ebp-4]
 004D874C    call        004D6658
>004D8751    jmp         004D876B
 004D8753    mov         eax,dword ptr [ebp-4]
 004D8756    mov         eax,dword ptr [eax+14]
 004D8759    mov         eax,dword ptr [eax+14]
 004D875C    call        004D6618
 004D8761    mov         edx,eax
 004D8763    mov         eax,dword ptr [ebp-4]
 004D8766    call        004D6658
 004D876B    mov         eax,dword ptr [ebp+8]
 004D876E    push        eax
 004D876F    mov         eax,dword ptr [ebp-4]
 004D8772    call        004D67E0
 004D8777    call        004D86F8
 004D877C    pop         ecx
 004D877D    mov         eax,dword ptr [ebp+8]
 004D8780    push        eax
 004D8781    mov         eax,dword ptr [ebp-4]
 004D8784    call        004D6788
 004D8789    call        004D86F8
 004D878E    pop         ecx
 004D878F    pop         ecx
 004D8790    pop         ebp
 004D8791    ret
end;*}

//004D8794
{*procedure sub_004D8794(?:TDockTree; ?:?);
begin
 004D8794    push        ebp
 004D8795    mov         ebp,esp
 004D8797    add         esp,0FFFFFFF8
 004D879A    mov         dword ptr [ebp-8],edx
 004D879D    mov         dword ptr [ebp-4],eax
 004D87A0    cmp         dword ptr [ebp-8],0
>004D87A4    jne         004D87B2
 004D87A6    mov         eax,dword ptr [ebp-4]
 004D87A9    mov         eax,dword ptr [eax+64];TDockTree.FTopZone:TDockZone
 004D87AC    mov         eax,dword ptr [eax+8];TDockZone.FChildZones:TDockZone
 004D87AF    mov         dword ptr [ebp-8],eax
 004D87B2    push        ebp
 004D87B3    mov         eax,dword ptr [ebp-8]
 004D87B6    call        004D86F8
 004D87BB    pop         ecx
 004D87BC    mov         eax,dword ptr [ebp-4]
 004D87BF    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D87C2    mov         edx,dword ptr [eax]
 004D87C4    call        dword ptr [edx+7C];TWinControl.sub_004D3648
 004D87C7    pop         ecx
 004D87C8    pop         ecx
 004D87C9    pop         ebp
 004D87CA    ret
end;*}

//004D87CC
{*procedure sub_004D87CC(?:?; ?:?);
begin
 004D87CC    push        ebp
 004D87CD    mov         ebp,esp
 004D87CF    add         esp,0FFFFFFF8
 004D87D2    mov         dword ptr [ebp-8],edx
 004D87D5    mov         dword ptr [ebp-4],eax
 004D87D8    mov         edx,dword ptr [ebp-8]
 004D87DB    mov         eax,dword ptr [ebp-4]
 004D87DE    call        004D6ABC
 004D87E3    mov         edx,dword ptr [ebp-4]
 004D87E6    mov         dword ptr [edx+38],eax
 004D87E9    pop         ecx
 004D87EA    pop         ecx
 004D87EB    pop         ebp
 004D87EC    ret
end;*}

//004D896C
procedure sub_004D896C(?:TDockTree);
begin
{*
 004D896C    push        ebp
 004D896D    mov         ebp,esp
 004D896F    push        ecx
 004D8970    mov         dword ptr [ebp-4],eax
 004D8973    mov         eax,dword ptr [ebp-4]
 004D8976    cmp         dword ptr [eax+6C],0;TDockTree.FUpdateCount:Integer
>004D897A    jne         004D899E
 004D897C    mov         eax,dword ptr [ebp-4]
 004D897F    mov         eax,dword ptr [eax+14];TDockTree.FDockSite:TWinControl
 004D8982    call        004D1BE8
 004D8987    test        eax,eax
>004D8989    jle         004D899E
 004D898B    mov         eax,dword ptr [ebp-4]
 004D898E    push        eax
 004D898F    push        4D89A4
 004D8994    xor         edx,edx
 004D8996    mov         eax,dword ptr [ebp-4]
 004D8999    call        004D6B44
 004D899E    pop         ecx
 004D899F    pop         ebp
 004D89A0    ret
*}
end;

//004D94AC
constructor sub_004D94AC;
begin
{*
 004D94AC    push        ebp
 004D94AD    mov         ebp,esp
 004D94AF    add         esp,0FFFFFFF8
 004D94B2    test        dl,dl
>004D94B4    je          004D94BE
 004D94B6    add         esp,0FFFFFFF0
 004D94B9    call        @ClassCreate
 004D94BE    mov         byte ptr [ebp-5],dl
 004D94C1    mov         dword ptr [ebp-4],eax
 004D94C4    xor         edx,edx
 004D94C6    mov         eax,dword ptr [ebp-4]
 004D94C9    call        TObject.Create
 004D94CE    mov         eax,dword ptr [ebp-4]
 004D94D1    mov         byte ptr [eax+4],1
 004D94D5    mov         eax,dword ptr [ebp-4]
 004D94D8    mov         dword ptr [eax+8],5
 004D94DF    mov         eax,[0055B700];^gvar_00540934
 004D94E4    cmp         dword ptr [eax],2
>004D94E7    jne         004D94F3
 004D94E9    mov         eax,[0055B2A4];^gvar_00540938
 004D94EE    cmp         dword ptr [eax],4
>004D94F1    jge         004D951F
 004D94F3    mov         eax,[0055B700];^gvar_00540934
 004D94F8    cmp         dword ptr [eax],1
>004D94FB    jne         004D951B
 004D94FD    mov         eax,[0055B2A4];^gvar_00540938
 004D9502    cmp         dword ptr [eax],4
>004D9505    jg          004D951F
 004D9507    mov         eax,[0055B2A4];^gvar_00540938
 004D950C    cmp         dword ptr [eax],4
>004D950F    jne         004D951B
 004D9511    mov         eax,[0055B544];^gvar_0054093C
 004D9516    cmp         dword ptr [eax],0A
>004D9519    jge         004D951F
 004D951B    xor         eax,eax
>004D951D    jmp         004D9521
 004D951F    mov         al,1
 004D9521    mov         edx,dword ptr [ebp-4]
 004D9524    mov         byte ptr [edx+0D],al
 004D9527    xor         edx,edx
 004D9529    mov         eax,dword ptr [ebp-4]
 004D952C    call        004D96BC
 004D9531    mov         eax,dword ptr [ebp-4]
 004D9534    cmp         byte ptr [ebp-5],0
>004D9538    je          004D9549
 004D953A    call        @AfterConstruction
 004D953F    pop         dword ptr fs:[0]
 004D9546    add         esp,0C
 004D9549    mov         eax,dword ptr [ebp-4]
 004D954C    pop         ecx
 004D954D    pop         ecx
 004D954E    pop         ebp
 004D954F    ret
*}
end;

//004D95A4
{*procedure sub_004D95A4(?:?; ?:?);
begin
 004D95A4    push        ebp
 004D95A5    mov         ebp,esp
 004D95A7    add         esp,0FFFFFFF8
 004D95AA    mov         dword ptr [ebp-8],edx
 004D95AD    mov         dword ptr [ebp-4],eax
 004D95B0    mov         eax,dword ptr [ebp-8]
 004D95B3    push        eax
 004D95B4    call        user32.GetCursorPos
 004D95B9    call        0046C4EC
 004D95BE    pop         ecx
 004D95BF    pop         ecx
 004D95C0    pop         ebp
 004D95C1    ret
end;*}

//004D95C4
{*function sub_004D95C4(?:?):?;
begin
 004D95C4    push        ebp
 004D95C5    mov         ebp,esp
 004D95C7    add         esp,0FFFFFFF8
 004D95CA    mov         dword ptr [ebp-4],eax
 004D95CD    cmp         byte ptr ds:[55DDE8],0;gvar_0055DDE8
 004D95D4    setne       byte ptr [ebp-5]
 004D95D8    mov         al,byte ptr [ebp-5]
 004D95DB    pop         ecx
 004D95DC    pop         ecx
 004D95DD    pop         ebp
 004D95DE    ret
end;*}

//004D95E0
{*procedure sub_004D95E0(?:?);
begin
 004D95E0    push        ebp
 004D95E1    mov         ebp,esp
 004D95E3    push        ecx
 004D95E4    mov         dword ptr [ebp-4],eax
 004D95E7    push        13
 004D95E9    mov         eax,[0055B2BC];^gvar_0055DB78
 004D95EE    mov         eax,dword ptr [eax]
 004D95F0    call        eax
 004D95F2    cmp         eax,1
 004D95F5    sbb         eax,eax
 004D95F7    inc         eax
 004D95F8    mov         edx,dword ptr [ebp-4]
 004D95FB    mov         byte ptr [edx+0C],al
 004D95FE    pop         ecx
 004D95FF    pop         ebp
 004D9600    ret
end;*}

//004D9604
{*procedure sub_004D9604(?:?);
begin
 004D9604    push        ebp
 004D9605    mov         ebp,esp
 004D9607    push        ecx
 004D9608    mov         dword ptr [ebp-4],eax
 004D960B    push        4B
 004D960D    mov         eax,[0055B2BC];^gvar_0055DB78
 004D9612    mov         eax,dword ptr [eax]
 004D9614    call        eax
 004D9616    cmp         eax,1
 004D9619    sbb         eax,eax
 004D961B    inc         eax
 004D961C    mov         edx,dword ptr [ebp-4]
 004D961F    mov         byte ptr [edx+20],al
 004D9622    mov         eax,dword ptr [ebp-4]
 004D9625    cmp         byte ptr [eax+20],0
>004D9629    je          004D963D
 004D962B    push        0
 004D962D    mov         eax,dword ptr [ebp-4]
 004D9630    add         eax,10
 004D9633    push        eax
 004D9634    push        0
 004D9636    push        68
 004D9638    call        user32.SystemParametersInfoA
 004D963D    pop         ecx
 004D963E    pop         ebp
 004D963F    ret
end;*}

//004D9640
{*procedure sub_004D9640(?:?);
begin
 004D9640    push        ebp
 004D9641    mov         ebp,esp
 004D9643    add         esp,0FFFFFFF8
 004D9646    mov         dword ptr [ebp-4],eax
 004D9649    lea         eax,[ebp-8]
 004D964C    push        eax
 004D964D    mov         eax,dword ptr [ebp-4]
 004D9650    add         eax,10
 004D9653    push        eax
 004D9654    mov         eax,dword ptr [ebp-4]
 004D9657    lea         ecx,[eax+14]
 004D965A    mov         eax,dword ptr [ebp-4]
 004D965D    lea         edx,[eax+24]
 004D9660    mov         eax,dword ptr [ebp-4]
 004D9663    add         eax,1C
 004D9666    call        00408550
 004D966B    mov         edx,dword ptr [ebp-4]
 004D966E    mov         dword ptr [edx+18],eax
 004D9671    mov         eax,dword ptr [ebp-4]
 004D9674    cmp         dword ptr [eax+1C],0
 004D9678    setne       al
 004D967B    mov         edx,dword ptr [ebp-4]
 004D967E    mov         byte ptr [edx+20],al
 004D9681    pop         ecx
 004D9682    pop         ecx
 004D9683    pop         ebp
 004D9684    ret
end;*}

//004D96BC
{*procedure sub_004D96BC(?:?; ?:?);
begin
 004D96BC    push        ebp
 004D96BD    mov         ebp,esp
 004D96BF    add         esp,0FFFFFFF8
 004D96C2    mov         dword ptr [ebp-8],edx
 004D96C5    mov         dword ptr [ebp-4],eax
 004D96C8    mov         eax,dword ptr [ebp-8]
 004D96CB    sub         eax,1
>004D96CE    jb          004D96D7
 004D96D0    sub         eax,67
>004D96D3    je          004D96FC
>004D96D5    jmp         004D973F
 004D96D7    mov         eax,dword ptr [ebp-4]
 004D96DA    call        004D95E0
 004D96DF    mov         eax,dword ptr [ebp-4]
 004D96E2    cmp         byte ptr [eax+0D],0
>004D96E6    jne         004D96F2
 004D96E8    mov         eax,dword ptr [ebp-4]
 004D96EB    call        004D9640
>004D96F0    jmp         004D973F
 004D96F2    mov         eax,dword ptr [ebp-4]
 004D96F5    call        004D9604
>004D96FA    jmp         004D973F
 004D96FC    mov         eax,dword ptr [ebp-4]
 004D96FF    cmp         byte ptr [eax+20],0
>004D9703    je          004D973F
 004D9705    mov         eax,dword ptr [ebp-4]
 004D9708    cmp         byte ptr [eax+0D],0
>004D970C    je          004D9722
 004D970E    push        0
 004D9710    mov         eax,dword ptr [ebp-4]
 004D9713    add         eax,10
 004D9716    push        eax
 004D9717    push        0
 004D9719    push        68
 004D971B    call        user32.SystemParametersInfoA
>004D9720    jmp         004D973F
 004D9722    push        0
 004D9724    push        0
 004D9726    mov         eax,dword ptr [ebp-4]
 004D9729    mov         eax,dword ptr [eax+14]
 004D972C    push        eax
 004D972D    mov         eax,dword ptr [ebp-4]
 004D9730    mov         eax,dword ptr [eax+18]
 004D9733    push        eax
 004D9734    call        user32.SendMessageA
 004D9739    mov         edx,dword ptr [ebp-4]
 004D973C    mov         dword ptr [edx+10],eax
 004D973F    pop         ecx
 004D9740    pop         ecx
 004D9741    pop         ebp
 004D9742    ret
end;*}

//004D9744
procedure sub_004D9744;
begin
{*
 004D9744    push        ebp
 004D9745    mov         ebp,esp
 004D9747    add         esp,0FFFFFFF8
 004D974A    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004D974F    cmp         byte ptr [eax+0C],0
>004D9753    je          004D98B6
 004D9759    push        8000
 004D975E    call        kernel32.SetErrorMode
 004D9763    mov         dword ptr [ebp-8],eax
 004D9766    xor         eax,eax
 004D9768    push        ebp
 004D9769    push        4D98AF
 004D976E    push        dword ptr fs:[eax]
 004D9771    mov         dword ptr fs:[eax],esp
 004D9774    cmp         dword ptr ds:[55DE00],0;gvar_0055DE00:Pointer
>004D977B    jne         004D979D
 004D977D    push        4D98BC;'USER32'
 004D9782    call        kernel32.GetModuleHandleA
 004D9787    mov         dword ptr [ebp-4],eax
 004D978A    push        4D98C4;'WINNLSEnableIME'
 004D978F    mov         eax,dword ptr [ebp-4]
 004D9792    push        eax
 004D9793    call        kernel32.GetProcAddress
 004D9798    mov         [0055DE00],eax;gvar_0055DE00:Pointer
 004D979D    cmp         dword ptr ds:[5417A8],0;gvar_005417A8:HMODULE
>004D97A4    jne         004D9898
 004D97AA    push        4D98D4;'imm32.dll'
 004D97AF    call        kernel32.LoadLibraryA
 004D97B4    mov         [005417A8],eax;gvar_005417A8:HMODULE
 004D97B9    cmp         dword ptr ds:[5417A8],0;gvar_005417A8:HMODULE
>004D97C0    je          004D9898
 004D97C6    push        4D98E0;'ImmGetContext'
 004D97CB    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D97D0    push        eax
 004D97D1    call        kernel32.GetProcAddress
 004D97D6    mov         [0055DE04],eax;gvar_0055DE04:Pointer
 004D97DB    push        4D98F0;'ImmReleaseContext'
 004D97E0    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D97E5    push        eax
 004D97E6    call        kernel32.GetProcAddress
 004D97EB    mov         [0055DE08],eax;gvar_0055DE08:Pointer
 004D97F0    push        4D9904;'ImmGetConversionStatus'
 004D97F5    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D97FA    push        eax
 004D97FB    call        kernel32.GetProcAddress
 004D9800    mov         [0055DE0C],eax;gvar_0055DE0C:Pointer
 004D9805    push        4D991C;'ImmSetConversionStatus'
 004D980A    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D980F    push        eax
 004D9810    call        kernel32.GetProcAddress
 004D9815    mov         [0055DE10],eax;gvar_0055DE10:Pointer
 004D981A    push        4D9934;'ImmSetOpenStatus'
 004D981F    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D9824    push        eax
 004D9825    call        kernel32.GetProcAddress
 004D982A    mov         [0055DE14],eax;gvar_0055DE14:Pointer
 004D982F    push        4D9948;'ImmSetCompositionWindow'
 004D9834    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D9839    push        eax
 004D983A    call        kernel32.GetProcAddress
 004D983F    mov         [0055DE18],eax;gvar_0055DE18:Pointer
 004D9844    push        4D9960;'ImmSetCompositionFontA'
 004D9849    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D984E    push        eax
 004D984F    call        kernel32.GetProcAddress
 004D9854    mov         [0055DE1C],eax;gvar_0055DE1C:Pointer
 004D9859    push        4D9978;'ImmGetCompositionStringA'
 004D985E    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D9863    push        eax
 004D9864    call        kernel32.GetProcAddress
 004D9869    mov         [0055DE20],eax;gvar_0055DE20:Pointer
 004D986E    push        4D9994;'ImmIsIME'
 004D9873    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D9878    push        eax
 004D9879    call        kernel32.GetProcAddress
 004D987E    mov         [0055DE24],eax;gvar_0055DE24:Pointer
 004D9883    push        4D99A0;'ImmNotifyIME'
 004D9888    mov         eax,[005417A8];0x0 gvar_005417A8:HMODULE
 004D988D    push        eax
 004D988E    call        kernel32.GetProcAddress
 004D9893    mov         [0055DE28],eax;gvar_0055DE28:Pointer
 004D9898    xor         eax,eax
 004D989A    pop         edx
 004D989B    pop         ecx
 004D989C    pop         ecx
 004D989D    mov         dword ptr fs:[eax],edx
 004D98A0    push        4D98B6
 004D98A5    mov         eax,dword ptr [ebp-8]
 004D98A8    push        eax
 004D98A9    call        kernel32.SetErrorMode
 004D98AE    ret
>004D98AF    jmp         @HandleFinally
>004D98B4    jmp         004D98A5
 004D98B6    pop         ecx
 004D98B7    pop         ecx
 004D98B8    pop         ebp
 004D98B9    ret
*}
end;

//004D99B0
{*function sub_004D99B0(?:HWND; ?:?):?;
begin
 004D99B0    push        ebp
 004D99B1    mov         ebp,esp
 004D99B3    add         esp,0FFFFFFF8
 004D99B6    mov         byte ptr [ebp-5],dl
 004D99B9    mov         dword ptr [ebp-4],eax
 004D99BC    cmp         dword ptr ds:[55DE00],0;gvar_0055DE00:Pointer
>004D99C3    je          004D99DC
 004D99C5    cmp         byte ptr [ebp-5],1
 004D99C9    cmc
 004D99CA    sbb         eax,eax
 004D99CC    push        eax
 004D99CD    mov         eax,dword ptr [ebp-4]
 004D99D0    push        eax
 004D99D1    call        dword ptr ds:[55DE00]
 004D99D7    mov         byte ptr [ebp-6],al
>004D99DA    jmp         004D99E0
 004D99DC    mov         byte ptr [ebp-6],0
 004D99E0    mov         al,byte ptr [ebp-6]
 004D99E3    pop         ecx
 004D99E4    pop         ecx
 004D99E5    pop         ebp
 004D99E6    ret
end;*}

//004D99E8
{*procedure sub_004D99E8(?:HWND; ?:?);
begin
 004D99E8    push        ebp
 004D99E9    mov         ebp,esp
 004D99EB    add         esp,0FFFFFFEC
 004D99EE    mov         byte ptr [ebp-5],dl
 004D99F1    mov         dword ptr [ebp-4],eax
 004D99F4    mov         eax,[0055B70C];^gvar_0055D9C4:Integer
 004D99F9    cmp         byte ptr [eax+0C],0
>004D99FD    je          004D9AE0
 004D9A03    cmp         byte ptr [ebp-5],3
>004D9A07    je          004D9AE0
 004D9A0D    cmp         byte ptr [ebp-5],0
>004D9A11    jne         004D9A22
 004D9A13    xor         edx,edx
 004D9A15    mov         eax,dword ptr [ebp-4]
 004D9A18    call        004D99B0
>004D9A1D    jmp         004D9AE0
 004D9A22    mov         dl,1
 004D9A24    mov         eax,dword ptr [ebp-4]
 004D9A27    call        004D99B0
 004D9A2C    cmp         dword ptr ds:[5417A8],0;gvar_005417A8:HMODULE
>004D9A33    je          004D9AE0
 004D9A39    mov         eax,dword ptr [ebp-4]
 004D9A3C    push        eax
 004D9A3D    call        dword ptr ds:[55DE04]
 004D9A43    mov         dword ptr [ebp-0C],eax
 004D9A46    cmp         dword ptr [ebp-0C],0
>004D9A4A    je          004D9AE0
 004D9A50    lea         eax,[ebp-14]
 004D9A53    push        eax
 004D9A54    lea         eax,[ebp-10]
 004D9A57    push        eax
 004D9A58    mov         eax,dword ptr [ebp-0C]
 004D9A5B    push        eax
 004D9A5C    call        dword ptr ds:[55DE0C]
 004D9A62    mov         al,byte ptr [ebp-5]
 004D9A65    dec         al
>004D9A67    je          004D9A6F
 004D9A69    dec         al
>004D9A6B    je          004D9A7D
>004D9A6D    jmp         004D9A8B
 004D9A6F    push        0
 004D9A71    mov         eax,dword ptr [ebp-0C]
 004D9A74    push        eax
 004D9A75    call        dword ptr ds:[55DE14]
>004D9A7B    jmp         004D9AC0
 004D9A7D    push        1
 004D9A7F    mov         eax,dword ptr [ebp-0C]
 004D9A82    push        eax
 004D9A83    call        dword ptr ds:[55DE14]
>004D9A89    jmp         004D9AC0
 004D9A8B    push        1
 004D9A8D    mov         eax,dword ptr [ebp-0C]
 004D9A90    push        eax
 004D9A91    call        dword ptr ds:[55DE14]
 004D9A97    lea         eax,[ebp-14]
 004D9A9A    push        eax
 004D9A9B    lea         eax,[ebp-10]
 004D9A9E    push        eax
 004D9A9F    mov         eax,dword ptr [ebp-0C]
 004D9AA2    push        eax
 004D9AA3    call        dword ptr ds:[55DE0C]
 004D9AA9    mov         eax,dword ptr [ebp-10]
 004D9AAC    and         eax,0FFFFFFF4
 004D9AAF    xor         edx,edx
 004D9AB1    mov         dl,byte ptr [ebp-5]
 004D9AB4    movzx       edx,byte ptr [edx+5417A8];gvar_005417A8:HMODULE
 004D9ABB    or          eax,edx
 004D9ABD    mov         dword ptr [ebp-10],eax
 004D9AC0    mov         eax,dword ptr [ebp-14]
 004D9AC3    push        eax
 004D9AC4    mov         eax,dword ptr [ebp-10]
 004D9AC7    push        eax
 004D9AC8    mov         eax,dword ptr [ebp-0C]
 004D9ACB    push        eax
 004D9ACC    call        dword ptr ds:[55DE10]
 004D9AD2    mov         eax,dword ptr [ebp-0C]
 004D9AD5    push        eax
 004D9AD6    mov         eax,dword ptr [ebp-4]
 004D9AD9    push        eax
 004D9ADA    call        dword ptr ds:[55DE08]
 004D9AE0    mov         esp,ebp
 004D9AE2    pop         ebp
 004D9AE3    ret
end;*}

//004D9AE4
{*function sub_004D9AE4(?:?):?;
begin
 004D9AE4    push        ebp
 004D9AE5    mov         ebp,esp
 004D9AE7    add         esp,0FFFFFFF8
 004D9AEA    mov         dword ptr [ebp-4],eax
 004D9AED    cmp         dword ptr ds:[5417A8],0;gvar_005417A8:HMODULE
>004D9AF4    je          004D9B05
 004D9AF6    mov         eax,dword ptr [ebp-4]
 004D9AF9    push        eax
 004D9AFA    call        dword ptr ds:[55DE24]
 004D9B00    mov         byte ptr [ebp-5],al
>004D9B03    jmp         004D9B09
 004D9B05    mov         byte ptr [ebp-5],0
 004D9B09    mov         al,byte ptr [ebp-5]
 004D9B0C    pop         ecx
 004D9B0D    pop         ecx
 004D9B0E    pop         ebp
 004D9B0F    ret
end;*}

//004D9B10
procedure DoneControls;
begin
{*
 004D9B10    mov         eax,[0055B4C8];^Application:TApplication
 004D9B15    mov         eax,dword ptr [eax]
 004D9B17    call        TObject.Free
 004D9B1C    mov         eax,[0055B4C8];^Application:TApplication
 004D9B21    xor         edx,edx
 004D9B23    mov         dword ptr [eax],edx
 004D9B25    mov         eax,[0055B6D8];^Screen:TScreen
 004D9B2A    mov         eax,dword ptr [eax]
 004D9B2C    call        TObject.Free
 004D9B31    mov         eax,[0055B6D8];^Screen:TScreen
 004D9B36    xor         edx,edx
 004D9B38    mov         dword ptr [eax],edx
 004D9B3A    mov         eax,[0055DDAC];gvar_0055DDAC
 004D9B3F    call        TObject.Free
 004D9B44    xor         eax,eax
 004D9B46    mov         [0055DDAC],eax;gvar_0055DDAC
 004D9B4B    mov         eax,[0055DDFC];gvar_0055DDFC
 004D9B50    call        TObject.Free
 004D9B55    mov         ax,[0055DDBA];gvar_0055DDBA
 004D9B5B    push        eax
 004D9B5C    call        kernel32.GlobalDeleteAtom
 004D9B61    mov         eax,55DDC0;gvar_0055DDC0
 004D9B66    call        @LStrClr
 004D9B6B    mov         ax,[0055DDB8];gvar_0055DDB8
 004D9B71    push        eax
 004D9B72    call        kernel32.GlobalDeleteAtom
 004D9B77    mov         eax,55DDBC;gvar_0055DDBC
 004D9B7C    call        @LStrClr
 004D9B81    cmp         dword ptr ds:[5417A8],0;gvar_005417A8:HMODULE
>004D9B88    je          004D9B95
 004D9B8A    mov         eax,[005417A8];gvar_005417A8:HMODULE
 004D9B8F    push        eax
 004D9B90    call        kernel32.FreeLibrary
 004D9B95    ret
*}
end;

//004D9B98
procedure InitControls;
begin
{*
 004D9B98    push        ebp
 004D9B99    mov         ebp,esp
 004D9B9B    add         esp,0FFFFFFDC
 004D9B9E    xor         eax,eax
 004D9BA0    mov         dword ptr [ebp-14],eax
 004D9BA3    mov         dword ptr [ebp-8],eax
 004D9BA6    xor         eax,eax
 004D9BA8    push        ebp
 004D9BA9    push        4D9D15
 004D9BAE    push        dword ptr fs:[eax]
 004D9BB1    mov         dword ptr fs:[eax],esp
 004D9BB4    lea         eax,[ebp-8]
 004D9BB7    push        eax
 004D9BB8    call        kernel32.GetCurrentProcessId
 004D9BBD    mov         dword ptr [ebp-10],eax
 004D9BC0    mov         byte ptr [ebp-0C],0
 004D9BC4    lea         edx,[ebp-10]
 004D9BC7    xor         ecx,ecx
 004D9BC9    mov         eax,4D9D28;'Delphi%.8X'
 004D9BCE    call        Format
 004D9BD3    mov         edx,dword ptr [ebp-8]
 004D9BD6    mov         eax,55DDBC;gvar_0055DDBC
 004D9BDB    call        @LStrAsg
 004D9BE0    mov         eax,[0055DDBC];gvar_0055DDBC
 004D9BE5    call        @LStrToPChar
 004D9BEA    push        eax
 004D9BEB    call        kernel32.GlobalAddAtomA
 004D9BF0    mov         [0055DDB8],ax;gvar_0055DDB8
 004D9BF6    lea         eax,[ebp-14]
 004D9BF9    push        eax
 004D9BFA    mov         eax,[0055C664];gvar_0055C664
 004D9BFF    mov         dword ptr [ebp-24],eax
 004D9C02    mov         byte ptr [ebp-20],0
 004D9C06    call        kernel32.GetCurrentThreadId
 004D9C0B    mov         dword ptr [ebp-1C],eax
 004D9C0E    mov         byte ptr [ebp-18],0
 004D9C12    lea         edx,[ebp-24]
 004D9C15    mov         ecx,1
 004D9C1A    mov         eax,4D9D3C;'ControlOfs%.8X%.8X'
 004D9C1F    call        Format
 004D9C24    mov         edx,dword ptr [ebp-14]
 004D9C27    mov         eax,55DDC0;gvar_0055DDC0
 004D9C2C    call        @LStrAsg
 004D9C31    mov         eax,[0055DDC0];gvar_0055DDC0
 004D9C36    call        @LStrToPChar
 004D9C3B    push        eax
 004D9C3C    call        kernel32.GlobalAddAtomA
 004D9C41    mov         [0055DDBA],ax;gvar_0055DDBA
 004D9C47    mov         eax,[0055DDC0];gvar_0055DDC0
 004D9C4C    call        @LStrToPChar
 004D9C51    push        eax
 004D9C52    call        user32.RegisterWindowMessageA
 004D9C57    mov         [0055DDC4],eax;gvar_0055DDC4
 004D9C5C    mov         dl,1
 004D9C5E    mov         eax,[00475A24];TThreadList
 004D9C63    call        TThreadList.Create
 004D9C68    mov         [0055DDFC],eax;gvar_0055DDFC
 004D9C6D    call        004D9744
 004D9C72    mov         dl,1
 004D9C74    mov         eax,[004C6AE8];TMouse
 004D9C79    call        004D94AC
 004D9C7E    mov         [0055DDAC],eax;gvar_0055DDAC
 004D9C83    xor         ecx,ecx
 004D9C85    mov         dl,1
 004D9C87    mov         eax,[004E76D8];TScreen
 004D9C8C    call        004EFD50
 004D9C91    mov         edx,dword ptr ds:[55B6D8];^Screen:TScreen
 004D9C97    mov         dword ptr [edx],eax
 004D9C99    xor         ecx,ecx
 004D9C9B    mov         dl,1
 004D9C9D    mov         eax,[004E77B0];TApplication
 004D9CA2    call        004F13C4
 004D9CA7    mov         edx,dword ptr ds:[55B4C8];^Application:TApplication
 004D9CAD    mov         dword ptr [edx],eax
 004D9CAF    mov         eax,[0055B4C8];^Application:TApplication
 004D9CB4    mov         eax,dword ptr [eax]
 004D9CB6    mov         dl,1
 004D9CB8    call        004F34E8
 004D9CBD    mov         ecx,4C71D4;sub_004C71D4
 004D9CC2    mov         edx,4C71FC;sub_004C71FC
 004D9CC7    mov         eax,[004C46CC];TCursor
 004D9CCC    call        RegisterIntegerConsts
 004D9CD1    push        4D9D50
 004D9CD6    call        kernel32.GetModuleHandleA
 004D9CDB    mov         dword ptr [ebp-4],eax
 004D9CDE    cmp         dword ptr [ebp-4],0
>004D9CE2    je          004D9CF7
 004D9CE4    push        4D9D58
 004D9CE9    mov         eax,dword ptr [ebp-4]
 004D9CEC    push        eax
 004D9CED    call        kernel32.GetProcAddress
 004D9CF2    mov         [00541678],eax;gvar_00541678
 004D9CF7    xor         eax,eax
 004D9CF9    pop         edx
 004D9CFA    pop         ecx
 004D9CFB    pop         ecx
 004D9CFC    mov         dword ptr fs:[eax],edx
 004D9CFF    push        4D9D1C
 004D9D04    lea         eax,[ebp-14]
 004D9D07    call        @LStrClr
 004D9D0C    lea         eax,[ebp-8]
 004D9D0F    call        @LStrClr
 004D9D14    ret
>004D9D15    jmp         @HandleFinally
>004D9D1A    jmp         004D9D04
 004D9D1C    mov         esp,ebp
 004D9D1E    pop         ebp
 004D9D1F    ret
*}
end;

//004D9D68
{*procedure sub_004D9D68(?:?);
begin
 004D9D68    push        ebp
 004D9D69    mov         ebp,esp
 004D9D6B    add         esp,0FFFFFFF8
 004D9D6E    mov         dword ptr [ebp-8],edx
 004D9D71    mov         dword ptr [ebp-4],eax
 004D9D74    mov         edx,dword ptr [ebp-8]
 004D9D77    mov         eax,dword ptr [ebp-4]
 004D9D7A    mov         ecx,dword ptr [eax]
 004D9D7C    call        dword ptr [ecx+0E0];@AbstractError
 004D9D82    mov         eax,dword ptr [ebp-4]
 004D9D85    mov         edx,dword ptr [eax]
 004D9D87    call        dword ptr [edx+0E4];@AbstractError
 004D9D8D    pop         ecx
 004D9D8E    pop         ecx
 004D9D8F    pop         ebp
 004D9D90    ret
end;*}

Initialization
//004D9DFC
{*
 004D9DFC    push        ebp
 004D9DFD    mov         ebp,esp
 004D9DFF    xor         eax,eax
 004D9E01    push        ebp
 004D9E02    push        4D9E82
 004D9E07    push        dword ptr fs:[eax]
 004D9E0A    mov         dword ptr fs:[eax],esp
 004D9E0D    sub         dword ptr ds:[55DDB4],1
>004D9E14    jae         004D9E74
 004D9E16    call        kernel32.GetVersion
 004D9E1B    and         eax,0FF
 004D9E20    cmp         ax,4
 004D9E24    setae       byte ptr ds:[55DDB0];NewStyleControls:Boolean
 004D9E2B    call        InitControls
 004D9E30    mov         eax,[004C5774];TControl
 004D9E35    call        StartClassGroup
 004D9E3A    mov         eax,[004C5774];TControl
 004D9E3F    call        ActivateClassGroup
 004D9E44    mov         edx,dword ptr ds:[4C5774];TControl
 004D9E4A    mov         eax,[004DC138];TCustomImageList
 004D9E4F    call        GroupDescendentsWith
 004D9E54    mov         edx,dword ptr ds:[4C5774];TControl
 004D9E5A    mov         eax,[004D9E8C];TContainedAction
 004D9E5F    call        GroupDescendentsWith
 004D9E64    mov         edx,dword ptr ds:[4C5774];TControl
 004D9E6A    mov         eax,[004DA048];TCustomActionList
 004D9E6F    call        GroupDescendentsWith
 004D9E74    xor         eax,eax
 004D9E76    pop         edx
 004D9E77    pop         ecx
 004D9E78    pop         ecx
 004D9E79    mov         dword ptr fs:[eax],edx
 004D9E7C    push        4D9E89
 004D9E81    ret
>004D9E82    jmp         @HandleFinally
>004D9E87    jmp         004D9E81
 004D9E89    pop         ebp
 004D9E8A    ret
*}
Finalization
//004D9D94
{*
 004D9D94    push        ebp
 004D9D95    mov         ebp,esp
 004D9D97    xor         eax,eax
 004D9D99    push        ebp
 004D9D9A    push        4D9DF3
 004D9D9F    push        dword ptr fs:[eax]
 004D9DA2    mov         dword ptr fs:[eax],esp
 004D9DA5    inc         dword ptr ds:[55DDB4]
>004D9DAB    jne         004D9DE5
 004D9DAD    mov         eax,55DDF0;gvar_0055DDF0:TList
 004D9DB2    call        FreeAndNil
 004D9DB7    call        DoneControls
 004D9DBC    mov         eax,54168C
 004D9DC1    mov         ecx,16
 004D9DC6    mov         edx,dword ptr ds:[476C40];TIdentMapEntry
 004D9DCC    call        @FinalizeArray
 004D9DD1    mov         eax,55DDC0;gvar_0055DDC0
 004D9DD6    call        @LStrClr
 004D9DDB    mov         eax,55DDBC;gvar_0055DDBC
 004D9DE0    call        @LStrClr
 004D9DE5    xor         eax,eax
 004D9DE7    pop         edx
 004D9DE8    pop         ecx
 004D9DE9    pop         ecx
 004D9DEA    mov         dword ptr fs:[eax],edx
 004D9DED    push        4D9DFA
 004D9DF2    ret
>004D9DF3    jmp         @HandleFinally
>004D9DF8    jmp         004D9DF2
 004D9DFA    pop         ebp
 004D9DFB    ret
*}
end.